
// ** Visiting <MainModuleSource /home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _997=function(M){return(_411)(M);};

var _993=function(M){if(--M.cbt<0){throw _993;}
M.a=1;
return(_994)(M);};

var _989=function(M){if(--M.cbt<0){throw _989;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["root/flappy.rkt"],M.modules["root/flappy.rkt"].getExports(),M.modules["root/flappy.rkt"].getExternalExports(),M.modules["root/flappy.rkt"].prefix));
return(M.p)(M);};

var _982=function(M){if(--M.cbt<0){throw _982;}
M.a=1;
return(_983)(M);};

var _978=function(M){if(--M.cbt<0){throw _978;}
M.c.push(new RT.CallFrame(_989,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][83][0][M.e[M.e.length-1][83][1]];
M.p=M.e[M.e.length-1][84][0][M.e[M.e.length-1][84][1]];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_993,M.p));
return((M.p).label)(M);};

var _976=function(M){if(--M.cbt<0){throw _976;}
M.c.push(new RT.CallFrame(_978,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][83][0][M.e[M.e.length-1][83][1]];
M.c.push(new RT.CallFrame(_982,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5348,197,0,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][59];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][50];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _974=function(M){if(--M.cbt<0){throw _974;}
M.c.push(new RT.CallFrame(_976,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_410,2,[M.e[M.e.length-1]],"trata-tecla");
M.e[M.e.length-1][62]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _972=function(M){if(--M.cbt<0){throw _972;}
M.c.push(new RT.CallFrame(_974,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_409,2,[M.e[M.e.length-1]],"trata-tecla-bird");
M.e[M.e.length-1][58]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _970=function(M){if(--M.cbt<0){throw _970;}
M.c.push(new RT.CallFrame(_972,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_408,1,[M.e[M.e.length-1]],"desenha-bird");
M.e[M.e.length-1][56]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _968=function(M){if(--M.cbt<0){throw _968;}
M.c.push(new RT.CallFrame(_970,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_407,1,[M.e[M.e.length-1]],"atualiza-bird");
M.e[M.e.length-1][54]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _966=function(M){if(--M.cbt<0){throw _966;}
M.c.push(new RT.CallFrame(_968,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_406,1,[M.e[M.e.length-1]],"adiciona-cano");
M.e[M.e.length-1][64]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _964=function(M){if(--M.cbt<0){throw _964;}
M.c.push(new RT.CallFrame(_966,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_405,0,[M.e[M.e.length-1]],"cano-aleatorio");
M.e[M.e.length-1][80]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _962=function(M){if(--M.cbt<0){throw _962;}
M.c.push(new RT.CallFrame(_964,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_404,1,[M.e[M.e.length-1]],"atualiza-cano");
M.e[M.e.length-1][79]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _960=function(M){if(--M.cbt<0){throw _960;}
M.c.push(new RT.CallFrame(_962,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_403,1,[M.e[M.e.length-1]],"atualiza-canos");
M.e[M.e.length-1][65]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _958=function(M){if(--M.cbt<0){throw _958;}
M.c.push(new RT.CallFrame(_960,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_402,1,[M.e[M.e.length-1]],"desenha-canos");
M.e[M.e.length-1][75]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _956=function(M){if(--M.cbt<0){throw _956;}
M.c.push(new RT.CallFrame(_958,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_401,1,[M.e[M.e.length-1]],"desenha-jogo");
M.e[M.e.length-1][61]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _954=function(M){if(--M.cbt<0){throw _954;}
M.c.push(new RT.CallFrame(_956,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_400,1,[M.e[M.e.length-1]],"desenha-score");
M.e[M.e.length-1][71]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _952=function(M){if(--M.cbt<0){throw _952;}
M.c.push(new RT.CallFrame(_954,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_399,1,[M.e[M.e.length-1]],"desenha-game-over");
M.e[M.e.length-1][68]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _950=function(M){if(--M.cbt<0){throw _950;}
M.c.push(new RT.CallFrame(_952,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_398,2,[M.e[M.e.length-1]],"colidiu-bird-cano?");
M.e[M.e.length-1][67]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _948=function(M){if(--M.cbt<0){throw _948;}
M.c.push(new RT.CallFrame(_950,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_396,2,[M.e[M.e.length-1]],"colidiu?");
M.e[M.e.length-1][63]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _946=function(M){if(--M.cbt<0){throw _946;}
M.c.push(new RT.CallFrame(_948,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_395,1,[M.e[M.e.length-1]],"atualiza-jogo");
M.e[M.e.length-1][60]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _944=function(M){if(--M.cbt<0){throw _944;}
M.c.push(new RT.CallFrame(_946,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_394,1,[M.e[M.e.length-1]],"main");
M.e[M.e.length-1][59]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _942=function(M){if(--M.cbt<0){throw _942;}
M.e[M.e.length-1][50]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _940=function(M){if(--M.cbt<0){throw _940;}
M.c.push(new RT.CallFrame(_944,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_393,1,[M.e[M.e.length-1]],"main-bird");
M.e[M.e.length-1][51]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _938=function(M){if(--M.cbt<0){throw _938;}
M.e[M.e.length-1][49]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _936=function(M){if(--M.cbt<0){throw _936;}
M.c.push(new RT.CallFrame(_940,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][37];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][49];
M.e[M.e.length-2]=RT.NULL;
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=28;
M.e[M.e.length-5]=false;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_942,M.p));
return((M.p).label)(M);};

var _933=RT.si_context_expected(13);

var _930=RT.si_context_expected(5);

var _926=function(M){if(--M.cbt<0){throw _926;}
M.c.push(new RT.CallFrame(_936,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][21];
M.e[M.e.length-1]=300;
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_938,M.p));
return((M.p).label)(M);};

var _923=RT.si_context_expected(9);

var _920=RT.si_context_expected(5);

var _916=function(M){if(--M.cbt<0){throw _916;}
M.c.push(new RT.CallFrame(_926,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym337;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=5;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym337;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_930,M.p));
return((M.p).label)(M);};

var _913=RT.si_context_expected(7);

var _910=RT.si_context_expected(5);

var _906=function(M){if(--M.cbt<0){throw _906;}
M.c.push(new RT.CallFrame(_916,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym338;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=3;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym338;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_920,M.p));
return((M.p).label)(M);};

var _902=function(M){if(--M.cbt<0){throw _902;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _900=function(M){if(--M.cbt<0){throw _900;}
M.e[M.e.length-1][19]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _898=function(M){if(--M.cbt<0){throw _898;}
M.c.push(new RT.CallFrame(_906,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym339;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym339;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_910,M.p));
return((M.p).label)(M);};

var _894=function(M){if(--M.cbt<0){throw _894;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _892=function(M){if(--M.cbt<0){throw _892;}
M.e[M.e.length-1][17]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _890=function(M){if(--M.cbt<0){throw _890;}
M.c.push(new RT.CallFrame(_898,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_900,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",556,24,23,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_902,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",559,24,26,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4][6][0][M.e[M.e.length-4][6][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][16];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _886=function(M){if(--M.cbt<0){throw _886;}
M.e[M.e.length-1][16]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _884=function(M){if(--M.cbt<0){throw _884;}
M.c.push(new RT.CallFrame(_890,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_892,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",502,23,22,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_894,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",505,23,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4][18][0][M.e[M.e.length-4][18][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][16];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _882=function(M){if(--M.cbt<0){throw _882;}
M.c.push(new RT.CallFrame(_884,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_886,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",441,22,17,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-5][10][0][M.e[M.e.length-5][10][1]];
M.e[M.e.length-1]=50;
M.e[M.e.length-2]=600;
M.e[M.e.length-3]="solid";
M.e[M.e.length-4]="green";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _880=function(M){if(--M.cbt<0){throw _880;}
M.c.push(new RT.CallFrame(_882,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=-10;
M.e[M.e.length-1][15]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _878=function(M){if(--M.cbt<0){throw _878;}
M.c.push(new RT.CallFrame(_880,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=200;
M.e[M.e.length-1][14]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _876=function(M){if(--M.cbt<0){throw _876;}
M.c.push(new RT.CallFrame(_878,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=28;
M.e[M.e.length-1][13]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _874=function(M){if(--M.cbt<0){throw _874;}
M.c.push(new RT.CallFrame(_876,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=-10;
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _870=function(M){if(--M.cbt<0){throw _870;}
M.e[M.e.length-1][9]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _868=function(M){if(--M.cbt<0){throw _868;}
M.c.push(new RT.CallFrame(_874,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=50;
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _866=function(M){if(--M.cbt<0){throw _866;}
M.c.push(new RT.CallFrame(_868,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_870,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",262,13,13,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-5][10][0][M.e[M.e.length-5][10][1]];
M.e[M.e.length-1]=800;
M.e[M.e.length-2]=600;
M.e[M.e.length-3]="outline";
M.e[M.e.length-4]="black";
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _864=function(M){if(--M.cbt<0){throw _864;}
M.c.push(new RT.CallFrame(_866,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=600;
M.e[M.e.length-1][8]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _860=function(M){if(--M.cbt<0){throw _860;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=plt.baselib.numbers.divide(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"/"), M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _858=function(M){if(--M.cbt<0){throw _858;}
M.e[M.e.length-1][5]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _856=function(M){if(--M.cbt<0){throw _856;}
M.c.push(new RT.CallFrame(_864,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=800;
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _850=function(M){if(--M.cbt<0){throw _850;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _848=function(M){if(--M.cbt<0){throw _848;}
M.e[M.e.length-1][2]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _846=function(M){if(--M.cbt<0){throw _846;}
M.c.push(new RT.CallFrame(_856,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_858,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",177,9,23,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_860,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",180,9,26,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4][6][0][M.e[M.e.length-4][6][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _844=function(M){if(--M.cbt<0){throw _844;}
M.c.push(new RT.CallFrame(_846,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_848,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",111,8,17,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][3][0][M.e[M.e.length-3][3][1]];
M.e[M.e.length-1]=RT.makeFloat(0.1);
M.c.push(new RT.CallFrame(_850,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",122,8,28,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4][4][0][M.e[M.e.length-4][4][1]];
M.e[M.e.length-1]="flappybird.png";
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _413=function(M){if(--M.cbt<0){throw _413;}
M.mainModules.push("root/flappy.rkt");
};

var _827=function(M){if(--M.cbt<0){throw _827;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _823=function(M){if(--M.cbt<0){throw _823;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_827,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5322,194,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][43];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _819=function(M){if(--M.cbt<0){throw _819;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_823,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5288,193,13,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _815=function(M){if(--M.cbt<0){throw _815;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_819,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5260,192,13,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][41];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _809=function(M){if(--M.cbt<0){throw _809;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-10];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _807=function(M){if(--M.cbt<0){throw _807;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_815,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5232,191,13,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][40];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _803=function(M){if(--M.cbt<0){throw _803;}
if(M.v===false){return(_800)(M);}else{//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-1][50];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _795=function(M){if(--M.cbt<0){throw _795;}
M.e[M.e.length-1]=M.v;
M.v=-10;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _791=function(M){if(--M.cbt<0){throw _791;}
if(M.v===false){return(_788)(M);}else{M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4974,182,9,50]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][21];
M.c.push(new RT.CallFrame(_795,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4985,182,20,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][23];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _783=function(M){if(--M.cbt<0){throw _783;}
M.e[M.e.length-3]=M.v;
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-5][9];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _777=function(M){if(--M.cbt<0){throw _777;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.makeRational(5,7);
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _775=function(M){if(--M.cbt<0){throw _775;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _771=function(M){if(--M.cbt<0){throw _771;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _767=function(M){if(--M.cbt<0){throw _767;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_771,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4678,169,27,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][24];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _765=function(M){if(--M.cbt<0){throw _765;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_775,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4704,170,13,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_777,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4707,170,16,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][24];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _761=function(M){if(--M.cbt<0){throw _761;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _757=function(M){if(--M.cbt<0){throw _757;}
M.e[M.e.length-2]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _754=function(M){if(--M.cbt<0){throw _754;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedAdd(M, 200,M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _752=function(M){if(--M.cbt<0){throw _752;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][28];
M.e[M.e.length-1]=810;
M.c.push(new RT.CallFrame(_757,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4353,154,18,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedSub(M, M.e[M.e.length-4],200);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _746=function(M){if(--M.cbt<0){throw _746;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _742=function(M){if(--M.cbt<0){throw _742;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_746,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4159,146,13,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][32];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _738=function(M){if(--M.cbt<0){throw _738;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=-10;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _736=function(M){if(--M.cbt<0){throw _736;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_742,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4132,145,13,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][31];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _730=function(M){if(--M.cbt<0){throw _730;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _728=function(M){if(--M.cbt<0){throw _728;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _722=function(M){if(--M.cbt<0){throw _722;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _720=function(M){if(--M.cbt<0){throw _720;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_728,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3980,137,43,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][65];
M.c.push(new RT.CallFrame(_730,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3996,137,59,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][78][0][M.e[M.e.length-5][78][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _714=function(M){if(--M.cbt<0){throw _714;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _708=function(M){if(--M.cbt<0){throw _708;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _706=function(M){if(--M.cbt<0){throw _706;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=-50;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),M.e[M.e.length-2])));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _704=function(M){if(--M.cbt<0){throw _704;}
if(M.v===false){return(_701)(M);}else{M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3894,135,9,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-2][65];
M.c.push(new RT.CallFrame(_714,M.p));
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3910,135,25,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3][78][0][M.e[M.e.length-3][78][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _698=function(M){if(--M.cbt<0){throw _698;}
if(M.v===false){return(_695)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _686=function(M){if(--M.cbt<0){throw _686;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _684=function(M){if(--M.cbt<0){throw _684;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _678=function(M){if(--M.cbt<0){throw _678;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _676=function(M){if(--M.cbt<0){throw _676;}
M.e[M.e.length-1]=M.v;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-11][17];
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _674=function(M){if(--M.cbt<0){throw _674;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_684,M.p));
M.v=M.e[M.e.length-9][1][0][M.e[M.e.length-9][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3604,123,35,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-10][75];
M.c.push(new RT.CallFrame(_686,M.p));
M.v=M.e[M.e.length-10][1][0][M.e[M.e.length-10][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3619,123,50,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-11][78][0][M.e[M.e.length-11][78][1]];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _668=function(M){if(--M.cbt<0){throw _668;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _666=function(M){if(--M.cbt<0){throw _666;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_674,M.p));
M.v=M.e[M.e.length-9][1][0][M.e[M.e.length-9][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3526,122,35,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_676,M.p));
M.v=M.e[M.e.length-11][1][0][M.e[M.e.length-11][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3529,122,38,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-12][32];
M.c.push(new RT.CallFrame(_678,M.p));
M.v=M.e[M.e.length-12][1][0][M.e[M.e.length-12][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3541,122,50,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-13][77][0][M.e[M.e.length-13][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _664=function(M){if(--M.cbt<0){throw _664;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _658=function(M){if(--M.cbt<0){throw _658;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _656=function(M){if(--M.cbt<0){throw _656;}
M.e[M.e.length-1]=M.v;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-7][17];
M.v=RT.checkedSub(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _654=function(M){if(--M.cbt<0){throw _654;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_664,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3413,120,22,218]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-9][72][0][M.e[M.e.length-9][72][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-9][16];
M.c.push(new RT.CallFrame(_666,M.p));
M.v=M.e[M.e.length-9][1][0][M.e[M.e.length-9][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3470,121,35,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-10][30];
M.c.push(new RT.CallFrame(_668,M.p));
M.v=M.e[M.e.length-10][1][0][M.e[M.e.length-10][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3478,121,43,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-11][77][0][M.e[M.e.length-11][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _648=function(M){if(--M.cbt<0){throw _648;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _646=function(M){if(--M.cbt<0){throw _646;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_654,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3348,119,22,42]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_656,M.p));
M.v=M.e[M.e.length-7][1][0][M.e[M.e.length-7][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3351,119,25,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-8][31];
M.c.push(new RT.CallFrame(_658,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3362,119,36,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-9][77][0][M.e[M.e.length-9][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _642=function(M){if(--M.cbt<0){throw _642;}
if(M.v===false){return(_639)(M);}else{//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-1][9];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _632=function(M){if(--M.cbt<0){throw _632;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _630=function(M){if(--M.cbt<0){throw _630;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _624=function(M){if(--M.cbt<0){throw _624;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _622=function(M){if(--M.cbt<0){throw _622;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_630,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3106,111,23,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][71];
M.c.push(new RT.CallFrame(_632,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3121,111,38,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][41];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _616=function(M){if(--M.cbt<0){throw _616;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _614=function(M){if(--M.cbt<0){throw _614;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_622,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3054,110,23,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][56];
M.c.push(new RT.CallFrame(_624,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3068,110,37,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][39];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _608=function(M){if(--M.cbt<0){throw _608;}
if(M.v===false){return(_605)(M);}else{M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2954,108,29,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][68];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _600=function(M){if(--M.cbt<0){throw _600;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["string-append"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _598=function(M){if(--M.cbt<0){throw _598;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=10;
M.v="blue";
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _596=function(M){if(--M.cbt<0){throw _596;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=400;
M.e[M.e.length-3]=20;
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-5][9];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _588=function(M){if(--M.cbt<0){throw _588;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _586=function(M){if(--M.cbt<0){throw _586;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _582=function(M){if(--M.cbt<0){throw _582;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_586,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2564,95,11,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][71];
M.c.push(new RT.CallFrame(_588,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2579,95,26,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][41];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _578=function(M){if(--M.cbt<0){throw _578;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _574=function(M){if(--M.cbt<0){throw _574;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_578,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2428,89,25,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][32];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _567=function(M){if(--M.cbt<0){throw _567;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _563=function(M){if(--M.cbt<0){throw _563;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_567,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2388,88,25,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][31];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _561=function(M){if(--M.cbt<0){throw _561;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_571)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _559=function(M){if(--M.cbt<0){throw _559;}
M.e[M.e.length-2]=M.v;
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _555=function(M){if(--M.cbt<0){throw _555;}
M.e[M.e.length-1]=M.v;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][19];
M.v=RT.checkedSub(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _553=function(M){if(--M.cbt<0){throw _553;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_559,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2341,87,40,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, 50,M.e[M.e.length-3][5]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _551=function(M){if(--M.cbt<0){throw _551;}
if(M.v===false){return(_548)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_561,M.p));
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2374,88,11,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_563,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2377,88,14,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][23];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _537=function(M){if(--M.cbt<0){throw _537;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=1;
M.v=RT.checkedSub(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _535=function(M){if(--M.cbt<0){throw _535;}
M.e[M.e.length-4]=M.v;
M.v=false;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _531=function(M){if(--M.cbt<0){throw _531;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=1;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _529=function(M){if(--M.cbt<0){throw _529;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_535,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1987,72,25,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_537,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1990,72,28,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][42];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _523=function(M){if(--M.cbt<0){throw _523;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _521=function(M){if(--M.cbt<0){throw _521;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_529,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1941,71,25,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_531,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1944,71,28,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][41];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _515=function(M){if(--M.cbt<0){throw _515;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _513=function(M){if(--M.cbt<0){throw _513;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_521,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1884,70,25,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][65];
M.c.push(new RT.CallFrame(_523,M.p));
M.v=M.e[M.e.length-7][1][0][M.e[M.e.length-7][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1900,70,41,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][40];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _507=function(M){if(--M.cbt<0){throw _507;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=1;
M.v=RT.checkedAdd(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _505=function(M){if(--M.cbt<0){throw _505;}
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=28;
M.v=false;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _499=function(M){if(--M.cbt<0){throw _499;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _497=function(M){if(--M.cbt<0){throw _497;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_505,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1712,64,20,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_507,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1715,64,23,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][41];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _491=function(M){if(--M.cbt<0){throw _491;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _489=function(M){if(--M.cbt<0){throw _489;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_497,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1661,63,20,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][64];
M.c.push(new RT.CallFrame(_499,M.p));
M.v=M.e[M.e.length-7][1][0][M.e[M.e.length-7][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1676,63,35,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][40];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _485=function(M){if(--M.cbt<0){throw _485;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _483=function(M){if(--M.cbt<0){throw _483;}
if(M.v===false){return(_480)(M);}else{M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1600,62,9,192]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][37];
M.c.push(new RT.CallFrame(_489,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1611,62,20,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][54];
M.c.push(new RT.CallFrame(_491,M.p));
M.v=M.e[M.e.length-7][1][0][M.e[M.e.length-7][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1626,62,35,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][39];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _475=function(M){if(--M.cbt<0){throw _475;}
M.e[M.e.length-4]=M.v;
M.v=true;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _471=function(M){if(--M.cbt<0){throw _471;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_475,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1506,59,20,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][42];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _467=function(M){if(--M.cbt<0){throw _467;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_471,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1471,58,20,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][41];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _463=function(M){if(--M.cbt<0){throw _463;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_467,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1436,57,20,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][40];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _457=function(M){if(--M.cbt<0){throw _457;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _453=function(M){if(--M.cbt<0){throw _453;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_457,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1365,55,37,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][40];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _451=function(M){if(--M.cbt<0){throw _451;}
return(_445)(M);};

var _447=function(M){if(--M.cbt<0){throw _447;}
if(M.v===false){return(_444)(M);}else{M.v=true;
return(_445)(M);}};

var _437=function(M){if(--M.cbt<0){throw _437;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _433=function(M){if(--M.cbt<0){throw _433;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_437,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1178,47,12,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][57][0][M.e[M.e.length-6][57][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][62];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _429=function(M){if(--M.cbt<0){throw _429;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_433,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1143,46,12,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][55][0][M.e[M.e.length-6][55][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][61];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _423=function(M){if(--M.cbt<0){throw _423;}
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _419=function(M){if(--M.cbt<0){throw _419;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_423,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",998,40,12,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][57][0][M.e[M.e.length-6][57][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][58];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _415=function(M){if(--M.cbt<0){throw _415;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_419,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",963,39,12,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][55][0][M.e[M.e.length-6][55][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][56];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _991=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _988=function(M){if(--M.cbt<0){throw _988;}
M.e.length-=(M.a-1);
return(_989)(M);};

var _980=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _977=function(M){if(--M.cbt<0){throw _977;}
M.e.length-=(M.a-1);
return(_978)(M);};

var _975=function(M){if(--M.cbt<0){throw _975;}
M.e.length-=(M.a-1);
return(_976)(M);};

var _973=function(M){if(--M.cbt<0){throw _973;}
M.e.length-=(M.a-1);
return(_974)(M);};

var _971=function(M){if(--M.cbt<0){throw _971;}
M.e.length-=(M.a-1);
return(_972)(M);};

var _969=function(M){if(--M.cbt<0){throw _969;}
M.e.length-=(M.a-1);
return(_970)(M);};

var _967=function(M){if(--M.cbt<0){throw _967;}
M.e.length-=(M.a-1);
return(_968)(M);};

var _965=function(M){if(--M.cbt<0){throw _965;}
M.e.length-=(M.a-1);
return(_966)(M);};

var _963=function(M){if(--M.cbt<0){throw _963;}
M.e.length-=(M.a-1);
return(_964)(M);};

var _961=function(M){if(--M.cbt<0){throw _961;}
M.e.length-=(M.a-1);
return(_962)(M);};

var _959=function(M){if(--M.cbt<0){throw _959;}
M.e.length-=(M.a-1);
return(_960)(M);};

var _957=function(M){if(--M.cbt<0){throw _957;}
M.e.length-=(M.a-1);
return(_958)(M);};

var _955=function(M){if(--M.cbt<0){throw _955;}
M.e.length-=(M.a-1);
return(_956)(M);};

var _953=function(M){if(--M.cbt<0){throw _953;}
M.e.length-=(M.a-1);
return(_954)(M);};

var _951=function(M){if(--M.cbt<0){throw _951;}
M.e.length-=(M.a-1);
return(_952)(M);};

var _949=function(M){if(--M.cbt<0){throw _949;}
M.e.length-=(M.a-1);
return(_950)(M);};

var _947=function(M){if(--M.cbt<0){throw _947;}
M.e.length-=(M.a-1);
return(_948)(M);};

var _945=function(M){if(--M.cbt<0){throw _945;}
M.e.length-=(M.a-1);
return(_946)(M);};

var _943=function(M){if(--M.cbt<0){throw _943;}
M.e.length-=(M.a-1);
return(_944)(M);};


var _939=function(M){if(--M.cbt<0){throw _939;}
M.e.length-=(M.a-1);
return(_940)(M);};


var _935=function(M){if(--M.cbt<0){throw _935;}
M.e.length-=(M.a-1);
return(_936)(M);};

var _932=function(M){if(--M.cbt<0){throw _932;}
if((M.a-13)===0){return(_928)(M);}else{RT.si_context_expected(13)(M);
}};

var _931=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-13]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym339;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym340;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym341;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym342;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=sym343;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym339;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-9]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym340;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-10]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym341;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-11]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym342;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-12]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=4;
M.e[M.e.length-3]=sym343;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-13];
M.e[M.e.length-13]=M.v;
M.a=13;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_933,M.p));
return((M.p).label)(M);};

var _929=function(M){if(--M.cbt<0){throw _929;}
if((M.a-5)===0){return(_931)(M);}else{RT.si_context_expected(5)(M);
}};

var _925=function(M){if(--M.cbt<0){throw _925;}
M.e.length-=(M.a-1);
return(_926)(M);};

var _922=function(M){if(--M.cbt<0){throw _922;}
if((M.a-9)===0){return(_918)(M);}else{RT.si_context_expected(9)(M);
}};

var _921=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-9]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-12];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym344;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym345;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym346;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym344;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-7]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym345;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-8]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-17];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym346;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-9];
M.e[M.e.length-9]=M.v;
M.a=9;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_923,M.p));
return((M.p).label)(M);};

var _919=function(M){if(--M.cbt<0){throw _919;}
if((M.a-5)===0){return(_921)(M);}else{RT.si_context_expected(5)(M);
}};

var _915=function(M){if(--M.cbt<0){throw _915;}
M.e.length-=(M.a-1);
return(_916)(M);};

var _912=function(M){if(--M.cbt<0){throw _912;}
if((M.a-7)===0){return(_908)(M);}else{RT.si_context_expected(7)(M);
}};

var _911=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym347;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym348;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym347;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym348;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_913,M.p));
return((M.p).label)(M);};

var _909=function(M){if(--M.cbt<0){throw _909;}
if((M.a-5)===0){return(_911)(M);}else{RT.si_context_expected(5)(M);
}};

var _905=function(M){if(--M.cbt<0){throw _905;}
M.e.length-=(M.a-1);
return(_906)(M);};



var _897=function(M){if(--M.cbt<0){throw _897;}
M.e.length-=(M.a-1);
return(_898)(M);};



var _889=function(M){if(--M.cbt<0){throw _889;}
M.e.length-=(M.a-1);
return(_890)(M);};


var _883=function(M){if(--M.cbt<0){throw _883;}
M.e.length-=(M.a-1);
return(_884)(M);};

var _881=function(M){if(--M.cbt<0){throw _881;}
M.e.length-=(M.a-1);
return(_882)(M);};

var _879=function(M){if(--M.cbt<0){throw _879;}
M.e.length-=(M.a-1);
return(_880)(M);};

var _877=function(M){if(--M.cbt<0){throw _877;}
M.e.length-=(M.a-1);
return(_878)(M);};

var _875=function(M){if(--M.cbt<0){throw _875;}
M.e.length-=(M.a-1);
return(_876)(M);};

var _873=function(M){if(--M.cbt<0){throw _873;}
M.e.length-=(M.a-1);
return(_874)(M);};


var _867=function(M){if(--M.cbt<0){throw _867;}
M.e.length-=(M.a-1);
return(_868)(M);};

var _865=function(M){if(--M.cbt<0){throw _865;}
M.e.length-=(M.a-1);
return(_866)(M);};

var _863=function(M){if(--M.cbt<0){throw _863;}
M.e.length-=(M.a-1);
return(_864)(M);};



var _855=function(M){if(--M.cbt<0){throw _855;}
M.e.length-=(M.a-1);
return(_856)(M);};



var _845=function(M){if(--M.cbt<0){throw _845;}
M.e.length-=(M.a-1);
return(_846)(M);};

var _843=function(M){if(--M.cbt<0){throw _843;}
M.e.length-=(M.a-1);
return(_844)(M);};

var _841=function(M){if(--M.cbt<0){throw _841;}
M.e.length-=(M.a-1);
return(_842)(M);};

var _842=function(M){if(--M.cbt<0){throw _842;}
M.e.push([M.params.currentNamespace.get("AY")||M.primitives["AY"],[M.modules["whalesong/lang/private/traced-app.rkt"].prefix,M.modules["whalesong/lang/private/traced-app.rkt"].getPrefixOffset("traced-app-key"),{moduleName:"whalesong/lang/private/traced-app.rkt",name:"traced-app-key"}],M.params.currentNamespace.get("IMG-BIRD")||M.primitives["IMG-BIRD"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("scale25.49"),{moduleName:"whalesong/image/private/main.rkt",name:"scale25.49"}],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("bitmap/url3.5"),{moduleName:"whalesong/image/private/main.rkt",name:"bitmap/url3.5"}],M.params.currentNamespace.get("MEIO-LARG-BIRD")||M.primitives["MEIO-LARG-BIRD"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("image-width57.113"),{moduleName:"whalesong/image/private/main.rkt",name:"image-width57.113"}],M.params.currentNamespace.get("LARGURA")||M.primitives["LARGURA"],M.params.currentNamespace.get("ALTURA")||M.primitives["ALTURA"],M.params.currentNamespace.get("CENA")||M.primitives["CENA"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("rectangle36.71"),{moduleName:"whalesong/image/private/main.rkt",name:"rectangle36.71"}],M.params.currentNamespace.get("X")||M.primitives["X"],M.params.currentNamespace.get("DY-FLAP")||M.primitives["DY-FLAP"],M.params.currentNamespace.get("TEMPO-CANOS")||M.primitives["TEMPO-CANOS"],M.params.currentNamespace.get("ESPACO-CANOS")||M.primitives["ESPACO-CANOS"],M.params.currentNamespace.get("DX-CANOS")||M.primitives["DX-CANOS"],M.params.currentNamespace.get("IMG-CANO")||M.primitives["IMG-CANO"],M.params.currentNamespace.get("MEIO-ALT-CANO")||M.primitives["MEIO-ALT-CANO"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("image-height58.115"),{moduleName:"whalesong/image/private/main.rkt",name:"image-height58.115"}],M.params.currentNamespace.get("MEIO-LARG-CANO")||M.primitives["MEIO-LARG-CANO"],M.params.currentNamespace.get("struct:bird")||M.primitives["struct:bird"],M.params.currentNamespace.get("make-bird")||M.primitives["make-bird"],M.params.currentNamespace.get("bird?")||M.primitives["bird?"],M.params.currentNamespace.get("bird-y")||M.primitives["bird-y"],M.params.currentNamespace.get("bird-dy")||M.primitives["bird-dy"],M.params.currentNamespace.get("set-bird-y!")||M.primitives["set-bird-y!"],M.params.currentNamespace.get("set-bird-dy!")||M.primitives["set-bird-dy!"],M.params.currentNamespace.get("struct:cano")||M.primitives["struct:cano"],M.params.currentNamespace.get("make-cano")||M.primitives["make-cano"],M.params.currentNamespace.get("cano?")||M.primitives["cano?"],M.params.currentNamespace.get("cano-x")||M.primitives["cano-x"],M.params.currentNamespace.get("cano-cima")||M.primitives["cano-cima"],M.params.currentNamespace.get("cano-baixo")||M.primitives["cano-baixo"],M.params.currentNamespace.get("set-cano-x!")||M.primitives["set-cano-x!"],M.params.currentNamespace.get("set-cano-cima!")||M.primitives["set-cano-cima!"],M.params.currentNamespace.get("set-cano-baixo!")||M.primitives["set-cano-baixo!"],M.params.currentNamespace.get("struct:jogo")||M.primitives["struct:jogo"],M.params.currentNamespace.get("make-jogo")||M.primitives["make-jogo"],M.params.currentNamespace.get("jogo?")||M.primitives["jogo?"],M.params.currentNamespace.get("jogo-bird")||M.primitives["jogo-bird"],M.params.currentNamespace.get("jogo-canos")||M.primitives["jogo-canos"],M.params.currentNamespace.get("jogo-score")||M.primitives["jogo-score"],M.params.currentNamespace.get("jogo-tempo-canos")||M.primitives["jogo-tempo-canos"],M.params.currentNamespace.get("jogo-game-over?")||M.primitives["jogo-game-over?"],M.params.currentNamespace.get("set-jogo-bird!")||M.primitives["set-jogo-bird!"],M.params.currentNamespace.get("set-jogo-canos!")||M.primitives["set-jogo-canos!"],M.params.currentNamespace.get("set-jogo-score!")||M.primitives["set-jogo-score!"],M.params.currentNamespace.get("set-jogo-tempo-canos!")||M.primitives["set-jogo-tempo-canos!"],M.params.currentNamespace.get("set-jogo-game-over?!")||M.primitives["set-jogo-game-over?!"],M.params.currentNamespace.get("BIRD-INICIAL")||M.primitives["BIRD-INICIAL"],M.params.currentNamespace.get("JOGO-INICIAL")||M.primitives["JOGO-INICIAL"],M.params.currentNamespace.get("main-bird")||M.primitives["main-bird"],[M.modules["whalesong/world/impl.rkt"].prefix,M.modules["whalesong/world/impl.rkt"].getPrefixOffset("big-bang1.1"),{moduleName:"whalesong/world/impl.rkt",name:"big-bang1.1"}],[M.modules["whalesong/world/impl.rkt"].prefix,M.modules["whalesong/world/impl.rkt"].getPrefixOffset("on-tick2.3"),{moduleName:"whalesong/world/impl.rkt",name:"on-tick2.3"}],M.params.currentNamespace.get("atualiza-bird")||M.primitives["atualiza-bird"],[M.modules["whalesong/world/impl.rkt"].prefix,M.modules["whalesong/world/impl.rkt"].getPrefixOffset("to-draw7.13"),{moduleName:"whalesong/world/impl.rkt",name:"to-draw7.13"}],M.params.currentNamespace.get("desenha-bird")||M.primitives["desenha-bird"],[M.modules["whalesong/world/impl.rkt"].prefix,M.modules["whalesong/world/impl.rkt"].getPrefixOffset("on-key3.5"),{moduleName:"whalesong/world/impl.rkt",name:"on-key3.5"}],M.params.currentNamespace.get("trata-tecla-bird")||M.primitives["trata-tecla-bird"],M.params.currentNamespace.get("main")||M.primitives["main"],M.params.currentNamespace.get("atualiza-jogo")||M.primitives["atualiza-jogo"],M.params.currentNamespace.get("desenha-jogo")||M.primitives["desenha-jogo"],M.params.currentNamespace.get("trata-tecla")||M.primitives["trata-tecla"],M.params.currentNamespace.get("colidiu?")||M.primitives["colidiu?"],M.params.currentNamespace.get("adiciona-cano")||M.primitives["adiciona-cano"],M.params.currentNamespace.get("atualiza-canos")||M.primitives["atualiza-canos"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("ormap2"),{moduleName:"whalesong/lang/private/map.rkt",name:"ormap2"}],M.params.currentNamespace.get("colidiu-bird-cano?")||M.primitives["colidiu-bird-cano?"],M.params.currentNamespace.get("desenha-game-over")||M.primitives["desenha-game-over"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("overlay8.15"),{moduleName:"whalesong/image/private/main.rkt",name:"overlay8.15"}],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("text1.1"),{moduleName:"whalesong/image/private/main.rkt",name:"text1.1"}],M.params.currentNamespace.get("desenha-score")||M.primitives["desenha-score"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("place-image22.43"),{moduleName:"whalesong/image/private/main.rkt",name:"place-image22.43"}],M.primitives["string-append"],M.primitives["number->string"],M.params.currentNamespace.get("desenha-canos")||M.primitives["desenha-canos"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("empty?"),{moduleName:"whalesong/lang/list.rkt",name:"empty?"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("first"),{moduleName:"whalesong/lang/list.rkt",name:"first"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("rest"),{moduleName:"whalesong/lang/list.rkt",name:"rest"}],M.params.currentNamespace.get("atualiza-cano")||M.primitives["atualiza-cano"],M.params.currentNamespace.get("cano-aleatorio")||M.primitives["cano-aleatorio"],M.primitives["random"],[M.modules["whalesong/world/impl.rkt"].prefix,M.modules["whalesong/world/impl.rkt"].getPrefixOffset("key=?6.11"),{moduleName:"whalesong/world/impl.rkt",name:"key=?6.11"}],[M.modules["collects/racket/private/modbeg.rkt"].prefix,M.modules["collects/racket/private/modbeg.rkt"].getPrefixOffset("print-values"),{moduleName:"collects/racket/private/modbeg.rkt",name:"print-values"}],[M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix,M.modules["whalesong/lang/check-expect/check-expect.rkt"].getPrefixOffset("run-tests"),{moduleName:"whalesong/lang/check-expect/check-expect.rkt",name:"run-tests"}]]);M.e[M.e.length-1].names=["AY","traced-app-key","IMG-BIRD","scale25.49","bitmap/url3.5","MEIO-LARG-BIRD","image-width57.113","LARGURA","ALTURA","CENA","rectangle36.71","X","DY-FLAP","TEMPO-CANOS","ESPACO-CANOS","DX-CANOS","IMG-CANO","MEIO-ALT-CANO","image-height58.115","MEIO-LARG-CANO","struct:bird","make-bird","bird?","bird-y","bird-dy","set-bird-y!","set-bird-dy!","struct:cano","make-cano","cano?","cano-x","cano-cima","cano-baixo","set-cano-x!","set-cano-cima!","set-cano-baixo!","struct:jogo","make-jogo","jogo?","jogo-bird","jogo-canos","jogo-score","jogo-tempo-canos","jogo-game-over?","set-jogo-bird!","set-jogo-canos!","set-jogo-score!","set-jogo-tempo-canos!","set-jogo-game-over?!","BIRD-INICIAL","JOGO-INICIAL","main-bird","big-bang1.1","on-tick2.3","atualiza-bird","to-draw7.13","desenha-bird","on-key3.5","trata-tecla-bird","main","atualiza-jogo","desenha-jogo","trata-tecla","colidiu?","adiciona-cano","atualiza-canos","ormap2","colidiu-bird-cano?","desenha-game-over","overlay8.15","text1.1","desenha-score","place-image22.43","string-append","number->string","desenha-canos","empty?","first","rest","atualiza-cano","cano-aleatorio","random","key=?6.11","print-values","run-tests"];
M.modules["root/flappy.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_844,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=RT.makeRational(5,7);
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _840=function(M){if(M.modules["whalesong/world.rkt"].isInvoked!==false){return(_842)(M);}else{M.c.push(new RT.CallFrame(_842,M.p));
return(M.modules["whalesong/world.rkt"].label)(M);}};

var _838=function(M){if(--M.cbt<0){throw _838;}
M.e.length-=(M.a-1);
return(_839)(M);};

var _839=function(M){if(--M.cbt<0){throw _839;}
if((M.installedModules["whalesong/world.rkt"]!==void(0)&&M.modules["whalesong/world.rkt"]!==undefined)!==false){return(_840)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/world.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_840);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_840)(M);}};

var _837=function(M){if(M.modules["whalesong/image.rkt"].isInvoked!==false){return(_839)(M);}else{M.c.push(new RT.CallFrame(_839,M.p));
return(M.modules["whalesong/image.rkt"].label)(M);}};

var _835=function(M){if(--M.cbt<0){throw _835;}
M.e.length-=(M.a-1);
return(_836)(M);};

var _836=function(M){if(--M.cbt<0){throw _836;}
if((M.installedModules["whalesong/image.rkt"]!==void(0)&&M.modules["whalesong/image.rkt"]!==undefined)!==false){return(_837)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_837);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_837)(M);}};

var _834=function(M){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_836)(M);}else{M.c.push(new RT.CallFrame(_836,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _832=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _833=function(M){M.modules["root/flappy.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/whalesong.rkt"]!==void(0)&&M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_834)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/whalesong.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_834);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_834)(M);}};

var _412=function(M){if(--M.cbt<0){throw _412;}
M.e.length-=(M.a-1);
return(_413)(M);};







var _800=function(M){M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5172,190,9,170]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][37];
M.c.push(new RT.CallFrame(_807,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5183,190,20,35]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-8][58];
M.c.push(new RT.CallFrame(_809,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5201,190,38,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][39];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _410=function(M){if(--M.cbt<0){throw _410;}

//"lambda body for #(struct:LamPositionalName trata-tecla root/flappy.rkt 187 0 5083 262)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_803,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",5119,188,9,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][82][0][M.e[M.e.length-3][82][1]];
M.e[M.e.length-1]="\r";
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _788=function(M){M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _409=function(M){if(--M.cbt<0){throw _409;}

//"lambda body for #(struct:LamPositionalName trata-tecla-bird root/flappy.rkt 180 0 4909 135)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_791,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4950,181,9,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3][82][0][M.e[M.e.length-3][82][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=" ";
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _408=function(M){if(--M.cbt<0){throw _408;}

//"lambda body for #(struct:LamPositionalName desenha-bird root/flappy.rkt 176 0 4797 68)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4824,177,2,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][72][0][M.e[M.e.length-5][72][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][2];
M.e[M.e.length-2]=50;
M.c.push(new RT.CallFrame(_783,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4848,177,26,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][23];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};






var _407=function(M){if(--M.cbt<0){throw _407;}

//"lambda body for #(struct:LamPositionalName atualiza-bird root/flappy.rkt 168 0 4625 99)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4653,169,2,70]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][21];
M.c.push(new RT.CallFrame(_765,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4664,169,13,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_767,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4667,169,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][23];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _406=function(M){if(--M.cbt<0){throw _406;}

//"lambda body for #(struct:LamPositionalName adiciona-cano root/flappy.rkt 161 0 4503 58)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4533,162,2,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_761,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4539,162,8,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][80];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _405=function(M){if(--M.cbt<0){throw _405;}

//"lambda body for #(struct:LamPositionalName cano-aleatorio root/flappy.rkt 151 0 4247 172)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_752,M.p));
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4300,153,19,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_754,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4316,153,35,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(600);
M.a=1;
M.v=M.primitives["random"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _404=function(M){if(--M.cbt<0){throw _404;}

//"lambda body for #(struct:LamPositionalName atualiza-cano root/flappy.rkt 143 0 4056 119)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4084,144,2,90]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][28];
M.c.push(new RT.CallFrame(_736,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4095,144,13,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_738,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",4098,144,16,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][30];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};






var _701=function(M){M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3946,137,9,62]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_720,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3952,137,15,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][79];
M.c.push(new RT.CallFrame(_722,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3967,137,30,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][77][0][M.e[M.e.length-5][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _695=function(M){M.c.push(new RT.CallFrame(_704,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3856,134,9,28]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_706,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3859,134,12,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][30];
M.c.push(new RT.CallFrame(_708,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3867,134,20,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5][77][0][M.e[M.e.length-5][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _403=function(M){if(--M.cbt<0){throw _403;}

//"lambda body for #(struct:LamPositionalName atualiza-canos root/flappy.rkt 132 0 3789 234)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_698,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3827,133,9,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2][76][0][M.e[M.e.length-2][76][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};














var _639=function(M){M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3259,117,9,373]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][72][0][M.e[M.e.length-5][72][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][16];
M.c.push(new RT.CallFrame(_646,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3303,118,22,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][30];
M.c.push(new RT.CallFrame(_648,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3311,118,30,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7][77][0][M.e[M.e.length-7][77][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _402=function(M){if(--M.cbt<0){throw _402;}

//"lambda body for #(struct:LamPositionalName desenha-canos root/flappy.rkt 114 0 3180 455)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_642,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3217,115,9,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2][76][0][M.e[M.e.length-2][76][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};







var _605=function(M){M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2991,109,14,146]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-4][69][0][M.e[M.e.length-4][69][1]];
M.c.push(new RT.CallFrame(_614,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3000,109,23,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][75];
M.c.push(new RT.CallFrame(_616,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",3015,109,38,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][40];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _401=function(M){if(--M.cbt<0){throw _401;}

//"lambda body for #(struct:LamPositionalName desenha-jogo root/flappy.rkt 107 0 2900 240)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_608,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2934,108,9,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][43];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _400=function(M){if(--M.cbt<0){throw _400;}

//"lambda body for #(struct:LamPositionalName desenha-score root/flappy.rkt 98 0 2631 193)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2659,99,2,164]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][72][0][M.e[M.e.length-5][72][1]];
M.c.push(new RT.CallFrame(_596,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2672,99,15,83]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.e[M.e.length-8][70][0][M.e[M.e.length-8][70][1]];
M.c.push(new RT.CallFrame(_598,M.p));
M.v=M.e[M.e.length-8][1][0][M.e[M.e.length-8][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2678,99,21,45]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]="Pontos: ";
M.c.push(new RT.CallFrame(_600,M.p));
M.v=M.e[M.e.length-10][1][0][M.e[M.e.length-10][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2704,99,47,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["number->string"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _399=function(M){if(--M.cbt<0){throw _399;}

//"lambda body for #(struct:LamPositionalName desenha-game-over root/flappy.rkt 93 0 2484 112)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2516,94,2,79]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][69][0][M.e[M.e.length-3][69][1]];
M.c.push(new RT.CallFrame(_582,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2525,94,11,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-6][70][0][M.e[M.e.length-6][70][1]];
M.e[M.e.length-1]="GAME OVER";
M.e[M.e.length-2]=50;
M.e[M.e.length-3]="red";
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _571=function(M){M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2414,89,11,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_574,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2417,89,14,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][23];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _548=function(M){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _398=function(M){if(--M.cbt<0){throw _398;}

//"lambda body for #(struct:LamPositionalName colidiu-bird-cano? root/flappy.rkt 86 0 2268 178)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_551,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2308,87,7,54]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_553,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2311,87,10,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_555,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2314,87,13,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][30];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _543=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _542=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_543)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_543)(M);}};

var _397=function(M){if(--M.cbt<0){throw _397;}

//"lambda body for #(struct:LamPositionalName ...essor/flappy.rkt:83:9 root/flappy.rkt 83 9 2180 37)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2192,83,21,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][67];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _396=function(M){if(--M.cbt<0){throw _396;}

//"lambda body for #(struct:LamPositionalName colidiu? root/flappy.rkt 82 0 2146 77)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",2173,83,2,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][66][0][M.e[M.e.length-3][66][1]];
M.v=new RT.Closure(_397,1,[M.e[M.e.length-3],M.e[M.e.length-4]],"...essor/flappy.rkt:83:9");
M.a=1;
if(M.a===0){return(_542)(M);}else{M.e.push(M.v);
return(_542)(M);}};















var _480=function(M){M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1818,69,9,228]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][37];
M.c.push(new RT.CallFrame(_513,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1829,69,20,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][54];
M.c.push(new RT.CallFrame(_515,M.p));
M.v=M.e[M.e.length-7][1][0][M.e[M.e.length-7][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1844,69,35,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][39];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};







var _442=function(M){M.c.push(new RT.CallFrame(_483,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1564,61,9,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_485,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1567,61,12,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][42];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _445=function(M){if(M.v===false){return(_442)(M);}else{M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1391,56,9,162]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][37];
M.c.push(new RT.CallFrame(_463,M.p));
M.v=M.e[M.e.length-6][1][0][M.e[M.e.length-6][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1402,56,20,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][39];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _444=function(M){M.c.push(new RT.CallFrame(_451,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1341,55,13,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][63];
M.c.push(new RT.CallFrame(_453,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1351,55,23,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][39];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _395=function(M){if(--M.cbt<0){throw _395;}

//"lambda body for #(struct:LamPositionalName atualiza-jogo root/flappy.rkt 53 0 1269 792)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_447,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1308,54,13,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][43];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _394=function(M){if(--M.cbt<0){throw _394;}

//"lambda body for #(struct:LamPositionalName main root/flappy.rkt 43 0 1060 140)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1081,44,2,118]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][52][0][M.e[M.e.length-5][52][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.CallFrame(_429,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",1107,45,12,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][53][0][M.e[M.e.length-6][53][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][60];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};




var _393=function(M){if(--M.cbt<0){throw _393;}

//"lambda body for #(struct:LamPositionalName main-bird root/flappy.rkt 36 0 879 146)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",903,37,2,121]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-5][52][0][M.e[M.e.length-5][52][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.c.push(new RT.CallFrame(_415,M.p));
M.v=M.e[M.e.length-5][1][0][M.e[M.e.length-5][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>",927,38,12,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6][53][0][M.e[M.e.length-6][53][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][54];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _411=function(M){M.c.push(new RT.CallFrame(_413,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["root/flappy.rkt"]=function(){return new RT.ModuleRecord("flappy",_833);}
return(_832)(M);};

var _994=function(M){if(--M.cbt<0){throw _994;}
if(M.a===0){return(_991)(M);}else{M.e.push(M.v);
return(_991)(M);}};

var _983=function(M){if(--M.cbt<0){throw _983;}
if(M.a===0){return(_980)(M);}else{M.e.push(M.v);
return(_980)(M);}};

var _928=function(M){M.e.splice(M.e.length-17,5);
M.e[M.e.length-13][36]=M.v;
M.e[M.e.length-13][37]=M.e[M.e.length-1];
M.e[M.e.length-13][38]=M.e[M.e.length-2];
M.e[M.e.length-13][39]=M.e[M.e.length-3];
M.e[M.e.length-13][40]=M.e[M.e.length-4];
M.e[M.e.length-13][41]=M.e[M.e.length-5];
M.e[M.e.length-13][42]=M.e[M.e.length-6];
M.e[M.e.length-13][43]=M.e[M.e.length-7];
M.e[M.e.length-13][44]=M.e[M.e.length-8];
M.e[M.e.length-13][45]=M.e[M.e.length-9];
M.e[M.e.length-13][46]=M.e[M.e.length-10];
M.e[M.e.length-13][47]=M.e[M.e.length-11];
M.e[M.e.length-13][48]=M.e[M.e.length-12];
M.e.length-=12;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _918=function(M){M.e.splice(M.e.length-13,5);
M.e[M.e.length-9][27]=M.v;
M.e[M.e.length-9][28]=M.e[M.e.length-1];
M.e[M.e.length-9][29]=M.e[M.e.length-2];
M.e[M.e.length-9][30]=M.e[M.e.length-3];
M.e[M.e.length-9][31]=M.e[M.e.length-4];
M.e[M.e.length-9][32]=M.e[M.e.length-5];
M.e[M.e.length-9][33]=M.e[M.e.length-6];
M.e[M.e.length-9][34]=M.e[M.e.length-7];
M.e[M.e.length-9][35]=M.e[M.e.length-8];
M.e.length-=8;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _908=function(M){M.e.splice(M.e.length-11,5);
M.e[M.e.length-7][20]=M.v;
M.e[M.e.length-7][21]=M.e[M.e.length-1];
M.e[M.e.length-7][22]=M.e[M.e.length-2];
M.e[M.e.length-7][23]=M.e[M.e.length-3];
M.e[M.e.length-7][24]=M.e[M.e.length-4];
M.e[M.e.length-7][25]=M.e[M.e.length-5];
M.e[M.e.length-7][26]=M.e[M.e.length-6];
M.e.length-=6;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_836.mvr=_835;
_839.mvr=_838;
_842.mvr=_841;
_844.mvr=_843;
_846.mvr=_845;
_856.mvr=_855;
_864.mvr=_863;
_866.mvr=_865;
_868.mvr=_867;
_874.mvr=_873;
_876.mvr=_875;
_878.mvr=_877;
_880.mvr=_879;
_882.mvr=_881;
_884.mvr=_883;
_890.mvr=_889;
_898.mvr=_897;
_910.mvr=_909;
_913.mvr=_912;
_906.mvr=_905;
_920.mvr=_919;
_923.mvr=_922;
_916.mvr=_915;
_930.mvr=_929;
_933.mvr=_932;
_926.mvr=_925;
_936.mvr=_935;
_940.mvr=_939;
_944.mvr=_943;
_946.mvr=_945;
_948.mvr=_947;
_950.mvr=_949;
_952.mvr=_951;
_954.mvr=_953;
_956.mvr=_955;
_958.mvr=_957;
_960.mvr=_959;
_962.mvr=_961;
_964.mvr=_963;
_966.mvr=_965;
_968.mvr=_967;
_970.mvr=_969;
_972.mvr=_971;
_974.mvr=_973;
_976.mvr=_975;
_982.mvr=_983;
_978.mvr=_977;
_993.mvr=_994;
_989.mvr=_988;
_413.mvr=_412;
var sym337=RT.makeSymbol("jogo");
var sym338=RT.makeSymbol("cano");
var sym343=RT.makeSymbol("game-over?");
var sym339=RT.makeSymbol("bird");
var sym341=RT.makeSymbol("score");
var sym340=RT.makeSymbol("canos");
var sym342=RT.makeSymbol("tempo-canos");
var sym346=RT.makeSymbol("baixo");
var sym345=RT.makeSymbol("cima");
var sym344=RT.makeSymbol("x");
var sym348=RT.makeSymbol("dy");
var sym347=RT.makeSymbol("y");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_997(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<MainModuleSource /home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<MainModuleSource /home/helio/codigo/helioh2.github.io/trabalhos-oficina/prototipos-professor/flappy.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/whalesong.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _1024=function(M){return(_998)(M);};

var _1000=function(M){if(--M.cbt<0){throw _1000;}
};

var _1022=function(M){if(--M.cbt<0){throw _1022;}
M.e.length-=(M.a-1);
return(_1023)(M);};

var _1023=function(M){if(--M.cbt<0){throw _1023;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/whalesong.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("*", M.primitives["*"]);ns.set("+", M.primitives["+"]);ns.set("-", M.primitives["-"]);ns.set("/", M.primitives["/"]);ns.set("<", M.primitives["<"]);ns.set("<=", M.primitives["<="]);ns.set("=", M.primitives["="]);ns.set(">", M.primitives[">"]);ns.set(">=", M.primitives[">="]);ns.set("abort-current-continuation", M.primitives["abort-current-continuation"]);ns.set("abs", M.primitives["abs"]);ns.set("acos", M.primitives["acos"]);ns.set("add-between", M.modules["whalesong/lang/list.rkt"].getExports().get("add-between"));ns.set("add1", M.primitives["add1"]);ns.set("andmap", M.modules["whalesong/lang/private/map.rkt"].getExports().get("andmap2"));ns.set("angle", M.primitives["angle"]);ns.set("append", M.primitives["append"]);ns.set("append*", M.modules["whalesong/lang/list.rkt"].getExports().get("append*"));ns.set("append-map", M.modules["whalesong/lang/list.rkt"].getExports().get("append-map"));ns.set("apply", M.primitives["apply"]);ns.set("argmax", M.modules["whalesong/lang/list.rkt"].getExports().get("argmax"));ns.set("argmin", M.modules["whalesong/lang/list.rkt"].getExports().get("argmin"));ns.set("asin", M.primitives["asin"]);ns.set("assf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assf"));ns.set("assoc", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assoc"));ns.set("assq", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assq"));ns.set("assv", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assv"));ns.set("atan", M.primitives["atan"]);ns.set("boolean=?", M.modules["whalesong/lang/bool.rkt"].getExports().get("boolean=?"));ns.set("boolean?", M.primitives["boolean?"]);ns.set("box", M.primitives["box"]);ns.set("box?", M.primitives["box?"]);ns.set("build-list", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-list"));ns.set("build-string", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-string"));ns.set("build-vector", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-vector"));ns.set("byte?", M.primitives["byte?"]);ns.set("caaaar", M.primitives["caaaar"]);ns.set("caaadr", M.primitives["caaadr"]);ns.set("caaar", M.primitives["caaar"]);ns.set("caadar", M.primitives["caadar"]);ns.set("caaddr", M.primitives["caaddr"]);ns.set("caadr", M.primitives["caadr"]);ns.set("caar", M.primitives["caar"]);ns.set("cadaar", M.primitives["cadaar"]);ns.set("cadadr", M.primitives["cadadr"]);ns.set("cadar", M.primitives["cadar"]);ns.set("caddar", M.primitives["caddar"]);ns.set("cadddr", M.primitives["cadddr"]);ns.set("caddr", M.primitives["caddr"]);ns.set("cadr", M.primitives["cadr"]);ns.set("call-with-continuation-prompt", M.primitives["call-with-continuation-prompt"]);ns.set("call-with-current-continuation", M.primitives["call-with-current-continuation"]);ns.set("call-with-escape-continuation", M.modules["whalesong/lang/private/call-ec.rkt"].getExports().get("call-with-escape-continuation"));ns.set("call-with-values", M.primitives["call-with-values"]);ns.set("call/cc", M.primitives["call/cc"]);ns.set("call/ec", M.modules["whalesong/lang/private/call-ec.rkt"].getExports().get("call/ec"));ns.set("car", M.primitives["car"]);ns.set("cdaaar", M.primitives["cdaaar"]);ns.set("cdaadr", M.primitives["cdaadr"]);ns.set("cdaar", M.primitives["cdaar"]);ns.set("cdadar", M.primitives["cdadar"]);ns.set("cdaddr", M.primitives["cdaddr"]);ns.set("cdadr", M.primitives["cdadr"]);ns.set("cdar", M.primitives["cdar"]);ns.set("cddaar", M.primitives["cddaar"]);ns.set("cddadr", M.primitives["cddadr"]);ns.set("cddar", M.primitives["cddar"]);ns.set("cdddar", M.primitives["cdddar"]);ns.set("cddddr", M.primitives["cddddr"]);ns.set("cdddr", M.primitives["cdddr"]);ns.set("cddr", M.primitives["cddr"]);ns.set("cdr", M.primitives["cdr"]);ns.set("ceiling", M.primitives["ceiling"]);ns.set("char->integer", M.primitives["char->integer"]);ns.set("char-alphabetic?", M.primitives["char-alphabetic?"]);ns.set("char-ci<=?", M.primitives["char-ci<=?"]);ns.set("char-ci<?", M.primitives["char-ci<?"]);ns.set("char-ci=?", M.primitives["char-ci=?"]);ns.set("char-ci>=?", M.primitives["char-ci>=?"]);ns.set("char-ci>?", M.primitives["char-ci>?"]);ns.set("char-downcase", M.primitives["char-downcase"]);ns.set("char-lower-case?", M.primitives["char-lower-case?"]);ns.set("char-numeric?", M.primitives["char-numeric?"]);ns.set("char-upcase", M.primitives["char-upcase"]);ns.set("char-upper-case?", M.primitives["char-upper-case?"]);ns.set("char-whitespace?", M.primitives["char-whitespace?"]);ns.set("char<=?", M.primitives["char<=?"]);ns.set("char<?", M.primitives["char<?"]);ns.set("char=?", M.primitives["char=?"]);ns.set("char>=?", M.primitives["char>=?"]);ns.set("char>?", M.primitives["char>?"]);ns.set("char?", M.primitives["char?"]);ns.set("complex?", M.primitives["complex?"]);ns.set("compose", M.modules["whalesong/lang/private/list.rkt"].getExports().get("compose"));ns.set("compose1", M.modules["whalesong/lang/private/list.rkt"].getExports().get("compose1"));ns.set("conjugate", M.primitives["conjugate"]);ns.set("cons", M.primitives["cons"]);ns.set("cons?", M.modules["whalesong/lang/list.rkt"].getExports().get("cons?"));ns.set("continuation-mark-set->list", M.primitives["continuation-mark-set->list"]);ns.set("continuation-prompt-available?", M.primitives["continuation-prompt-available?"]);ns.set("continuation-prompt-tag?", M.primitives["continuation-prompt-tag?"]);ns.set("cos", M.primitives["cos"]);ns.set("cosh", M.primitives["cosh"]);ns.set("count", M.modules["whalesong/lang/list.rkt"].getExports().get("count"));ns.set("current-continuation-marks", M.primitives["current-continuation-marks"]);ns.set("current-inexact-milliseconds", M.primitives["current-inexact-milliseconds"]);ns.set("current-output-port", M.primitives["current-output-port"]);ns.set("current-print", M.primitives["current-print"]);ns.set("current-print-mode", M.primitives["current-print-mode"]);ns.set("current-seconds", M.primitives["current-seconds"]);ns.set("default-continuation-prompt-tag", M.primitives["default-continuation-prompt-tag"]);ns.set("denominator", M.primitives["denominator"]);ns.set("display", M.primitives["display"]);ns.set("displayln", M.primitives["displayln"]);ns.set("drop", M.modules["whalesong/lang/list.rkt"].getExports().get("drop"));ns.set("drop-right", M.modules["whalesong/lang/list.rkt"].getExports().get("drop-right"));ns.set("e", M.primitives["e"]);ns.set("eighth", M.modules["whalesong/lang/list.rkt"].getExports().get("eighth"));ns.set("empty", M.modules["whalesong/lang/list.rkt"].getExports().get("empty"));ns.set("empty?", M.modules["whalesong/lang/list.rkt"].getExports().get("empty?"));ns.set("eof", M.primitives["eof"]);ns.set("eof-object?", M.primitives["eof-object?"]);ns.set("eq?", M.primitives["eq?"]);ns.set("equal-hash-code", M.primitives["equal-hash-code"]);ns.set("equal?", M.primitives["equal?"]);ns.set("eqv?", M.primitives["eqv?"]);ns.set("error", M.primitives["error"]);ns.set("even?", M.primitives["even?"]);ns.set("exact->inexact", M.primitives["exact->inexact"]);ns.set("exact-integer?", M.primitives["exact-integer?"]);ns.set("exact-nonnegative-integer?", M.primitives["exact-nonnegative-integer?"]);ns.set("exact?", M.primitives["exact?"]);ns.set("exn-continuation-marks", M.primitives["exn-continuation-marks"]);ns.set("exn-message", M.primitives["exn-message"]);ns.set("exn:fail:contract:arity?", M.primitives["exn:fail:contract:arity?"]);ns.set("exn:fail:contract?", M.primitives["exn:fail:contract?"]);ns.set("exn:fail?", M.primitives["exn:fail?"]);ns.set("exp", M.primitives["exp"]);ns.set("expt", M.primitives["expt"]);ns.set("false", M.modules["whalesong/lang/bool.rkt"].getExports().get("false"));ns.set("false?", M.modules["whalesong/lang/bool.rkt"].getExports().get("false?"));ns.set("fifth", M.modules["whalesong/lang/list.rkt"].getExports().get("fifth"));ns.set("filter", M.modules["whalesong/lang/private/list.rkt"].getExports().get("filter"));ns.set("filter-map", M.modules["whalesong/lang/list.rkt"].getExports().get("filter-map"));ns.set("filter-not", M.modules["whalesong/lang/list.rkt"].getExports().get("filter-not"));ns.set("findf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("findf"));ns.set("first", M.modules["whalesong/lang/list.rkt"].getExports().get("first"));ns.set("flatten", M.modules["whalesong/lang/list.rkt"].getExports().get("flatten"));ns.set("floor", M.primitives["floor"]);ns.set("foldl", M.modules["whalesong/lang/private/list.rkt"].getExports().get("foldl"));ns.set("foldr", M.modules["whalesong/lang/private/list.rkt"].getExports().get("foldr"));ns.set("for-each", M.modules["whalesong/lang/private/map.rkt"].getExports().get("for-each2"));ns.set("format", M.primitives["format"]);ns.set("fourth", M.modules["whalesong/lang/list.rkt"].getExports().get("fourth"));ns.set("fprintf", M.primitives["fprintf"]);ns.set("gcd", M.primitives["gcd"]);ns.set("gensym", M.primitives["gensym"]);ns.set("hash", M.primitives["hash"]);ns.set("hash-copy", M.primitives["hash-copy"]);ns.set("hash-count", M.primitives["hash-count"]);ns.set("hash-eq?", M.primitives["hash-eq?"]);ns.set("hash-equal?", M.primitives["hash-equal?"]);ns.set("hash-eqv?", M.primitives["hash-eqv?"]);ns.set("hash-for-each", M.modules["whalesong/lang/private/hash.rkt"].getExports().get("hash-for-each"));ns.set("hash-has-key?", M.primitives["hash-has-key?"]);ns.set("hash-keys", M.primitives["hash-keys"]);ns.set("hash-map", M.modules["whalesong/lang/private/hash.rkt"].getExports().get("hash-map"));ns.set("hash-ref", M.primitives["hash-ref"]);ns.set("hash-remove", M.primitives["hash-remove"]);ns.set("hash-remove!", M.primitives["hash-remove!"]);ns.set("hash-set", M.primitives["hash-set"]);ns.set("hash-set!", M.primitives["hash-set!"]);ns.set("hash-values", M.primitives["hash-values"]);ns.set("hash?", M.primitives["hash?"]);ns.set("hasheq", M.primitives["hasheq"]);ns.set("hasheqv", M.primitives["hasheqv"]);ns.set("imag-part", M.primitives["imag-part"]);ns.set("inexact->exact", M.primitives["inexact->exact"]);ns.set("inexact?", M.primitives["inexact?"]);ns.set("integer->char", M.primitives["integer->char"]);ns.set("integer-sqrt", M.primitives["integer-sqrt"]);ns.set("integer?", M.primitives["integer?"]);ns.set("last", M.modules["whalesong/lang/list.rkt"].getExports().get("last"));ns.set("last-pair", M.modules["whalesong/lang/list.rkt"].getExports().get("last-pair"));ns.set("lcm", M.primitives["lcm"]);ns.set("length", M.primitives["length"]);ns.set("list", M.primitives["list"]);ns.set("list*", M.primitives["list*"]);ns.set("list->string", M.primitives["list->string"]);ns.set("list->vector", M.primitives["list->vector"]);ns.set("list-ref", M.primitives["list-ref"]);ns.set("list?", M.primitives["list?"]);ns.set("log", M.primitives["log"]);ns.set("magnitude", M.primitives["magnitude"]);ns.set("make-continuation-prompt-tag", M.primitives["make-continuation-prompt-tag"]);ns.set("make-exn", M.primitives["make-exn"]);ns.set("make-exn:fail", M.primitives["make-exn:fail"]);ns.set("make-exn:fail:contract", M.primitives["make-exn:fail:contract"]);ns.set("make-exn:fail:contract:arity", M.primitives["make-exn:fail:contract:arity"]);ns.set("make-exn:fail:contract:divide-by-zero", M.primitives["make-exn:fail:contract:divide-by-zero"]);ns.set("make-exn:fail:contract:variable", M.primitives["make-exn:fail:contract:variable"]);ns.set("make-hash", M.primitives["make-hash"]);ns.set("make-hasheq", M.primitives["make-hasheq"]);ns.set("make-hasheqv", M.primitives["make-hasheqv"]);ns.set("make-immutable-hash", M.primitives["make-immutable-hash"]);ns.set("make-immutable-hasheq", M.primitives["make-immutable-hasheq"]);ns.set("make-immutable-hasheqv", M.primitives["make-immutable-hasheqv"]);ns.set("make-list", M.modules["whalesong/lang/list.rkt"].getExports().get("make-list"));ns.set("make-placeholder", M.primitives["make-placeholder"]);ns.set("make-polar", M.primitives["make-polar"]);ns.set("make-posn", M.modules["whalesong/lang/posn.rkt"].getExports().get("make-posn"));ns.set("make-reader-graph", M.primitives["make-reader-graph"]);ns.set("make-rectangular", M.primitives["make-rectangular"]);ns.set("make-srcloc", M.primitives["make-srcloc"]);ns.set("make-string", M.primitives["make-string"]);ns.set("make-struct-field-accessor", M.primitives["make-struct-field-accessor"]);ns.set("make-struct-field-mutator", M.primitives["make-struct-field-mutator"]);ns.set("make-struct-type", M.primitives["make-struct-type"]);ns.set("make-vector", M.primitives["make-vector"]);ns.set("map", M.modules["whalesong/lang/private/map.rkt"].getExports().get("map2"));ns.set("max", M.primitives["max"]);ns.set("member", M.primitives["member"]);ns.set("memf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("memf"));ns.set("memq", M.primitives["memq"]);ns.set("memv", M.primitives["memv"]);ns.set("min", M.primitives["min"]);ns.set("modulo", M.primitives["modulo"]);ns.set("negative?", M.primitives["negative?"]);ns.set("newline", M.primitives["newline"]);ns.set("ninth", M.modules["whalesong/lang/list.rkt"].getExports().get("ninth"));ns.set("not", M.primitives["not"]);ns.set("null", M.primitives["null"]);ns.set("null?", M.primitives["null?"]);ns.set("number->string", M.primitives["number->string"]);ns.set("number?", M.primitives["number?"]);ns.set("numerator", M.primitives["numerator"]);ns.set("odd?", M.primitives["odd?"]);ns.set("ormap", M.modules["whalesong/lang/private/map.rkt"].getExports().get("ormap2"));ns.set("pair?", M.primitives["pair?"]);ns.set("partition", M.modules["whalesong/lang/list.rkt"].getExports().get("partition"));ns.set("pi", M.primitives["pi"]);ns.set("placeholder-set!", M.primitives["placeholder-set!"]);ns.set("positive?", M.primitives["positive?"]);ns.set("posn-x", M.modules["whalesong/lang/posn.rkt"].getExports().get("posn-x"));ns.set("posn-y", M.modules["whalesong/lang/posn.rkt"].getExports().get("posn-y"));ns.set("posn?", M.modules["whalesong/lang/posn.rkt"].getExports().get("posn?"));ns.set("printf", M.primitives["printf"]);ns.set("procedure-arity", M.primitives["procedure-arity"]);ns.set("procedure-arity-includes?", M.primitives["procedure-arity-includes?"]);ns.set("procedure-rename", M.primitives["procedure-rename"]);ns.set("procedure?", M.primitives["procedure?"]);ns.set("prop:exn:srclocs", M.primitives["prop:exn:srclocs"]);ns.set("quotient", M.primitives["quotient"]);ns.set("raise", M.primitives["raise"]);ns.set("raise-mismatch-error", M.primitives["raise-mismatch-error"]);ns.set("raise-type-error", M.primitives["raise-type-error"]);ns.set("random", M.primitives["random"]);ns.set("rational?", M.primitives["rational?"]);ns.set("read-byte", M.primitives["read-byte"]);ns.set("real-part", M.primitives["real-part"]);ns.set("real?", M.primitives["real?"]);ns.set("remainder", M.primitives["remainder"]);ns.set("remove", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remove"));ns.set("remove*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remove*"));ns.set("remq", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remq"));ns.set("remq*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remq*"));ns.set("remv", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remv"));ns.set("remv*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remv*"));ns.set("rest", M.modules["whalesong/lang/list.rkt"].getExports().get("rest"));ns.set("reverse", M.primitives["reverse"]);ns.set("round", M.primitives["round"]);ns.set("second", M.modules["whalesong/lang/list.rkt"].getExports().get("second"));ns.set("set-box!", M.primitives["set-box!"]);ns.set("set-car!", M.primitives["set-car!"]);ns.set("set-cdr!", M.primitives["set-cdr!"]);ns.set("set-posn-x!", M.modules["whalesong/lang/posn.rkt"].getExports().get("set-posn-x!"));ns.set("set-posn-y!", M.modules["whalesong/lang/posn.rkt"].getExports().get("set-posn-y!"));ns.set("seventh", M.modules["whalesong/lang/list.rkt"].getExports().get("seventh"));ns.set("sgn", M.primitives["sgn"]);ns.set("sin", M.primitives["sin"]);ns.set("sinh", M.primitives["sinh"]);ns.set("sixth", M.modules["whalesong/lang/list.rkt"].getExports().get("sixth"));ns.set("split-at", M.modules["whalesong/lang/list.rkt"].getExports().get("split-at"));ns.set("split-at-right", M.modules["whalesong/lang/list.rkt"].getExports().get("split-at-right"));ns.set("sqr", M.primitives["sqr"]);ns.set("sqrt", M.primitives["sqrt"]);ns.set("srcloc-column", M.primitives["srcloc-column"]);ns.set("srcloc-line", M.primitives["srcloc-line"]);ns.set("srcloc-position", M.primitives["srcloc-position"]);ns.set("srcloc-source", M.primitives["srcloc-source"]);ns.set("srcloc-span", M.primitives["srcloc-span"]);ns.set("srcloc?", M.primitives["srcloc?"]);ns.set("string", M.primitives["string"]);ns.set("string->list", M.primitives["string->list"]);ns.set("string->number", M.primitives["string->number"]);ns.set("string->symbol", M.primitives["string->symbol"]);ns.set("string-append", M.primitives["string-append"]);ns.set("string-ci<=?", M.primitives["string-ci<=?"]);ns.set("string-ci<?", M.primitives["string-ci<?"]);ns.set("string-ci=?", M.primitives["string-ci=?"]);ns.set("string-ci>=?", M.primitives["string-ci>=?"]);ns.set("string-ci>?", M.primitives["string-ci>?"]);ns.set("string-copy", M.primitives["string-copy"]);ns.set("string-length", M.primitives["string-length"]);ns.set("string-ref", M.primitives["string-ref"]);ns.set("string-set!", M.primitives["string-set!"]);ns.set("string<=?", M.primitives["string<=?"]);ns.set("string<?", M.primitives["string<?"]);ns.set("string=?", M.primitives["string=?"]);ns.set("string>=?", M.primitives["string>=?"]);ns.set("string>?", M.primitives["string>?"]);ns.set("string?", M.primitives["string?"]);ns.set("struct-type?", M.primitives["struct-type?"]);ns.set("struct:exn:fail", M.primitives["struct:exn:fail"]);ns.set("struct:posn", M.modules["whalesong/lang/posn.rkt"].getExports().get("struct:posn"));ns.set("struct?", M.primitives["struct?"]);ns.set("sub1", M.primitives["sub1"]);ns.set("substring", M.primitives["substring"]);ns.set("symbol->string", M.primitives["symbol->string"]);ns.set("symbol=?", M.modules["whalesong/lang/bool.rkt"].getExports().get("symbol=?"));ns.set("symbol?", M.primitives["symbol?"]);ns.set("take", M.modules["whalesong/lang/list.rkt"].getExports().get("take"));ns.set("take-right", M.modules["whalesong/lang/list.rkt"].getExports().get("take-right"));ns.set("tan", M.primitives["tan"]);ns.set("tenth", M.modules["whalesong/lang/list.rkt"].getExports().get("tenth"));ns.set("third", M.modules["whalesong/lang/list.rkt"].getExports().get("third"));ns.set("true", M.modules["whalesong/lang/bool.rkt"].getExports().get("true"));ns.set("truncate", M.primitives["truncate"]);ns.set("unbox", M.primitives["unbox"]);ns.set("values", M.primitives["values"]);ns.set("vector", M.primitives["vector"]);ns.set("vector->list", M.primitives["vector->list"]);ns.set("vector-length", M.primitives["vector-length"]);ns.set("vector-ref", M.primitives["vector-ref"]);ns.set("vector-set!", M.primitives["vector-set!"]);ns.set("vector?", M.primitives["vector?"]);ns.set("void", M.primitives["void"]);ns.set("void?", M.primitives["void?"]);ns.set("write", M.primitives["write"]);ns.set("write-byte", M.primitives["write-byte"]);ns.set("zero?", M.primitives["zero?"]);}(M.modules["whalesong/lang/whalesong.rkt"],M.modules["whalesong/lang/whalesong.rkt"].getExports(),M.modules["whalesong/lang/whalesong.rkt"].getExternalExports(),M.modules["whalesong/lang/whalesong.rkt"].prefix));
return(M.p)(M);};

var _1021=function(M){if(M.modules["whalesong/lang/posn.rkt"].isInvoked!==false){return(_1023)(M);}else{M.c.push(new RT.CallFrame(_1023,M.p));
return(M.modules["whalesong/lang/posn.rkt"].label)(M);}};

var _1019=function(M){if(--M.cbt<0){throw _1019;}
M.e.length-=(M.a-1);
return(_1020)(M);};

var _1020=function(M){if(--M.cbt<0){throw _1020;}
if((M.installedModules["whalesong/lang/posn.rkt"]!==void(0)&&M.modules["whalesong/lang/posn.rkt"]!==undefined)!==false){return(_1021)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/posn.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1021);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1021)(M);}};

var _1018=function(M){if(M.modules["whalesong/lang/bool.rkt"].isInvoked!==false){return(_1020)(M);}else{M.c.push(new RT.CallFrame(_1020,M.p));
return(M.modules["whalesong/lang/bool.rkt"].label)(M);}};

var _1016=function(M){if(--M.cbt<0){throw _1016;}
M.e.length-=(M.a-1);
return(_1017)(M);};

var _1017=function(M){if(--M.cbt<0){throw _1017;}
if((M.installedModules["whalesong/lang/bool.rkt"]!==void(0)&&M.modules["whalesong/lang/bool.rkt"]!==undefined)!==false){return(_1018)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/bool.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1018);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1018)(M);}};

var _1015=function(M){if(M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked!==false){return(_1017)(M);}else{M.c.push(new RT.CallFrame(_1017,M.p));
return(M.modules["whalesong/lang/check-expect/check-expect.rkt"].label)(M);}};

var _1013=function(M){if(--M.cbt<0){throw _1013;}
M.e.length-=(M.a-1);
return(_1014)(M);};

var _1014=function(M){if(--M.cbt<0){throw _1014;}
if((M.installedModules["whalesong/lang/check-expect/check-expect.rkt"]!==void(0)&&M.modules["whalesong/lang/check-expect/check-expect.rkt"]!==undefined)!==false){return(_1015)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/check-expect/check-expect.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1015);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1015)(M);}};

var _1012=function(M){if(M.modules["whalesong/lang/private/call-ec.rkt"].isInvoked!==false){return(_1014)(M);}else{M.c.push(new RT.CallFrame(_1014,M.p));
return(M.modules["whalesong/lang/private/call-ec.rkt"].label)(M);}};

var _1010=function(M){if(--M.cbt<0){throw _1010;}
M.e.length-=(M.a-1);
return(_1011)(M);};

var _1011=function(M){if(--M.cbt<0){throw _1011;}
if((M.installedModules["whalesong/lang/private/call-ec.rkt"]!==void(0)&&M.modules["whalesong/lang/private/call-ec.rkt"]!==undefined)!==false){return(_1012)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/call-ec.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1012);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1012)(M);}};

var _1009=function(M){if(M.modules["whalesong/lang/private/shared.rkt"].isInvoked!==false){return(_1011)(M);}else{M.c.push(new RT.CallFrame(_1011,M.p));
return(M.modules["whalesong/lang/private/shared.rkt"].label)(M);}};

var _1007=function(M){if(--M.cbt<0){throw _1007;}
M.e.length-=(M.a-1);
return(_1008)(M);};

var _1008=function(M){if(--M.cbt<0){throw _1008;}
if((M.installedModules["whalesong/lang/private/shared.rkt"]!==void(0)&&M.modules["whalesong/lang/private/shared.rkt"]!==undefined)!==false){return(_1009)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/shared.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1009);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1009)(M);}};

var _1006=function(M){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_1008)(M);}else{M.c.push(new RT.CallFrame(_1008,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _1004=function(M){if(--M.cbt<0){throw _1004;}
M.e.length-=(M.a-1);
return(_1005)(M);};

var _1005=function(M){if(--M.cbt<0){throw _1005;}
if((M.installedModules["whalesong/lang/private/traced-app.rkt"]!==void(0)&&M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){return(_1006)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/traced-app.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1006);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1006)(M);}};

var _1003=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_1005)(M);}else{M.c.push(new RT.CallFrame(_1005,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _1001=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1002=function(M){M.modules["whalesong/lang/whalesong.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_1003)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1003);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1003)(M);}};

var _999=function(M){if(--M.cbt<0){throw _999;}
M.e.length-=(M.a-1);
return(_1000)(M);};

var _998=function(M){M.c.push(new RT.CallFrame(_1000,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/whalesong.rkt"]=function(){return new RT.ModuleRecord("whalesong",_1002);}
return(_1001)(M);};

_1005.mvr=_1004;
_1008.mvr=_1007;
_1011.mvr=_1010;
_1014.mvr=_1013;
_1017.mvr=_1016;
_1020.mvr=_1019;
_1023.mvr=_1022;
_1000.mvr=_999;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_1024(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/whalesong.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/whalesong.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/base.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _1039=function(M){if(M.modules["whalesong/lang/private/call-ec.rkt"].isInvoked!==false){return(_1041)(M);}else{M.c.push(new RT.CallFrame(_1041,M.p));
return(M.modules["whalesong/lang/private/call-ec.rkt"].label)(M);}};

var _1037=function(M){if(--M.cbt<0){throw _1037;}
M.e.length-=(M.a-1);
return(_1038)(M);};

var _1038=function(M){if(--M.cbt<0){throw _1038;}
if((M.installedModules["whalesong/lang/private/call-ec.rkt"]!==void(0)&&M.modules["whalesong/lang/private/call-ec.rkt"]!==undefined)!==false){return(_1039)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/call-ec.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1039);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1039)(M);}};

var _1036=function(M){if(M.modules["whalesong/lang/private/hash.rkt"].isInvoked!==false){return(_1038)(M);}else{M.c.push(new RT.CallFrame(_1038,M.p));
return(M.modules["whalesong/lang/private/hash.rkt"].label)(M);}};

var _1034=function(M){if(--M.cbt<0){throw _1034;}
M.e.length-=(M.a-1);
return(_1035)(M);};

var _1035=function(M){if(--M.cbt<0){throw _1035;}
if((M.installedModules["whalesong/lang/private/hash.rkt"]!==void(0)&&M.modules["whalesong/lang/private/hash.rkt"]!==undefined)!==false){return(_1036)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/hash.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1036);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1036)(M);}};

var _1033=function(M){if(M.modules["whalesong/lang/private/map.rkt"].isInvoked!==false){return(_1035)(M);}else{M.c.push(new RT.CallFrame(_1035,M.p));
return(M.modules["whalesong/lang/private/map.rkt"].label)(M);}};

var _1031=function(M){if(--M.cbt<0){throw _1031;}
M.e.length-=(M.a-1);
return(_1032)(M);};

var _1032=function(M){if(--M.cbt<0){throw _1032;}
if((M.installedModules["whalesong/lang/private/map.rkt"]!==void(0)&&M.modules["whalesong/lang/private/map.rkt"]!==undefined)!==false){return(_1033)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/map.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1033);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1033)(M);}};

var _1030=function(M){if(M.modules["whalesong/lang/private/list.rkt"].isInvoked!==false){return(_1032)(M);}else{M.c.push(new RT.CallFrame(_1032,M.p));
return(M.modules["whalesong/lang/private/list.rkt"].label)(M);}};

var _1028=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1029=function(M){M.modules["whalesong/lang/base.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/private/list.rkt"]!==void(0)&&M.modules["whalesong/lang/private/list.rkt"]!==undefined)!==false){return(_1030)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/list.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1030);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1030)(M);}};

var _1026=function(M){if(--M.cbt<0){throw _1026;}
M.e.length-=(M.a-1);
return(_1027)(M);};

var _1025=function(M){M.c.push(new RT.CallFrame(_1027,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/base.rkt"]=function(){return new RT.ModuleRecord("base",_1029);}
return(_1028)(M);};

var _1054=function(M){return(_1025)(M);};

var _1027=function(M){if(--M.cbt<0){throw _1027;}
};

var _1052=function(M){if(--M.cbt<0){throw _1052;}
M.e.length-=(M.a-1);
return(_1053)(M);};

var _1053=function(M){if(--M.cbt<0){throw _1053;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/lang/base.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("*", M.primitives["*"]);ns.set("+", M.primitives["+"]);ns.set("-", M.primitives["-"]);ns.set("/", M.primitives["/"]);ns.set("<", M.primitives["<"]);ns.set("<=", M.primitives["<="]);ns.set("=", M.primitives["="]);ns.set(">", M.primitives[">"]);ns.set(">=", M.primitives[">="]);ns.set("abort-current-continuation", M.primitives["abort-current-continuation"]);ns.set("abs", M.primitives["abs"]);ns.set("acos", M.primitives["acos"]);ns.set("add-between", M.modules["whalesong/lang/list.rkt"].getExports().get("add-between"));ns.set("add1", M.primitives["add1"]);ns.set("andmap", M.modules["whalesong/lang/private/map.rkt"].getExports().get("andmap2"));ns.set("angle", M.primitives["angle"]);ns.set("append", M.primitives["append"]);ns.set("append*", M.modules["whalesong/lang/list.rkt"].getExports().get("append*"));ns.set("append-map", M.modules["whalesong/lang/list.rkt"].getExports().get("append-map"));ns.set("apply", M.primitives["apply"]);ns.set("argmax", M.modules["whalesong/lang/list.rkt"].getExports().get("argmax"));ns.set("argmin", M.modules["whalesong/lang/list.rkt"].getExports().get("argmin"));ns.set("asin", M.primitives["asin"]);ns.set("assf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assf"));ns.set("assoc", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assoc"));ns.set("assq", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assq"));ns.set("assv", M.modules["whalesong/lang/private/list.rkt"].getExports().get("assv"));ns.set("atan", M.primitives["atan"]);ns.set("boolean?", M.primitives["boolean?"]);ns.set("box", M.primitives["box"]);ns.set("box?", M.primitives["box?"]);ns.set("build-list", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-list"));ns.set("build-string", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-string"));ns.set("build-vector", M.modules["whalesong/lang/private/list.rkt"].getExports().get("build-vector"));ns.set("byte?", M.primitives["byte?"]);ns.set("caaaar", M.primitives["caaaar"]);ns.set("caaadr", M.primitives["caaadr"]);ns.set("caaar", M.primitives["caaar"]);ns.set("caadar", M.primitives["caadar"]);ns.set("caaddr", M.primitives["caaddr"]);ns.set("caadr", M.primitives["caadr"]);ns.set("caar", M.primitives["caar"]);ns.set("cadaar", M.primitives["cadaar"]);ns.set("cadadr", M.primitives["cadadr"]);ns.set("cadar", M.primitives["cadar"]);ns.set("caddar", M.primitives["caddar"]);ns.set("cadddr", M.primitives["cadddr"]);ns.set("caddr", M.primitives["caddr"]);ns.set("cadr", M.primitives["cadr"]);ns.set("call-with-continuation-prompt", M.primitives["call-with-continuation-prompt"]);ns.set("call-with-current-continuation", M.primitives["call-with-current-continuation"]);ns.set("call-with-escape-continuation", M.modules["whalesong/lang/private/call-ec.rkt"].getExports().get("call-with-escape-continuation"));ns.set("call-with-values", M.primitives["call-with-values"]);ns.set("call/cc", M.primitives["call/cc"]);ns.set("call/ec", M.modules["whalesong/lang/private/call-ec.rkt"].getExports().get("call/ec"));ns.set("car", M.primitives["car"]);ns.set("cdaaar", M.primitives["cdaaar"]);ns.set("cdaadr", M.primitives["cdaadr"]);ns.set("cdaar", M.primitives["cdaar"]);ns.set("cdadar", M.primitives["cdadar"]);ns.set("cdaddr", M.primitives["cdaddr"]);ns.set("cdadr", M.primitives["cdadr"]);ns.set("cdar", M.primitives["cdar"]);ns.set("cddaar", M.primitives["cddaar"]);ns.set("cddadr", M.primitives["cddadr"]);ns.set("cddar", M.primitives["cddar"]);ns.set("cdddar", M.primitives["cdddar"]);ns.set("cddddr", M.primitives["cddddr"]);ns.set("cdddr", M.primitives["cdddr"]);ns.set("cddr", M.primitives["cddr"]);ns.set("cdr", M.primitives["cdr"]);ns.set("ceiling", M.primitives["ceiling"]);ns.set("char->integer", M.primitives["char->integer"]);ns.set("char-alphabetic?", M.primitives["char-alphabetic?"]);ns.set("char-ci<=?", M.primitives["char-ci<=?"]);ns.set("char-ci<?", M.primitives["char-ci<?"]);ns.set("char-ci=?", M.primitives["char-ci=?"]);ns.set("char-ci>=?", M.primitives["char-ci>=?"]);ns.set("char-ci>?", M.primitives["char-ci>?"]);ns.set("char-downcase", M.primitives["char-downcase"]);ns.set("char-lower-case?", M.primitives["char-lower-case?"]);ns.set("char-numeric?", M.primitives["char-numeric?"]);ns.set("char-upcase", M.primitives["char-upcase"]);ns.set("char-upper-case?", M.primitives["char-upper-case?"]);ns.set("char-whitespace?", M.primitives["char-whitespace?"]);ns.set("char<=?", M.primitives["char<=?"]);ns.set("char<?", M.primitives["char<?"]);ns.set("char=?", M.primitives["char=?"]);ns.set("char>=?", M.primitives["char>=?"]);ns.set("char>?", M.primitives["char>?"]);ns.set("char?", M.primitives["char?"]);ns.set("complex?", M.primitives["complex?"]);ns.set("compose", M.modules["whalesong/lang/private/list.rkt"].getExports().get("compose"));ns.set("compose1", M.modules["whalesong/lang/private/list.rkt"].getExports().get("compose1"));ns.set("conjugate", M.primitives["conjugate"]);ns.set("cons", M.primitives["cons"]);ns.set("cons?", M.modules["whalesong/lang/list.rkt"].getExports().get("cons?"));ns.set("continuation-mark-set->list", M.primitives["continuation-mark-set->list"]);ns.set("continuation-prompt-available?", M.primitives["continuation-prompt-available?"]);ns.set("continuation-prompt-tag?", M.primitives["continuation-prompt-tag?"]);ns.set("cos", M.primitives["cos"]);ns.set("cosh", M.primitives["cosh"]);ns.set("count", M.modules["whalesong/lang/list.rkt"].getExports().get("count"));ns.set("current-continuation-marks", M.primitives["current-continuation-marks"]);ns.set("current-inexact-milliseconds", M.primitives["current-inexact-milliseconds"]);ns.set("current-output-port", M.primitives["current-output-port"]);ns.set("current-print", M.primitives["current-print"]);ns.set("current-print-mode", M.primitives["current-print-mode"]);ns.set("current-seconds", M.primitives["current-seconds"]);ns.set("default-continuation-prompt-tag", M.primitives["default-continuation-prompt-tag"]);ns.set("denominator", M.primitives["denominator"]);ns.set("display", M.primitives["display"]);ns.set("displayln", M.primitives["displayln"]);ns.set("drop", M.modules["whalesong/lang/list.rkt"].getExports().get("drop"));ns.set("drop-right", M.modules["whalesong/lang/list.rkt"].getExports().get("drop-right"));ns.set("e", M.primitives["e"]);ns.set("eighth", M.modules["whalesong/lang/list.rkt"].getExports().get("eighth"));ns.set("empty", M.modules["whalesong/lang/list.rkt"].getExports().get("empty"));ns.set("empty?", M.modules["whalesong/lang/list.rkt"].getExports().get("empty?"));ns.set("eof", M.primitives["eof"]);ns.set("eof-object?", M.primitives["eof-object?"]);ns.set("eq?", M.primitives["eq?"]);ns.set("equal-hash-code", M.primitives["equal-hash-code"]);ns.set("equal?", M.primitives["equal?"]);ns.set("eqv?", M.primitives["eqv?"]);ns.set("error", M.primitives["error"]);ns.set("even?", M.primitives["even?"]);ns.set("exact->inexact", M.primitives["exact->inexact"]);ns.set("exact-integer?", M.primitives["exact-integer?"]);ns.set("exact-nonnegative-integer?", M.primitives["exact-nonnegative-integer?"]);ns.set("exact?", M.primitives["exact?"]);ns.set("exn-continuation-marks", M.primitives["exn-continuation-marks"]);ns.set("exn-message", M.primitives["exn-message"]);ns.set("exn:fail:contract:arity?", M.primitives["exn:fail:contract:arity?"]);ns.set("exn:fail:contract?", M.primitives["exn:fail:contract?"]);ns.set("exn:fail?", M.primitives["exn:fail?"]);ns.set("exp", M.primitives["exp"]);ns.set("expt", M.primitives["expt"]);ns.set("fifth", M.modules["whalesong/lang/list.rkt"].getExports().get("fifth"));ns.set("filter", M.modules["whalesong/lang/private/list.rkt"].getExports().get("filter"));ns.set("filter-map", M.modules["whalesong/lang/list.rkt"].getExports().get("filter-map"));ns.set("filter-not", M.modules["whalesong/lang/list.rkt"].getExports().get("filter-not"));ns.set("findf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("findf"));ns.set("first", M.modules["whalesong/lang/list.rkt"].getExports().get("first"));ns.set("flatten", M.modules["whalesong/lang/list.rkt"].getExports().get("flatten"));ns.set("floor", M.primitives["floor"]);ns.set("foldl", M.modules["whalesong/lang/private/list.rkt"].getExports().get("foldl"));ns.set("foldr", M.modules["whalesong/lang/private/list.rkt"].getExports().get("foldr"));ns.set("for-each", M.modules["whalesong/lang/private/map.rkt"].getExports().get("for-each2"));ns.set("format", M.primitives["format"]);ns.set("fourth", M.modules["whalesong/lang/list.rkt"].getExports().get("fourth"));ns.set("fprintf", M.primitives["fprintf"]);ns.set("gcd", M.primitives["gcd"]);ns.set("gensym", M.primitives["gensym"]);ns.set("hash", M.primitives["hash"]);ns.set("hash-copy", M.primitives["hash-copy"]);ns.set("hash-count", M.primitives["hash-count"]);ns.set("hash-eq?", M.primitives["hash-eq?"]);ns.set("hash-equal?", M.primitives["hash-equal?"]);ns.set("hash-eqv?", M.primitives["hash-eqv?"]);ns.set("hash-for-each", M.modules["whalesong/lang/private/hash.rkt"].getExports().get("hash-for-each"));ns.set("hash-has-key?", M.primitives["hash-has-key?"]);ns.set("hash-keys", M.primitives["hash-keys"]);ns.set("hash-map", M.modules["whalesong/lang/private/hash.rkt"].getExports().get("hash-map"));ns.set("hash-ref", M.primitives["hash-ref"]);ns.set("hash-remove", M.primitives["hash-remove"]);ns.set("hash-remove!", M.primitives["hash-remove!"]);ns.set("hash-set", M.primitives["hash-set"]);ns.set("hash-set!", M.primitives["hash-set!"]);ns.set("hash-values", M.primitives["hash-values"]);ns.set("hash?", M.primitives["hash?"]);ns.set("hasheq", M.primitives["hasheq"]);ns.set("hasheqv", M.primitives["hasheqv"]);ns.set("imag-part", M.primitives["imag-part"]);ns.set("inexact->exact", M.primitives["inexact->exact"]);ns.set("inexact?", M.primitives["inexact?"]);ns.set("integer->char", M.primitives["integer->char"]);ns.set("integer-sqrt", M.primitives["integer-sqrt"]);ns.set("integer?", M.primitives["integer?"]);ns.set("last", M.modules["whalesong/lang/list.rkt"].getExports().get("last"));ns.set("last-pair", M.modules["whalesong/lang/list.rkt"].getExports().get("last-pair"));ns.set("lcm", M.primitives["lcm"]);ns.set("length", M.primitives["length"]);ns.set("list", M.primitives["list"]);ns.set("list*", M.primitives["list*"]);ns.set("list->string", M.primitives["list->string"]);ns.set("list->vector", M.primitives["list->vector"]);ns.set("list-ref", M.primitives["list-ref"]);ns.set("list?", M.primitives["list?"]);ns.set("log", M.primitives["log"]);ns.set("magnitude", M.primitives["magnitude"]);ns.set("make-continuation-prompt-tag", M.primitives["make-continuation-prompt-tag"]);ns.set("make-exn", M.primitives["make-exn"]);ns.set("make-exn:fail", M.primitives["make-exn:fail"]);ns.set("make-exn:fail:contract", M.primitives["make-exn:fail:contract"]);ns.set("make-exn:fail:contract:arity", M.primitives["make-exn:fail:contract:arity"]);ns.set("make-exn:fail:contract:divide-by-zero", M.primitives["make-exn:fail:contract:divide-by-zero"]);ns.set("make-exn:fail:contract:variable", M.primitives["make-exn:fail:contract:variable"]);ns.set("make-hash", M.primitives["make-hash"]);ns.set("make-hasheq", M.primitives["make-hasheq"]);ns.set("make-hasheqv", M.primitives["make-hasheqv"]);ns.set("make-immutable-hash", M.primitives["make-immutable-hash"]);ns.set("make-immutable-hasheq", M.primitives["make-immutable-hasheq"]);ns.set("make-immutable-hasheqv", M.primitives["make-immutable-hasheqv"]);ns.set("make-list", M.modules["whalesong/lang/list.rkt"].getExports().get("make-list"));ns.set("make-placeholder", M.primitives["make-placeholder"]);ns.set("make-polar", M.primitives["make-polar"]);ns.set("make-reader-graph", M.primitives["make-reader-graph"]);ns.set("make-rectangular", M.primitives["make-rectangular"]);ns.set("make-srcloc", M.primitives["make-srcloc"]);ns.set("make-string", M.primitives["make-string"]);ns.set("make-struct-field-accessor", M.primitives["make-struct-field-accessor"]);ns.set("make-struct-field-mutator", M.primitives["make-struct-field-mutator"]);ns.set("make-struct-type", M.primitives["make-struct-type"]);ns.set("make-vector", M.primitives["make-vector"]);ns.set("map", M.modules["whalesong/lang/private/map.rkt"].getExports().get("map2"));ns.set("max", M.primitives["max"]);ns.set("member", M.primitives["member"]);ns.set("memf", M.modules["whalesong/lang/private/list.rkt"].getExports().get("memf"));ns.set("memq", M.primitives["memq"]);ns.set("memv", M.primitives["memv"]);ns.set("min", M.primitives["min"]);ns.set("modulo", M.primitives["modulo"]);ns.set("negative?", M.primitives["negative?"]);ns.set("newline", M.primitives["newline"]);ns.set("ninth", M.modules["whalesong/lang/list.rkt"].getExports().get("ninth"));ns.set("not", M.primitives["not"]);ns.set("null", M.primitives["null"]);ns.set("null?", M.primitives["null?"]);ns.set("number->string", M.primitives["number->string"]);ns.set("number?", M.primitives["number?"]);ns.set("numerator", M.primitives["numerator"]);ns.set("odd?", M.primitives["odd?"]);ns.set("ormap", M.modules["whalesong/lang/private/map.rkt"].getExports().get("ormap2"));ns.set("pair?", M.primitives["pair?"]);ns.set("partition", M.modules["whalesong/lang/list.rkt"].getExports().get("partition"));ns.set("pi", M.primitives["pi"]);ns.set("placeholder-set!", M.primitives["placeholder-set!"]);ns.set("positive?", M.primitives["positive?"]);ns.set("printf", M.primitives["printf"]);ns.set("procedure-arity", M.primitives["procedure-arity"]);ns.set("procedure-arity-includes?", M.primitives["procedure-arity-includes?"]);ns.set("procedure-rename", M.primitives["procedure-rename"]);ns.set("procedure?", M.primitives["procedure?"]);ns.set("prop:exn:srclocs", M.primitives["prop:exn:srclocs"]);ns.set("quotient", M.primitives["quotient"]);ns.set("raise", M.primitives["raise"]);ns.set("raise-mismatch-error", M.primitives["raise-mismatch-error"]);ns.set("raise-type-error", M.primitives["raise-type-error"]);ns.set("random", M.primitives["random"]);ns.set("rational?", M.primitives["rational?"]);ns.set("read-byte", M.primitives["read-byte"]);ns.set("real-part", M.primitives["real-part"]);ns.set("real?", M.primitives["real?"]);ns.set("remainder", M.primitives["remainder"]);ns.set("remove", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remove"));ns.set("remove*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remove*"));ns.set("remq", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remq"));ns.set("remq*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remq*"));ns.set("remv", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remv"));ns.set("remv*", M.modules["whalesong/lang/private/list.rkt"].getExports().get("remv*"));ns.set("rest", M.modules["whalesong/lang/list.rkt"].getExports().get("rest"));ns.set("reverse", M.primitives["reverse"]);ns.set("round", M.primitives["round"]);ns.set("second", M.modules["whalesong/lang/list.rkt"].getExports().get("second"));ns.set("set-box!", M.primitives["set-box!"]);ns.set("set-car!", M.primitives["set-car!"]);ns.set("set-cdr!", M.primitives["set-cdr!"]);ns.set("seventh", M.modules["whalesong/lang/list.rkt"].getExports().get("seventh"));ns.set("sgn", M.primitives["sgn"]);ns.set("sin", M.primitives["sin"]);ns.set("sinh", M.primitives["sinh"]);ns.set("sixth", M.modules["whalesong/lang/list.rkt"].getExports().get("sixth"));ns.set("split-at", M.modules["whalesong/lang/list.rkt"].getExports().get("split-at"));ns.set("split-at-right", M.modules["whalesong/lang/list.rkt"].getExports().get("split-at-right"));ns.set("sqr", M.primitives["sqr"]);ns.set("sqrt", M.primitives["sqrt"]);ns.set("srcloc-column", M.primitives["srcloc-column"]);ns.set("srcloc-line", M.primitives["srcloc-line"]);ns.set("srcloc-position", M.primitives["srcloc-position"]);ns.set("srcloc-source", M.primitives["srcloc-source"]);ns.set("srcloc-span", M.primitives["srcloc-span"]);ns.set("srcloc?", M.primitives["srcloc?"]);ns.set("string", M.primitives["string"]);ns.set("string->list", M.primitives["string->list"]);ns.set("string->number", M.primitives["string->number"]);ns.set("string->symbol", M.primitives["string->symbol"]);ns.set("string-append", M.primitives["string-append"]);ns.set("string-ci<=?", M.primitives["string-ci<=?"]);ns.set("string-ci<?", M.primitives["string-ci<?"]);ns.set("string-ci=?", M.primitives["string-ci=?"]);ns.set("string-ci>=?", M.primitives["string-ci>=?"]);ns.set("string-ci>?", M.primitives["string-ci>?"]);ns.set("string-copy", M.primitives["string-copy"]);ns.set("string-length", M.primitives["string-length"]);ns.set("string-ref", M.primitives["string-ref"]);ns.set("string-set!", M.primitives["string-set!"]);ns.set("string<=?", M.primitives["string<=?"]);ns.set("string<?", M.primitives["string<?"]);ns.set("string=?", M.primitives["string=?"]);ns.set("string>=?", M.primitives["string>=?"]);ns.set("string>?", M.primitives["string>?"]);ns.set("string?", M.primitives["string?"]);ns.set("struct-type?", M.primitives["struct-type?"]);ns.set("struct:exn:fail", M.primitives["struct:exn:fail"]);ns.set("struct?", M.primitives["struct?"]);ns.set("sub1", M.primitives["sub1"]);ns.set("substring", M.primitives["substring"]);ns.set("symbol->string", M.primitives["symbol->string"]);ns.set("symbol?", M.primitives["symbol?"]);ns.set("take", M.modules["whalesong/lang/list.rkt"].getExports().get("take"));ns.set("take-right", M.modules["whalesong/lang/list.rkt"].getExports().get("take-right"));ns.set("tan", M.primitives["tan"]);ns.set("tenth", M.modules["whalesong/lang/list.rkt"].getExports().get("tenth"));ns.set("third", M.modules["whalesong/lang/list.rkt"].getExports().get("third"));ns.set("truncate", M.primitives["truncate"]);ns.set("unbox", M.primitives["unbox"]);ns.set("values", M.primitives["values"]);ns.set("vector", M.primitives["vector"]);ns.set("vector->list", M.primitives["vector->list"]);ns.set("vector-length", M.primitives["vector-length"]);ns.set("vector-ref", M.primitives["vector-ref"]);ns.set("vector-set!", M.primitives["vector-set!"]);ns.set("vector?", M.primitives["vector?"]);ns.set("void", M.primitives["void"]);ns.set("void?", M.primitives["void?"]);ns.set("write", M.primitives["write"]);ns.set("write-byte", M.primitives["write-byte"]);ns.set("zero?", M.primitives["zero?"]);}(M.modules["whalesong/lang/base.rkt"],M.modules["whalesong/lang/base.rkt"].getExports(),M.modules["whalesong/lang/base.rkt"].getExternalExports(),M.modules["whalesong/lang/base.rkt"].prefix));
return(M.p)(M);};

var _1051=function(M){if(M.modules["collects/racket/private/modbeg.rkt"].isInvoked!==false){return(_1053)(M);}else{M.c.push(new RT.CallFrame(_1053,M.p));
return(M.modules["collects/racket/private/modbeg.rkt"].label)(M);}};

var _1049=function(M){if(--M.cbt<0){throw _1049;}
M.e.length-=(M.a-1);
return(_1050)(M);};

var _1050=function(M){if(--M.cbt<0){throw _1050;}
if((M.installedModules["collects/racket/private/modbeg.rkt"]!==void(0)&&M.modules["collects/racket/private/modbeg.rkt"]!==undefined)!==false){return(_1051)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "collects/racket/private/modbeg.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1051);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1051)(M);}};

var _1048=function(M){if(M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked!==false){return(_1050)(M);}else{M.c.push(new RT.CallFrame(_1050,M.p));
return(M.modules["whalesong/lang/private/qq-and-or.rkt"].label)(M);}};

var _1046=function(M){if(--M.cbt<0){throw _1046;}
M.e.length-=(M.a-1);
return(_1047)(M);};

var _1047=function(M){if(--M.cbt<0){throw _1047;}
if((M.installedModules["whalesong/lang/private/qq-and-or.rkt"]!==void(0)&&M.modules["whalesong/lang/private/qq-and-or.rkt"]!==undefined)!==false){return(_1048)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/qq-and-or.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1048);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1048)(M);}};

var _1045=function(M){if(M.modules["whalesong/lang/list.rkt"].isInvoked!==false){return(_1047)(M);}else{M.c.push(new RT.CallFrame(_1047,M.p));
return(M.modules["whalesong/lang/list.rkt"].label)(M);}};

var _1043=function(M){if(--M.cbt<0){throw _1043;}
M.e.length-=(M.a-1);
return(_1044)(M);};

var _1044=function(M){if(--M.cbt<0){throw _1044;}
if((M.installedModules["whalesong/lang/list.rkt"]!==void(0)&&M.modules["whalesong/lang/list.rkt"]!==undefined)!==false){return(_1045)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/list.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1045);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1045)(M);}};

var _1042=function(M){if(M.modules["whalesong/lang/private/with-handlers.rkt"].isInvoked!==false){return(_1044)(M);}else{M.c.push(new RT.CallFrame(_1044,M.p));
return(M.modules["whalesong/lang/private/with-handlers.rkt"].label)(M);}};

var _1040=function(M){if(--M.cbt<0){throw _1040;}
M.e.length-=(M.a-1);
return(_1041)(M);};

var _1041=function(M){if(--M.cbt<0){throw _1041;}
if((M.installedModules["whalesong/lang/private/with-handlers.rkt"]!==void(0)&&M.modules["whalesong/lang/private/with-handlers.rkt"]!==undefined)!==false){return(_1042)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/with-handlers.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_1042);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_1042)(M);}};

_1032.mvr=_1031;
_1035.mvr=_1034;
_1038.mvr=_1037;
_1041.mvr=_1040;
_1044.mvr=_1043;
_1047.mvr=_1046;
_1050.mvr=_1049;
_1053.mvr=_1052;
_1027.mvr=_1026;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_1054(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/base.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/base.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/qq-and-or.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _1058=function(M){if(--M.cbt<0){throw _1058;}
};

var _1065=function(M){if(--M.cbt<0){throw _1065;}
M.e.length-=(M.a-1);
return(_1066)(M);};

var _1063=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1064=function(M){M.modules["whalesong/lang/private/qq-and-or.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("qq-append")||M.primitives["qq-append"]]);M.e[M.e.length-1].names=["qq-append"];
M.modules["whalesong/lang/private/qq-and-or.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_1066,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_1055_c;
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1057=function(M){if(--M.cbt<0){throw _1057;}
M.e.length-=(M.a-1);
return(_1058)(M);};

var _1059=function(M){M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym970;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1055=function(M){if(--M.cbt<0){throw _1055;}

//"lambda body for #(struct:LamPositionalName qq-append whalesong/lang/private/qq-and-or.rkt 149 4 10310 107)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_1059)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["append"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1056=function(M){M.c.push(new RT.CallFrame(_1058,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/qq-and-or.rkt"]=function(){return new RT.ModuleRecord("qq-and-or",_1064);}
return(_1063)(M);};

var _1067=function(M){return(_1056)(M);};

var _1066=function(M){if(--M.cbt<0){throw _1066;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["whalesong/lang/private/qq-and-or.rkt"],M.modules["whalesong/lang/private/qq-and-or.rkt"].getExports(),M.modules["whalesong/lang/private/qq-and-or.rkt"].getExternalExports(),M.modules["whalesong/lang/private/qq-and-or.rkt"].prefix));
return(M.p)(M);};

_1066.mvr=_1065;
_1058.mvr=_1057;
var sym970=RT.makeSymbol("unquote-splicing");var _1055_c=new RT.Closure(_1055,2,void(0),"qq-append");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_1067(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/qq-and-or.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/qq-and-or.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/list.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _1728=function(M){return(_1141)(M);};

var _1727=function(M){if(--M.cbt<0){throw _1727;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("add-between", prefix[selfMod.getPrefixOffset("add-between")]);extNs.set("add-between", prefix[selfMod.getPrefixOffset("add-between")]);ns.set("append*", prefix[selfMod.getPrefixOffset("append*")]);extNs.set("append*", prefix[selfMod.getPrefixOffset("append*")]);ns.set("append-map", prefix[selfMod.getPrefixOffset("append-map")]);extNs.set("append-map", prefix[selfMod.getPrefixOffset("append-map")]);ns.set("argmax", prefix[selfMod.getPrefixOffset("argmax")]);extNs.set("argmax", prefix[selfMod.getPrefixOffset("argmax")]);ns.set("argmin", prefix[selfMod.getPrefixOffset("argmin")]);extNs.set("argmin", prefix[selfMod.getPrefixOffset("argmin")]);ns.set("cons?", prefix[selfMod.getPrefixOffset("cons?")]);extNs.set("cons?", prefix[selfMod.getPrefixOffset("cons?")]);ns.set("count", prefix[selfMod.getPrefixOffset("count")]);extNs.set("count", prefix[selfMod.getPrefixOffset("count")]);ns.set("drop", prefix[selfMod.getPrefixOffset("drop")]);extNs.set("drop", prefix[selfMod.getPrefixOffset("drop")]);ns.set("drop-right", prefix[selfMod.getPrefixOffset("drop-right")]);extNs.set("drop-right", prefix[selfMod.getPrefixOffset("drop-right")]);ns.set("eighth", prefix[selfMod.getPrefixOffset("eighth")]);extNs.set("eighth", prefix[selfMod.getPrefixOffset("eighth")]);ns.set("empty", prefix[selfMod.getPrefixOffset("empty")]);extNs.set("empty", prefix[selfMod.getPrefixOffset("empty")]);ns.set("empty?", prefix[selfMod.getPrefixOffset("empty?")]);extNs.set("empty?", prefix[selfMod.getPrefixOffset("empty?")]);ns.set("fifth", prefix[selfMod.getPrefixOffset("fifth")]);extNs.set("fifth", prefix[selfMod.getPrefixOffset("fifth")]);ns.set("filter-map", prefix[selfMod.getPrefixOffset("filter-map")]);extNs.set("filter-map", prefix[selfMod.getPrefixOffset("filter-map")]);ns.set("filter-not", prefix[selfMod.getPrefixOffset("filter-not")]);extNs.set("filter-not", prefix[selfMod.getPrefixOffset("filter-not")]);ns.set("first", prefix[selfMod.getPrefixOffset("first")]);extNs.set("first", prefix[selfMod.getPrefixOffset("first")]);ns.set("flatten", prefix[selfMod.getPrefixOffset("flatten")]);extNs.set("flatten", prefix[selfMod.getPrefixOffset("flatten")]);ns.set("fourth", prefix[selfMod.getPrefixOffset("fourth")]);extNs.set("fourth", prefix[selfMod.getPrefixOffset("fourth")]);ns.set("last", prefix[selfMod.getPrefixOffset("last")]);extNs.set("last", prefix[selfMod.getPrefixOffset("last")]);ns.set("last-pair", prefix[selfMod.getPrefixOffset("last-pair")]);extNs.set("last-pair", prefix[selfMod.getPrefixOffset("last-pair")]);ns.set("make-list", prefix[selfMod.getPrefixOffset("make-list")]);extNs.set("make-list", prefix[selfMod.getPrefixOffset("make-list")]);ns.set("ninth", prefix[selfMod.getPrefixOffset("ninth")]);extNs.set("ninth", prefix[selfMod.getPrefixOffset("ninth")]);ns.set("partition", prefix[selfMod.getPrefixOffset("partition")]);extNs.set("partition", prefix[selfMod.getPrefixOffset("partition")]);ns.set("rest", prefix[selfMod.getPrefixOffset("rest")]);extNs.set("rest", prefix[selfMod.getPrefixOffset("rest")]);ns.set("second", prefix[selfMod.getPrefixOffset("second")]);extNs.set("second", prefix[selfMod.getPrefixOffset("second")]);ns.set("seventh", prefix[selfMod.getPrefixOffset("seventh")]);extNs.set("seventh", prefix[selfMod.getPrefixOffset("seventh")]);ns.set("sixth", prefix[selfMod.getPrefixOffset("sixth")]);extNs.set("sixth", prefix[selfMod.getPrefixOffset("sixth")]);ns.set("split-at", prefix[selfMod.getPrefixOffset("split-at")]);extNs.set("split-at", prefix[selfMod.getPrefixOffset("split-at")]);ns.set("split-at-right", prefix[selfMod.getPrefixOffset("split-at-right")]);extNs.set("split-at-right", prefix[selfMod.getPrefixOffset("split-at-right")]);ns.set("take", prefix[selfMod.getPrefixOffset("take")]);extNs.set("take", prefix[selfMod.getPrefixOffset("take")]);ns.set("take-right", prefix[selfMod.getPrefixOffset("take-right")]);extNs.set("take-right", prefix[selfMod.getPrefixOffset("take-right")]);ns.set("tenth", prefix[selfMod.getPrefixOffset("tenth")]);extNs.set("tenth", prefix[selfMod.getPrefixOffset("tenth")]);ns.set("third", prefix[selfMod.getPrefixOffset("third")]);extNs.set("third", prefix[selfMod.getPrefixOffset("third")]);}(M.modules["whalesong/lang/list.rkt"],M.modules["whalesong/lang/list.rkt"].getExports(),M.modules["whalesong/lang/list.rkt"].getExternalExports(),M.modules["whalesong/lang/list.rkt"].prefix));
return(M.p)(M);};

var _1725=function(M){if(--M.cbt<0){throw _1725;}
M.c.push(new RT.CallFrame(_1727,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1140,2,[M.e[M.e.length-1]],"argmax");
M.e[M.e.length-1][51]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1723=function(M){if(--M.cbt<0){throw _1723;}
M.c.push(new RT.CallFrame(_1725,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1139,2,[M.e[M.e.length-1]],"argmin");
M.e[M.e.length-1][50]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1721=function(M){if(--M.cbt<0){throw _1721;}
M.c.push(new RT.CallFrame(_1723,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1138,4,[M.e[M.e.length-1]],"mk-min");
M.e[M.e.length-1][48]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1719=function(M){if(--M.cbt<0){throw _1719;}
M.c.push(new RT.CallFrame(_1721,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1137,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][70]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1717=function(M){if(--M.cbt<0){throw _1717;}
M.c.push(new RT.CallFrame(_1719,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1136,2,[M.e[M.e.length-1]],"filter-not");
M.e[M.e.length-1][47]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1715=function(M){if(--M.cbt<0){throw _1715;}
M.c.push(new RT.CallFrame(_1717,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1135,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][69]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1713=function(M){if(--M.cbt<0){throw _1713;}
M.c.push(new RT.CallFrame(_1715,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1132,2,[M.e[M.e.length-4]],"...ng/lang/list.rkt:318:15");
M.e[M.e.length-2]=new RT.Closure(_1133,3,[M.e[M.e.length-4]],"...ng/lang/list.rkt:319:15");
M.e[M.e.length-3]=new RT.Closure(_1134,(RT.makeArityAtLeast(2)),[M.e[M.e.length-4]],"...ng/lang/list.rkt:320:15");
M.v=new RT.Closure(_1131,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(2)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append-map");
M.e.length-=3;
M.e[M.e.length-1][46]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1711=function(M){if(--M.cbt<0){throw _1711;}
M.c.push(new RT.CallFrame(_1713,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1130,2,[M.e[M.e.length-1]],"partition");
M.e[M.e.length-1][45]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1709=function(M){if(--M.cbt<0){throw _1709;}
M.c.push(new RT.CallFrame(_1711,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1129,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][68]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1707=function(M){if(--M.cbt<0){throw _1707;}
M.c.push(new RT.CallFrame(_1709,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1125,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"count");
M.e[M.e.length-1][44]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1705=function(M){if(--M.cbt<0){throw _1705;}
M.c.push(new RT.CallFrame(_1707,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1124,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][67]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1703=function(M){if(--M.cbt<0){throw _1703;}
M.c.push(new RT.CallFrame(_1705,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1120,(RT.makeArityAtLeast(2)),[M.e[M.e.length-1]],"filter-map");
M.e[M.e.length-1][36]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1701=function(M){if(--M.cbt<0){throw _1701;}
M.c.push(new RT.CallFrame(_1703,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1119,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][66]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1699=function(M){if(--M.cbt<0){throw _1699;}
M.c.push(new RT.CallFrame(_1701,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1118,2,[M.e[M.e.length-1]],"add-between");
M.e[M.e.length-1][34]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1697=function(M){if(--M.cbt<0){throw _1697;}
M.c.push(new RT.CallFrame(_1699,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1117,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1695=function(M){if(--M.cbt<0){throw _1695;}
M.c.push(new RT.CallFrame(_1697,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_1115_c;
M.e[M.e.length-1][33]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1693=function(M){if(--M.cbt<0){throw _1693;}
M.c.push(new RT.CallFrame(_1695,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1110,1,[M.e[M.e.length-6]],"...ng/lang/list.rkt:162:15");
M.e[M.e.length-2]=new RT.Closure(_1111,2,[M.e[M.e.length-6]],"...ng/lang/list.rkt:163:15");
M.e[M.e.length-3]=new RT.Closure(_1112,3,[M.e[M.e.length-6]],"...ng/lang/list.rkt:164:15");
M.e[M.e.length-4]=new RT.Closure(_1113,4,[M.e[M.e.length-6]],"...ng/lang/list.rkt:165:15");
M.e[M.e.length-5]=new RT.Closure(_1114,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...ng/lang/list.rkt:166:15");
M.v=new RT.Closure(_1109,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))))),[M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"append*");
M.e.length-=5;
M.e[M.e.length-1][31]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1691=function(M){if(--M.cbt<0){throw _1691;}
M.c.push(new RT.CallFrame(_1693,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1108,2,[M.e[M.e.length-1]],"split-at-right");
M.e[M.e.length-1][30]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1689=function(M){if(--M.cbt<0){throw _1689;}
M.c.push(new RT.CallFrame(_1691,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1107,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][64]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1687=function(M){if(--M.cbt<0){throw _1687;}
M.c.push(new RT.CallFrame(_1689,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1105,2,[M.e[M.e.length-1]],"drop-right");
M.e[M.e.length-1][29]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1685=function(M){if(--M.cbt<0){throw _1685;}
M.c.push(new RT.CallFrame(_1687,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1103,2,[M.e[M.e.length-1]],"take-right");
M.e[M.e.length-1][28]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1683=function(M){if(--M.cbt<0){throw _1683;}
M.c.push(new RT.CallFrame(_1685,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1102,2,[M.e[M.e.length-1]],"drop");
M.e[M.e.length-1][27]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1681=function(M){if(--M.cbt<0){throw _1681;}
M.c.push(new RT.CallFrame(_1683,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1101,2,[M.e[M.e.length-1]],"split-at");
M.e[M.e.length-1][25]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1679=function(M){if(--M.cbt<0){throw _1679;}
M.c.push(new RT.CallFrame(_1681,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1100,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1677=function(M){if(--M.cbt<0){throw _1677;}
M.c.push(new RT.CallFrame(_1679,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1099,2,[M.e[M.e.length-1]],"take");
M.e[M.e.length-1][24]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1675=function(M){if(--M.cbt<0){throw _1675;}
M.c.push(new RT.CallFrame(_1677,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1098,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][62]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1673=function(M){if(--M.cbt<0){throw _1673;}
M.c.push(new RT.CallFrame(_1675,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1097,3,[M.e[M.e.length-1]],"too-large");
M.e[M.e.length-1][22]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1671=function(M){if(--M.cbt<0){throw _1671;}
M.c.push(new RT.CallFrame(_1673,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1096,2,[M.e[M.e.length-1]],"drop*");
M.e[M.e.length-1][21]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1669=function(M){if(--M.cbt<0){throw _1669;}
M.c.push(new RT.CallFrame(_1671,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1095,2,[M.e[M.e.length-1]],"make-list");
M.e[M.e.length-1][18]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1667=function(M){if(--M.cbt<0){throw _1667;}
M.c.push(new RT.CallFrame(_1669,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1094,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][61]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1665=function(M){if(--M.cbt<0){throw _1665;}
M.c.push(new RT.CallFrame(_1667,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=RT.NULL;
M.e[M.e.length-1][17]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1663=function(M){if(--M.cbt<0){throw _1663;}
M.c.push(new RT.CallFrame(_1665,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_1093_c;
M.e[M.e.length-1][16]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1661=function(M){if(--M.cbt<0){throw _1661;}
M.c.push(new RT.CallFrame(_1663,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_1092_c;
M.e[M.e.length-1][15]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1659=function(M){if(--M.cbt<0){throw _1659;}
M.c.push(new RT.CallFrame(_1661,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1091,1,[M.e[M.e.length-1]],"rest");
M.e[M.e.length-1][14]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1657=function(M){if(--M.cbt<0){throw _1657;}
M.c.push(new RT.CallFrame(_1659,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1089,1,[M.e[M.e.length-1]],"last");
M.e[M.e.length-1][13]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1655=function(M){if(--M.cbt<0){throw _1655;}
M.c.push(new RT.CallFrame(_1657,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1087,1,[M.e[M.e.length-1]],"last-pair");
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1653=function(M){if(--M.cbt<0){throw _1653;}
M.c.push(new RT.CallFrame(_1655,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1086,1,[M.e[M.e.length-1]],"tenth");
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1651=function(M){if(--M.cbt<0){throw _1651;}
M.c.push(new RT.CallFrame(_1653,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1085,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1649=function(M){if(--M.cbt<0){throw _1649;}
M.c.push(new RT.CallFrame(_1651,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1084,1,[M.e[M.e.length-1]],"ninth");
M.e[M.e.length-1][10]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1647=function(M){if(--M.cbt<0){throw _1647;}
M.c.push(new RT.CallFrame(_1649,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1083,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1645=function(M){if(--M.cbt<0){throw _1645;}
M.c.push(new RT.CallFrame(_1647,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1082,1,[M.e[M.e.length-1]],"eighth");
M.e[M.e.length-1][9]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1643=function(M){if(--M.cbt<0){throw _1643;}
M.c.push(new RT.CallFrame(_1645,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1081,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][58]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1641=function(M){if(--M.cbt<0){throw _1641;}
M.c.push(new RT.CallFrame(_1643,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1080,1,[M.e[M.e.length-1]],"seventh");
M.e[M.e.length-1][8]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1639=function(M){if(--M.cbt<0){throw _1639;}
M.c.push(new RT.CallFrame(_1641,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1079,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1637=function(M){if(--M.cbt<0){throw _1637;}
M.c.push(new RT.CallFrame(_1639,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1078,1,[M.e[M.e.length-1]],"sixth");
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1635=function(M){if(--M.cbt<0){throw _1635;}
M.c.push(new RT.CallFrame(_1637,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1077,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1633=function(M){if(--M.cbt<0){throw _1633;}
M.c.push(new RT.CallFrame(_1635,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1076,1,[M.e[M.e.length-1]],"fifth");
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1631=function(M){if(--M.cbt<0){throw _1631;}
M.c.push(new RT.CallFrame(_1633,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1075,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1629=function(M){if(--M.cbt<0){throw _1629;}
M.c.push(new RT.CallFrame(_1631,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1074,1,[M.e[M.e.length-1]],"fourth");
M.e[M.e.length-1][5]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1627=function(M){if(--M.cbt<0){throw _1627;}
M.c.push(new RT.CallFrame(_1629,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1073,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1625=function(M){if(--M.cbt<0){throw _1625;}
M.c.push(new RT.CallFrame(_1627,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1072,1,[M.e[M.e.length-1]],"third");
M.e[M.e.length-1][4]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1623=function(M){if(--M.cbt<0){throw _1623;}
M.c.push(new RT.CallFrame(_1625,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1071,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1621=function(M){if(--M.cbt<0){throw _1621;}
M.c.push(new RT.CallFrame(_1623,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1070,1,[M.e[M.e.length-1]],"second");
M.e[M.e.length-1][2]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1619=function(M){if(--M.cbt<0){throw _1619;}
M.c.push(new RT.CallFrame(_1621,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1069,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1143=function(M){if(--M.cbt<0){throw _1143;}
};

var _1606=function(M){if(--M.cbt<0){throw _1606;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
if(M.v===false){return(_1608)(M);}else{M.v=RT.VOID;
return(_1609)(M);}};

var _1592=function(M){if(--M.cbt<0){throw _1592;}
if(M.v===false){return(_1589)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e.push(M.e[M.e.length-14]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-14]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1585=function(M){if(--M.cbt<0){throw _1585;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-1]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
if(M.v===false){return(_1587)(M);}else{M.v=RT.VOID;
return(_1588)(M);}};

var _1571=function(M){if(--M.cbt<0){throw _1571;}
if(M.v===false){return(_1568)(M);}else{M.v=M.e[M.e.length-7];
return(_1569)(M);}};

var _1563=function(M){if(--M.cbt<0){throw _1563;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1559=function(M){if(--M.cbt<0){throw _1559;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1555=function(M){if(--M.cbt<0){throw _1555;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1538=function(M){if(--M.cbt<0){throw _1538;}
if(M.v===false){return(_1535)(M);}else{M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-10]);
M.v=M.e[M.e.length-11];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1525=function(M){if(--M.cbt<0){throw _1525;}
if(M.v===false){return(_1522)(M);}else{M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-6]);
return(_1523)(M);}};

var _1519=function(M){if(--M.cbt<0){throw _1519;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1510=function(M){if(--M.cbt<0){throw _1510;}
if(M.v===false){return(_1505)(M);}else{M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][67];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1503=function(M){if(--M.cbt<0){throw _1503;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["andmap"];
M.v=new RT.Closure(_1127,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...ng/lang/list.rkt:282:18");
M.a=1;
if(M.a===0){return(_1507)(M);}else{M.e.push(M.v);
return(_1507)(M);}};

var _1499=function(M){if(--M.cbt<0){throw _1499;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1493)(M);};

var _1497=function(M){if(--M.cbt<0){throw _1497;}
return(_1495)(M);};

var _1491=function(M){if(--M.cbt<0){throw _1491;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1485)(M);};

var _1489=function(M){if(--M.cbt<0){throw _1489;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_1487)(M);};

var _1481=function(M){if(--M.cbt<0){throw _1481;}
if(M.v===false){return(_1476)(M);}else{M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
return(_1477)(M);}};

var _1479=function(M){if(--M.cbt<0){throw _1479;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1481,M.p));
return((M.p).label)(M);};

var _1475=function(M){if(--M.cbt<0){throw _1475;}
M.e[M.e.length-3]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1479,M.p));
return((M.p).label)(M);};

var _1468=function(M){if(--M.cbt<0){throw _1468;}
M.e[M.e.length-2]=M.v;
return(_1466)(M);};

var _1462=function(M){if(--M.cbt<0){throw _1462;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1464)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1123_c;
M.a=2;
M.c.push(new RT.CallFrame(_1468,M.p));
return(_1123)(M);}};

var _1458=function(M){if(--M.cbt<0){throw _1458;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1449=function(M){if(--M.cbt<0){throw _1449;}
if(M.v===false){return(_1444)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1442=function(M){if(--M.cbt<0){throw _1442;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["andmap"];
M.v=new RT.Closure(_1122,1,[M.e[M.e.length-4],M.e[M.e.length-3]],"...ng/lang/list.rkt:256:18");
M.a=1;
if(M.a===0){return(_1446)(M);}else{M.e.push(M.v);
return(_1446)(M);}};

var _1438=function(M){if(--M.cbt<0){throw _1438;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1432)(M);};

var _1436=function(M){if(--M.cbt<0){throw _1436;}
return(_1434)(M);};

var _1430=function(M){if(--M.cbt<0){throw _1430;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1424)(M);};

var _1428=function(M){if(--M.cbt<0){throw _1428;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_1426)(M);};

var _1420=function(M){if(--M.cbt<0){throw _1420;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1418=function(M){if(--M.cbt<0){throw _1418;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1416=function(M){if(--M.cbt<0){throw _1416;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1418,M.p));
return((M.p).label)(M);};

var _1411=function(M){if(--M.cbt<0){throw _1411;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1413)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-7][66];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-9]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1416,M.p));
return((M.p).label)(M);}};

var _1409=function(M){if(--M.cbt<0){throw _1409;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1411,M.p));
return((M.p).label)(M);};

var _1405=function(M){if(--M.cbt<0){throw _1405;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1397=function(M){if(--M.cbt<0){throw _1397;}
M.e[M.e.length-3]=M.v;
M.a=3;
M.v=M.primitives["list*"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1390=function(M){if(--M.cbt<0){throw _1390;}
M.e[M.e.length-2]=M.v;
return(_1388)(M);};

var _1363=function(M){if(--M.cbt<0){throw _1363;}
M.e[M.e.length-3]=M.v;
return(_1359)(M);};

var _1358=function(M){if(--M.cbt<0){throw _1358;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1360)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_1359)(M);}};

var _1348=function(M){if(--M.cbt<0){throw _1348;}
M.e[M.e.length-2]=M.v;
return(_1346)(M);};

var _1340=function(M){if(--M.cbt<0){throw _1340;}
M.e[M.e.length-3]=M.v;
return(_1336)(M);};

var _1335=function(M){if(--M.cbt<0){throw _1335;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1337)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_1336)(M);}};

var _1323=function(M){if(--M.cbt<0){throw _1323;}
M.e[M.e.length-3]=M.v;
return(_1319)(M);};

var _1318=function(M){if(--M.cbt<0){throw _1318;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1320)(M);}else{M.e[M.e.length-3]=M.e[M.e.length-1];
return(_1319)(M);}};

var _1309=function(M){if(--M.cbt<0){throw _1309;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1311)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1285=function(M){if(--M.cbt<0){throw _1285;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1726=function(M){if(--M.cbt<0){throw _1726;}
M.e.length-=(M.a-1);
return(_1727)(M);};

var _1724=function(M){if(--M.cbt<0){throw _1724;}
M.e.length-=(M.a-1);
return(_1725)(M);};

var _1722=function(M){if(--M.cbt<0){throw _1722;}
M.e.length-=(M.a-1);
return(_1723)(M);};

var _1720=function(M){if(--M.cbt<0){throw _1720;}
M.e.length-=(M.a-1);
return(_1721)(M);};

var _1718=function(M){if(--M.cbt<0){throw _1718;}
M.e.length-=(M.a-1);
return(_1719)(M);};

var _1716=function(M){if(--M.cbt<0){throw _1716;}
M.e.length-=(M.a-1);
return(_1717)(M);};

var _1714=function(M){if(--M.cbt<0){throw _1714;}
M.e.length-=(M.a-1);
return(_1715)(M);};

var _1712=function(M){if(--M.cbt<0){throw _1712;}
M.e.length-=(M.a-1);
return(_1713)(M);};

var _1710=function(M){if(--M.cbt<0){throw _1710;}
M.e.length-=(M.a-1);
return(_1711)(M);};

var _1708=function(M){if(--M.cbt<0){throw _1708;}
M.e.length-=(M.a-1);
return(_1709)(M);};

var _1706=function(M){if(--M.cbt<0){throw _1706;}
M.e.length-=(M.a-1);
return(_1707)(M);};

var _1704=function(M){if(--M.cbt<0){throw _1704;}
M.e.length-=(M.a-1);
return(_1705)(M);};

var _1702=function(M){if(--M.cbt<0){throw _1702;}
M.e.length-=(M.a-1);
return(_1703)(M);};

var _1700=function(M){if(--M.cbt<0){throw _1700;}
M.e.length-=(M.a-1);
return(_1701)(M);};

var _1698=function(M){if(--M.cbt<0){throw _1698;}
M.e.length-=(M.a-1);
return(_1699)(M);};

var _1696=function(M){if(--M.cbt<0){throw _1696;}
M.e.length-=(M.a-1);
return(_1697)(M);};

var _1694=function(M){if(--M.cbt<0){throw _1694;}
M.e.length-=(M.a-1);
return(_1695)(M);};

var _1692=function(M){if(--M.cbt<0){throw _1692;}
M.e.length-=(M.a-1);
return(_1693)(M);};

var _1690=function(M){if(--M.cbt<0){throw _1690;}
M.e.length-=(M.a-1);
return(_1691)(M);};

var _1688=function(M){if(--M.cbt<0){throw _1688;}
M.e.length-=(M.a-1);
return(_1689)(M);};

var _1686=function(M){if(--M.cbt<0){throw _1686;}
M.e.length-=(M.a-1);
return(_1687)(M);};

var _1684=function(M){if(--M.cbt<0){throw _1684;}
M.e.length-=(M.a-1);
return(_1685)(M);};

var _1682=function(M){if(--M.cbt<0){throw _1682;}
M.e.length-=(M.a-1);
return(_1683)(M);};

var _1680=function(M){if(--M.cbt<0){throw _1680;}
M.e.length-=(M.a-1);
return(_1681)(M);};

var _1678=function(M){if(--M.cbt<0){throw _1678;}
M.e.length-=(M.a-1);
return(_1679)(M);};

var _1676=function(M){if(--M.cbt<0){throw _1676;}
M.e.length-=(M.a-1);
return(_1677)(M);};

var _1674=function(M){if(--M.cbt<0){throw _1674;}
M.e.length-=(M.a-1);
return(_1675)(M);};

var _1672=function(M){if(--M.cbt<0){throw _1672;}
M.e.length-=(M.a-1);
return(_1673)(M);};

var _1670=function(M){if(--M.cbt<0){throw _1670;}
M.e.length-=(M.a-1);
return(_1671)(M);};

var _1668=function(M){if(--M.cbt<0){throw _1668;}
M.e.length-=(M.a-1);
return(_1669)(M);};

var _1666=function(M){if(--M.cbt<0){throw _1666;}
M.e.length-=(M.a-1);
return(_1667)(M);};

var _1664=function(M){if(--M.cbt<0){throw _1664;}
M.e.length-=(M.a-1);
return(_1665)(M);};

var _1662=function(M){if(--M.cbt<0){throw _1662;}
M.e.length-=(M.a-1);
return(_1663)(M);};

var _1660=function(M){if(--M.cbt<0){throw _1660;}
M.e.length-=(M.a-1);
return(_1661)(M);};

var _1658=function(M){if(--M.cbt<0){throw _1658;}
M.e.length-=(M.a-1);
return(_1659)(M);};

var _1656=function(M){if(--M.cbt<0){throw _1656;}
M.e.length-=(M.a-1);
return(_1657)(M);};

var _1654=function(M){if(--M.cbt<0){throw _1654;}
M.e.length-=(M.a-1);
return(_1655)(M);};

var _1652=function(M){if(--M.cbt<0){throw _1652;}
M.e.length-=(M.a-1);
return(_1653)(M);};

var _1650=function(M){if(--M.cbt<0){throw _1650;}
M.e.length-=(M.a-1);
return(_1651)(M);};

var _1648=function(M){if(--M.cbt<0){throw _1648;}
M.e.length-=(M.a-1);
return(_1649)(M);};

var _1646=function(M){if(--M.cbt<0){throw _1646;}
M.e.length-=(M.a-1);
return(_1647)(M);};

var _1644=function(M){if(--M.cbt<0){throw _1644;}
M.e.length-=(M.a-1);
return(_1645)(M);};

var _1642=function(M){if(--M.cbt<0){throw _1642;}
M.e.length-=(M.a-1);
return(_1643)(M);};

var _1640=function(M){if(--M.cbt<0){throw _1640;}
M.e.length-=(M.a-1);
return(_1641)(M);};

var _1638=function(M){if(--M.cbt<0){throw _1638;}
M.e.length-=(M.a-1);
return(_1639)(M);};

var _1636=function(M){if(--M.cbt<0){throw _1636;}
M.e.length-=(M.a-1);
return(_1637)(M);};

var _1634=function(M){if(--M.cbt<0){throw _1634;}
M.e.length-=(M.a-1);
return(_1635)(M);};

var _1632=function(M){if(--M.cbt<0){throw _1632;}
M.e.length-=(M.a-1);
return(_1633)(M);};

var _1630=function(M){if(--M.cbt<0){throw _1630;}
M.e.length-=(M.a-1);
return(_1631)(M);};

var _1628=function(M){if(--M.cbt<0){throw _1628;}
M.e.length-=(M.a-1);
return(_1629)(M);};

var _1626=function(M){if(--M.cbt<0){throw _1626;}
M.e.length-=(M.a-1);
return(_1627)(M);};

var _1624=function(M){if(--M.cbt<0){throw _1624;}
M.e.length-=(M.a-1);
return(_1625)(M);};

var _1622=function(M){if(--M.cbt<0){throw _1622;}
M.e.length-=(M.a-1);
return(_1623)(M);};

var _1620=function(M){if(--M.cbt<0){throw _1620;}
M.e.length-=(M.a-1);
return(_1621)(M);};

var _1618=function(M){if(--M.cbt<0){throw _1618;}
M.e.length-=(M.a-1);
return(_1619)(M);};

var _1616=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1617=function(M){M.modules["whalesong/lang/list.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("first")||M.primitives["first"],M.primitives["raise-type-error"],M.params.currentNamespace.get("second")||M.primitives["second"],M.primitives["format"],M.params.currentNamespace.get("third")||M.primitives["third"],M.params.currentNamespace.get("fourth")||M.primitives["fourth"],M.params.currentNamespace.get("fifth")||M.primitives["fifth"],M.params.currentNamespace.get("sixth")||M.primitives["sixth"],M.params.currentNamespace.get("seventh")||M.primitives["seventh"],M.params.currentNamespace.get("eighth")||M.primitives["eighth"],M.params.currentNamespace.get("ninth")||M.primitives["ninth"],M.params.currentNamespace.get("tenth")||M.primitives["tenth"],M.params.currentNamespace.get("last-pair")||M.primitives["last-pair"],M.params.currentNamespace.get("last")||M.primitives["last"],M.params.currentNamespace.get("rest")||M.primitives["rest"],M.params.currentNamespace.get("cons?")||M.primitives["cons?"],M.params.currentNamespace.get("empty?")||M.primitives["empty?"],M.params.currentNamespace.get("empty")||M.primitives["empty"],M.params.currentNamespace.get("make-list")||M.primitives["make-list"],M.primitives["exact-nonnegative-integer?"],M.primitives["zero?"],M.params.currentNamespace.get("drop*")||M.primitives["drop*"],M.params.currentNamespace.get("too-large")||M.primitives["too-large"],M.primitives["raise-mismatch-error"],M.params.currentNamespace.get("take")||M.primitives["take"],M.params.currentNamespace.get("split-at")||M.primitives["split-at"],M.primitives["reverse"],M.params.currentNamespace.get("drop")||M.primitives["drop"],M.params.currentNamespace.get("take-right")||M.primitives["take-right"],M.params.currentNamespace.get("drop-right")||M.primitives["drop-right"],M.params.currentNamespace.get("split-at-right")||M.primitives["split-at-right"],M.params.currentNamespace.get("append*")||M.primitives["append*"],M.primitives["append"],M.params.currentNamespace.get("flatten")||M.primitives["flatten"],M.params.currentNamespace.get("add-between")||M.primitives["add-between"],M.primitives["list*"],M.params.currentNamespace.get("filter-map")||M.primitives["filter-map"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["length"],M.primitives["andmap"],M.primitives["ormap"],M.primitives["map"],M.primitives["error"],M.params.currentNamespace.get("count")||M.primitives["count"],M.params.currentNamespace.get("partition")||M.primitives["partition"],M.params.currentNamespace.get("append-map")||M.primitives["append-map"],M.params.currentNamespace.get("filter-not")||M.primitives["filter-not"],M.params.currentNamespace.get("mk-min")||M.primitives["mk-min"],M.primitives["real?"],M.params.currentNamespace.get("argmin")||M.primitives["argmin"],M.params.currentNamespace.get("argmax")||M.primitives["argmax"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["first","raise-type-error","second","format","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","last-pair","last","rest","cons?","empty?","empty","make-list","exact-nonnegative-integer?","zero?","drop*","too-large","raise-mismatch-error","take","split-at","reverse","drop","take-right","drop-right","split-at-right","append*","append","flatten","add-between","list*","filter-map","procedure?","procedure-arity-includes?","length","andmap","ormap","map","error","count","partition","append-map","filter-not","mk-min","real?","argmin","argmax",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_1619,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1068,1,[M.e[M.e.length-1]],"first");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1142=function(M){if(--M.cbt<0){throw _1142;}
M.e.length-=(M.a-1);
return(_1143)(M);};

var _1140=function(M){if(--M.cbt<0){throw _1140;}

//"lambda body for #(struct:LamPositionalName argmax whalesong/lang/list.rkt 367 0 13235 46)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives[">"];
M.e[M.e.length-2]=sym1015;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1139=function(M){if(--M.cbt<0){throw _1139;}

//"lambda body for #(struct:LamPositionalName argmin whalesong/lang/list.rkt 366 0 13188 46)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.primitives["<"];
M.e[M.e.length-2]=sym1016;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1609=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e.push(M.e[M.e.length-12]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-12]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1608=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1609)(M);};


var _1602=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1606,M.p));
return((M.p).label)(M);};

var _1601=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1602)(M);};

var _1604=function(M){if(M.v===false){return(_1601)(M);}else{M.v=RT.VOID;
return(_1602)(M);}};

var _1603=function(M){M.v=false;
return(_1604)(M);};

var _1598=function(M){M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_1603)(M);}else{M.v=RT.isPair(M.e[M.e.length-5]);
return(_1604)(M);}};

var _1597=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1598)(M);};

var _1600=function(M){if(M.v===false){return(_1597)(M);}else{M.v=RT.VOID;
return(_1598)(M);}};

var _1599=function(M){M.v=false;
return(_1600)(M);};

var _1138=function(M){if(--M.cbt<0){throw _1138;}

//"lambda body for #(struct:LamPositionalName mk-min whalesong/lang/list.rkt 341 0 12292 894)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1599)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_1600)(M);}};

var _1589=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-8][70];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e.push(M.e[M.e.length-14]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1588=function(M){M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1592,M.p));
return((M.p).label)(M);};

var _1587=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="procedure that returns real numbers";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1588)(M);};


var _1582=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1585,M.p));
return((M.p).label)(M);};

var _1137=function(M){if(--M.cbt<0){throw _1137;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 351 4 12715 469)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_1582)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1579=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1578=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1017;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1579)(M);};

var _1575=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1578)(M);}else{M.v=RT.VOID;
return(_1579)(M);}};

var _1574=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1017;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1575)(M);};

var _1577=function(M){if(M.v===false){return(_1574)(M);}else{M.v=RT.VOID;
return(_1575)(M);}};

var _1576=function(M){M.v=false;
return(_1577)(M);};

var _1136=function(M){if(--M.cbt<0){throw _1136;}

//"lambda body for #(struct:LamPositionalName filter-not whalesong/lang/list.rkt 324 0 11634 500)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1576)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_1577)(M);}};

var _1569=function(M){M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1568=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1569)(M);};


var _1566=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][69];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-5]);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1571,M.p));
return((M.p).label)(M);};

var _1135=function(M){if(--M.cbt<0){throw _1135;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 332 2 11989 144)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1566)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["reverse"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _1134=function(M){if(--M.cbt<0){throw _1134;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:320:15 whalesong/lang/list.rkt 320 15 11488 46)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["map"];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1563,M.p));
return((M.p).label)(M);};

var _1133=function(M){if(--M.cbt<0){throw _1133;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:319:15 whalesong/lang/list.rkt 319 15 11432 40)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1559,M.p));
return((M.p).label)(M);};

var _1552=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1132)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1134)(M);}};

var _1551=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1552)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1133)(M);}};

var _1131=function(M){if(--M.cbt<0){throw _1131;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1551)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1132)(M);}};

var _1548=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][68];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=RT.NULL;
M.e[M.e.length-4]=RT.NULL;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1547=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1018;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1548)(M);};

var _1544=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1547)(M);}else{M.v=RT.VOID;
return(_1548)(M);}};

var _1543=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1018;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1544)(M);};

var _1546=function(M){if(M.v===false){return(_1543)(M);}else{M.v=RT.VOID;
return(_1544)(M);}};

var _1545=function(M){M.v=false;
return(_1546)(M);};

var _1130=function(M){if(--M.cbt<0){throw _1130;}

//"lambda body for #(struct:LamPositionalName partition whalesong/lang/list.rkt 307 0 10913 435)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1545)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_1546)(M);}};

var _1535=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][68];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.v=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-11]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1529=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1538,M.p));
return((M.p).label)(M);};

var _1129=function(M){if(--M.cbt<0){throw _1129;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 311 2 11151 196)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1529)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1523=function(M){M.p=_1128_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_1128)(M);};

var _1522=function(M){M.e[M.e.length-3]=M.e[M.e.length-6];
return(_1523)(M);};


var _1520=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e.push(M.e[M.e.length-4]);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1525,M.p));
return((M.p).label)(M);};


var _1516=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1128=function(M){if(--M.cbt<0){throw _1128;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 289 4 10141 90)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_1520)(M);}else{M.v=M.e[M.e.length-3];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1505=function(M){M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1019;
M.e[M.e.length-2]="all lists must have same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1508=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1510,M.p));
return((M.p).label)(M);};

var _1507=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_1508)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_1508)(M);}};

var _1127=function(M){if(--M.cbt<0){throw _1127;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:282:18 whalesong/lang/list.rkt 282 18 9859 31)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1519,M.p));
return((M.p).label)(M);};


var _1500=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=0;
M.p=_1128_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_1128)(M);};


var _1126=function(M){if(--M.cbt<0){throw _1126;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:279:12 whalesong/lang/list.rkt 279 12 9744 36)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_1516)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1493=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1500)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1503,M.p));
return((M.p).label)(M);}};

var _1492=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1019;
M.e[M.e.length-2]="proper list";
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["ormap"];
M.e[M.e.length-1]=_1126_c;
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1499,M.p));
return((M.p).label)(M);};

var _1495=function(M){if(M.v===false){return(_1492)(M);}else{M.v=RT.VOID;
return(_1493)(M);}};


var _1494=function(M){M.v=false;
return(_1495)(M);};


var _1485=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1494)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.primitives["list?"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1497,M.p));
return((M.p).label)(M);}};

var _1484=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1019;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1491,M.p));
return((M.p).label)(M);};

var _1487=function(M){if(M.v===false){return(_1484)(M);}else{M.v=RT.VOID;
return(_1485)(M);}};


var _1486=function(M){M.v=false;
return(_1487)(M);};

var _1125=function(M){if(--M.cbt<0){throw _1125;}

//"lambda body for #(struct:LamPositionalName count whalesong/lang/list.rkt 272 0 9446 787)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1486)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1489,M.p));
return((M.p).label)(M);}};

var _1477=function(M){M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1476=function(M){M.v=M.e[M.e.length-9];
return(_1477)(M);};




var _1472=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][67];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1475,M.p));
return((M.p).label)(M);};

var _1124=function(M){if(--M.cbt<0){throw _1124;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 283 8 9903 176)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1472)(M);}else{M.v=M.e[M.e.length-5];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1466=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1464=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1123_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1123)(M);};


var _1459=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1462,M.p));
return((M.p).label)(M);};


var _1455=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1123=function(M){if(--M.cbt<0){throw _1123;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 265 4 9222 140)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_1459)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1444=function(M){M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1020;
M.e[M.e.length-2]="all lists must have same size";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1447=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1449,M.p));
return((M.p).label)(M);};

var _1446=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_1447)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_1447)(M);}};

var _1122=function(M){if(--M.cbt<0){throw _1122;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:256:18 whalesong/lang/list.rkt 256 18 8870 31)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1458,M.p));
return((M.p).label)(M);};


var _1439=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_1123_c;
M.a=2;
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return(_1123)(M);};


var _1121=function(M){if(--M.cbt<0){throw _1121;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:253:12 whalesong/lang/list.rkt 253 12 8755 36)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_1455)(M);}else{M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1432=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1439)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1442,M.p));
return((M.p).label)(M);}};

var _1431=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1020;
M.e[M.e.length-2]="proper list";
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["ormap"];
M.e[M.e.length-1]=_1121_c;
M.v=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-9]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1438,M.p));
return((M.p).label)(M);};

var _1434=function(M){if(M.v===false){return(_1431)(M);}else{M.v=RT.VOID;
return(_1432)(M);}};


var _1433=function(M){M.v=false;
return(_1434)(M);};


var _1424=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1433)(M);}else{M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.primitives["list?"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1436,M.p));
return((M.p).label)(M);}};

var _1423=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1020;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="procedure (arity ~a)";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1430,M.p));
return((M.p).label)(M);};

var _1426=function(M){if(M.v===false){return(_1423)(M);}else{M.v=RT.VOID;
return(_1424)(M);}};


var _1425=function(M){M.v=false;
return(_1426)(M);};

var _1120=function(M){if(--M.cbt<0){throw _1120;}

//"lambda body for #(struct:LamPositionalName filter-map whalesong/lang/list.rkt 246 0 8442 922)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1425)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1428,M.p));
return((M.p).label)(M);}};




var _1413=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][66];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1420,M.p));
return((M.p).label)(M);};



var _1406=function(M){M.e.push(void(0));
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-3]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1409,M.p));
return((M.p).label)(M);};

var _1119=function(M){if(--M.cbt<0){throw _1119;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 257 8 8914 241)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1406)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _1402=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1405,M.p));
return((M.p).label)(M);};

var _1400=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_1402)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1398=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1021;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1118=function(M){if(--M.cbt<0){throw _1118;}

//"lambda body for #(struct:LamPositionalName add-between whalesong/lang/list.rkt 176 0 5304 349)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1398)(M);}else{M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_1400)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _1394=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-6][65];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1397,M.p));
return((M.p).label)(M);};

var _1117=function(M){if(--M.cbt<0){throw _1117;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 181 20 5502 147)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1394)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1388=function(M){M.p=_1116_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1116)(M);};


var _1386=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1384=function(M){M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_1386)(M);}else{M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.p=_1116_c;
M.a=2;
M.c.push(new RT.CallFrame(_1390,M.p));
return(_1116)(M);}};

var _1116=function(M){if(--M.cbt<0){throw _1116;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 169 2 5055 168)"

M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_1384)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1115=function(M){if(--M.cbt<0){throw _1115;}

//"lambda body for #(struct:LamPositionalName flatten whalesong/lang/list.rkt 168 0 5025 199)"

M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=RT.NULL;
M.p=_1116_c;
M.a=2;
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return(_1116)(M);};

var _1114=function(M){if(--M.cbt<0){throw _1114;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:166:15 whalesong/lang/list.rkt 166 15 4983 38)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["apply"];
M.e[M.e.length-2]=M.primitives["append"];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1113=function(M){if(--M.cbt<0){throw _1113;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:165:15 whalesong/lang/list.rkt 165 15 4925 42)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1369=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 5]).racketArity,M.a)){return(_1110)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 5];
return(_1114)(M);}};

var _1112=function(M){if(--M.cbt<0){throw _1112;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:164:15 whalesong/lang/list.rkt 164 15 4873 36)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1368=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_1369)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_1113)(M);}};

var _1111=function(M){if(--M.cbt<0){throw _1111;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:163:15 whalesong/lang/list.rkt 163 15 4827 30)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1367=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1368)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1112)(M);}};

var _1366=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1367)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1111)(M);}};

var _1109=function(M){if(--M.cbt<0){throw _1109;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1366)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1110)(M);}};


var _1360=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][22];
M.e[M.e.length-1]=sym1022;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1363,M.p));
return((M.p).label)(M);};


var _1356=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][21];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1358,M.p));
return((M.p).label)(M);};

var _1355=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1022;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1356)(M);};

var _1108=function(M){if(--M.cbt<0){throw _1108;}

//"lambda body for #(struct:LamPositionalName split-at-right whalesong/lang/list.rkt 150 0 4278 453)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1355)(M);}else{M.v=RT.VOID;
return(_1356)(M);}};

var _1349=function(M){M.v=M.e[M.e.length-3];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1107=function(M){if(--M.cbt<0){throw _1107;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 153 2 4424 306)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1349)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][64];
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-5]);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1346=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1344=function(M){M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1106=function(M){while(true){if(--M.cbt<0){throw _1106;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 143 2 4028 247)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1344)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1106_c;
M.a=2;
M.c.push(new RT.CallFrame(_1348,M.p));
}}};


var _1337=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][22];
M.e[M.e.length-1]=sym1023;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1340,M.p));
return((M.p).label)(M);};


var _1333=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1335,M.p));
return((M.p).label)(M);};

var _1332=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1023;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1333)(M);};

var _1105=function(M){if(--M.cbt<0){throw _1105;}

//"lambda body for #(struct:LamPositionalName drop-right whalesong/lang/list.rkt 140 0 3890 386)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1332)(M);}else{M.v=RT.VOID;
return(_1333)(M);}};

var _1327=function(M){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1104=function(M){if(--M.cbt<0){throw _1104;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 133 2 3657 230)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1327)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1104_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1104)(M);}};


var _1320=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][22];
M.e[M.e.length-1]=sym1024;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1323,M.p));
return((M.p).label)(M);};


var _1316=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][21];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1318,M.p));
return((M.p).label)(M);};

var _1315=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1024;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1316)(M);};

var _1103=function(M){if(--M.cbt<0){throw _1103;}

//"lambda body for #(struct:LamPositionalName take-right whalesong/lang/list.rkt 130 0 3512 376)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1315)(M);}else{M.v=RT.VOID;
return(_1316)(M);}};

var _1311=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][22];
M.e[M.e.length-1]=sym1025;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _1307=function(M){M.e.push(void(0));
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][21];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1309,M.p));
return((M.p).label)(M);};

var _1306=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1025;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1307)(M);};

var _1102=function(M){if(--M.cbt<0){throw _1102;}

//"lambda body for #(struct:LamPositionalName drop whalesong/lang/list.rkt 122 0 3176 253)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1306)(M);}else{M.v=RT.VOID;
return(_1307)(M);}};

var _1303=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1302=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1026;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1303)(M);};

var _1101=function(M){if(--M.cbt<0){throw _1101;}

//"lambda body for #(struct:LamPositionalName split-at whalesong/lang/list.rkt 114 0 2812 362)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1302)(M);}else{M.v=RT.VOID;
return(_1303)(M);}};

var _1296=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][22];
M.e[M.e.length-1]=sym1026;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1292=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1296)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][63];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-9]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=RT.checkedSub1(M, M.e[M.e.length-10]);
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-13];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1100=function(M){if(--M.cbt<0){throw _1100;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 117 2 2958 215)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-5]);
if(M.v===false){return(_1292)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1289=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1288=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1027;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_1289)(M);};

var _1099=function(M){if(--M.cbt<0){throw _1099;}

//"lambda body for #(struct:LamPositionalName take whalesong/lang/list.rkt 106 0 2498 312)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1288)(M);}else{M.v=RT.VOID;
return(_1289)(M);}};


var _1282=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][22];
M.e[M.e.length-1]=sym1027;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1280=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_1282)(M);}else{M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][62];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-11]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1285,M.p));
return((M.p).label)(M);}};

var _1098=function(M){if(--M.cbt<0){throw _1098;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 109 2 2636 173)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-5]);
if(M.v===false){return(_1280)(M);}else{M.v=RT.NULL;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1279=function(M){M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1278=function(M){M.e[M.e.length-3]=" (not a proper list)";
return(_1279)(M);};

var _1097=function(M){if(--M.cbt<0){throw _1097;}

//"lambda body for #(struct:LamPositionalName too-large whalesong/lang/list.rkt 99 0 2322 174)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="index ~e too large for list~a: ";
M.e[M.e.length-2]=M.e[M.e.length-10];
M.v=RT.isList(M.e[M.e.length-9]);
if(M.v===false){return(_1278)(M);}else{M.e[M.e.length-3]="";
return(_1279)(M);}};

var _1274=function(M){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1272=function(M){M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1274)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][21];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1096=function(M){if(--M.cbt<0){throw _1096;}

//"lambda body for #(struct:LamPositionalName drop* whalesong/lang/list.rkt 97 0 2175 146)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-3]);
if(M.v===false){return(_1272)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1269=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1268=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1028;
M.e[M.e.length-2]="non-negative exact integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_1269)(M);};

var _1095=function(M){if(--M.cbt<0){throw _1095;}

//"lambda body for #(struct:LamPositionalName make-list whalesong/lang/list.rkt 90 0 1943 208)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_1268)(M);}else{M.v=RT.VOID;
return(_1269)(M);}};

var _1264=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][61];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedSub1(M, M.e[M.e.length-6]);
M.v=RT.makePair(M.e[M.e.length-5],M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1094=function(M){if(--M.cbt<0){throw _1094;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 93 2 2076 74)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-3]);
if(M.v===false){return(_1264)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1093=function(M){if(--M.cbt<0){throw _1093;}

//"lambda body for #(struct:LamPositionalName empty? whalesong/lang/list.rkt 87 15 1899 22)"

M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1092=function(M){if(--M.cbt<0){throw _1092;}

//"lambda body for #(struct:LamPositionalName cons? whalesong/lang/list.rkt 86 14 1860 22)"

M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1260=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1029;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1263=function(M){if(M.v===false){return(_1260)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1262=function(M){M.v=false;
return(_1263)(M);};

var _1091=function(M){if(--M.cbt<0){throw _1091;}

//"lambda body for #(struct:LamPositionalName rest whalesong/lang/list.rkt 81 0 1734 110)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1262)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_1263)(M);}};

var _1255=function(M){M.v=RT.checkedCar(M, M.e[M.e.length-1]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1090=function(M){if(--M.cbt<0){throw _1090;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 75 4 1590 92)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1255)(M);}else{M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1090_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1090)(M);}};

var _1248=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1030;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1251=function(M){if(M.v===false){return(_1248)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1090_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1090)(M);}};

var _1250=function(M){M.v=false;
return(_1251)(M);};

var _1089=function(M){if(--M.cbt<0){throw _1089;}

//"lambda body for #(struct:LamPositionalName last whalesong/lang/list.rkt 73 0 1537 195)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1250)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_1251)(M);}};

var _1243=function(M){M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1088=function(M){if(--M.cbt<0){throw _1088;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 67 4 1404 86)"

M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1243)(M);}else{M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1088_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1088)(M);}};

var _1238=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1031;
M.e[M.e.length-2]="pair";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1087=function(M){if(--M.cbt<0){throw _1087;}

//"lambda body for #(struct:LamPositionalName last-pair whalesong/lang/list.rkt 65 0 1362 173)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1238)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1088_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1088)(M);}};

var _1234=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1032;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1086=function(M){if(--M.cbt<0){throw _1086;}

//"lambda body for #(struct:LamPositionalName tenth whalesong/lang/list.rkt 63 0 1333 27)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1234)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=10;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1230=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1228=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1032;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=10;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1085=function(M){if(--M.cbt<0){throw _1085;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1228)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1230)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1224=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1033;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1084=function(M){if(--M.cbt<0){throw _1084;}

//"lambda body for #(struct:LamPositionalName ninth whalesong/lang/list.rkt 62 0 1306 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1224)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=9;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1220=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][59];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1218=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1033;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=9;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1083=function(M){if(--M.cbt<0){throw _1083;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1218)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1220)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1214=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1034;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1082=function(M){if(--M.cbt<0){throw _1082;}

//"lambda body for #(struct:LamPositionalName eighth whalesong/lang/list.rkt 61 0 1279 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1214)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=8;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1210=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1208=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1034;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=8;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1081=function(M){if(--M.cbt<0){throw _1081;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1208)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1210)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1204=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1035;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1080=function(M){if(--M.cbt<0){throw _1080;}

//"lambda body for #(struct:LamPositionalName seventh whalesong/lang/list.rkt 60 0 1252 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1204)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=7;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1200=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1198=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1035;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=7;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1079=function(M){if(--M.cbt<0){throw _1079;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1198)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1200)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1194=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1036;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1078=function(M){if(--M.cbt<0){throw _1078;}

//"lambda body for #(struct:LamPositionalName sixth whalesong/lang/list.rkt 59 0 1225 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1194)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=6;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1190=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1188=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1036;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=6;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1077=function(M){if(--M.cbt<0){throw _1077;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1188)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1190)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1184=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1037;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1076=function(M){if(--M.cbt<0){throw _1076;}

//"lambda body for #(struct:LamPositionalName fifth whalesong/lang/list.rkt 58 0 1198 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1184)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=5;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1180=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1178=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1037;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=5;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1075=function(M){if(--M.cbt<0){throw _1075;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1178)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1180)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1174=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1038;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1074=function(M){if(--M.cbt<0){throw _1074;}

//"lambda body for #(struct:LamPositionalName fourth whalesong/lang/list.rkt 57 0 1171 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1174)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=4;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1170=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1168=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1038;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=4;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1073=function(M){if(--M.cbt<0){throw _1073;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1168)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1170)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1164=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1039;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1072=function(M){if(--M.cbt<0){throw _1072;}

//"lambda body for #(struct:LamPositionalName third whalesong/lang/list.rkt 56 0 1144 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1164)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=3;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1160=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1158=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1039;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=3;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1071=function(M){if(--M.cbt<0){throw _1071;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1158)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1160)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1154=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1040;
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1070=function(M){if(--M.cbt<0){throw _1070;}

//"lambda body for #(struct:LamPositionalName second whalesong/lang/list.rkt 55 0 1117 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_1154)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=2;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1150=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][52];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=RT.checkedSub1(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1148=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1040;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="list with ~a or more items";
M.e[M.e.length-2]=2;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1069=function(M){if(--M.cbt<0){throw _1069;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/list.rkt 49 9 849 218)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_1148)(M);}else{M.v=(M.e[M.e.length-4]===1);
if(M.v===false){return(_1150)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1144=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1041;
M.e[M.e.length-2]="non-empty list";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1147=function(M){if(M.v===false){return(_1144)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1146=function(M){M.v=false;
return(_1147)(M);};

var _1068=function(M){if(--M.cbt<0){throw _1068;}

//"lambda body for #(struct:LamPositionalName first whalesong/lang/list.rkt 39 0 613 112)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_1146)(M);}else{M.v=RT.isList(M.e[M.e.length-2]);
return(_1147)(M);}};

var _1141=function(M){M.c.push(new RT.CallFrame(_1143,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/list.rkt"]=function(){return new RT.ModuleRecord("list",_1617);}
return(_1616)(M);};

var _1132=function(M){if(--M.cbt<0){throw _1132;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:318:15 whalesong/lang/list.rkt 318 15 11384 32)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1555,M.p));
return((M.p).label)(M);};

var _1110=function(M){if(--M.cbt<0){throw _1110;}

//"lambda body for #(struct:LamPositionalName ...ng/lang/list.rkt:162:15 whalesong/lang/list.rkt 162 15 4764 24)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["append"];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1359=function(M){M.e.pop();
M.v=RT.NULL;
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1336=function(M){M.e.pop();
M.p=_1106_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1106)(M);};

var _1319=function(M){M.e.pop();
M.p=_1104_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1104)(M);};

_1619.mvr=_1618;
_1621.mvr=_1620;
_1623.mvr=_1622;
_1625.mvr=_1624;
_1627.mvr=_1626;
_1629.mvr=_1628;
_1631.mvr=_1630;
_1633.mvr=_1632;
_1635.mvr=_1634;
_1637.mvr=_1636;
_1639.mvr=_1638;
_1641.mvr=_1640;
_1643.mvr=_1642;
_1645.mvr=_1644;
_1647.mvr=_1646;
_1649.mvr=_1648;
_1651.mvr=_1650;
_1653.mvr=_1652;
_1655.mvr=_1654;
_1657.mvr=_1656;
_1659.mvr=_1658;
_1661.mvr=_1660;
_1663.mvr=_1662;
_1665.mvr=_1664;
_1667.mvr=_1666;
_1669.mvr=_1668;
_1671.mvr=_1670;
_1673.mvr=_1672;
_1675.mvr=_1674;
_1677.mvr=_1676;
_1679.mvr=_1678;
_1681.mvr=_1680;
_1683.mvr=_1682;
_1685.mvr=_1684;
_1687.mvr=_1686;
_1689.mvr=_1688;
_1691.mvr=_1690;
_1693.mvr=_1692;
_1695.mvr=_1694;
_1697.mvr=_1696;
_1699.mvr=_1698;
_1701.mvr=_1700;
_1703.mvr=_1702;
_1705.mvr=_1704;
_1707.mvr=_1706;
_1709.mvr=_1708;
_1711.mvr=_1710;
_1713.mvr=_1712;
_1715.mvr=_1714;
_1717.mvr=_1716;
_1719.mvr=_1718;
_1721.mvr=_1720;
_1723.mvr=_1722;
_1725.mvr=_1724;
_1727.mvr=_1726;
_1143.mvr=_1142;
var sym1015=RT.makeSymbol("argmax");
var sym1040=RT.makeSymbol("second");
var sym1039=RT.makeSymbol("third");
var sym1041=RT.makeSymbol("first");
var sym1038=RT.makeSymbol("fourth");
var sym1037=RT.makeSymbol("fifth");
var sym1035=RT.makeSymbol("seventh");
var sym1034=RT.makeSymbol("eighth");
var sym1036=RT.makeSymbol("sixth");
var sym1032=RT.makeSymbol("tenth");
var sym1031=RT.makeSymbol("last-pair");
var sym1033=RT.makeSymbol("ninth");
var sym1028=RT.makeSymbol("make-list");
var sym1029=RT.makeSymbol("rest");
var sym1027=RT.makeSymbol("take");
var sym1025=RT.makeSymbol("drop");
var sym1026=RT.makeSymbol("split-at");
var sym1024=RT.makeSymbol("take-right");
var sym1023=RT.makeSymbol("drop-right");
var sym1022=RT.makeSymbol("split-at-right");
var sym1030=RT.makeSymbol("last");
var sym1019=RT.makeSymbol("count");
var sym1021=RT.makeSymbol("add-between");
var sym1020=RT.makeSymbol("filter-map");
var sym1018=RT.makeSymbol("partition");
var sym1017=RT.makeSymbol("filter-not");
var sym1016=RT.makeSymbol("argmin");var _1123_c=new RT.Closure(_1123,2,void(0),"loop");
var _1104_c=new RT.Closure(_1104,2,void(0),"loop");
var _1126_c=new RT.Closure(_1126,1,void(0),"...ng/lang/list.rkt:279:12");
var _1093_c=new RT.Closure(_1093,1,void(0),"empty?");
var _1092_c=new RT.Closure(_1092,1,void(0),"cons?");
var _1088_c=new RT.Closure(_1088,2,void(0),"loop");
var _1128_c=new RT.Closure(_1128,3,void(0),"loop");
var _1121_c=new RT.Closure(_1121,1,void(0),"...ng/lang/list.rkt:253:12");
var _1106_c=new RT.Closure(_1106,2,void(0),"loop");
var _1090_c=new RT.Closure(_1090,2,void(0),"loop");
var _1116_c=new RT.Closure(_1116,2,void(0),"loop");
var _1115_c=new RT.Closure(_1115,1,void(0),"flatten");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_1728(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/list.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/list.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/map.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _1988=function(M){return(_1753)(M);};

var _1987=function(M){if(--M.cbt<0){throw _1987;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("andmap2", prefix[selfMod.getPrefixOffset("andmap2")]);extNs.set("andmap", prefix[selfMod.getPrefixOffset("andmap2")]);ns.set("for-each2", prefix[selfMod.getPrefixOffset("for-each2")]);extNs.set("for-each", prefix[selfMod.getPrefixOffset("for-each2")]);ns.set("map2", prefix[selfMod.getPrefixOffset("map2")]);extNs.set("map", prefix[selfMod.getPrefixOffset("map2")]);ns.set("ormap2", prefix[selfMod.getPrefixOffset("ormap2")]);extNs.set("ormap", prefix[selfMod.getPrefixOffset("ormap2")]);}(M.modules["whalesong/lang/private/map.rkt"],M.modules["whalesong/lang/private/map.rkt"].getExports(),M.modules["whalesong/lang/private/map.rkt"].getExternalExports(),M.modules["whalesong/lang/private/map.rkt"].prefix));
return(M.p)(M);};

var _1985=function(M){if(--M.cbt<0){throw _1985;}
M.c.push(new RT.CallFrame(_1987,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1748,2,[M.e[M.e.length-4]],".../private/map.rkt:97:11");
M.e[M.e.length-2]=new RT.Closure(_1750,3,[M.e[M.e.length-4]],".../private/map.rkt:108:11");
M.e[M.e.length-3]=new RT.Closure(_1752,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:122:11");
M.v=new RT.Closure(_1747,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"ormap");
M.e.length-=3;
M.e[M.e.length-1][10]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1983=function(M){if(--M.cbt<0){throw _1983;}
M.c.push(new RT.CallFrame(_1985,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1742,2,[M.e[M.e.length-4]],".../private/map.rkt:66:11");
M.e[M.e.length-2]=new RT.Closure(_1744,3,[M.e[M.e.length-4]],".../private/map.rkt:77:11");
M.e[M.e.length-3]=new RT.Closure(_1746,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:91:11");
M.v=new RT.Closure(_1741,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"andmap");
M.e.length-=3;
M.e[M.e.length-1][8]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1981=function(M){if(--M.cbt<0){throw _1981;}
M.c.push(new RT.CallFrame(_1983,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1738,2,[M.e[M.e.length-4]],".../private/map.rkt:39:11");
M.e[M.e.length-2]=new RT.Closure(_1739,3,[M.e[M.e.length-4]],".../private/map.rkt:48:11");
M.e[M.e.length-3]=new RT.Closure(_1740,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:60:11");
M.v=new RT.Closure(_1737,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"for-each");
M.e.length-=3;
M.e[M.e.length-1][5]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1979=function(M){if(--M.cbt<0){throw _1979;}
M.c.push(new RT.CallFrame(_1981,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1736,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][13]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1977=function(M){if(--M.cbt<0){throw _1977;}
M.c.push(new RT.CallFrame(_1979,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1735,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1755=function(M){if(--M.cbt<0){throw _1755;}
};

var _1965=function(M){if(--M.cbt<0){throw _1965;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1967)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1952=function(M){if(--M.cbt<0){throw _1952;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1942)(M);};

var _1950=function(M){if(--M.cbt<0){throw _1950;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1952,M.p));
return((M.p).label)(M);};

var _1932=function(M){if(--M.cbt<0){throw _1932;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_1934)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1905=function(M){if(--M.cbt<0){throw _1905;}
if(M.v===false){return(_1902)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_1745_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_1745)(M);}};

var _1890=function(M){if(--M.cbt<0){throw _1890;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1880)(M);};

var _1888=function(M){if(--M.cbt<0){throw _1888;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1890,M.p));
return((M.p).label)(M);};

var _1873=function(M){if(--M.cbt<0){throw _1873;}
if(M.v===false){return(_1870)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1743_c;
M.a=2;
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return(_1743)(M);}};

var _1843=function(M){if(--M.cbt<0){throw _1843;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1833)(M);};

var _1841=function(M){if(--M.cbt<0){throw _1841;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1843,M.p));
return((M.p).label)(M);};

var _1814=function(M){if(--M.cbt<0){throw _1814;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1808=function(M){if(--M.cbt<0){throw _1808;}
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1802=function(M){if(--M.cbt<0){throw _1802;}
M.e[M.e.length-2]=M.v;
return(_1800)(M);};

var _1799=function(M){if(--M.cbt<0){throw _1799;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_1733_c;
M.a=3;
M.c.push(new RT.CallFrame(_1802,M.p));
return(_1733)(M);};

var _1790=function(M){if(--M.cbt<0){throw _1790;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_1780)(M);};

var _1788=function(M){if(--M.cbt<0){throw _1788;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1790,M.p));
return((M.p).label)(M);};

var _1776=function(M){if(--M.cbt<0){throw _1776;}
M.e[M.e.length-2]=M.v;
return(_1774)(M);};

var _1773=function(M){if(--M.cbt<0){throw _1773;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1731_c;
M.a=2;
M.c.push(new RT.CallFrame(_1776,M.p));
return(_1731)(M);};

var _1986=function(M){if(--M.cbt<0){throw _1986;}
M.e.length-=(M.a-1);
return(_1987)(M);};

var _1984=function(M){if(--M.cbt<0){throw _1984;}
M.e.length-=(M.a-1);
return(_1985)(M);};

var _1982=function(M){if(--M.cbt<0){throw _1982;}
M.e.length-=(M.a-1);
return(_1983)(M);};

var _1980=function(M){if(--M.cbt<0){throw _1980;}
M.e.length-=(M.a-1);
return(_1981)(M);};

var _1978=function(M){if(--M.cbt<0){throw _1978;}
M.e.length-=(M.a-1);
return(_1979)(M);};

var _1976=function(M){if(--M.cbt<0){throw _1976;}
M.e.length-=(M.a-1);
return(_1977)(M);};

var _1974=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1975=function(M){M.modules["whalesong/lang/private/map.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("map2")||M.primitives["map2"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["map"],M.primitives["length"],M.params.currentNamespace.get("for-each2")||M.primitives["for-each2"],M.primitives["void"],M.primitives["for-each"],M.params.currentNamespace.get("andmap2")||M.primitives["andmap2"],M.primitives["andmap"],M.params.currentNamespace.get("ormap2")||M.primitives["ormap2"],M.primitives["ormap"],false,false]);M.e[M.e.length-1].names=["map2","procedure?","procedure-arity-includes?","map","length","for-each2","void","for-each","andmap2","andmap","ormap2","ormap",false,false];
M.modules["whalesong/lang/private/map.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_1977,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_1730,2,[M.e[M.e.length-4]],".../private/map.rkt:12:11");
M.e[M.e.length-2]=new RT.Closure(_1732,3,[M.e[M.e.length-4]],".../private/map.rkt:21:11");
M.e[M.e.length-3]=new RT.Closure(_1734,(RT.makeArityAtLeast(1)),[M.e[M.e.length-4]],".../private/map.rkt:33:11");
M.v=new RT.Closure(_1729,RT.makePair(2,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"map");
M.e.length-=3;
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1754=function(M){if(--M.cbt<0){throw _1754;}
M.e.length-=(M.a-1);
return(_1755)(M);};

var _1967=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_1751_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_1751)(M);};


var _1960=function(M){M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1965,M.p));
return((M.p).label)(M);};

var _1751=function(M){if(--M.cbt<0){throw _1751;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 116 20 3959 236)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_1960)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1953=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_1751_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_1751)(M);};

var _1939=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["ormap"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1942=function(M){if(M.v===false){return(_1939)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1953)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};



var _1947=function(M){M.v=false;
return(_1942)(M);};

var _1945=function(M){M.v=false;
return(_1942)(M);};

var _1943=function(M){M.v=false;
return(_1942)(M);};

var _1941=function(M){M.v=false;
return(_1942)(M);};

var _1934=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_1749_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1749)(M);};


var _1927=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-2]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1932,M.p));
return((M.p).label)(M);};

var _1749=function(M){if(--M.cbt<0){throw _1749;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 103 20 3466 162)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_1927)(M);}else{M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1920=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_1749_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1749)(M);};

var _1914=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["ormap"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1917=function(M){if(M.v===false){return(_1914)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1920)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1918=function(M){M.v=false;
return(_1917)(M);};

var _1916=function(M){M.v=false;
return(_1917)(M);};

var _1752=function(M){if(--M.cbt<0){throw _1752;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:122:11 whalesong/lang/private/map.rkt 122 11 4242 33)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["ormap"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1750=function(M){if(--M.cbt<0){throw _1750;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:108:11 whalesong/lang/private/map.rkt 108 11 3671 559)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1941)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1943)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1945)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_1947)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1950,M.p));
return((M.p).label)(M);}}}}};

var _1912=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1748)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1752)(M);}};

var _1911=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1912)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1750)(M);}};

var _1747=function(M){if(--M.cbt<0){throw _1747;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1911)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1748)(M);}};

var _1902=function(M){M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1898=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1905,M.p));
return((M.p).label)(M);};

var _1745=function(M){if(--M.cbt<0){throw _1745;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 85 20 2864 238)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_1898)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1891=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_1745_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_1745)(M);};

var _1877=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1880=function(M){if(M.v===false){return(_1877)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1891)(M);}else{M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};



var _1885=function(M){M.v=false;
return(_1880)(M);};

var _1883=function(M){M.v=false;
return(_1880)(M);};

var _1881=function(M){M.v=false;
return(_1880)(M);};

var _1879=function(M){M.v=false;
return(_1880)(M);};

var _1870=function(M){M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _1866=function(M){M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1873,M.p));
return((M.p).label)(M);};

var _1743=function(M){if(--M.cbt<0){throw _1743;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 72 20 2369 163)"

M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCdr(M, M.e[M.e.length-3]);
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
if(M.v===false){return(_1866)(M);}else{M.e.push(M.e[M.e.length-1]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1859=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_1743_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1743)(M);};

var _1853=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["andmap"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1856=function(M){if(M.v===false){return(_1853)(M);}else{M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1859)(M);}else{M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _1857=function(M){M.v=false;
return(_1856)(M);};

var _1855=function(M){M.v=false;
return(_1856)(M);};

var _1746=function(M){if(--M.cbt<0){throw _1746;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:91:11 whalesong/lang/private/map.rkt 91 11 3150 34)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["andmap"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1744=function(M){if(--M.cbt<0){throw _1744;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:77:11 whalesong/lang/private/map.rkt 77 11 2576 562)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1879)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1881)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1883)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_1885)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1888,M.p));
return((M.p).label)(M);}}}}};

var _1851=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1742)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1746)(M);}};

var _1850=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1851)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1744)(M);}};

var _1741=function(M){if(--M.cbt<0){throw _1741;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1850)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1742)(M);}};

var _1830=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["for-each"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1833=function(M){if(M.v===false){return(_1830)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][13];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _1838=function(M){M.v=false;
return(_1833)(M);};

var _1836=function(M){M.v=false;
return(_1833)(M);};

var _1834=function(M){M.v=false;
return(_1833)(M);};

var _1832=function(M){M.v=false;
return(_1833)(M);};

var _1820=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["for-each"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1823=function(M){if(M.v===false){return(_1820)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _1824=function(M){M.v=false;
return(_1823)(M);};

var _1822=function(M){M.v=false;
return(_1823)(M);};

var _1740=function(M){if(--M.cbt<0){throw _1740;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:60:11 whalesong/lang/private/map.rkt 60 11 2047 36)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["for-each"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1739=function(M){if(--M.cbt<0){throw _1739;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:48:11 whalesong/lang/private/map.rkt 48 11 1563 472)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1832)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1834)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1836)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_1838)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1841,M.p));
return((M.p).label)(M);}}}}};

var _1818=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1738)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1740)(M);}};

var _1817=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1818)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1739)(M);}};

var _1737=function(M){if(--M.cbt<0){throw _1737;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1817)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1738)(M);}};

var _1813=function(M){if(--M.cbt<0){throw _1813;}
M.e.length-=(M.a-1);
return(_1814)(M);};

var _1811=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1814,M.p));
return((M.p).label)(M);};

var _1736=function(M){if(--M.cbt<0){throw _1736;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 54 16 1793 205)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1811)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1807=function(M){if(--M.cbt<0){throw _1807;}
M.e.length-=(M.a-1);
return(_1808)(M);};

var _1805=function(M){M.e.push(M.e[M.e.length-2]);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1808,M.p));
return((M.p).label)(M);};

var _1735=function(M){if(--M.cbt<0){throw _1735;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 43 16 1376 142)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_1805)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1800=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1796=function(M){M.e.push(void(0),void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1799,M.p));
return((M.p).label)(M);};

var _1733=function(M){if(--M.cbt<0){throw _1733;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 27 16 872 201)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_1796)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1777=function(M){M.e.push(void(0),void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1780=function(M){if(M.v===false){return(_1777)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_1733_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_1733)(M);}};



var _1785=function(M){M.v=false;
return(_1780)(M);};

var _1783=function(M){M.v=false;
return(_1780)(M);};

var _1781=function(M){M.v=false;
return(_1780)(M);};

var _1779=function(M){M.v=false;
return(_1780)(M);};

var _1774=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _1770=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-3]);
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1773,M.p));
return((M.p).label)(M);};

var _1731=function(M){if(--M.cbt<0){throw _1731;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/map.rkt 16 16 463 139)"

M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_1770)(M);}else{M.v=RT.NULL;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1759=function(M){M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1762=function(M){if(M.v===false){return(_1759)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.p=_1731_c;
M.a=2;
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return(_1731)(M);}};

var _1763=function(M){M.v=false;
return(_1762)(M);};

var _1761=function(M){M.v=false;
return(_1762)(M);};

var _1734=function(M){if(--M.cbt<0){throw _1734;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:33:11 whalesong/lang/private/map.rkt 33 11 1117 31)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["map"];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1732=function(M){if(--M.cbt<0){throw _1732;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:21:11 whalesong/lang/private/map.rkt 21 11 642 463)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1779)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1781)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_1783)(M);}else{M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_1785)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_1788,M.p));
return((M.p).label)(M);}}}}};

var _1757=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_1730)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_1734)(M);}};

var _1756=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_1757)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_1732)(M);}};

var _1729=function(M){if(--M.cbt<0){throw _1729;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_1756)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_1730)(M);}};

var _1753=function(M){M.c.push(new RT.CallFrame(_1755,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/map.rkt"]=function(){return new RT.ModuleRecord("map",_1975);}
return(_1974)(M);};

var _1748=function(M){if(--M.cbt<0){throw _1748;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:97:11 whalesong/lang/private/map.rkt 97 11 3265 394)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1916)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1918)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_1917)(M);}}};

var _1742=function(M){if(--M.cbt<0){throw _1742;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:66:11 whalesong/lang/private/map.rkt 66 11 2168 396)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1855)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1857)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_1856)(M);}}};

var _1738=function(M){if(--M.cbt<0){throw _1738;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:39:11 whalesong/lang/private/map.rkt 39 11 1232 319)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1822)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1824)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_1823)(M);}}};

var _1730=function(M){if(--M.cbt<0){throw _1730;}

//"lambda body for #(struct:LamPositionalName .../private/map.rkt:12:11 whalesong/lang/private/map.rkt 12 11 319 311)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_1761)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_1763)(M);}else{M.v=RT.isList(M.e[M.e.length-3]);
return(_1762)(M);}}};

_1808.mvr=_1807;
_1814.mvr=_1813;
_1977.mvr=_1976;
_1979.mvr=_1978;
_1981.mvr=_1980;
_1983.mvr=_1982;
_1985.mvr=_1984;
_1987.mvr=_1986;
_1755.mvr=_1754;
var _1731_c=new RT.Closure(_1731,2,void(0),"loop");
var _1733_c=new RT.Closure(_1733,3,void(0),"loop");
var _1743_c=new RT.Closure(_1743,2,void(0),"loop");
var _1745_c=new RT.Closure(_1745,3,void(0),"loop");
var _1749_c=new RT.Closure(_1749,2,void(0),"loop");
var _1751_c=new RT.Closure(_1751,3,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_1988(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/map.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/map.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/with-handlers.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _2019=function(M){M.modules["whalesong/lang/private/with-handlers.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("check-with-handlers-in-context")||M.primitives["check-with-handlers-in-context"],M.primitives["error"],M.params.currentNamespace.get("handler-prompt-key")||M.primitives["handler-prompt-key"],M.primitives["make-continuation-prompt-tag"],M.params.currentNamespace.get("call-handled-body")||M.primitives["call-handled-body"],M.primitives["exception-handler-key"],M.params.currentNamespace.get("select-handler")||M.primitives["select-handler"],M.primitives["raise"],M.primitives["caar"],M.primitives["cdar"],false,false,false]);M.e[M.e.length-1].names=["check-with-handlers-in-context","error","handler-prompt-key","make-continuation-prompt-tag","call-handled-body","exception-handler-key","select-handler","raise","caar","cdar",false,false,false];
M.modules["whalesong/lang/private/with-handlers.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2021,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1989,1,[M.e[M.e.length-1]],"check-with-handlers-in-context");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1996=function(M){if(--M.cbt<0){throw _1996;}
M.e.length-=(M.a-1);
return(_1997)(M);};

var _1994=function(M){if(--M.cbt<0){throw _1994;}

//"lambda body for #(struct:LamPositionalName select-handler whalesong/lang/private/with-handlers.rkt 42 0 1205 167)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2008=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][12];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2006=function(M){M.e.push(void(0));
M.e[M.e.length-1]=(RT.testArgument(M,"caarpair",RT.isCaarPair,M.e[M.e.length-4],0,"caar")).first.first;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2011,M.p));
return((M.p).label)(M);};

var _1993=function(M){if(--M.cbt<0){throw _1993;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/with-handlers.rkt 43 2 1236 135)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2006)(M);}else{M.v=M.e[M.e.length-3];
M.e.push(M.e[M.e.length-2]);
M.a=1;
M.v=M.primitives["raise"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1992=function(M){if(--M.cbt<0){throw _1992;}

//"lambda body for #(struct:LamPositionalName call-handled-body whalesong/lang/private/with-handlers.rkt 19 0 505 696)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["call-with-continuation-prompt"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][11];
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][2];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1991=function(M){if(--M.cbt<0){throw _1991;}

//"lambda body for #(struct:LamPositionalName ...ith-handlers.rkt:21:3 whalesong/lang/private/with-handlers.rkt 21 3 592 556)"

M.e.push(M.p.closedVals[0]);
M.v=M.primitives["exception-handler-key"];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-1][10];
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1990=function(M){if(--M.cbt<0){throw _1990;}

//"lambda body for #(struct:LamPositionalName ...ith-handlers.rkt:30:7 whalesong/lang/private/with-handlers.rkt 30 7 978 148)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.p=M.primitives["abort-current-continuation"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-3][2];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _1998=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1099;
M.e[M.e.length-2]="exception handler used out of context";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1989=function(M){if(--M.cbt<0){throw _1989;}

//"lambda body for #(struct:LamPositionalName check-with-handlers-in-context whalesong/lang/private/with-handlers.rkt 10 0 239 202)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["continuation-prompt-available?"]._i(M);
M.e.pop();
if(M.v===false){return(_1998)(M);}else{M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _1995=function(M){M.c.push(new RT.CallFrame(_1997,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/with-handlers.rkt"]=function(){return new RT.ModuleRecord("with-handlers",_2019);}
return(_2018)(M);};

var _2034=function(M){return(_1995)(M);};

var _2033=function(M){if(--M.cbt<0){throw _2033;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["whalesong/lang/private/with-handlers.rkt"],M.modules["whalesong/lang/private/with-handlers.rkt"].getExports(),M.modules["whalesong/lang/private/with-handlers.rkt"].getExternalExports(),M.modules["whalesong/lang/private/with-handlers.rkt"].prefix));
return(M.p)(M);};

var _2031=function(M){if(--M.cbt<0){throw _2031;}
M.c.push(new RT.CallFrame(_2033,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1994,2,[M.e[M.e.length-1]],"select-handler");
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2029=function(M){if(--M.cbt<0){throw _2029;}
M.c.push(new RT.CallFrame(_2031,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1993,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2027=function(M){if(--M.cbt<0){throw _2027;}
M.c.push(new RT.CallFrame(_2029,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1992,2,[M.e[M.e.length-1]],"call-handled-body");
M.e[M.e.length-1][4]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2025=function(M){if(--M.cbt<0){throw _2025;}
M.c.push(new RT.CallFrame(_2027,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1991,1,[M.e[M.e.length-1]],"...ith-handlers.rkt:21:3");
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2023=function(M){if(--M.cbt<0){throw _2023;}
M.c.push(new RT.CallFrame(_2025,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_1990,1,[M.e[M.e.length-1]],"...ith-handlers.rkt:30:7");
M.e[M.e.length-1][10]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2021=function(M){if(--M.cbt<0){throw _2021;}
M.c.push(new RT.CallFrame(_2023,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.a=0;
M.v=M.primitives["make-continuation-prompt-tag"]._i(M);
M.e[M.e.length-1][2]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _1997=function(M){if(--M.cbt<0){throw _1997;}
};

var _2011=function(M){if(--M.cbt<0){throw _2011;}
if(M.v===false){return(_2008)(M);}else{M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["cdar"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2032=function(M){if(--M.cbt<0){throw _2032;}
M.e.length-=(M.a-1);
return(_2033)(M);};

var _2030=function(M){if(--M.cbt<0){throw _2030;}
M.e.length-=(M.a-1);
return(_2031)(M);};

var _2028=function(M){if(--M.cbt<0){throw _2028;}
M.e.length-=(M.a-1);
return(_2029)(M);};

var _2026=function(M){if(--M.cbt<0){throw _2026;}
M.e.length-=(M.a-1);
return(_2027)(M);};

var _2024=function(M){if(--M.cbt<0){throw _2024;}
M.e.length-=(M.a-1);
return(_2025)(M);};

var _2022=function(M){if(--M.cbt<0){throw _2022;}
M.e.length-=(M.a-1);
return(_2023)(M);};

var _2020=function(M){if(--M.cbt<0){throw _2020;}
M.e.length-=(M.a-1);
return(_2021)(M);};

var _2018=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_2021.mvr=_2020;
_2023.mvr=_2022;
_2025.mvr=_2024;
_2027.mvr=_2026;
_2029.mvr=_2028;
_2031.mvr=_2030;
_2033.mvr=_2032;
_1997.mvr=_1996;
var sym1099=RT.makeSymbol("with-handlers");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_2034(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/with-handlers.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/with-handlers.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/hash.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _2042=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1112;
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2043)(M);};

var _2035=function(M){if(--M.cbt<0){throw _2035;}

//"lambda body for #(struct:LamPositionalName hash-map whalesong/lang/private/hash.rkt 5 0 64 388)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["hash?"]._i(M);
M.e.pop();
if(M.v===false){return(_2042)(M);}else{M.v=RT.VOID;
return(_2043)(M);}};

var _2039=function(M){M.c.push(new RT.CallFrame(_2041,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/hash.rkt"]=function(){return new RT.ModuleRecord("hash",_2077);}
return(_2076)(M);};

var _2084=function(M){return(_2039)(M);};

var _2083=function(M){if(--M.cbt<0){throw _2083;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("hash-for-each", prefix[selfMod.getPrefixOffset("hash-for-each")]);extNs.set("hash-for-each", prefix[selfMod.getPrefixOffset("hash-for-each")]);ns.set("hash-map", prefix[selfMod.getPrefixOffset("hash-map")]);extNs.set("hash-map", prefix[selfMod.getPrefixOffset("hash-map")]);}(M.modules["whalesong/lang/private/hash.rkt"],M.modules["whalesong/lang/private/hash.rkt"].getExports(),M.modules["whalesong/lang/private/hash.rkt"].getExternalExports(),M.modules["whalesong/lang/private/hash.rkt"].prefix));
return(M.p)(M);};

var _2081=function(M){if(--M.cbt<0){throw _2081;}
M.c.push(new RT.CallFrame(_2083,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2038,2,[M.e[M.e.length-1]],"hash-for-each");
M.e[M.e.length-1][5]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2079=function(M){if(--M.cbt<0){throw _2079;}
M.c.push(new RT.CallFrame(_2081,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2037,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2041=function(M){if(--M.cbt<0){throw _2041;}
};

var _2065=function(M){if(--M.cbt<0){throw _2065;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2063=function(M){if(--M.cbt<0){throw _2063;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2065,M.p));
return((M.p).label)(M);};

var _2059=function(M){if(--M.cbt<0){throw _2059;}
M.e[M.e.length-2]=M.v;
return(_2057)(M);};

var _2056=function(M){if(--M.cbt<0){throw _2056;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2036_c;
M.a=3;
M.c.push(new RT.CallFrame(_2059,M.p));
return(_2036)(M);};

var _2054=function(M){if(--M.cbt<0){throw _2054;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2056,M.p));
return((M.p).label)(M);};

var _2082=function(M){if(--M.cbt<0){throw _2082;}
M.e.length-=(M.a-1);
return(_2083)(M);};

var _2080=function(M){if(--M.cbt<0){throw _2080;}
M.e.length-=(M.a-1);
return(_2081)(M);};

var _2078=function(M){if(--M.cbt<0){throw _2078;}
M.e.length-=(M.a-1);
return(_2079)(M);};

var _2076=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2077=function(M){M.modules["whalesong/lang/private/hash.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("hash-map")||M.primitives["hash-map"],M.primitives["raise-type-error"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.primitives["hash-keys"],M.params.currentNamespace.get("hash-for-each")||M.primitives["hash-for-each"],M.primitives["void"],false]);M.e[M.e.length-1].names=["hash-map","raise-type-error","procedure?","procedure-arity-includes?","hash-keys","hash-for-each","void",false];
M.modules["whalesong/lang/private/hash.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2079,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2035,2,[M.e[M.e.length-1]],"hash-map");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2040=function(M){if(--M.cbt<0){throw _2040;}
M.e.length-=(M.a-1);
return(_2041)(M);};

var _2071=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["hash-keys"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2070=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1113;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2071)(M);};

var _2073=function(M){if(M.v===false){return(_2070)(M);}else{M.v=RT.VOID;
return(_2071)(M);}};

var _2072=function(M){M.v=false;
return(_2073)(M);};

var _2069=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2072)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2073)(M);}};

var _2068=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1113;
M.e[M.e.length-2]="hash";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2069)(M);};

var _2038=function(M){if(--M.cbt<0){throw _2038;}

//"lambda body for #(struct:LamPositionalName hash-for-each whalesong/lang/private/hash.rkt 17 0 455 413)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["hash?"]._i(M);
M.e.pop();
if(M.v===false){return(_2068)(M);}else{M.v=RT.VOID;
return(_2069)(M);}};

var _2064=function(M){if(--M.cbt<0){throw _2064;}
M.e.length-=(M.a-1);
return(_2065)(M);};


var _2060=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2063,M.p));
return((M.p).label)(M);};

var _2037=function(M){if(--M.cbt<0){throw _2037;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/hash.rkt 22 2 694 173)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2060)(M);}else{M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.a=0;
M.v=M.primitives["void"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2057=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _2051=function(M){M.e.push(void(0),void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-7]);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["hash-ref"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-9]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2054,M.p));
return((M.p).label)(M);};

var _2036=function(M){if(--M.cbt<0){throw _2036;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/hash.rkt 10 2 288 163)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2051)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2045=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["hash-keys"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2036_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_2036)(M);};

var _2044=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1112;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2045)(M);};

var _2047=function(M){if(M.v===false){return(_2044)(M);}else{M.v=RT.VOID;
return(_2045)(M);}};

var _2046=function(M){M.v=false;
return(_2047)(M);};

var _2043=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2046)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2047)(M);}};

_2065.mvr=_2064;
_2079.mvr=_2078;
_2081.mvr=_2080;
_2083.mvr=_2082;
_2041.mvr=_2040;
var sym1113=RT.makeSymbol("hash-for-each");
var sym1112=RT.makeSymbol("hash-map");var _2036_c=new RT.Closure(_2036,3,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_2084(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/hash.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/hash.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/call-ec.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _2088=function(M){if(--M.cbt<0){throw _2088;}

//"lambda body for #(struct:LamPositionalName ...vate/call-ec.rkt:19:43 whalesong/lang/private/call-ec.rkt 19 43 562 76)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2102=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["abort-current-continuation"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=new RT.Closure(_2088,0,[M.e[M.e.length-5]],"...vate/call-ec.rkt:19:43");
M.a=1;
if(M.a===0){return(_2103)(M);}else{M.e.push(M.v);
return(_2103)(M);}};

var _2101=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym1145;
M.e[M.e.length-2]="escape continuation used out of context";
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=2;
return(_2102)(M);};

var _2098=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2097=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-2];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2098)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_2098)(M);}};

var _2087=function(M){if(--M.cbt<0){throw _2087;}

//"lambda body for #(struct:LamPositionalName ...vate/call-ec.rkt:15:11 whalesong/lang/private/call-ec.rkt 15 11 330 310)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.v=M.primitives["continuation-prompt-available?"]._i(M);
M.e.pop();
if(M.v===false){return(_2101)(M);}else{M.v=RT.VOID;
return(_2102)(M);}};

var _2094=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2093=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2094)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_2094)(M);}};

var _2086=function(M){if(--M.cbt<0){throw _2086;}

//"lambda body for #(struct:LamPositionalName ...vate/call-ec.rkt:14:3 whalesong/lang/private/call-ec.rkt 14 3 308 334)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.e.push(M.e[M.e.length-2]);
M.v=new RT.Closure(_2087,(RT.makeArityAtLeast(0)),[M.e[M.e.length-4],M.e[M.e.length-2]],"...vate/call-ec.rkt:15:11");
M.a=1;
if(M.a===0){return(_2097)(M);}else{M.e.push(M.v);
return(_2097)(M);}};

var _2085=function(M){if(--M.cbt<0){throw _2085;}

//"lambda body for #(struct:LamPositionalName call-with-escape-continuation whalesong/lang/private/call-ec.rkt 11 0 175 474)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(sym1146);
M.a=1;
M.v=M.primitives["make-continuation-prompt-tag"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["call-with-continuation-prompt"];
M.v=new RT.Closure(_2086,0,[M.e[M.e.length-4],M.e[M.e.length-5],M.e[M.e.length-3]],"...vate/call-ec.rkt:14:3");
M.a=1;
if(M.a===0){return(_2093)(M);}else{M.e.push(M.v);
return(_2093)(M);}};

var _2089=function(M){M.c.push(new RT.CallFrame(_2091,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/call-ec.rkt"]=function(){return new RT.ModuleRecord("call-ec",_2110);}
return(_2109)(M);};

var _2115=function(M){return(_2089)(M);};

var _2114=function(M){if(--M.cbt<0){throw _2114;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("call-with-escape-continuation", prefix[selfMod.getPrefixOffset("call-with-escape-continuation")]);extNs.set("call-with-escape-continuation", prefix[selfMod.getPrefixOffset("call-with-escape-continuation")]);ns.set("call/ec", prefix[selfMod.getPrefixOffset("call/ec")]);extNs.set("call/ec", prefix[selfMod.getPrefixOffset("call/ec")]);}(M.modules["whalesong/lang/private/call-ec.rkt"],M.modules["whalesong/lang/private/call-ec.rkt"].getExports(),M.modules["whalesong/lang/private/call-ec.rkt"].getExternalExports(),M.modules["whalesong/lang/private/call-ec.rkt"].prefix));
return(M.p)(M);};

var _2112=function(M){if(--M.cbt<0){throw _2112;}
M.c.push(new RT.CallFrame(_2114,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-3][0];
M.e[M.e.length-2]=sym1147;
M.v=M.primitives["procedure-rename"]._i(M);
M.e.length-=2;
M.e[M.e.length-1][3]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2091=function(M){if(--M.cbt<0){throw _2091;}
};

var _2113=function(M){if(--M.cbt<0){throw _2113;}
M.e.length-=(M.a-1);
return(_2114)(M);};

var _2111=function(M){if(--M.cbt<0){throw _2111;}
M.e.length-=(M.a-1);
return(_2112)(M);};

var _2109=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2110=function(M){M.modules["whalesong/lang/private/call-ec.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("call-with-escape-continuation")||M.primitives["call-with-escape-continuation"],M.primitives["make-continuation-prompt-tag"],M.primitives["error"],M.params.currentNamespace.get("call/ec")||M.primitives["call/ec"],M.primitives["procedure-rename"]]);M.e[M.e.length-1].names=["call-with-escape-continuation","make-continuation-prompt-tag","error","call/ec","procedure-rename"];
M.modules["whalesong/lang/private/call-ec.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2112,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2085,1,[M.e[M.e.length-1]],"call-with-escape-continuation");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2090=function(M){if(--M.cbt<0){throw _2090;}
M.e.length-=(M.a-1);
return(_2091)(M);};

var _2104=function(M){M.v=M.v;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2103=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_2104)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_2104)(M);}};

_2112.mvr=_2111;
_2114.mvr=_2113;
_2091.mvr=_2090;
var sym1147=RT.makeSymbol("call/ec");
var sym1145=RT.makeSymbol("call-with-escape-continuation");
var sym1146=RT.makeSymbol("escape");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_2115(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/call-ec.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/call-ec.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/list.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3059=function(M){return(_2211)(M);};

var _3057=RT.si_context_expected(2);

var _3053=function(M){if(--M.cbt<0){throw _3053;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("assf", prefix[selfMod.getPrefixOffset("assf")]);extNs.set("assf", prefix[selfMod.getPrefixOffset("assf")]);ns.set("assoc", prefix[selfMod.getPrefixOffset("assoc")]);extNs.set("assoc", prefix[selfMod.getPrefixOffset("assoc")]);ns.set("assq", prefix[selfMod.getPrefixOffset("assq")]);extNs.set("assq", prefix[selfMod.getPrefixOffset("assq")]);ns.set("assv", prefix[selfMod.getPrefixOffset("assv")]);extNs.set("assv", prefix[selfMod.getPrefixOffset("assv")]);ns.set("build-list", prefix[selfMod.getPrefixOffset("build-list")]);extNs.set("build-list", prefix[selfMod.getPrefixOffset("build-list")]);ns.set("build-string", prefix[selfMod.getPrefixOffset("build-string")]);extNs.set("build-string", prefix[selfMod.getPrefixOffset("build-string")]);ns.set("build-vector", prefix[selfMod.getPrefixOffset("build-vector")]);extNs.set("build-vector", prefix[selfMod.getPrefixOffset("build-vector")]);ns.set("compose", prefix[selfMod.getPrefixOffset("compose")]);extNs.set("compose", prefix[selfMod.getPrefixOffset("compose")]);ns.set("compose1", prefix[selfMod.getPrefixOffset("compose1")]);extNs.set("compose1", prefix[selfMod.getPrefixOffset("compose1")]);ns.set("filter", prefix[selfMod.getPrefixOffset("filter")]);extNs.set("filter", prefix[selfMod.getPrefixOffset("filter")]);ns.set("findf", prefix[selfMod.getPrefixOffset("findf")]);extNs.set("findf", prefix[selfMod.getPrefixOffset("findf")]);ns.set("foldl", prefix[selfMod.getPrefixOffset("foldl")]);extNs.set("foldl", prefix[selfMod.getPrefixOffset("foldl")]);ns.set("foldr", prefix[selfMod.getPrefixOffset("foldr")]);extNs.set("foldr", prefix[selfMod.getPrefixOffset("foldr")]);ns.set("memf", prefix[selfMod.getPrefixOffset("memf")]);extNs.set("memf", prefix[selfMod.getPrefixOffset("memf")]);ns.set("remove", prefix[selfMod.getPrefixOffset("remove")]);extNs.set("remove", prefix[selfMod.getPrefixOffset("remove")]);ns.set("remove*", prefix[selfMod.getPrefixOffset("remove*")]);extNs.set("remove*", prefix[selfMod.getPrefixOffset("remove*")]);ns.set("remq", prefix[selfMod.getPrefixOffset("remq")]);extNs.set("remq", prefix[selfMod.getPrefixOffset("remq")]);ns.set("remq*", prefix[selfMod.getPrefixOffset("remq*")]);extNs.set("remq*", prefix[selfMod.getPrefixOffset("remq*")]);ns.set("remv", prefix[selfMod.getPrefixOffset("remv")]);extNs.set("remv", prefix[selfMod.getPrefixOffset("remv")]);ns.set("remv*", prefix[selfMod.getPrefixOffset("remv*")]);extNs.set("remv*", prefix[selfMod.getPrefixOffset("remv*")]);}(M.modules["whalesong/lang/private/list.rkt"],M.modules["whalesong/lang/private/list.rkt"].getExports(),M.modules["whalesong/lang/private/list.rkt"].getExternalExports(),M.modules["whalesong/lang/private/list.rkt"].prefix));
return(M.p)(M);};

var _3051=function(M){if(--M.cbt<0){throw _3051;}
M.c.push(new RT.CallFrame(_3053,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2202,1,[M.e[M.e.length-6]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_2203,2,[M.e[M.e.length-6]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=_2204_c;
M.e[M.e.length-4]=new RT.Closure(_2205,(RT.makeArityAtLeast(1)),[M.e[M.e.length-6]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_2201,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose1");
M.e.length-=4;
M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2207,1,[M.e[M.e.length-7]],"...private/list.rkt:394:12");
M.e[M.e.length-2]=new RT.Closure(_2208,2,[M.e[M.e.length-7]],"...private/list.rkt:396:12");
M.e[M.e.length-3]=_2209_c;
M.e[M.e.length-4]=new RT.Closure(_2210,(RT.makeArityAtLeast(1)),[M.e[M.e.length-7]],"...private/list.rkt:404:12");
M.e[M.e.length-5]=new RT.Closure(_2206,RT.makePair(1,RT.makePair(2,RT.makePair(0,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"compose");
M.e.length-=4;
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3057,M.p));
return((M.p).label)(M);};

var _3049=function(M){if(--M.cbt<0){throw _3049;}
M.c.push(new RT.CallFrame(_3051,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2200,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][65]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3047=function(M){if(--M.cbt<0){throw _3047;}
M.c.push(new RT.CallFrame(_3049,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2189,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][64]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3045=function(M){if(--M.cbt<0){throw _3045;}
M.c.push(new RT.CallFrame(_3047,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2185,6,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][63]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3043=function(M){if(--M.cbt<0){throw _3043;}
M.c.push(new RT.CallFrame(_3045,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2179,2,[M.e[M.e.length-1]],"simple-compose");
M.e[M.e.length-1][62]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3041=function(M){if(--M.cbt<0){throw _3041;}
M.c.push(new RT.CallFrame(_3043,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2178,2,[M.e[M.e.length-1]],"pipeline*");
M.e[M.e.length-1][61]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3039=function(M){if(--M.cbt<0){throw _3039;}
M.c.push(new RT.CallFrame(_3041,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2173,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][60]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3037=function(M){if(--M.cbt<0){throw _3037;}
M.c.push(new RT.CallFrame(_3039,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2170,2,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][59]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3035=function(M){if(--M.cbt<0){throw _3035;}
M.c.push(new RT.CallFrame(_3037,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2169,2,[M.e[M.e.length-1]],"build-list");
M.e[M.e.length-1][40]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3033=function(M){if(--M.cbt<0){throw _3033;}
M.c.push(new RT.CallFrame(_3035,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2168,3,[M.e[M.e.length-1]],"recr");
M.e[M.e.length-1][58]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3031=function(M){if(--M.cbt<0){throw _3031;}
M.c.push(new RT.CallFrame(_3033,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2167,2,[M.e[M.e.length-1]],"build-string");
M.e[M.e.length-1][37]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3029=function(M){if(--M.cbt<0){throw _3029;}
M.c.push(new RT.CallFrame(_3031,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2166,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][57]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3027=function(M){if(--M.cbt<0){throw _3027;}
M.c.push(new RT.CallFrame(_3029,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2165,2,[M.e[M.e.length-1]],"build-vector");
M.e[M.e.length-1][33]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3025=function(M){if(--M.cbt<0){throw _3025;}
M.c.push(new RT.CallFrame(_3027,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2164,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][56]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3023=function(M){if(--M.cbt<0){throw _3023;}
M.c.push(new RT.CallFrame(_3025,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2163,2,[M.e[M.e.length-1]],"filter");
M.e[M.e.length-1][31]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3021=function(M){if(--M.cbt<0){throw _3021;}
M.c.push(new RT.CallFrame(_3023,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2162,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][55]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3019=function(M){if(--M.cbt<0){throw _3019;}
M.c.push(new RT.CallFrame(_3021,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2159,3,[M.e[M.e.length-3]],"...private/list.rkt:252:4");
M.e[M.e.length-2]=new RT.Closure(_2161,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:258:4");
M.v=new RT.Closure(_2158,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldr");
M.e.length-=2;
M.e[M.e.length-1][30]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3017=function(M){if(--M.cbt<0){throw _3017;}
M.c.push(new RT.CallFrame(_3019,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2157,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][54]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3015=function(M){if(--M.cbt<0){throw _3015;}
M.c.push(new RT.CallFrame(_3017,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2154,3,[M.e[M.e.length-3]],"...private/list.rkt:239:4");
M.e[M.e.length-2]=new RT.Closure(_2156,(RT.makeArityAtLeast(3)),[M.e[M.e.length-3]],"...private/list.rkt:243:4");
M.v=new RT.Closure(_2153,RT.makePair(3,RT.makePair((RT.makeArityAtLeast(3)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"foldl");
M.e.length-=2;
M.e[M.e.length-1][28]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3013=function(M){if(--M.cbt<0){throw _3013;}
M.c.push(new RT.CallFrame(_3015,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2152,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][53]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3011=function(M){if(--M.cbt<0){throw _3011;}
M.c.push(new RT.CallFrame(_3013,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2151,5,[M.e[M.e.length-1]],"check-fold");
M.e[M.e.length-1][25]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3009=function(M){if(--M.cbt<0){throw _3009;}
M.c.push(new RT.CallFrame(_3011,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2150,7,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][52]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3007=function(M){if(--M.cbt<0){throw _3007;}
M.c.push(new RT.CallFrame(_3009,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_2148_c;
M.e[M.e.length-1][24]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3005=function(M){if(--M.cbt<0){throw _3005;}
M.c.push(new RT.CallFrame(_3007,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2147,2,[M.e[M.e.length-1]],"assf");
M.e[M.e.length-1][21]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3003=function(M){if(--M.cbt<0){throw _3003;}
M.c.push(new RT.CallFrame(_3005,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2146,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][51]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3001=function(M){if(--M.cbt<0){throw _3001;}
M.c.push(new RT.CallFrame(_3003,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2144,2,[M.e[M.e.length-3]],"...private/list.rkt:186:13");
M.e[M.e.length-2]=new RT.Closure(_2145,3,[M.e[M.e.length-3]],"...private/list.rkt:187:13");
M.v=new RT.Closure(_2143,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"assoc");
M.e.length-=2;
M.e[M.e.length-1][20]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2999=function(M){if(--M.cbt<0){throw _2999;}
M.c.push(new RT.CallFrame(_3001,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2142,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][50]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2997=function(M){if(--M.cbt<0){throw _2997;}
M.c.push(new RT.CallFrame(_2999,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2141,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][49]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2995=function(M){if(--M.cbt<0){throw _2995;}
M.c.push(new RT.CallFrame(_2997,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2140,2,[M.e[M.e.length-1]],"assv");
M.e[M.e.length-1][19]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2993=function(M){if(--M.cbt<0){throw _2993;}
M.c.push(new RT.CallFrame(_2995,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2139,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][48]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2991=function(M){if(--M.cbt<0){throw _2991;}
M.c.push(new RT.CallFrame(_2993,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2138,2,[M.e[M.e.length-1]],"assq");
M.e[M.e.length-1][18]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2989=function(M){if(--M.cbt<0){throw _2989;}
M.c.push(new RT.CallFrame(_2991,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2137,4,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][47]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2987=function(M){if(--M.cbt<0){throw _2987;}
M.c.push(new RT.CallFrame(_2989,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2136,3,[M.e[M.e.length-1]],"bad-item");
M.e[M.e.length-1][17]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2985=function(M){if(--M.cbt<0){throw _2985;}
M.c.push(new RT.CallFrame(_2987,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2135,2,[M.e[M.e.length-1]],"bad-list");
M.e[M.e.length-1][16]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2983=function(M){if(--M.cbt<0){throw _2983;}
M.c.push(new RT.CallFrame(_2985,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2134,2,[M.e[M.e.length-1]],"findf");
M.e[M.e.length-1][15]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2981=function(M){if(--M.cbt<0){throw _2981;}
M.c.push(new RT.CallFrame(_2983,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2133,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][46]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2979=function(M){if(--M.cbt<0){throw _2979;}
M.c.push(new RT.CallFrame(_2981,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2132,2,[M.e[M.e.length-1]],"memf");
M.e[M.e.length-1][13]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2977=function(M){if(--M.cbt<0){throw _2977;}
M.c.push(new RT.CallFrame(_2979,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2131,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][45]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2975=function(M){if(--M.cbt<0){throw _2975;}
M.c.push(new RT.CallFrame(_2977,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2130,2,[M.e[M.e.length-1]],"remv*");
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2973=function(M){if(--M.cbt<0){throw _2973;}
M.c.push(new RT.CallFrame(_2975,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2129,2,[M.e[M.e.length-1]],"remq*");
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2971=function(M){if(--M.cbt<0){throw _2971;}
M.c.push(new RT.CallFrame(_2973,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2127,2,[M.e[M.e.length-3]],"...private/list.rkt:98:4");
M.e[M.e.length-2]=new RT.Closure(_2128,3,[M.e[M.e.length-3]],"...private/list.rkt:99:4");
M.v=new RT.Closure(_2126,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove*");
M.e.length-=2;
M.e[M.e.length-1][10]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2969=function(M){if(--M.cbt<0){throw _2969;}
M.c.push(new RT.CallFrame(_2971,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2123,4,[M.e[M.e.length-1]],"do-remove*");
M.e[M.e.length-1][9]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2967=function(M){if(--M.cbt<0){throw _2967;}
M.c.push(new RT.CallFrame(_2969,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2122,2,[M.e[M.e.length-1]],"remv");
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2965=function(M){if(--M.cbt<0){throw _2965;}
M.c.push(new RT.CallFrame(_2967,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2121,2,[M.e[M.e.length-1]],"remq");
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2963=function(M){if(--M.cbt<0){throw _2963;}
M.c.push(new RT.CallFrame(_2965,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2119,2,[M.e[M.e.length-3]],"...private/list.rkt:68:4");
M.e[M.e.length-2]=new RT.Closure(_2120,3,[M.e[M.e.length-3]],"...private/list.rkt:69:4");
M.v=new RT.Closure(_2118,RT.makePair(2,RT.makePair(3,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"remove");
M.e.length-=2;
M.e[M.e.length-1][2]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2213=function(M){if(--M.cbt<0){throw _2213;}
};

var _2924=function(M){if(--M.cbt<0){throw _2924;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2918=function(M){if(--M.cbt<0){throw _2918;}
return(_2916)(M);};

var _2911=function(M){if(--M.cbt<0){throw _2911;}
M.a=1;
return(_2912)(M);};

var _2904=function(M){if(--M.cbt<0){throw _2904;}
M.a=1;
return(_2905)(M);};

var _2897=function(M){if(--M.cbt<0){throw _2897;}
M.a=1;
return(_2898)(M);};

var _2887=function(M){if(--M.cbt<0){throw _2887;}
M.a=1;
return(_2888)(M);};

var _2881=function(M){if(--M.cbt<0){throw _2881;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2877=function(M){if(--M.cbt<0){throw _2877;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2873=function(M){if(--M.cbt<0){throw _2873;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2866=function(M){if(--M.cbt<0){throw _2866;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2855=function(M){if(--M.cbt<0){throw _2855;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2188_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_2188)(M);};

var _2844=function(M){if(--M.cbt<0){throw _2844;}
M.e[M.e.length-1]=M.v;
return(_2842)(M);};

var _2839=function(M){if(--M.cbt<0){throw _2839;}
return(_2837)(M);};

var _2833=function(M){if(--M.cbt<0){throw _2833;}
return(_2831)(M);};

var _2827=function(M){if(--M.cbt<0){throw _2827;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2823=function(M){if(--M.cbt<0){throw _2823;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2819=function(M){if(--M.cbt<0){throw _2819;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2812=function(M){if(--M.cbt<0){throw _2812;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2798=function(M){if(--M.cbt<0){throw _2798;}
M.a=1;
return(_2799)(M);};

var _2791=function(M){if(--M.cbt<0){throw _2791;}
M.a=1;
return(_2792)(M);};

var _2785=function(M){if(--M.cbt<0){throw _2785;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2781=function(M){if(--M.cbt<0){throw _2781;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2765=function(M){if(--M.cbt<0){throw _2765;}
M.a=1;
return(_2766)(M);};

var _2759=function(M){if(--M.cbt<0){throw _2759;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2742=function(M){if(--M.cbt<0){throw _2742;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2740=function(M){if(--M.cbt<0){throw _2740;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][58];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=RT.checkedAdd1(M, M.e[M.e.length-8]);
M.v=RT.checkedSub1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2742,M.p));
return((M.p).label)(M);};

var _2725=function(M){if(--M.cbt<0){throw _2725;}
M.e[M.e.length-3]=M.v;
M.v=M.primitives["string-set!"]._i(M);
M.e.length-=3;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][57];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2710=function(M){if(--M.cbt<0){throw _2710;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedVectorSet(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][56];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=RT.checkedAdd1(M, M.e[M.e.length-9]);
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2696=function(M){if(--M.cbt<0){throw _2696;}
if(M.v===false){return(_2693)(M);}else{M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
return(_2694)(M);}};

var _2688=function(M){if(--M.cbt<0){throw _2688;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][54];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2684=function(M){if(--M.cbt<0){throw _2684;}
return(_2682)(M);};

var _2676=function(M){if(--M.cbt<0){throw _2676;}
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_2160_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_2160)(M);};

var _2670=function(M){if(--M.cbt<0){throw _2670;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2668=function(M){if(--M.cbt<0){throw _2668;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2670,M.p));
return((M.p).label)(M);};

var _2666=function(M){if(--M.cbt<0){throw _2666;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2668,M.p));
return((M.p).label)(M);};

var _2660=function(M){if(--M.cbt<0){throw _2660;}
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.v=RT.makePair(M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2655=function(M){if(--M.cbt<0){throw _2655;}
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2155_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_2155)(M);};

var _2648=function(M){if(--M.cbt<0){throw _2648;}
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_2155_c;
M.a=3;
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return(_2155)(M);};

var _2642=function(M){if(--M.cbt<0){throw _2642;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2640=function(M){if(--M.cbt<0){throw _2640;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2642,M.p));
return((M.p).label)(M);};

var _2638=function(M){if(--M.cbt<0){throw _2638;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2640,M.p));
return((M.p).label)(M);};

var _2634=function(M){if(--M.cbt<0){throw _2634;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd(M, 2,M.e[M.e.length-1]);
M.e.pop();
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-7];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2632=function(M){if(--M.cbt<0){throw _2632;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-3]=RT.checkedAdd(M, 2,M.e[M.e.length-1]);
M.e.pop();
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2629)(M);}else{M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2628=function(M){if(--M.cbt<0){throw _2628;}
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2632,M.p));
return((M.p).label)(M);};

var _2625=function(M){if(--M.cbt<0){throw _2625;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][52];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e[M.e.length-6]=M.e[M.e.length-14];
M.e[M.e.length-7]=3;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2628,M.p));
return((M.p).label)(M);};

var _2619=function(M){if(--M.cbt<0){throw _2619;}
return(_2617)(M);};

var _2615=function(M){if(--M.cbt<0){throw _2615;}
return(_2613)(M);};

var _2609=function(M){if(--M.cbt<0){throw _2609;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_2606)(M);}else{M.v=RT.VOID;
return(_2607)(M);}};

var _2605=function(M){if(--M.cbt<0){throw _2605;}
return(_2603)(M);};

var _2599=function(M){if(--M.cbt<0){throw _2599;}
M.e[M.e.length-2]=M.v;
return(_2597)(M);};

var _2596=function(M){if(--M.cbt<0){throw _2596;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2149_c;
M.a=3;
M.c.push(new RT.CallFrame(_2599,M.p));
return(_2149)(M);};

var _2564=function(M){if(--M.cbt<0){throw _2564;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_2566)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2561=function(M){if(--M.cbt<0){throw _2561;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2564,M.p));
return((M.p).label)(M);};

var _2559=function(M){if(--M.cbt<0){throw _2559;}
if(M.v===false){return(_2554)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2557=function(M){if(--M.cbt<0){throw _2557;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2559,M.p));
return((M.p).label)(M);};

var _2550=function(M){if(--M.cbt<0){throw _2550;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2552)(M);}else{M.e.push(M.e[M.e.length-5]);
M.e.push(void(0));
M.p=M.e[M.e.length-6][22][0][M.e[M.e.length-6][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2557,M.p));
return((M.p).label)(M);}};

var _2545=function(M){if(--M.cbt<0){throw _2545;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2547)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2550,M.p));
return((M.p).label)(M);}};

var _2543=function(M){if(--M.cbt<0){throw _2543;}
if(M.v===false){return(_2538)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2541=function(M){if(--M.cbt<0){throw _2541;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2543,M.p));
return((M.p).label)(M);};

var _2534=function(M){if(--M.cbt<0){throw _2534;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2536)(M);}else{M.e.push(M.e[M.e.length-3]);
M.e.push(void(0));
M.p=M.e[M.e.length-4][22][0][M.e[M.e.length-4][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2541,M.p));
return((M.p).label)(M);}};

var _2501=function(M){if(--M.cbt<0){throw _2501;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_2503)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2498=function(M){if(--M.cbt<0){throw _2498;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2501,M.p));
return((M.p).label)(M);};

var _2496=function(M){if(--M.cbt<0){throw _2496;}
if(M.v===false){return(_2491)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2494=function(M){if(--M.cbt<0){throw _2494;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2496,M.p));
return((M.p).label)(M);};

var _2487=function(M){if(--M.cbt<0){throw _2487;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2489)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2494,M.p));
return((M.p).label)(M);}};

var _2482=function(M){if(--M.cbt<0){throw _2482;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2484)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2487,M.p));
return((M.p).label)(M);}};

var _2480=function(M){if(--M.cbt<0){throw _2480;}
if(M.v===false){return(_2475)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2478=function(M){if(--M.cbt<0){throw _2478;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2480,M.p));
return((M.p).label)(M);};

var _2471=function(M){if(--M.cbt<0){throw _2471;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2473)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2478,M.p));
return((M.p).label)(M);}};

var _2448=function(M){if(--M.cbt<0){throw _2448;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_2450)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2445=function(M){if(--M.cbt<0){throw _2445;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2448,M.p));
return((M.p).label)(M);};

var _2443=function(M){if(--M.cbt<0){throw _2443;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2440)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2436=function(M){if(--M.cbt<0){throw _2436;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2438)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2443,M.p));
return((M.p).label)(M);}};

var _2431=function(M){if(--M.cbt<0){throw _2431;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2433)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2436,M.p));
return((M.p).label)(M);}};

var _2429=function(M){if(--M.cbt<0){throw _2429;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2426)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2422=function(M){if(--M.cbt<0){throw _2422;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2424)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2429,M.p));
return((M.p).label)(M);}};

var _2397=function(M){if(--M.cbt<0){throw _2397;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_2399)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym1222;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2394=function(M){if(--M.cbt<0){throw _2394;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2397,M.p));
return((M.p).label)(M);};

var _2392=function(M){if(--M.cbt<0){throw _2392;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2389)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2385=function(M){if(--M.cbt<0){throw _2385;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2387)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2392,M.p));
return((M.p).label)(M);}};

var _2380=function(M){if(--M.cbt<0){throw _2380;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2382)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2385,M.p));
return((M.p).label)(M);}};

var _2378=function(M){if(--M.cbt<0){throw _2378;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2375)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2371=function(M){if(--M.cbt<0){throw _2371;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2373)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2378,M.p));
return((M.p).label)(M);}};

var _2346=function(M){if(--M.cbt<0){throw _2346;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
if(M.v===false){return(_2348)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][16];
M.e[M.e.length-1]=sym1223;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2343=function(M){if(--M.cbt<0){throw _2343;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-7][23][0][M.e[M.e.length-7][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2346,M.p));
return((M.p).label)(M);};

var _2341=function(M){if(--M.cbt<0){throw _2341;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_2338)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2334=function(M){if(--M.cbt<0){throw _2334;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2336)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-7][22][0][M.e[M.e.length-7][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2341,M.p));
return((M.p).label)(M);}};

var _2329=function(M){if(--M.cbt<0){throw _2329;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2331)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2334,M.p));
return((M.p).label)(M);}};

var _2327=function(M){if(--M.cbt<0){throw _2327;}
M.e[M.e.length-2]=M.v;
M.v=(M.e[M.e.length-1]===M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_2324)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2320=function(M){if(--M.cbt<0){throw _2320;}
M.e[M.e.length-1]=M.v;
M.v=RT.isPair(M.e[M.e.length-1]);
if(M.v===false){return(_2322)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0));
M.p=M.e[M.e.length-5][22][0][M.e[M.e.length-5][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2327,M.p));
return((M.p).label)(M);}};

var _2308=function(M){if(--M.cbt<0){throw _2308;}
if(M.v===false){return(_2305)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2291=function(M){if(--M.cbt<0){throw _2291;}
if(M.v===false){return(_2288)(M);}else{M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2263=function(M){if(--M.cbt<0){throw _2263;}
if(M.v===false){return(_2260)(M);}else{M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2124_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_2124)(M);}};

var _2259=function(M){if(--M.cbt<0){throw _2259;}
M.e[M.e.length-2]=M.v;
return(_2257)(M);};

var _2227=function(M){if(--M.cbt<0){throw _2227;}
M.e[M.e.length-2]=M.v;
return(_2225)(M);};

var _2224=function(M){if(--M.cbt<0){throw _2224;}
if(M.v===false){return(_2221)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3056=function(M){if(--M.cbt<0){throw _3056;}
if((M.a-2)===0){return(_3055)(M);}else{RT.si_context_expected(2)(M);
}};

var _3052=function(M){if(--M.cbt<0){throw _3052;}
M.e.length-=(M.a-1);
return(_3053)(M);};

var _3050=function(M){if(--M.cbt<0){throw _3050;}
M.e.length-=(M.a-1);
return(_3051)(M);};

var _3048=function(M){if(--M.cbt<0){throw _3048;}
M.e.length-=(M.a-1);
return(_3049)(M);};

var _3046=function(M){if(--M.cbt<0){throw _3046;}
M.e.length-=(M.a-1);
return(_3047)(M);};

var _3044=function(M){if(--M.cbt<0){throw _3044;}
M.e.length-=(M.a-1);
return(_3045)(M);};

var _3042=function(M){if(--M.cbt<0){throw _3042;}
M.e.length-=(M.a-1);
return(_3043)(M);};

var _3040=function(M){if(--M.cbt<0){throw _3040;}
M.e.length-=(M.a-1);
return(_3041)(M);};

var _3038=function(M){if(--M.cbt<0){throw _3038;}
M.e.length-=(M.a-1);
return(_3039)(M);};

var _3036=function(M){if(--M.cbt<0){throw _3036;}
M.e.length-=(M.a-1);
return(_3037)(M);};

var _3034=function(M){if(--M.cbt<0){throw _3034;}
M.e.length-=(M.a-1);
return(_3035)(M);};

var _3032=function(M){if(--M.cbt<0){throw _3032;}
M.e.length-=(M.a-1);
return(_3033)(M);};

var _3030=function(M){if(--M.cbt<0){throw _3030;}
M.e.length-=(M.a-1);
return(_3031)(M);};

var _3028=function(M){if(--M.cbt<0){throw _3028;}
M.e.length-=(M.a-1);
return(_3029)(M);};

var _3026=function(M){if(--M.cbt<0){throw _3026;}
M.e.length-=(M.a-1);
return(_3027)(M);};

var _3024=function(M){if(--M.cbt<0){throw _3024;}
M.e.length-=(M.a-1);
return(_3025)(M);};

var _3022=function(M){if(--M.cbt<0){throw _3022;}
M.e.length-=(M.a-1);
return(_3023)(M);};

var _3020=function(M){if(--M.cbt<0){throw _3020;}
M.e.length-=(M.a-1);
return(_3021)(M);};

var _3018=function(M){if(--M.cbt<0){throw _3018;}
M.e.length-=(M.a-1);
return(_3019)(M);};

var _3016=function(M){if(--M.cbt<0){throw _3016;}
M.e.length-=(M.a-1);
return(_3017)(M);};

var _3014=function(M){if(--M.cbt<0){throw _3014;}
M.e.length-=(M.a-1);
return(_3015)(M);};

var _3012=function(M){if(--M.cbt<0){throw _3012;}
M.e.length-=(M.a-1);
return(_3013)(M);};

var _3010=function(M){if(--M.cbt<0){throw _3010;}
M.e.length-=(M.a-1);
return(_3011)(M);};

var _3008=function(M){if(--M.cbt<0){throw _3008;}
M.e.length-=(M.a-1);
return(_3009)(M);};

var _3006=function(M){if(--M.cbt<0){throw _3006;}
M.e.length-=(M.a-1);
return(_3007)(M);};

var _3004=function(M){if(--M.cbt<0){throw _3004;}
M.e.length-=(M.a-1);
return(_3005)(M);};

var _3002=function(M){if(--M.cbt<0){throw _3002;}
M.e.length-=(M.a-1);
return(_3003)(M);};

var _3000=function(M){if(--M.cbt<0){throw _3000;}
M.e.length-=(M.a-1);
return(_3001)(M);};

var _2998=function(M){if(--M.cbt<0){throw _2998;}
M.e.length-=(M.a-1);
return(_2999)(M);};

var _2996=function(M){if(--M.cbt<0){throw _2996;}
M.e.length-=(M.a-1);
return(_2997)(M);};

var _2994=function(M){if(--M.cbt<0){throw _2994;}
M.e.length-=(M.a-1);
return(_2995)(M);};

var _2992=function(M){if(--M.cbt<0){throw _2992;}
M.e.length-=(M.a-1);
return(_2993)(M);};

var _2990=function(M){if(--M.cbt<0){throw _2990;}
M.e.length-=(M.a-1);
return(_2991)(M);};

var _2988=function(M){if(--M.cbt<0){throw _2988;}
M.e.length-=(M.a-1);
return(_2989)(M);};

var _2986=function(M){if(--M.cbt<0){throw _2986;}
M.e.length-=(M.a-1);
return(_2987)(M);};

var _2984=function(M){if(--M.cbt<0){throw _2984;}
M.e.length-=(M.a-1);
return(_2985)(M);};

var _2982=function(M){if(--M.cbt<0){throw _2982;}
M.e.length-=(M.a-1);
return(_2983)(M);};

var _2980=function(M){if(--M.cbt<0){throw _2980;}
M.e.length-=(M.a-1);
return(_2981)(M);};

var _2978=function(M){if(--M.cbt<0){throw _2978;}
M.e.length-=(M.a-1);
return(_2979)(M);};

var _2976=function(M){if(--M.cbt<0){throw _2976;}
M.e.length-=(M.a-1);
return(_2977)(M);};

var _2974=function(M){if(--M.cbt<0){throw _2974;}
M.e.length-=(M.a-1);
return(_2975)(M);};

var _2972=function(M){if(--M.cbt<0){throw _2972;}
M.e.length-=(M.a-1);
return(_2973)(M);};

var _2970=function(M){if(--M.cbt<0){throw _2970;}
M.e.length-=(M.a-1);
return(_2971)(M);};

var _2968=function(M){if(--M.cbt<0){throw _2968;}
M.e.length-=(M.a-1);
return(_2969)(M);};

var _2966=function(M){if(--M.cbt<0){throw _2966;}
M.e.length-=(M.a-1);
return(_2967)(M);};

var _2964=function(M){if(--M.cbt<0){throw _2964;}
M.e.length-=(M.a-1);
return(_2965)(M);};

var _2962=function(M){if(--M.cbt<0){throw _2962;}
M.e.length-=(M.a-1);
return(_2963)(M);};

var _2960=function(M){if(--M.cbt<0){throw _2960;}
M.e.length-=(M.a-1);
return(_2961)(M);};

var _2961=function(M){if(--M.cbt<0){throw _2961;}
M.e.push([M.params.currentNamespace.get("do-remove")||M.primitives["do-remove"],M.primitives["raise-type-error"],M.params.currentNamespace.get("remove")||M.primitives["remove"],M.primitives["equal?"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.params.currentNamespace.get("remq")||M.primitives["remq"],M.params.currentNamespace.get("remv")||M.primitives["remv"],M.primitives["eqv?"],M.params.currentNamespace.get("do-remove*")||M.primitives["do-remove*"],M.params.currentNamespace.get("remove*")||M.primitives["remove*"],M.params.currentNamespace.get("remq*")||M.primitives["remq*"],M.params.currentNamespace.get("remv*")||M.primitives["remv*"],M.params.currentNamespace.get("memf")||M.primitives["memf"],M.primitives["raise-mismatch-error"],M.params.currentNamespace.get("findf")||M.primitives["findf"],M.params.currentNamespace.get("bad-list")||M.primitives["bad-list"],M.params.currentNamespace.get("bad-item")||M.primitives["bad-item"],M.params.currentNamespace.get("assq")||M.primitives["assq"],M.params.currentNamespace.get("assv")||M.primitives["assv"],M.params.currentNamespace.get("assoc")||M.primitives["assoc"],M.params.currentNamespace.get("assf")||M.primitives["assf"],[M.modules["whalesong/lang/unsafe/ops.rkt"].prefix,M.modules["whalesong/lang/unsafe/ops.rkt"].getPrefixOffset("unsafe-car1.1"),{moduleName:"whalesong/lang/unsafe/ops.rkt",name:"unsafe-car1.1"}],[M.modules["whalesong/lang/unsafe/ops.rkt"].prefix,M.modules["whalesong/lang/unsafe/ops.rkt"].getPrefixOffset("unsafe-cdr2.3"),{moduleName:"whalesong/lang/unsafe/ops.rkt",name:"unsafe-cdr2.3"}],M.params.currentNamespace.get("mapadd")||M.primitives["mapadd"],M.params.currentNamespace.get("check-fold")||M.primitives["check-fold"],M.primitives["length"],M.primitives["format"],M.params.currentNamespace.get("foldl")||M.primitives["foldl"],M.primitives["map"],M.params.currentNamespace.get("foldr")||M.primitives["foldr"],M.params.currentNamespace.get("filter")||M.primitives["filter"],M.primitives["reverse"],M.params.currentNamespace.get("build-vector")||M.primitives["build-vector"],M.primitives["exact-nonnegative-integer?"],M.primitives["make-vector"],M.primitives["vector-set!"],M.params.currentNamespace.get("build-string")||M.primitives["build-string"],M.primitives["make-string"],M.primitives["string-set!"],M.params.currentNamespace.get("build-list")||M.primitives["build-list"],M.primitives["zero?"],M.params.currentNamespace.get("compose1")||M.primitives["compose1"],M.params.currentNamespace.get("compose")||M.primitives["compose"],M.primitives["procedure-arity"],false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["do-remove","raise-type-error","remove","equal?","procedure?","procedure-arity-includes?","remq","remv","eqv?","do-remove*","remove*","remq*","remv*","memf","raise-mismatch-error","findf","bad-list","bad-item","assq","assv","assoc","assf","unsafe-car1.1","unsafe-cdr2.3","mapadd","check-fold","length","format","foldl","map","foldr","filter","reverse","build-vector","exact-nonnegative-integer?","make-vector","vector-set!","build-string","make-string","string-set!","build-list","zero?","compose1","compose","procedure-arity",false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/private/list.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_2963,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_2116,4,[M.e[M.e.length-1]],"do-remove");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2959=function(M){if(M.modules["whalesong/lang/unsafe/ops.rkt"].isInvoked!==false){return(_2961)(M);}else{M.c.push(new RT.CallFrame(_2961,M.p));
return(M.modules["whalesong/lang/unsafe/ops.rkt"].label)(M);}};

var _2957=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2958=function(M){M.modules["whalesong/lang/private/list.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/unsafe/ops.rkt"]!==void(0)&&M.modules["whalesong/lang/unsafe/ops.rkt"]!==undefined)!==false){return(_2959)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/unsafe/ops.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_2959);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_2959)(M);}};

var _2212=function(M){if(--M.cbt<0){throw _2212;}
M.e.length-=(M.a-1);
return(_2213)(M);};

var _2952=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][64];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2951=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1224;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_2952)(M);};

var _2950=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2951)(M);}else{M.v=RT.VOID;
return(_2952)(M);}};

var _2949=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1224;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_2950)(M);};

var _2947=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1224;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2210=function(M){if(--M.cbt<0){throw _2210;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:404:12 whalesong/lang/private/list.rkt 404 12 14994 416)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.e[M.e.length-6]=RT.NULL;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2209=function(M){if(--M.cbt<0){throw _2209;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:403:12 whalesong/lang/private/list.rkt 403 12 14970 11)"

M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2945=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_2207)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_2210)(M);}};

var _2208=function(M){if(--M.cbt<0){throw _2208;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:396:12 whalesong/lang/private/list.rkt 396 12 14684 273)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2949)(M);}else{M.v=RT.VOID;
return(_2950)(M);}};

var _2944=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2945)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2209)(M);}};

var _2943=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2944)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2208)(M);}};

var _2206=function(M){if(--M.cbt<0){throw _2206;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2943)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2207)(M);}};

var _2938=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][62];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2937=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1225;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=4;
return(_2938)(M);};

var _2936=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2937)(M);}else{M.v=RT.VOID;
return(_2938)(M);}};

var _2935=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1225;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_2936)(M);};

var _2934=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2935)(M);}else{M.v=RT.VOID;
return(_2936)(M);}};

var _2933=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1225;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_2934)(M);};

var _2931=function(M){M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1225;
M.e[M.e.length-2]="procedure";
M.e[M.e.length-3]=0;
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2205=function(M){if(--M.cbt<0){throw _2205;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:404:12 whalesong/lang/private/list.rkt 404 12 14994 416)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=0;
M.e[M.e.length-6]=RT.NULL;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2204=function(M){if(--M.cbt<0){throw _2204;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:403:12 whalesong/lang/private/list.rkt 403 12 14970 11)"

M.v=M.primitives["values"];
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2929=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_2202)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_2205)(M);}};

var _2203=function(M){if(--M.cbt<0){throw _2203;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:396:12 whalesong/lang/private/list.rkt 396 12 14684 273)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2933)(M);}else{M.v=RT.VOID;
return(_2934)(M);}};

var _2928=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2929)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2204)(M);}};

var _2927=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2928)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2203)(M);}};

var _2201=function(M){if(--M.cbt<0){throw _2201;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2927)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2202)(M);}};


var _2919=function(M){M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][64];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-5][61];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2924,M.p));
return((M.p).label)(M);};

var _2917=function(M){if(--M.cbt<0){throw _2917;}
M.e.length-=(M.a-1);
return(_2916)(M);};

var _2916=function(M){M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_2919)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][65];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=RT.checkedAdd1(M, M.e[M.e.length-12]);
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2915=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym1224;
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2918,M.p));
return((M.p).label)(M);};

var _2200=function(M){if(--M.cbt<0){throw _2200;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 405 13 15019 390)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2915)(M);}else{M.v=RT.VOID;
return(_2916)(M);}};

var _2909=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2902=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+4),4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2895=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2892=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2197)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2199)(M);}};

var _2891=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2892)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2198)(M);}};

var _2885=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};




var _2870=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2192)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2194)(M);}};

var _2869=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2870)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2193)(M);}};


var _2196=function(M){if(--M.cbt<0){throw _2196;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2891)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2197)(M);}};

var _2199=function(M){if(--M.cbt<0){throw _2199;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2911,M.p));
return((M.p).label)(M);};

var _2198=function(M){if(--M.cbt<0){throw _2198;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2904,M.p));
return((M.p).label)(M);};

var _2195=function(M){if(--M.cbt<0){throw _2195;}

//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2887,M.p));
return((M.p).label)(M);};

var _2863=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2197,1,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_2198,2,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_2199,(RT.makeArityAtLeast(0)),[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:333:18");
M.v=new RT.Closure(_2196,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2191=function(M){if(--M.cbt<0){throw _2191;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2869)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2192)(M);}};

var _2194=function(M){if(--M.cbt<0){throw _2194;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2881,M.p));
return((M.p).label)(M);};

var _2193=function(M){if(--M.cbt<0){throw _2193;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2877,M.p));
return((M.p).label)(M);};

var _2190=function(M){if(--M.cbt<0){throw _2190;}

//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2866,M.p));
return((M.p).label)(M);};

var _2861=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2192,1,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_2193,2,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_2194,(RT.makeArityAtLeast(0)),[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:333:18");
M.v=new RT.Closure(_2191,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2859=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=(1===M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2863)(M);}else{M.v=new RT.Closure(_2195,1,[M.e[M.e.length-3],M.e[M.e.length-2]],"composed");
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2189=function(M){if(--M.cbt<0){throw _2189;}

//"lambda body for #(struct:LamPositionalName simple-compose whalesong/lang/private/list.rkt 415 8 15566 144)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2859)(M);}else{M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=(1===M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2861)(M);}else{M.v=new RT.Closure(_2190,1,[M.e[M.e.length-3],M.e[M.e.length-2]],"composed");
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};


var _2850=function(M){M.e.push(void(0),void(0),void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2855,M.p));
return((M.p).label)(M);};

var _2188=function(M){if(--M.cbt<0){throw _2188;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 356 8 12717 138)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2850)(M);}else{M.v=M.e[M.e.length-3];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2187=function(M){if(--M.cbt<0){throw _2187;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:355:6 whalesong/lang/private/list.rkt 355 6 12697 159)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=_2188_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_2188)(M);};

var _2842=function(M){M.v=M.e[M.e.length-6];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2186=function(M){if(--M.cbt<0){throw _2186;}

//"lambda body for #(struct:LamPositionalName pipeline1 whalesong/lang/private/list.rkt 349 4 12469 388)"

M.v=new RT.Closure(_2187,1,[M.e[M.e.length-2],M.e[M.e.length-1]],"...private/list.rkt:355:6");
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2838=function(M){if(--M.cbt<0){throw _2838;}
M.e.length-=(M.a-1);
return(_2837)(M);};

var _2837=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-6]=M.e[M.e.length-7][63];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=RT.checkedAdd1(M, M.e[M.e.length-12]);
M.v=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-13]);
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2836=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym1225;
M.e[M.e.length-3]="procedure (arity 1)";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2839,M.p));
return((M.p).label)(M);};

var _2834=function(M){M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][62];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-11]);
M.e.push(M.e[M.e.length-11]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.p=_2186_c;
M.a=2;
M.c.push(new RT.CallFrame(_2844,M.p));
return(_2186)(M);};

var _2832=function(M){if(--M.cbt<0){throw _2832;}
M.e.length-=(M.a-1);
return(_2831)(M);};

var _2831=function(M){M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_2834)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2836)(M);}else{M.v=RT.VOID;
return(_2837)(M);}}};

var _2830=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=sym1225;
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-9];
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2833,M.p));
return((M.p).label)(M);};

var _2185=function(M){if(--M.cbt<0){throw _2185;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 405 13 15019 390)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2830)(M);}else{M.v=RT.VOID;
return(_2831)(M);}};




var _2816=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_2182)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_2184)(M);}};

var _2815=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2816)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2183)(M);}};


var _2181=function(M){if(--M.cbt<0){throw _2181;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2815)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2182)(M);}};

var _2184=function(M){if(--M.cbt<0){throw _2184;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:333:18 whalesong/lang/private/list.rkt 333 18 11664 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2827,M.p));
return((M.p).label)(M);};

var _2183=function(M){if(--M.cbt<0){throw _2183;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:332:18 whalesong/lang/private/list.rkt 332 18 11622 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2823,M.p));
return((M.p).label)(M);};

var _2180=function(M){if(--M.cbt<0){throw _2180;}

//"lambda body for #(struct:LamPositionalName composed whalesong/lang/private/list.rkt 329 16 11487 26)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2812,M.p));
return((M.p).label)(M);};

var _2809=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_2182,1,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:331:18");
M.e[M.e.length-2]=new RT.Closure(_2183,2,[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:332:18");
M.e[M.e.length-3]=new RT.Closure(_2184,(RT.makeArityAtLeast(0)),[M.e[M.e.length-6],M.e[M.e.length-5]],"...private/list.rkt:333:18");
M.v=new RT.Closure(_2181,RT.makePair(1,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"composed");
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2179=function(M){if(--M.cbt<0){throw _2179;}

//"lambda body for #(struct:LamPositionalName simple-compose whalesong/lang/private/list.rkt 413 8 15468 43)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=(1===M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2809)(M);}else{M.v=new RT.Closure(_2180,1,[M.e[M.e.length-3],M.e[M.e.length-2]],"composed");
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2802=function(M){M.e.push(void(0));
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-4],M.e[M.e.length-5]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-4][60];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-3]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2178=function(M){if(--M.cbt<0){throw _2178;}

//"lambda body for #(struct:LamPositionalName pipeline* whalesong/lang/private/list.rkt 360 4 12862 1546)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2802)(M);}else{M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][59];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _2796=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2789=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2177=function(M){if(--M.cbt<0){throw _2177;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:388:34 whalesong/lang/private/list.rkt 388 34 14329 35)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2798,M.p));
return((M.p).label)(M);};

var _2176=function(M){if(--M.cbt<0){throw _2176;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:387:34 whalesong/lang/private/list.rkt 387 34 14265 29)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-2];
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2791,M.p));
return((M.p).label)(M);};

var _2776=function(M){M.e[M.e.length-2]=new RT.Closure(_2177,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:388:34");
return(_2771)(M);};

var _2175=function(M){if(--M.cbt<0){throw _2175;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:385:34 whalesong/lang/private/list.rkt 385 34 14134 30)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-2]);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2785,M.p));
return((M.p).label)(M);};

var _2174=function(M){if(--M.cbt<0){throw _2174;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:384:34 whalesong/lang/private/list.rkt 384 34 14075 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-2]);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2781,M.p));
return((M.p).label)(M);};

var _2774=function(M){M.e[M.e.length-2]=new RT.Closure(_2175,(RT.makeArityAtLeast(0)),[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:385:34");
return(_2771)(M);};

var _2772=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2776)(M);}else{M.e[M.e.length-2]=new RT.Closure(_2176,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:387:34");
return(_2771)(M);}};

var _2769=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][60];
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2772)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2774)(M);}else{M.e[M.e.length-2]=new RT.Closure(_2174,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:384:34");
return(_2771)(M);}}};

var _2173=function(M){if(--M.cbt<0){throw _2173;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 378 12 13773 632)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2769)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2763=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2172=function(M){if(--M.cbt<0){throw _2172;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:372:28 whalesong/lang/private/list.rkt 372 28 13436 29)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2765,M.p));
return((M.p).label)(M);};

var _2171=function(M){if(--M.cbt<0){throw _2171;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:371:28 whalesong/lang/private/list.rkt 371 28 13383 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2759,M.p));
return((M.p).label)(M);};

var _2754=function(M){M.e[M.e.length-2]=new RT.Closure(_2172,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:372:28");
return(_2753)(M);};

var _2751=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-3][59];
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-6]);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.v=M.primitives["eqv?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2754)(M);}else{M.e[M.e.length-2]=new RT.Closure(_2171,1,[M.e[M.e.length-5],M.e[M.e.length-1]],"...private/list.rkt:371:28");
return(_2753)(M);}};

var _2170=function(M){if(--M.cbt<0){throw _2170;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 366 10 13169 335)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2751)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2746=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][58];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2745=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1226;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2746)(M);};

var _2748=function(M){if(M.v===false){return(_2745)(M);}else{M.v=RT.VOID;
return(_2746)(M);}};

var _2747=function(M){M.v=false;
return(_2748)(M);};

var _2744=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2747)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2748)(M);}};

var _2743=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1226;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2744)(M);};

var _2169=function(M){if(--M.cbt<0){throw _2169;}

//"lambda body for #(struct:LamPositionalName build-list whalesong/lang/private/list.rkt 305 0 10431 412)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_2743)(M);}else{M.v=RT.VOID;
return(_2744)(M);}};



var _2737=function(M){M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2740,M.p));
return((M.p).label)(M);};

var _2168=function(M){if(--M.cbt<0){throw _2168;}

//"lambda body for #(struct:LamPositionalName recr whalesong/lang/private/list.rkt 311 2 10711 131)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedIsZero(M, M.e[M.e.length-4]);
if(M.v===false){return(_2737)(M);}else{M.v=RT.NULL;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2731=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.a=1;
M.v=M.primitives["make-string"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][57];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2730=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1227;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2731)(M);};

var _2733=function(M){if(M.v===false){return(_2730)(M);}else{M.v=RT.VOID;
return(_2731)(M);}};

var _2732=function(M){M.v=false;
return(_2733)(M);};

var _2729=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2732)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2733)(M);}};

var _2728=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1227;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2729)(M);};

var _2167=function(M){if(--M.cbt<0){throw _2167;}

//"lambda body for #(struct:LamPositionalName build-string whalesong/lang/private/list.rkt 293 0 9995 434)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_2728)(M);}else{M.v=RT.VOID;
return(_2729)(M);}};


var _2722=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2725,M.p));
return((M.p).label)(M);};

var _2166=function(M){if(--M.cbt<0){throw _2166;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 300 4 10314 113)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-5],M.e[M.e.length-3]);
if(M.v===false){return(_2722)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2716=function(M){M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.a=1;
M.v=M.primitives["make-vector"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][56];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=0;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2715=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1228;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2716)(M);};

var _2718=function(M){if(M.v===false){return(_2715)(M);}else{M.v=RT.VOID;
return(_2716)(M);}};

var _2717=function(M){M.v=false;
return(_2718)(M);};

var _2714=function(M){M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2717)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2718)(M);}};

var _2713=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1228;
M.e[M.e.length-2]="exact-nonnegative-integer";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2714)(M);};

var _2165=function(M){if(--M.cbt<0){throw _2165;}

//"lambda body for #(struct:LamPositionalName build-vector whalesong/lang/private/list.rkt 281 0 9559 434)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
if(M.v===false){return(_2713)(M);}else{M.v=RT.VOID;
return(_2714)(M);}};


var _2707=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2710,M.p));
return((M.p).label)(M);};

var _2164=function(M){if(--M.cbt<0){throw _2164;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 288 4 9878 113)"

M.e.push(M.p.closedVals[0]);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-5],M.e[M.e.length-3]);
if(M.v===false){return(_2707)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2704=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=RT.NULL;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2703=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1229;
M.e[M.e.length-2]="proper list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2704)(M);};

var _2700=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2703)(M);}else{M.v=RT.VOID;
return(_2704)(M);}};

var _2699=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1229;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2700)(M);};

var _2702=function(M){if(M.v===false){return(_2699)(M);}else{M.v=RT.VOID;
return(_2700)(M);}};

var _2701=function(M){M.v=false;
return(_2702)(M);};

var _2163=function(M){if(--M.cbt<0){throw _2163;}

//"lambda body for #(struct:LamPositionalName filter whalesong/lang/private/list.rkt 265 0 8885 481)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2701)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2702)(M);}};

var _2694=function(M){M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2693=function(M){M.v=M.e[M.e.length-7];
return(_2694)(M);};


var _2691=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][55];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedCdr(M, M.e[M.e.length-6]);
M.e.push(M.e[M.e.length-5]);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2696,M.p));
return((M.p).label)(M);};

var _2162=function(M){if(--M.cbt<0){throw _2162;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 273 2 9217 148)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2691)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["reverse"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2687=function(M){if(--M.cbt<0){throw _2687;}
M.e.length-=(M.a-1);
return(_2688)(M);};

var _2682=function(M){M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2680=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2160_c;
M.a=3;
M.c.push(new RT.CallFrame(_2684,M.p));
return(_2160)(M);};

var _2160=function(M){if(--M.cbt<0){throw _2160;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 254 5 8522 111)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2680)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2675=function(M){if(--M.cbt<0){throw _2675;}
M.e.length-=(M.a-1);
return(_2676)(M);};

var _2161=function(M){if(--M.cbt<0){throw _2161;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:258:4 whalesong/lang/private/list.rkt 258 4 8639 242)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym1230;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2688,M.p));
return((M.p).label)(M);};

var _2673=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2159)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2161)(M);}};

var _2158=function(M){if(--M.cbt<0){throw _2158;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2673)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2159)(M);}};




var _2663=function(M){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2157=function(M){if(--M.cbt<0){throw _2157;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 260 5 8698 182)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2663)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-9][54];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e.push(void(0),void(0));
M.p=M.primitives["map"];
M.e[M.e.length-1]=M.primitives["cdr"];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2666,M.p));
return((M.p).label)(M);}};

var _2659=function(M){if(--M.cbt<0){throw _2659;}
M.e.length-=(M.a-1);
return(_2660)(M);};


var _2652=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.v=M.e[M.e.length-7];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2655,M.p));
return((M.p).label)(M);};

var _2155=function(M){if(--M.cbt<0){throw _2155;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 241 5 8075 89)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2652)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2647=function(M){if(--M.cbt<0){throw _2647;}
M.e.length-=(M.a-1);
return(_2648)(M);};

var _2156=function(M){if(--M.cbt<0){throw _2156;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:243:4 whalesong/lang/private/list.rkt 243 4 8170 259)"

M.unspliceRestFromStack(3,(M.a-3));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym1231;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2660,M.p));
return((M.p).label)(M);};

var _2645=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2154)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2156)(M);}};

var _2153=function(M){if(--M.cbt<0){throw _2153;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2645)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2154)(M);}};




var _2635=function(M){M.v=M.e[M.e.length-3];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2152=function(M){if(--M.cbt<0){throw _2152;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 245 5 8229 199)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-5]);
M.v=RT.isPair(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2635)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][53];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][24];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.a=3;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2638,M.p));
return((M.p).label)(M);}};


var _2629=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e.push(void(0),void(0));
M.e[M.e.length-1]="given procedure does not accept ~a arguments: ";
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2634,M.p));
return((M.p).label)(M);};


var _2627=function(M){if(--M.cbt<0){throw _2627;}
M.e.length-=(M.a-1);
return(_2628)(M);};


var _2622=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="given procedure does not accept 2 arguments: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2620=function(M){M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2625,M.p));
return((M.p).label)(M);};

var _2618=function(M){if(--M.cbt<0){throw _2618;}
M.e.length-=(M.a-1);
return(_2617)(M);};

var _2617=function(M){M.v=(M.e[M.e.length-6]===RT.NULL);
if(M.v===false){return(_2620)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_2622)(M);}else{M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _2616=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=2;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2619,M.p));
return((M.p).label)(M);};

var _2614=function(M){if(--M.cbt<0){throw _2614;}
M.e.length-=(M.a-1);
return(_2613)(M);};

var _2613=function(M){M.v=RT.isList(M.e[M.e.length-5]);
if(M.v===false){return(_2616)(M);}else{M.v=RT.VOID;
return(_2617)(M);}};

var _2612=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]="procedure";
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e[M.e.length-6]=M.e[M.e.length-12];
M.e[M.e.length-7]=M.e[M.e.length-13];
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2615,M.p));
return((M.p).label)(M);};

var _2151=function(M){if(--M.cbt<0){throw _2151;}

//"lambda body for #(struct:LamPositionalName check-fold whalesong/lang/private/list.rkt 213 0 6824 1160)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2612)(M);}else{M.v=RT.VOID;
return(_2613)(M);}};

var _2607=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-7]=M.e[M.e.length-8][52];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-10];
M.e[M.e.length-3]=M.e[M.e.length-11];
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-13];
M.e.push(M.e[M.e.length-14]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-6]=M.v;
M.v=RT.checkedAdd1(M, M.e[M.e.length-15]);
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2606=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]="given list does not have the same size as the first list: ";
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=3;
return(_2607)(M);};


var _2604=function(M){if(--M.cbt<0){throw _2604;}
M.e.length-=(M.a-1);
return(_2603)(M);};

var _2603=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.e[M.e.length-1]=M.primitives["length"];
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2609,M.p));
return((M.p).label)(M);};

var _2602=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["raise-type-error"];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]="list";
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]=M.e[M.e.length-14];
M.e[M.e.length-8]=M.e[M.e.length-15];
M.a=8;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2605,M.p));
return((M.p).label)(M);};

var _2600=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-8]);
M.v=RT.isList(M.e[M.e.length-1]);
M.e.pop();
if(M.v===false){return(_2602)(M);}else{M.v=RT.VOID;
return(_2603)(M);}};

var _2150=function(M){if(--M.cbt<0){throw _2150;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 222 8 7238 446)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-7]===RT.NULL);
if(M.v===false){return(_2600)(M);}else{M.v=RT.VOID;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2597=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _2593=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-3]);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2596,M.p));
return((M.p).label)(M);};

var _2149=function(M){if(--M.cbt<0){throw _2149;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 207 2 6721 99)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2593)(M);}else{M.v=RT.makePair(M.e[M.e.length-2],RT.NULL);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2148=function(M){if(--M.cbt<0){throw _2148;}

//"lambda body for #(struct:LamPositionalName mapadd whalesong/lang/private/list.rkt 206 0 6693 128)"

M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.p=_2149_c;
M.a=3;
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return(_2149)(M);};

var _2585=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][51];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2584=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2585)(M);};

var _2587=function(M){if(M.v===false){return(_2584)(M);}else{M.v=RT.VOID;
return(_2585)(M);}};

var _2586=function(M){M.v=false;
return(_2587)(M);};

var _2147=function(M){if(--M.cbt<0){throw _2147;}

//"lambda body for #(struct:LamPositionalName assf whalesong/lang/private/list.rkt 193 11 6170 211)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2586)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2587)(M);}};

var _2580=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2574=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2566=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][51];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2554=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2561,M.p));
return((M.p).label)(M);};



var _2552=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2547=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_2574)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2538=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2545,M.p));
return((M.p).label)(M);};



var _2536=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym1220;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2531=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2580)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2146=function(M){if(--M.cbt<0){throw _2146;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 196 13 6336 44)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2531)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2534,M.p));
return((M.p).label)(M);}};

var _2526=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][50];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2525=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2526)(M);};

var _2528=function(M){if(M.v===false){return(_2525)(M);}else{M.v=RT.VOID;
return(_2526)(M);}};

var _2527=function(M){M.v=false;
return(_2528)(M);};

var _2145=function(M){if(--M.cbt<0){throw _2145;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:187:13 whalesong/lang/private/list.rkt 187 13 5882 258)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2527)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2528)(M);}};

var _2521=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2144)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2145)(M);}};

var _2143=function(M){if(--M.cbt<0){throw _2143;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2521)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2144)(M);}};

var _2517=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2511=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2503=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][50];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-14];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.e[M.e.length-5]=M.e[M.e.length-7];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-16,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2491=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2498,M.p));
return((M.p).label)(M);};



var _2489=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2484=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_2511)(M);}else{M.v=false;
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2475=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2482,M.p));
return((M.p).label)(M);};



var _2473=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2468=function(M){M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_2517)(M);}else{M.v=false;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2142=function(M){if(--M.cbt<0){throw _2142;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 191 14 6106 33)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-5]);
if(M.v===false){return(_2468)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2471,M.p));
return((M.p).label)(M);}};

var _2464=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2458=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2450=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][49];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2440=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2445,M.p));
return((M.p).label)(M);};


var _2438=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2433=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_2458)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2426=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2431,M.p));
return((M.p).label)(M);};


var _2424=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym1221;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2419=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2464)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2141=function(M){if(--M.cbt<0){throw _2141;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 186 20 5837 30)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2419)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2422,M.p));
return((M.p).label)(M);}};

var _2140=function(M){if(--M.cbt<0){throw _2140;}

//"lambda body for #(struct:LamPositionalName assv whalesong/lang/private/list.rkt 182 11 5719 55)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][48];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2413=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym1222;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2407=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym1222;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2399=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][48];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2389=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2394,M.p));
return((M.p).label)(M);};


var _2387=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym1222;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2382=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_2407)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2375=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2380,M.p));
return((M.p).label)(M);};


var _2373=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym1222;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2368=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2413)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2139=function(M){if(--M.cbt<0){throw _2139;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 183 13 5746 27)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2368)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2371,M.p));
return((M.p).label)(M);}};

var _2138=function(M){if(--M.cbt<0){throw _2138;}

//"lambda body for #(struct:LamPositionalName assq whalesong/lang/private/list.rkt 179 11 5636 54)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][47];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2362=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][16];
M.e[M.e.length-1]=sym1223;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2356=function(M){M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][16];
M.e[M.e.length-1]=sym1223;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2348=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][47];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-6];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,10);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};



var _2338=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-6][23][0][M.e[M.e.length-6][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2343,M.p));
return((M.p).label)(M);};


var _2336=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][17];
M.e[M.e.length-1]=sym1223;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2331=function(M){M.v=(M.e[M.e.length-1]===RT.NULL);
if(M.v===false){return(_2356)(M);}else{M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};


var _2324=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-4][23][0][M.e[M.e.length-4][23][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2329,M.p));
return((M.p).label)(M);};


var _2322=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][17];
M.e[M.e.length-1]=sym1223;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2317=function(M){M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2362)(M);}else{M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2137=function(M){if(--M.cbt<0){throw _2137;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 180 13 5663 26)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2317)(M);}else{M.e.push(void(0));
M.e.push(void(0));
M.p=M.e[M.e.length-3][22][0][M.e[M.e.length-3][22][1]];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2320,M.p));
return((M.p).label)(M);}};

var _2136=function(M){if(--M.cbt<0){throw _2136;}

//"lambda body for #(struct:LamPositionalName bad-item whalesong/lang/private/list.rkt 142 0 4192 200)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]="non-pair found in list: ";
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=" in ";
M.e[M.e.length-5]=M.e[M.e.length-9];
M.p=M.primitives["raise-mismatch-error"];
RT.raiseArityMismatchError(M,M.p,5);
return(_2137)(M);};

var _2135=function(M){if(--M.cbt<0){throw _2135;}

//"lambda body for #(struct:LamPositionalName bad-list whalesong/lang/private/list.rkt 138 0 4055 136)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2312=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][46];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2311=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1232;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2312)(M);};

var _2314=function(M){if(M.v===false){return(_2311)(M);}else{M.v=RT.VOID;
return(_2312)(M);}};

var _2313=function(M){M.v=false;
return(_2314)(M);};

var _2134=function(M){if(--M.cbt<0){throw _2134;}

//"lambda body for #(struct:LamPositionalName findf whalesong/lang/private/list.rkt 123 0 3608 445)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2313)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2314)(M);}};

var _2305=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][46];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2302=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1232;
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2300=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2302)(M);}else{M.e.push(void(0));
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2308,M.p));
return((M.p).label)(M);}};

var _2133=function(M){if(--M.cbt<0){throw _2133;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 126 2 3751 301)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2300)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2295=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2294=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1233;
M.e[M.e.length-2]="procedure (arity 1)";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2295)(M);};

var _2297=function(M){if(M.v===false){return(_2294)(M);}else{M.v=RT.VOID;
return(_2295)(M);}};

var _2296=function(M){M.v=false;
return(_2297)(M);};

var _2132=function(M){if(--M.cbt<0){throw _2132;}

//"lambda body for #(struct:LamPositionalName memf whalesong/lang/private/list.rkt 111 0 3225 381)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2296)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2297)(M);}};

var _2288=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][45];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _2286=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1233;
M.e[M.e.length-2]="not a proper list: ";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2284=function(M){M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_2286)(M);}else{M.e.push(M.e[M.e.length-2]);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2291,M.p));
return((M.p).label)(M);}};

var _2131=function(M){if(--M.cbt<0){throw _2131;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 114 2 3366 239)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-4]===RT.NULL);
if(M.v===false){return(_2284)(M);}else{M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2130=function(M){if(--M.cbt<0){throw _2130;}

//"lambda body for #(struct:LamPositionalName remv* whalesong/lang/private/list.rkt 108 0 3172 51)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym1234;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eqv?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2129=function(M){if(--M.cbt<0){throw _2129;}

//"lambda body for #(struct:LamPositionalName remq* whalesong/lang/private/list.rkt 105 0 3120 50)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym1235;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eq?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2275=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym1236;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2274=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1236;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2275)(M);};

var _2277=function(M){if(M.v===false){return(_2274)(M);}else{M.v=RT.VOID;
return(_2275)(M);}};

var _2276=function(M){M.v=false;
return(_2277)(M);};

var _2128=function(M){if(--M.cbt<0){throw _2128;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:99:4 whalesong/lang/private/list.rkt 99 4 2905 211)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2276)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2277)(M);}};

var _2270=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2127)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2128)(M);}};

var _2126=function(M){if(--M.cbt<0){throw _2126;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2270)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2127)(M);}};

var _2260=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e.push(M.e[M.e.length-10]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-5]=M.v;
M.p=_2125_c;
M.a=5;
M.e.splice(M.e.length-10,5);
M.c[M.c.length-1].p=M.p;
return(_2125)(M);};


var _2257=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2255=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-7]);
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2263,M.p));
return((M.p).label)(M);};

var _2125=function(M){if(--M.cbt<0){throw _2125;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 90 13 2602 216)"

M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_2255)(M);}else{M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2124_c;
M.a=3;
M.c.push(new RT.CallFrame(_2259,M.p));
return(_2124)(M);}};

var _2249=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.checkedCar(M, M.e[M.e.length-4]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-7];
M.p=_2125_c;
M.a=5;
M.e.splice(M.e.length-9,4);
M.c[M.c.length-1].p=M.p;
return(_2125)(M);};

var _2124=function(M){if(--M.cbt<0){throw _2124;}

//"lambda body for #(struct:LamPositionalName rloop whalesong/lang/private/list.rkt 86 2 2502 320)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2249)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2245=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_2124_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_2124)(M);};

var _2244=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2245)(M);};

var _2243=function(M){M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2244)(M);}else{M.v=RT.VOID;
return(_2245)(M);}};

var _2242=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2243)(M);};

var _2123=function(M){if(--M.cbt<0){throw _2123;}

//"lambda body for #(struct:LamPositionalName do-remove* whalesong/lang/private/list.rkt 81 0 2350 473)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_2242)(M);}else{M.v=RT.VOID;
return(_2243)(M);}};

var _2122=function(M){if(--M.cbt<0){throw _2122;}

//"lambda body for #(struct:LamPositionalName remv whalesong/lang/private/list.rkt 78 0 2288 60)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym1237;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eqv?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2121=function(M){if(--M.cbt<0){throw _2121;}

//"lambda body for #(struct:LamPositionalName remq whalesong/lang/private/list.rkt 75 0 2227 59)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym1238;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["eq?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2233=function(M){M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym1239;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2232=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym1239;
M.e[M.e.length-2]="procedure (arity 2)";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2233)(M);};

var _2235=function(M){if(M.v===false){return(_2232)(M);}else{M.v=RT.VOID;
return(_2233)(M);}};

var _2234=function(M){M.v=false;
return(_2235)(M);};

var _2120=function(M){if(--M.cbt<0){throw _2120;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:69:4 whalesong/lang/private/list.rkt 69 4 2003 220)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2234)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=2;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
return(_2235)(M);}};

var _2228=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_2119)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_2120)(M);}};

var _2118=function(M){if(--M.cbt<0){throw _2118;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_2228)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_2119)(M);}};

var _2225=function(M){M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _2221=function(M){M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.p=_2117_c;
M.a=3;
M.c.push(new RT.CallFrame(_2227,M.p));
return(_2117)(M);};


var _2219=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.v=RT.checkedCar(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2224,M.p));
return((M.p).label)(M);};

var _2117=function(M){if(--M.cbt<0){throw _2117;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/private/list.rkt 61 2 1755 156)"

M.v=(M.e[M.e.length-3]===RT.NULL);
if(M.v===false){return(_2219)(M);}else{M.v=RT.NULL;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2215=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.p=_2117_c;
M.a=3;
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return(_2117)(M);};

var _2214=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="list";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=3;
return(_2215)(M);};

var _2116=function(M){if(--M.cbt<0){throw _2116;}

//"lambda body for #(struct:LamPositionalName do-remove whalesong/lang/private/list.rkt 58 0 1649 263)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_2214)(M);}else{M.v=RT.VOID;
return(_2215)(M);}};

var _2211=function(M){M.c.push(new RT.CallFrame(_2213,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/list.rkt"]=function(){return new RT.ModuleRecord("list",_2958);}
return(_2957)(M);};

var _3055=function(M){M.e.splice(M.e.length-2,1);
M.e.splice(M.e.length-2,1);
M.e[M.e.length-2][42]=M.v;
M.e[M.e.length-2][43]=M.e[M.e.length-1];
M.e.pop();
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _2207=function(M){if(--M.cbt<0){throw _2207;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:394:12 whalesong/lang/private/list.rkt 394 12 14590 81)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2947)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2202=function(M){if(--M.cbt<0){throw _2202;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:394:12 whalesong/lang/private/list.rkt 394 12 14590 81)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
if(M.v===false){return(_2931)(M);}else{M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _2912=function(M){if(--M.cbt<0){throw _2912;}
if(M.a===0){return(_2909)(M);}else{M.e.push(M.v);
return(_2909)(M);}};

var _2905=function(M){if(--M.cbt<0){throw _2905;}
if(M.a===0){return(_2902)(M);}else{M.e.push(M.v);
return(_2902)(M);}};

var _2898=function(M){if(--M.cbt<0){throw _2898;}
if(M.a===0){return(_2895)(M);}else{M.e.push(M.v);
return(_2895)(M);}};

var _2197=function(M){if(--M.cbt<0){throw _2197;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1];
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2897,M.p));
return((M.p).label)(M);};

var _2888=function(M){if(--M.cbt<0){throw _2888;}
if(M.a===0){return(_2885)(M);}else{M.e.push(M.v);
return(_2885)(M);}};

var _2192=function(M){if(--M.cbt<0){throw _2192;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2873,M.p));
return((M.p).label)(M);};

var _2182=function(M){if(--M.cbt<0){throw _2182;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:331:18 whalesong/lang/private/list.rkt 331 18 11582 21)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(M.e[M.e.length-1]);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2819,M.p));
return((M.p).label)(M);};

var _2799=function(M){if(--M.cbt<0){throw _2799;}
if(M.a===0){return(_2796)(M);}else{M.e.push(M.v);
return(_2796)(M);}};

var _2792=function(M){if(--M.cbt<0){throw _2792;}
if(M.a===0){return(_2789)(M);}else{M.e.push(M.v);
return(_2789)(M);}};

var _2771=function(M){M.e.pop();
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2766=function(M){if(--M.cbt<0){throw _2766;}
if(M.a===0){return(_2763)(M);}else{M.e.push(M.v);
return(_2763)(M);}};

var _2753=function(M){M.e.pop();
M.v=RT.checkedCdr(M, M.e[M.e.length-5]);
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2159=function(M){if(--M.cbt<0){throw _2159;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:252:4 whalesong/lang/private/list.rkt 252 4 8466 168)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym1230;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2676,M.p));
return((M.p).label)(M);};

var _2154=function(M){if(--M.cbt<0){throw _2154;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:239:4 whalesong/lang/private/list.rkt 239 4 8019 146)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-6][25];
M.e[M.e.length-1]=sym1231;
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=RT.NULL;
M.a=5;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_2648,M.p));
return((M.p).label)(M);};

var _2144=function(M){if(--M.cbt<0){throw _2144;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:186:13 whalesong/lang/private/list.rkt 186 13 5830 38)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][49];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2127=function(M){if(--M.cbt<0){throw _2127;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:98:4 whalesong/lang/private/list.rkt 98 4 2860 40)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][9];
M.e[M.e.length-1]=sym1236;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["equal?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _2119=function(M){if(--M.cbt<0){throw _2119;}

//"lambda body for #(struct:LamPositionalName ...private/list.rkt:68:4 whalesong/lang/private/list.rkt 68 4 1948 50)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][0];
M.e[M.e.length-1]=sym1239;
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["equal?"];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

_2605.mvr=_2604;
_2615.mvr=_2614;
_2619.mvr=_2618;
_2628.mvr=_2627;
_2648.mvr=_2647;
_2660.mvr=_2659;
_2676.mvr=_2675;
_2688.mvr=_2687;
_2765.mvr=_2766;
_2791.mvr=_2792;
_2798.mvr=_2799;
_2833.mvr=_2832;
_2839.mvr=_2838;
_2887.mvr=_2888;
_2897.mvr=_2898;
_2904.mvr=_2905;
_2911.mvr=_2912;
_2918.mvr=_2917;
_2961.mvr=_2960;
_2963.mvr=_2962;
_2965.mvr=_2964;
_2967.mvr=_2966;
_2969.mvr=_2968;
_2971.mvr=_2970;
_2973.mvr=_2972;
_2975.mvr=_2974;
_2977.mvr=_2976;
_2979.mvr=_2978;
_2981.mvr=_2980;
_2983.mvr=_2982;
_2985.mvr=_2984;
_2987.mvr=_2986;
_2989.mvr=_2988;
_2991.mvr=_2990;
_2993.mvr=_2992;
_2995.mvr=_2994;
_2997.mvr=_2996;
_2999.mvr=_2998;
_3001.mvr=_3000;
_3003.mvr=_3002;
_3005.mvr=_3004;
_3007.mvr=_3006;
_3009.mvr=_3008;
_3011.mvr=_3010;
_3013.mvr=_3012;
_3015.mvr=_3014;
_3017.mvr=_3016;
_3019.mvr=_3018;
_3021.mvr=_3020;
_3023.mvr=_3022;
_3025.mvr=_3024;
_3027.mvr=_3026;
_3029.mvr=_3028;
_3031.mvr=_3030;
_3033.mvr=_3032;
_3035.mvr=_3034;
_3037.mvr=_3036;
_3039.mvr=_3038;
_3041.mvr=_3040;
_3043.mvr=_3042;
_3045.mvr=_3044;
_3047.mvr=_3046;
_3049.mvr=_3048;
_3051.mvr=_3050;
_3057.mvr=_3056;
_3053.mvr=_3052;
_2213.mvr=_2212;
var sym1224=RT.makeSymbol("compose");
var sym1228=RT.makeSymbol("build-vector");
var sym1227=RT.makeSymbol("build-string");
var sym1238=RT.makeSymbol("remq");
var sym1237=RT.makeSymbol("remv");
var sym1229=RT.makeSymbol("filter");
var sym1239=RT.makeSymbol("remove");
var sym1236=RT.makeSymbol("remove*");
var sym1235=RT.makeSymbol("remq*");
var sym1234=RT.makeSymbol("remv*");
var sym1233=RT.makeSymbol("memf");
var sym1232=RT.makeSymbol("findf");
var sym1220=RT.makeSymbol("assf");
var sym1231=RT.makeSymbol("foldl");
var sym1230=RT.makeSymbol("foldr");
var sym1226=RT.makeSymbol("build-list");
var sym1222=RT.makeSymbol("assv");
var sym1223=RT.makeSymbol("assq");
var sym1221=RT.makeSymbol("assoc");
var sym1225=RT.makeSymbol("compose1");var _2125_c=new RT.Closure(_2125,5,void(0),"loop");
var _2188_c=new RT.Closure(_2188,3,void(0),"loop");
var _2155_c=new RT.Closure(_2155,3,void(0),"loop");
var _2160_c=new RT.Closure(_2160,3,void(0),"loop");
var _2186_c=new RT.Closure(_2186,2,void(0),"pipeline1");
var _2124_c=new RT.Closure(_2124,3,void(0),"rloop");
var _2149_c=new RT.Closure(_2149,3,void(0),"loop");
var _2148_c=new RT.Closure(_2148,3,void(0),"mapadd");
var _2209_c=new RT.Closure(_2209,0,void(0),"...private/list.rkt:403:12");
var _2204_c=new RT.Closure(_2204,0,void(0),"...private/list.rkt:403:12");
var _2117_c=new RT.Closure(_2117,3,void(0),"loop");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3059(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/list.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/list.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <UninterpretedSource /usr/racket/share/pkgs/whalesong/whalesong/lang/unsafe/ops.rkt>
(function(M) {
"use strict";
 
M.installedModules["whalesong/lang/unsafe/ops.rkt"] = function() {
    return new plt.runtime.ModuleRecord("whalesong/lang/unsafe/ops.rkt",
        function(M) {
            
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/lang/unsafe/ops.rkt"];
             var ns = modrec.getExports();
             var extNs = modrec.getExternalExports();
             modrec.prefix=[void(0),void(0)];modrec.prefix.names=["unsafe-car1.1","unsafe-cdr2.3"];modrec.prefix.internalNames=["unsafe-car","unsafe-cdr"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){
EXPORTS['unsafe-car'] =
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-car',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].first;
        });


EXPORTS['unsafe-cdr'] = 
    plt.baselib.functions.makePrimitiveProcedure(
        'unsafe-cdr',
        1,
        function(MACHINE) {
            return MACHINE.e[MACHINE.e.length - 1].rest;
        });
})(M, exports);
             ns.set("unsafe-car1.1",exports["unsafe-car"]);
extNs.set("unsafe-car",exports["unsafe-car"]);
modrec.prefix[0]=exports["unsafe-car"];
ns.set("unsafe-cdr2.3",exports["unsafe-cdr"]);
extNs.set("unsafe-cdr",exports["unsafe-cdr"]);
modrec.prefix[1]=exports["unsafe-cdr"];

             modrec.privateExports = exports;
             return M.c.pop().label(M);
        });
   }
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /usr/racket/collects/racket/private/modbeg.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3077=function(M){return(_3063)(M);};

var _3076=function(M){if(--M.cbt<0){throw _3076;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["collects/racket/private/modbeg.rkt"],M.modules["collects/racket/private/modbeg.rkt"].getExports(),M.modules["collects/racket/private/modbeg.rkt"].getExternalExports(),M.modules["collects/racket/private/modbeg.rkt"].prefix));
return(M.p)(M);};

var _3065=function(M){if(--M.cbt<0){throw _3065;}
};

var _3067=function(M){if(--M.cbt<0){throw _3067;}
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3075=function(M){if(--M.cbt<0){throw _3075;}
M.e.length-=(M.a-1);
return(_3076)(M);};

var _3073=function(M){if(--M.cbt<0){throw _3073;}
M.e.length-=(M.a-1);
return(_3074)(M);};

var _3074=function(M){if(--M.cbt<0){throw _3074;}
M.e.push([M.params.currentNamespace.get("print-values")||M.primitives["print-values"]]);M.e[M.e.length-1].names=["print-values"];
M.modules["collects/racket/private/modbeg.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3076,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_3062_c;
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3072=function(M){if(M.modules["collects/syntax/wrap-modbeg.rkt"].isInvoked!==false){return(_3074)(M);}else{M.c.push(new RT.CallFrame(_3074,M.p));
return(M.modules["collects/syntax/wrap-modbeg.rkt"].label)(M);}};

var _3070=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3071=function(M){M.modules["collects/racket/private/modbeg.rkt"].isInvoked=true;
if((M.installedModules["collects/syntax/wrap-modbeg.rkt"]!==void(0)&&M.modules["collects/syntax/wrap-modbeg.rkt"]!==undefined)!==false){return(_3072)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "collects/syntax/wrap-modbeg.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3072);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3072)(M);}};

var _3064=function(M){if(--M.cbt<0){throw _3064;}
M.e.length-=(M.a-1);
return(_3065)(M);};

var _3066=function(M){if(--M.cbt<0){throw _3066;}
M.e.length-=(M.a-1);
return(_3067)(M);};

var _3062=function(M){if(--M.cbt<0){throw _3062;}

//"lambda body for #(struct:LamPositionalName print-values collects/racket/private/modbeg.rkt 11 4 246 72)"

M.unspliceRestFromStack(0,M.a);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["for-each"];
M.a=0;
M.v=M.primitives["current-print"]._i(M);
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3067,M.p));
return((M.p).label)(M);};

var _3063=function(M){M.c.push(new RT.CallFrame(_3065,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["collects/racket/private/modbeg.rkt"]=function(){return new RT.ModuleRecord("modbeg",_3071);}
return(_3070)(M);};

_3067.mvr=_3066;
_3074.mvr=_3073;
_3076.mvr=_3075;
_3065.mvr=_3064;
var _3062_c=new RT.Closure(_3062,(RT.makeArityAtLeast(0)),void(0),"print-values");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3077(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/collects/racket/private/modbeg.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/collects/racket/private/modbeg.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/collects/syntax/wrap-modbeg.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3078=function(M){M.c.push(new RT.CallFrame(_3080,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["collects/syntax/wrap-modbeg.rkt"]=function(){return new RT.ModuleRecord("modbeg",_3082);}
return(_3081)(M);};

var _3083=function(M){return(_3078)(M);};

var _3080=function(M){if(--M.cbt<0){throw _3080;}
};

var _3081=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3082=function(M){M.modules["collects/syntax/wrap-modbeg.rkt"].isInvoked=true;
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["collects/syntax/wrap-modbeg.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["collects/syntax/wrap-modbeg.rkt"],M.modules["collects/syntax/wrap-modbeg.rkt"].getExports(),M.modules["collects/syntax/wrap-modbeg.rkt"].getExternalExports(),M.modules["collects/syntax/wrap-modbeg.rkt"].prefix));
return(M.p)(M);};

var _3079=function(M){if(--M.cbt<0){throw _3079;}
M.e.length-=(M.a-1);
return(_3080)(M);};

_3080.mvr=_3079;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3083(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/collects/syntax/wrap-modbeg.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/collects/syntax/wrap-modbeg.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/bool.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3114=function(M){return(_3087)(M);};

var _3113=function(M){if(--M.cbt<0){throw _3113;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("boolean=?", prefix[selfMod.getPrefixOffset("boolean=?")]);extNs.set("boolean=?", prefix[selfMod.getPrefixOffset("boolean=?")]);ns.set("false", prefix[selfMod.getPrefixOffset("false")]);extNs.set("false", prefix[selfMod.getPrefixOffset("false")]);ns.set("false?", prefix[selfMod.getPrefixOffset("false?")]);extNs.set("false?", prefix[selfMod.getPrefixOffset("false?")]);ns.set("symbol=?", prefix[selfMod.getPrefixOffset("symbol=?")]);extNs.set("symbol=?", prefix[selfMod.getPrefixOffset("symbol=?")]);ns.set("true", prefix[selfMod.getPrefixOffset("true")]);extNs.set("true", prefix[selfMod.getPrefixOffset("true")]);}(M.modules["whalesong/lang/bool.rkt"],M.modules["whalesong/lang/bool.rkt"].getExports(),M.modules["whalesong/lang/bool.rkt"].getExternalExports(),M.modules["whalesong/lang/bool.rkt"].prefix));
return(M.p)(M);};

var _3111=function(M){if(--M.cbt<0){throw _3111;}
M.c.push(new RT.CallFrame(_3113,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3086,2,[M.e[M.e.length-1]],"symbol=?");
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3109=function(M){if(--M.cbt<0){throw _3109;}
M.c.push(new RT.CallFrame(_3111,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3085,2,[M.e[M.e.length-1]],"boolean=?");
M.e[M.e.length-1][3]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3107=function(M){if(--M.cbt<0){throw _3107;}
M.c.push(new RT.CallFrame(_3109,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_3084_c;
M.e[M.e.length-1][2]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3105=function(M){if(--M.cbt<0){throw _3105;}
M.c.push(new RT.CallFrame(_3107,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=false;
M.e[M.e.length-1][1]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3089=function(M){if(--M.cbt<0){throw _3089;}
};

var _3112=function(M){if(--M.cbt<0){throw _3112;}
M.e.length-=(M.a-1);
return(_3113)(M);};

var _3110=function(M){if(--M.cbt<0){throw _3110;}
M.e.length-=(M.a-1);
return(_3111)(M);};

var _3108=function(M){if(--M.cbt<0){throw _3108;}
M.e.length-=(M.a-1);
return(_3109)(M);};

var _3106=function(M){if(--M.cbt<0){throw _3106;}
M.e.length-=(M.a-1);
return(_3107)(M);};

var _3104=function(M){if(--M.cbt<0){throw _3104;}
M.e.length-=(M.a-1);
return(_3105)(M);};

var _3102=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3103=function(M){M.modules["whalesong/lang/bool.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("true")||M.primitives["true"],M.params.currentNamespace.get("false")||M.primitives["false"],M.params.currentNamespace.get("false?")||M.primitives["false?"],M.params.currentNamespace.get("boolean=?")||M.primitives["boolean=?"],M.primitives["boolean?"],M.primitives["raise-type-error"],M.params.currentNamespace.get("symbol=?")||M.primitives["symbol=?"],M.primitives["symbol?"]]);M.e[M.e.length-1].names=["true","false","false?","boolean=?","boolean?","raise-type-error","symbol=?","symbol?"];
M.modules["whalesong/lang/bool.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3105,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=true;
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3088=function(M){if(--M.cbt<0){throw _3088;}
M.e.length-=(M.a-1);
return(_3089)(M);};

var _3101=function(M){M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_3097)(M);};

var _3100=function(M){M.e[M.e.length-3]=0;
return(_3101)(M);};

var _3097=function(M){M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3096=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1304;
M.e[M.e.length-2]="symbol";
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
if(M.v===false){return(_3100)(M);}else{M.e[M.e.length-3]=1;
return(_3101)(M);}};

var _3099=function(M){if(M.v===false){return(_3096)(M);}else{M.v=RT.VOID;
return(_3097)(M);}};

var _3098=function(M){M.v=false;
return(_3099)(M);};

var _3086=function(M){if(--M.cbt<0){throw _3086;}

//"lambda body for #(struct:LamPositionalName symbol=? whalesong/lang/bool.rkt 17 0 312 143)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
if(M.v===false){return(_3098)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["symbol?"]._i(M);
M.e.pop();
return(_3099)(M);}};

var _3095=function(M){M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.a=5;
M.v=M.primitives["raise-type-error"]._i(M);
M.e.length-=5;
return(_3091)(M);};

var _3094=function(M){M.e[M.e.length-3]=0;
return(_3095)(M);};

var _3091=function(M){M.v=(M.e[M.e.length-2]===M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3090=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=sym1305;
M.e[M.e.length-2]="boolean";
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
if(M.v===false){return(_3094)(M);}else{M.e[M.e.length-3]=1;
return(_3095)(M);}};

var _3093=function(M){if(M.v===false){return(_3090)(M);}else{M.v=RT.VOID;
return(_3091)(M);}};

var _3092=function(M){M.v=false;
return(_3093)(M);};

var _3085=function(M){if(--M.cbt<0){throw _3085;}

//"lambda body for #(struct:LamPositionalName boolean=? whalesong/lang/bool.rkt 12 0 161 149)"

M.e.push(M.p.closedVals[0]);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
if(M.v===false){return(_3092)(M);}else{M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["boolean?"]._i(M);
M.e.pop();
return(_3093)(M);}};

var _3084=function(M){if(--M.cbt<0){throw _3084;}

//"lambda body for #(struct:LamPositionalName false? whalesong/lang/bool.rkt 10 0 129 30)"

M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3087=function(M){M.c.push(new RT.CallFrame(_3089,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/bool.rkt"]=function(){return new RT.ModuleRecord("bool",_3103);}
return(_3102)(M);};

_3105.mvr=_3104;
_3107.mvr=_3106;
_3109.mvr=_3108;
_3111.mvr=_3110;
_3113.mvr=_3112;
_3089.mvr=_3088;
var sym1305=RT.makeSymbol("boolean=?");
var sym1304=RT.makeSymbol("symbol=?");var _3084_c=new RT.Closure(_3084,1,void(0),"false?");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3114(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/bool.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/bool.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/posn.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3135=function(M){return(_3116)(M);};

var _3134=function(M){if(--M.cbt<0){throw _3134;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("make-posn", prefix[selfMod.getPrefixOffset("make-posn")]);extNs.set("make-posn", prefix[selfMod.getPrefixOffset("make-posn")]);ns.set("posn-x", prefix[selfMod.getPrefixOffset("posn-x")]);extNs.set("posn-x", prefix[selfMod.getPrefixOffset("posn-x")]);ns.set("posn-y", prefix[selfMod.getPrefixOffset("posn-y")]);extNs.set("posn-y", prefix[selfMod.getPrefixOffset("posn-y")]);ns.set("posn?", prefix[selfMod.getPrefixOffset("posn?")]);extNs.set("posn?", prefix[selfMod.getPrefixOffset("posn?")]);ns.set("set-posn-x!", prefix[selfMod.getPrefixOffset("set-posn-x!")]);extNs.set("set-posn-x!", prefix[selfMod.getPrefixOffset("set-posn-x!")]);ns.set("set-posn-y!", prefix[selfMod.getPrefixOffset("set-posn-y!")]);extNs.set("set-posn-y!", prefix[selfMod.getPrefixOffset("set-posn-y!")]);ns.set("struct:posn", prefix[selfMod.getPrefixOffset("struct:posn")]);extNs.set("struct:posn", prefix[selfMod.getPrefixOffset("struct:posn")]);}(M.modules["whalesong/lang/posn.rkt"],M.modules["whalesong/lang/posn.rkt"].getExports(),M.modules["whalesong/lang/posn.rkt"].getExternalExports(),M.modules["whalesong/lang/posn.rkt"].prefix));
return(M.p)(M);};

var _3131=RT.si_context_expected(7);

var _3128=RT.si_context_expected(5);

var _3124=function(M){if(--M.cbt<0){throw _3124;}
M.c.push(new RT.CallFrame(_3134,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3115,2,[M.e[M.e.length-1]],"make-posn");
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3118=function(M){if(--M.cbt<0){throw _3118;}
};

var _3133=function(M){if(--M.cbt<0){throw _3133;}
M.e.length-=(M.a-1);
return(_3134)(M);};

var _3130=function(M){if(--M.cbt<0){throw _3130;}
if((M.a-7)===0){return(_3126)(M);}else{RT.si_context_expected(7)(M);
}};

var _3129=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1335;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1336;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1335;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-15];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym1336;
M.a=3;
M.v=M.primitives["make-struct-field-mutator"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3131,M.p));
return((M.p).label)(M);};

var _3127=function(M){if(--M.cbt<0){throw _3127;}
if((M.a-5)===0){return(_3129)(M);}else{RT.si_context_expected(5)(M);
}};

var _3123=function(M){if(--M.cbt<0){throw _3123;}
M.e.length-=(M.a-1);
return(_3124)(M);};

var _3121=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3122=function(M){M.modules["whalesong/lang/posn.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("struct:posn")||M.primitives["struct:posn"],M.params.currentNamespace.get("posn1.1")||M.primitives["posn1.1"],M.params.currentNamespace.get("posn?")||M.primitives["posn?"],M.params.currentNamespace.get("posn-x")||M.primitives["posn-x"],M.params.currentNamespace.get("posn-y")||M.primitives["posn-y"],M.params.currentNamespace.get("set-posn-x!")||M.primitives["set-posn-x!"],M.params.currentNamespace.get("set-posn-y!")||M.primitives["set-posn-y!"],M.params.currentNamespace.get("make-posn")||M.primitives["make-posn"]]);M.e[M.e.length-1].names=["struct:posn","posn1.1","posn?","posn-x","posn-y","set-posn-x!","set-posn-y!","make-posn"];
M.modules["whalesong/lang/posn.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3124,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1337;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=2;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=false;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=false;
M.e[M.e.length-11]=sym1337;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3128,M.p));
return((M.p).label)(M);};

var _3117=function(M){if(--M.cbt<0){throw _3117;}
M.e.length-=(M.a-1);
return(_3118)(M);};

var _3115=function(M){if(--M.cbt<0){throw _3115;}

//"lambda body for #(struct:LamPositionalName make-posn whalesong/lang/posn.rkt 11 0 312 35)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][1];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3116=function(M){M.c.push(new RT.CallFrame(_3118,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/posn.rkt"]=function(){return new RT.ModuleRecord("posn",_3122);}
return(_3121)(M);};

var _3126=function(M){M.e.splice(M.e.length-11,5);
M.e[M.e.length-7][0]=M.v;
M.e[M.e.length-7][1]=M.e[M.e.length-1];
M.e[M.e.length-7][2]=M.e[M.e.length-2];
M.e[M.e.length-7][3]=M.e[M.e.length-3];
M.e[M.e.length-7][4]=M.e[M.e.length-4];
M.e[M.e.length-7][5]=M.e[M.e.length-5];
M.e[M.e.length-7][6]=M.e[M.e.length-6];
M.e.length-=6;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3128.mvr=_3127;
_3131.mvr=_3130;
_3124.mvr=_3123;
_3134.mvr=_3133;
_3118.mvr=_3117;
var sym1335=RT.makeSymbol("x");
var sym1337=RT.makeSymbol("posn");
var sym1336=RT.makeSymbol("y");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3135(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/posn.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/posn.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/shared.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3138=function(M){if(--M.cbt<0){throw _3138;}
};

var _3144=function(M){if(--M.cbt<0){throw _3144;}
M.e.length-=(M.a-1);
return(_3145)(M);};

var _3142=function(M){if(--M.cbt<0){throw _3142;}
M.e.length-=(M.a-1);
return(_3143)(M);};

var _3143=function(M){if(--M.cbt<0){throw _3143;}
M.e.push([M.params.currentNamespace.get("undefined")||M.primitives["undefined"],M.primitives["unique-undefined-value"]]);M.e[M.e.length-1].names=["undefined","unique-undefined-value"];
M.modules["whalesong/lang/private/shared.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3145,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=M.primitives["unique-undefined-value"];
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3141=function(M){if(M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked!==false){return(_3143)(M);}else{M.c.push(new RT.CallFrame(_3143,M.p));
return(M.modules["whalesong/lang/private/traced-app.rkt"].label)(M);}};

var _3139=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3140=function(M){M.modules["whalesong/lang/private/shared.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/private/traced-app.rkt"]!==void(0)&&M.modules["whalesong/lang/private/traced-app.rkt"]!==undefined)!==false){return(_3141)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/private/traced-app.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3141);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3141)(M);}};

var _3137=function(M){if(--M.cbt<0){throw _3137;}
M.e.length-=(M.a-1);
return(_3138)(M);};

var _3136=function(M){M.c.push(new RT.CallFrame(_3138,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/shared.rkt"]=function(){return new RT.ModuleRecord("shared",_3140);}
return(_3139)(M);};

var _3146=function(M){return(_3136)(M);};

var _3145=function(M){if(--M.cbt<0){throw _3145;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {}(M.modules["whalesong/lang/private/shared.rkt"],M.modules["whalesong/lang/private/shared.rkt"].getExports(),M.modules["whalesong/lang/private/shared.rkt"].getExternalExports(),M.modules["whalesong/lang/private/shared.rkt"].prefix));
return(M.p)(M);};

_3143.mvr=_3142;
_3145.mvr=_3144;
_3138.mvr=_3137;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3146(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/shared.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/shared.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/traced-app.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3151=function(M){M.modules["whalesong/lang/private/traced-app.rkt"].isInvoked=true;
M.e.push([M.params.currentNamespace.get("traced-app-key")||M.primitives["traced-app-key"],M.params.currentNamespace.get("traced-callee-key")||M.primitives["traced-callee-key"]]);M.e[M.e.length-1].names=["traced-app-key","traced-callee-key"];
M.modules["whalesong/lang/private/traced-app.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3153,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(sym1560);
M.a=1;
M.v=M.primitives["gensym"]._i(M);
M.e.pop();
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3148=function(M){if(--M.cbt<0){throw _3148;}
M.e.length-=(M.a-1);
return(_3149)(M);};

var _3147=function(M){M.c.push(new RT.CallFrame(_3149,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/private/traced-app.rkt"]=function(){return new RT.ModuleRecord("traced-app",_3151);}
return(_3150)(M);};

var _3156=function(M){return(_3147)(M);};

var _3155=function(M){if(--M.cbt<0){throw _3155;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("traced-app-key", prefix[selfMod.getPrefixOffset("traced-app-key")]);extNs.set("traced-app-key", prefix[selfMod.getPrefixOffset("traced-app-key")]);ns.set("traced-callee-key", prefix[selfMod.getPrefixOffset("traced-callee-key")]);extNs.set("traced-callee-key", prefix[selfMod.getPrefixOffset("traced-callee-key")]);}(M.modules["whalesong/lang/private/traced-app.rkt"],M.modules["whalesong/lang/private/traced-app.rkt"].getExports(),M.modules["whalesong/lang/private/traced-app.rkt"].getExternalExports(),M.modules["whalesong/lang/private/traced-app.rkt"].prefix));
return(M.p)(M);};

var _3153=function(M){if(--M.cbt<0){throw _3153;}
M.c.push(new RT.CallFrame(_3155,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(sym1561);
M.a=1;
M.v=M.primitives["gensym"]._i(M);
M.e.pop();
M.e[M.e.length-1][1]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3149=function(M){if(--M.cbt<0){throw _3149;}
};

var _3154=function(M){if(--M.cbt<0){throw _3154;}
M.e.length-=(M.a-1);
return(_3155)(M);};

var _3152=function(M){if(--M.cbt<0){throw _3152;}
M.e.length-=(M.a-1);
return(_3153)(M);};

var _3150=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3153.mvr=_3152;
_3155.mvr=_3154;
_3149.mvr=_3148;
var sym1561=RT.makeSymbol("traced-callee-key");
var sym1560=RT.makeSymbol("traced-app-key");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3156(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/traced-app.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/private/traced-app.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/check-expect/check-expect.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3192=function(M){if(--M.cbt<0){throw _3192;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===1);
if(M.v===false){return(_3194)(M);}else{M.e[M.e.length-2]="The test passed!";
return(_3193)(M);}};

var _3190=function(M){if(--M.cbt<0){throw _3190;}
M.e[M.e.length-2]=M.v;
M.v=RT.checkedNumEquals(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_3187)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0));
M.e.push(void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3192,M.p));
return((M.p).label)(M);}};

var _3186=function(M){if(--M.cbt<0){throw _3186;}
if(M.v===false){return(_3183)(M);}else{M.v=M.e[M.e.length-4];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3190,M.p));
return((M.p).label)(M);}};

var _3176=function(M){if(--M.cbt<0){throw _3176;}
M.v=false;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3171=function(M){if(--M.cbt<0){throw _3171;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
if(M.v===false){return(_3173)(M);}else{M.v=true;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3168=function(M){if(--M.cbt<0){throw _3168;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3171,M.p));
return((M.p).label)(M);};

var _3260=function(M){if(--M.cbt<0){throw _3260;}
if((M.a-4)===0){return(_3256)(M);}else{RT.si_context_expected(4)(M);
}};

var _3259=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1610;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3261,M.p));
return((M.p).label)(M);};

var _3257=function(M){if(--M.cbt<0){throw _3257;}
if((M.a-5)===0){return(_3259)(M);}else{RT.si_context_expected(5)(M);
}};

var _3253=function(M){if(--M.cbt<0){throw _3253;}
M.e.length-=(M.a-1);
return(_3254)(M);};

var _3251=function(M){if(--M.cbt<0){throw _3251;}
M.e.length-=(M.a-1);
return(_3252)(M);};

var _3249=function(M){if(--M.cbt<0){throw _3249;}
M.e.length-=(M.a-1);
return(_3250)(M);};

var _3247=function(M){if(--M.cbt<0){throw _3247;}
M.e.length-=(M.a-1);
return(_3248)(M);};

var _3245=function(M){if(--M.cbt<0){throw _3245;}
M.e.length-=(M.a-1);
return(_3246)(M);};

var _3243=function(M){if(--M.cbt<0){throw _3243;}
M.e.length-=(M.a-1);
return(_3244)(M);};

var _3241=function(M){if(--M.cbt<0){throw _3241;}
M.e.length-=(M.a-1);
return(_3242)(M);};

var _3239=function(M){if(--M.cbt<0){throw _3239;}
M.e.length-=(M.a-1);
return(_3240)(M);};

var _3237=function(M){if(--M.cbt<0){throw _3237;}
M.e.length-=(M.a-1);
return(_3238)(M);};

var _3235=function(M){if(--M.cbt<0){throw _3235;}
M.e.length-=(M.a-1);
return(_3236)(M);};

var _3236=function(M){if(--M.cbt<0){throw _3236;}
M.e.push([M.params.currentNamespace.get("*tests*")||M.primitives["*tests*"],M.params.currentNamespace.get("check-expect*")||M.primitives["check-expect*"],M.primitives["equal?"],M.primitives["printf"],M.params.currentNamespace.get("display-location")||M.primitives["display-location"],M.params.currentNamespace.get("accumulate-test!")||M.primitives["accumulate-test!"],M.params.currentNamespace.get("test-suffixed")||M.primitives["test-suffixed"],M.primitives["format"],M.params.currentNamespace.get("capitalize")||M.primitives["capitalize"],M.primitives["string-length"],M.primitives["string-append"],M.primitives["string"],M.primitives["char-upcase"],M.primitives["string-ref"],M.primitives["substring"],M.params.currentNamespace.get("run-tests")||M.primitives["run-tests"],M.primitives["length"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("empty?"),{moduleName:"whalesong/lang/list.rkt",name:"empty?"}],M.primitives["display"],M.primitives["newline"],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("first"),{moduleName:"whalesong/lang/list.rkt",name:"first"}],[M.modules["whalesong/lang/list.rkt"].prefix,M.modules["whalesong/lang/list.rkt"].getPrefixOffset("rest"),{moduleName:"whalesong/lang/list.rkt",name:"rest"}],M.primitives["reverse"],M.params.currentNamespace.get("struct:unexpected-no-error")||M.primitives["struct:unexpected-no-error"],M.params.currentNamespace.get("make-unexpected-no-error")||M.primitives["make-unexpected-no-error"],M.params.currentNamespace.get("unexpected-no-error?")||M.primitives["unexpected-no-error?"],M.params.currentNamespace.get("unexpected-no-error-result")||M.primitives["unexpected-no-error-result"],false]);M.e[M.e.length-1].names=["*tests*","check-expect*","equal?","printf","display-location","accumulate-test!","test-suffixed","format","capitalize","string-length","string-append","string","char-upcase","string-ref","substring","run-tests","length","empty?","display","newline","first","rest","reverse","struct:unexpected-no-error","make-unexpected-no-error","unexpected-no-error?","unexpected-no-error-result",false];
M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3238,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=RT.NULL;
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3234=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3236)(M);}else{M.c.push(new RT.CallFrame(_3236,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3232=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3233=function(M){M.modules["whalesong/lang/check-expect/check-expect.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3234)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3234);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3234)(M);}};

var _3165=function(M){if(--M.cbt<0){throw _3165;}
M.e.length-=(M.a-1);
return(_3166)(M);};

var _3226=function(M){M.v=RT.VOID;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3163=function(M){if(--M.cbt<0){throw _3163;}

//"lambda body for #(struct:LamPositionalName run-tests whalesong/lang/check-expect/check-expect.rkt 193 0 6362 1414)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-4][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-4][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3229,M.p));
return((M.p).label)(M);};



var _3212=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][27];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=RT.checkedAdd1(M, M.e[M.e.length-6]);
M.e.push(void(0));
M.p=M.e[M.e.length-5][21][0][M.e[M.e.length-5][21][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3223,M.p));
return((M.p).label)(M);};









var _3188=function(M){M.e[M.e.length-1][0]=RT.NULL;
M.v=RT.VOID;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3196=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="All ~a tests passed!";
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-6][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-6][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3199,M.p));
return((M.p).label)(M);};

var _3194=function(M){M.v=(M.e[M.e.length-1]===2);
if(M.v===false){return(_3196)(M);}else{M.e[M.e.length-2]="Both tests passed!";
return(_3193)(M);}};


var _3187=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="Ran ~a.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][6];
M.e.push(void(0));
M.p=M.primitives["length"];
if (M.e[M.e.length-5][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3201,M.p));
return((M.p).label)(M);};


var _3183=function(M){M.e.push(void(0));
M.p=M.e[M.e.length-2][20][0][M.e[M.e.length-2][20][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3215,M.p));
return((M.p).label)(M);};


var _3162=function(M){if(--M.cbt<0){throw _3162;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/check-expect/check-expect.rkt 197 4 6480 1294)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.p=M.e[M.e.length-2][17][0][M.e[M.e.length-2][17][1]];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3186,M.p));
return((M.p).label)(M);};

var _3181=function(M){M.v=M.e[M.e.length-2];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3161=function(M){if(--M.cbt<0){throw _3161;}

//"lambda body for #(struct:LamPositionalName capitalize whalesong/lang/check-expect/check-expect.rkt 184 0 6148 189)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0));
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["string-length"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_3181)(M);}else{M.e.push(void(0),void(0));
M.e.push(void(0));
M.e.push(void(0));
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=0;
M.v=M.primitives["string-ref"]._i(M);
M.e.length-=2;
M.e[M.e.length-1]=M.v;
M.v=M.primitives["char-upcase"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.a=1;
M.v=M.primitives["string"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=1;
M.a=2;
M.v=M.primitives["substring"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["string-append"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3179=function(M){M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a tests";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3177=function(M){M.v=(M.e[M.e.length-2]===1);
if(M.v===false){return(_3179)(M);}else{M.v="one test";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3160=function(M){if(--M.cbt<0){throw _3160;}

//"lambda body for #(struct:LamPositionalName test-suffixed whalesong/lang/check-expect/check-expect.rkt 176 0 5996 115)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-2]===0);
if(M.v===false){return(_3177)(M);}else{M.v="zero tests";
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3159=function(M){if(--M.cbt<0){throw _3159;}

//"lambda body for #(struct:LamPositionalName accumulate-test! whalesong/lang/check-expect/check-expect.rkt 171 0 5881 73)"

M.e.push(M.p.closedVals[0]);
M.e[M.e.length-1][0]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-1][0]);
M.v=RT.VOID;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3158=function(M){if(--M.cbt<0){throw _3158;}

//"lambda body for #(struct:LamPositionalName display-location whalesong/lang/check-expect/check-expect.rkt 98 0 3161 171)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]="  at: ~s, line ~s, column ~s\n";
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-source"]._i(M);
M.e.pop();
M.e[M.e.length-2]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-line"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["srcloc-column"]._i(M);
M.e.pop();
M.e[M.e.length-4]=M.v;
M.a=4;
M.v=M.primitives["printf"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3175=function(M){if(--M.cbt<0){throw _3175;}
M.e.length-=(M.a-1);
return(_3176)(M);};

var _3173=function(M){M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="check-expect: actual value ~s differs from ~s, the expected value\n";
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["printf"]._i(M);
M.e.length-=3;
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][4];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3176,M.p));
return((M.p).label)(M);};



var _3157=function(M){if(--M.cbt<0){throw _3157;}

//"lambda body for #(struct:LamPositionalName check-expect* whalesong/lang/check-expect/check-expect.rkt 79 0 2489 669)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-2];
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3168,M.p));
return((M.p).label)(M);};

var _3164=function(M){M.c.push(new RT.CallFrame(_3166,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/check-expect/check-expect.rkt"]=function(){return new RT.ModuleRecord("check-expect",_3233);}
return(_3232)(M);};

var _3256=function(M){M.e.splice(M.e.length-8,5);
M.e[M.e.length-4][23]=M.v;
M.e[M.e.length-4][24]=M.e[M.e.length-1];
M.e[M.e.length-4][25]=M.e[M.e.length-2];
M.e[M.e.length-4][26]=M.e[M.e.length-3];
M.e.length-=3;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3193=function(M){M.e.pop();
M.a=1;
M.v=M.primitives["display"]._i(M);
M.e.pop();
M.a=0;
M.v=M.primitives["newline"]._i(M);
return(_3188)(M);};

var _3263=function(M){return(_3164)(M);};

var _3261=RT.si_context_expected(4);

var _3258=RT.si_context_expected(5);

var _3254=function(M){if(--M.cbt<0){throw _3254;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("run-tests", prefix[selfMod.getPrefixOffset("run-tests")]);extNs.set("run-tests", prefix[selfMod.getPrefixOffset("run-tests")]);}(M.modules["whalesong/lang/check-expect/check-expect.rkt"],M.modules["whalesong/lang/check-expect/check-expect.rkt"].getExports(),M.modules["whalesong/lang/check-expect/check-expect.rkt"].getExternalExports(),M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix));
return(M.p)(M);};

var _3252=function(M){if(--M.cbt<0){throw _3252;}
M.c.push(new RT.CallFrame(_3254,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1611;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=sym1611;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3258,M.p));
return((M.p).label)(M);};

var _3250=function(M){if(--M.cbt<0){throw _3250;}
M.c.push(new RT.CallFrame(_3252,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3163,0,[M.e[M.e.length-1]],"run-tests");
M.e[M.e.length-1][15]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3248=function(M){if(--M.cbt<0){throw _3248;}
M.c.push(new RT.CallFrame(_3250,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3162,3,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][27]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3246=function(M){if(--M.cbt<0){throw _3246;}
M.c.push(new RT.CallFrame(_3248,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3161,1,[M.e[M.e.length-1]],"capitalize");
M.e[M.e.length-1][8]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3244=function(M){if(--M.cbt<0){throw _3244;}
M.c.push(new RT.CallFrame(_3246,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3160,1,[M.e[M.e.length-1]],"test-suffixed");
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3242=function(M){if(--M.cbt<0){throw _3242;}
M.c.push(new RT.CallFrame(_3244,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3159,1,[M.e[M.e.length-1]],"accumulate-test!");
M.e[M.e.length-1][5]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3240=function(M){if(--M.cbt<0){throw _3240;}
M.c.push(new RT.CallFrame(_3242,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3158,1,[M.e[M.e.length-1]],"display-location");
M.e[M.e.length-1][4]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3238=function(M){if(--M.cbt<0){throw _3238;}
M.c.push(new RT.CallFrame(_3240,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3157,4,[M.e[M.e.length-1]],"check-expect*");
M.e[M.e.length-1][1]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3166=function(M){if(--M.cbt<0){throw _3166;}
};

var _3229=function(M){if(--M.cbt<0){throw _3229;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
if(M.v===false){return(_3226)(M);}else{M.e.push("Running tests...\n");
M.a=1;
M.v=M.primitives["printf"]._i(M);
M.e.pop();
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][27];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e.push(void(0));
if (M.e[M.e.length-5][0]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-5].names[0]); }
M.e[M.e.length-1]=M.e[M.e.length-5][0];
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3223=function(M){if(--M.cbt<0){throw _3223;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3219=function(M){if(--M.cbt<0){throw _3219;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3217=function(M){if(--M.cbt<0){throw _3217;}
if(M.v===false){return(_3212)(M);}else{M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-4][27];
M.e[M.e.length-1]=RT.checkedAdd1(M, M.e[M.e.length-5]);
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e.push(void(0));
M.p=M.e[M.e.length-5][21][0][M.e[M.e.length-5][21][1]];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3219,M.p));
return((M.p).label)(M);}};

var _3215=function(M){if(--M.cbt<0){throw _3215;}
M.p=M.v;
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3217,M.p));
return((M.p).label)(M);};

var _3211=function(M){if(--M.cbt<0){throw _3211;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
return(_3188)(M);};

var _3209=function(M){if(--M.cbt<0){throw _3209;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3211,M.p));
return((M.p).label)(M);};

var _3207=function(M){if(--M.cbt<0){throw _3207;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a failed.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][8];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][6];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3209,M.p));
return((M.p).label)(M);};

var _3205=function(M){if(--M.cbt<0){throw _3205;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3207,M.p));
return((M.p).label)(M);};

var _3203=function(M){if(--M.cbt<0){throw _3203;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["printf"]._i(M);
M.e.length-=2;
M.e.push(void(0),void(0));
M.e[M.e.length-1]="~a passed.\n";
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-4][8];
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][6];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3205,M.p));
return((M.p).label)(M);};

var _3201=function(M){if(--M.cbt<0){throw _3201;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3203,M.p));
return((M.p).label)(M);};

var _3199=function(M){if(--M.cbt<0){throw _3199;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["format"]._i(M);
M.e.length-=2;
M.e[M.e.length-2]=M.v;
return(_3193)(M);};

_3176.mvr=_3175;
_3236.mvr=_3235;
_3238.mvr=_3237;
_3240.mvr=_3239;
_3242.mvr=_3241;
_3244.mvr=_3243;
_3246.mvr=_3245;
_3248.mvr=_3247;
_3250.mvr=_3249;
_3252.mvr=_3251;
_3258.mvr=_3257;
_3261.mvr=_3260;
_3254.mvr=_3253;
_3166.mvr=_3165;
var sym1610=RT.makeSymbol("result");
var sym1611=RT.makeSymbol("unexpected-no-error");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3263(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/check-expect/check-expect.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/check-expect/check-expect.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3275=function(M){return(_3264)(M);};

var _3266=function(M){if(--M.cbt<0){throw _3266;}
};

var _3273=function(M){if(--M.cbt<0){throw _3273;}
M.e.length-=(M.a-1);
return(_3274)(M);};

var _3274=function(M){if(--M.cbt<0){throw _3274;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/world.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("big-bang", M.modules["whalesong/world/impl.rkt"].getExports().get("big-bang1.1"));ns.set("key=?", M.modules["whalesong/world/impl.rkt"].getExports().get("key=?6.11"));ns.set("make-stop-with", M.modules["whalesong/world/types.rkt"].getExports().get("make-stop-with"));ns.set("on-key", M.modules["whalesong/world/impl.rkt"].getExports().get("on-key3.5"));ns.set("on-mouse", M.modules["whalesong/world/impl.rkt"].getExports().get("on-mouse5.9"));ns.set("on-release", M.modules["whalesong/world/impl.rkt"].getExports().get("on-release4.7"));ns.set("on-tick", M.modules["whalesong/world/impl.rkt"].getExports().get("on-tick2.3"));ns.set("stop-when", M.modules["whalesong/world/impl.rkt"].getExports().get("stop-when8.15"));ns.set("stop-with-world", M.modules["whalesong/world/types.rkt"].getExports().get("stop-with-world"));ns.set("stop-with?", M.modules["whalesong/world/types.rkt"].getExports().get("stop-with?"));ns.set("struct:stop-with", M.modules["whalesong/world/types.rkt"].getExports().get("struct:stop-with"));ns.set("to-draw", M.modules["whalesong/world/impl.rkt"].getExports().get("to-draw7.13"));}(M.modules["whalesong/world.rkt"],M.modules["whalesong/world.rkt"].getExports(),M.modules["whalesong/world.rkt"].getExternalExports(),M.modules["whalesong/world.rkt"].prefix));
return(M.p)(M);};

var _3272=function(M){if(M.modules["whalesong/world/main.rkt"].isInvoked!==false){return(_3274)(M);}else{M.c.push(new RT.CallFrame(_3274,M.p));
return(M.modules["whalesong/world/main.rkt"].label)(M);}};

var _3270=function(M){if(--M.cbt<0){throw _3270;}
M.e.length-=(M.a-1);
return(_3271)(M);};

var _3271=function(M){if(--M.cbt<0){throw _3271;}
if((M.installedModules["whalesong/world/main.rkt"]!==void(0)&&M.modules["whalesong/world/main.rkt"]!==undefined)!==false){return(_3272)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/world/main.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3272);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3272)(M);}};

var _3269=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3271)(M);}else{M.c.push(new RT.CallFrame(_3271,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3267=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3268=function(M){M.modules["whalesong/world.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3269)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3269);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3269)(M);}};

var _3265=function(M){if(--M.cbt<0){throw _3265;}
M.e.length-=(M.a-1);
return(_3266)(M);};

var _3264=function(M){M.c.push(new RT.CallFrame(_3266,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/world.rkt"]=function(){return new RT.ModuleRecord("world",_3268);}
return(_3267)(M);};

_3271.mvr=_3270;
_3274.mvr=_3273;
_3266.mvr=_3265;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3275(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/main.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3290=function(M){return(_3276)(M);};

var _3278=function(M){if(--M.cbt<0){throw _3278;}
};

var _3288=function(M){if(--M.cbt<0){throw _3288;}
M.e.length-=(M.a-1);
return(_3289)(M);};

var _3289=function(M){if(--M.cbt<0){throw _3289;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/world/main.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("big-bang", M.modules["whalesong/world/impl.rkt"].getExports().get("big-bang1.1"));ns.set("key=?", M.modules["whalesong/world/impl.rkt"].getExports().get("key=?6.11"));ns.set("make-stop-with", M.modules["whalesong/world/types.rkt"].getExports().get("make-stop-with"));ns.set("on-key", M.modules["whalesong/world/impl.rkt"].getExports().get("on-key3.5"));ns.set("on-mouse", M.modules["whalesong/world/impl.rkt"].getExports().get("on-mouse5.9"));ns.set("on-release", M.modules["whalesong/world/impl.rkt"].getExports().get("on-release4.7"));ns.set("on-tick", M.modules["whalesong/world/impl.rkt"].getExports().get("on-tick2.3"));ns.set("stop-when", M.modules["whalesong/world/impl.rkt"].getExports().get("stop-when8.15"));ns.set("stop-with-world", M.modules["whalesong/world/types.rkt"].getExports().get("stop-with-world"));ns.set("stop-with?", M.modules["whalesong/world/types.rkt"].getExports().get("stop-with?"));ns.set("struct:stop-with", M.modules["whalesong/world/types.rkt"].getExports().get("struct:stop-with"));ns.set("to-draw", M.modules["whalesong/world/impl.rkt"].getExports().get("to-draw7.13"));}(M.modules["whalesong/world/main.rkt"],M.modules["whalesong/world/main.rkt"].getExports(),M.modules["whalesong/world/main.rkt"].getExternalExports(),M.modules["whalesong/world/main.rkt"].prefix));
return(M.p)(M);};

var _3287=function(M){if(M.modules["whalesong/world/types.rkt"].isInvoked!==false){return(_3289)(M);}else{M.c.push(new RT.CallFrame(_3289,M.p));
return(M.modules["whalesong/world/types.rkt"].label)(M);}};

var _3285=function(M){if(--M.cbt<0){throw _3285;}
M.e.length-=(M.a-1);
return(_3286)(M);};

var _3286=function(M){if(--M.cbt<0){throw _3286;}
if((M.installedModules["whalesong/world/types.rkt"]!==void(0)&&M.modules["whalesong/world/types.rkt"]!==undefined)!==false){return(_3287)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/world/types.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3287);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3287)(M);}};

var _3284=function(M){if(M.modules["whalesong/world/impl.rkt"].isInvoked!==false){return(_3286)(M);}else{M.c.push(new RT.CallFrame(_3286,M.p));
return(M.modules["whalesong/world/impl.rkt"].label)(M);}};

var _3282=function(M){if(--M.cbt<0){throw _3282;}
M.e.length-=(M.a-1);
return(_3283)(M);};

var _3283=function(M){if(--M.cbt<0){throw _3283;}
if((M.installedModules["whalesong/world/impl.rkt"]!==void(0)&&M.modules["whalesong/world/impl.rkt"]!==undefined)!==false){return(_3284)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/world/impl.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3284);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3284)(M);}};

var _3281=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3283)(M);}else{M.c.push(new RT.CallFrame(_3283,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3279=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3280=function(M){M.modules["whalesong/world/main.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3281)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3281);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3281)(M);}};

var _3277=function(M){if(--M.cbt<0){throw _3277;}
M.e.length-=(M.a-1);
return(_3278)(M);};

var _3276=function(M){M.c.push(new RT.CallFrame(_3278,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/world/main.rkt"]=function(){return new RT.ModuleRecord("main",_3280);}
return(_3279)(M);};

_3283.mvr=_3282;
_3286.mvr=_3285;
_3289.mvr=_3288;
_3278.mvr=_3277;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3290(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/main.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/main.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/types.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3315=RT.si_context_expected(4);

var _3312=RT.si_context_expected(5);

var _3308=function(M){if(--M.cbt<0){throw _3308;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("make-stop-with", prefix[selfMod.getPrefixOffset("make-stop-with")]);extNs.set("make-stop-with", prefix[selfMod.getPrefixOffset("make-stop-with")]);ns.set("stop-with-world", prefix[selfMod.getPrefixOffset("stop-with-world")]);extNs.set("stop-with-world", prefix[selfMod.getPrefixOffset("stop-with-world")]);ns.set("stop-with?", prefix[selfMod.getPrefixOffset("stop-with?")]);extNs.set("stop-with?", prefix[selfMod.getPrefixOffset("stop-with?")]);ns.set("struct:stop-with", prefix[selfMod.getPrefixOffset("struct:stop-with")]);extNs.set("struct:stop-with", prefix[selfMod.getPrefixOffset("struct:stop-with")]);}(M.modules["whalesong/world/types.rkt"],M.modules["whalesong/world/types.rkt"].getExports(),M.modules["whalesong/world/types.rkt"].getExternalExports(),M.modules["whalesong/world/types.rkt"].prefix));
return(M.p)(M);};

var _3301=function(M){if(--M.cbt<0){throw _3301;}
};

var _3314=function(M){if(--M.cbt<0){throw _3314;}
if((M.a-4)===0){return(_3310)(M);}else{RT.si_context_expected(4)(M);
}};

var _3313=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym1820;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3315,M.p));
return((M.p).label)(M);};

var _3311=function(M){if(--M.cbt<0){throw _3311;}
if((M.a-5)===0){return(_3313)(M);}else{RT.si_context_expected(5)(M);
}};

var _3307=function(M){if(--M.cbt<0){throw _3307;}
M.e.length-=(M.a-1);
return(_3308)(M);};

var _3305=function(M){if(--M.cbt<0){throw _3305;}
M.e.length-=(M.a-1);
return(_3306)(M);};

var _3306=function(M){if(--M.cbt<0){throw _3306;}
M.e.push([M.params.currentNamespace.get("struct:stop-with")||M.primitives["struct:stop-with"],M.params.currentNamespace.get("make-stop-with")||M.primitives["make-stop-with"],M.params.currentNamespace.get("stop-with?")||M.primitives["stop-with?"],M.params.currentNamespace.get("stop-with-world")||M.primitives["stop-with-world"]]);M.e[M.e.length-1].names=["struct:stop-with","make-stop-with","stop-with?","stop-with-world"];
M.modules["whalesong/world/types.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3308,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym1821;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.NULL);
M.e[M.e.length-10]=false;
M.v=sym1821;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3312,M.p));
return((M.p).label)(M);};

var _3304=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3306)(M);}else{M.c.push(new RT.CallFrame(_3306,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3302=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3303=function(M){M.modules["whalesong/world/types.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3304)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3304);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3304)(M);}};

var _3300=function(M){if(--M.cbt<0){throw _3300;}
M.e.length-=(M.a-1);
return(_3301)(M);};

var _3299=function(M){M.c.push(new RT.CallFrame(_3301,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/world/types.rkt"]=function(){return new RT.ModuleRecord("types",_3303);}
return(_3302)(M);};

var _3310=function(M){M.e.splice(M.e.length-8,5);
M.e[M.e.length-4][0]=M.v;
M.e[M.e.length-4][1]=M.e[M.e.length-1];
M.e[M.e.length-4][2]=M.e[M.e.length-2];
M.e[M.e.length-4][3]=M.e[M.e.length-3];
M.e.length-=3;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3317=function(M){return(_3299)(M);};

_3306.mvr=_3305;
_3312.mvr=_3311;
_3315.mvr=_3314;
_3308.mvr=_3307;
_3301.mvr=_3300;
var sym1820=RT.makeSymbol("world");
var sym1821=RT.makeSymbol("stop-with");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3317(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/types.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/world/types.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <UninterpretedSource /usr/racket/share/pkgs/whalesong/whalesong/world/impl.rkt>
(function(M) {
"use strict";
 
M.installedModules["whalesong/world/impl.rkt"] = function() {
    return new plt.runtime.ModuleRecord("whalesong/world/impl.rkt",
        function(M) {
            
        var afterName1783 = function() { 
        var afterName1782 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/world/impl.rkt"];
             var ns = modrec.getExports();
             var extNs = modrec.getExternalExports();
             modrec.prefix=[void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0)];modrec.prefix.names=["big-bang1.1","key=?6.11","on-key3.5","on-mouse5.9","on-release4.7","on-tick2.3","stop-when8.15","to-draw7.13"];modrec.prefix.internalNames=["big-bang","key=?","on-key","on-mouse","on-release","on-tick","stop-when","to-draw"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){/*global $,plt*/
var rawJsworld = {};

// Stuff here is copy-and-pasted from Chris King's JSWorld.
//
// dyoo: as I remember, most of this code had been revised from
// Chris's original code by Ethan Cechetti, who rewrote it to
// continuation passing style during summer 2010.

(function() {

    'use strict';

    /* Type signature notation
     * CPS(a b ... -> c) is used to denote
     *    a b ... (c -> void) -> void
     */

    var Jsworld = rawJsworld;

    var currentFocusedNode = false;

    var doNothing = function() {};





    // forEachK: CPS( array CPS(array -> void) (error -> void) -> void )
    // Iterates through an array and applies f to each element using CPS
    // If an error is thrown, it catches the error and calls f_error on it
    var forEachK = function(a, f, f_error, k) {
        var forEachHelp = function(i) {
            if( i >= a.length ) {
                if (k) {
                    return k();
                } else {
                    return;
                }
            }
            try {
                return f(a[i], function() { return forEachHelp(i+1); });
            } catch (e) {
                return Jsworld.shutdown({errorShutdown: e});
            }
        };
        return forEachHelp(0);
    };







    //
    // WORLD STUFFS
    //

    function InitialWorld() {}

    var world = new InitialWorld();
    var worldListeners = [];
    var eventDetachers = [];
    var runningBigBangs = [];

    var changingWorld = false;



    function clear_running_state() {
        var i;
        world = new InitialWorld();
        worldListeners = [];

        for (i = 0; i < eventDetachers.length; i++) {
                eventDetachers[i]();
        }
        eventDetachers = [];
        changingWorld = false;
    }



    // Close all world computations.
    Jsworld.shutdown = function(options) {
        while(runningBigBangs.length > 0) {
            var currentRecord = runningBigBangs.pop();
            if (currentRecord) { currentRecord.pause(); }
            if (options.cleanShutdown) {
                currentRecord.success(world);
            }
            if (options.errorShutdown) {
                currentRecord.fail(options.errorShutdown);
            }
        }
        clear_running_state();
    };



    function add_world_listener_first(listener) {
        worldListeners.unshift(listener);
    }

    function add_world_listener(listener) {
        worldListeners.push(listener);
    }


    function remove_world_listener(listener) {
        var i, index = -1;
        for (i = 0; i < worldListeners.length; i++) {
            if (worldListeners[i] === listener) {
                index = i;
                break;
            }
        }
        if (index !== -1) {
            worldListeners.splice(index, 1);
        }
    }


    // If we're in the middle of a change_world, delay.
    var DELAY_BEFORE_RETRY = 10;


    // change_world: CPS( CPS(world -> world) -> void )
    // Adjust the world, and notify all listeners.
    var change_world = function(updater, k) {

        // Check to see if we're in the middle of changing
        // the world already.  If so, put on the queue
        // and exit quickly.
        if (changingWorld) {
            setTimeout(
                function() {
                    change_world(updater, k);
                },
                DELAY_BEFORE_RETRY);
            return;
        }


        changingWorld = true;
        var originalWorld = world;

        var changeWorldHelp;
        changeWorldHelp = function() {
            forEachK(worldListeners,
                     function(listener, k2) {
                         listener(world, originalWorld, k2);
                     },
                     function(e) {
                         changingWorld = false;
                         world = originalWorld;
                         throw e; 
                     },
                     function() {
                         changingWorld = false;
                         k();
                     });
        };

        try {
            updater(world, function(newWorld) {
                world = newWorld;
                changeWorldHelp();
            });
        } catch(e) {
            changingWorld = false;
            world = originalWorld;
            return Jsworld.shutdown({errorShutdown: e});
        }
    };
    Jsworld.change_world = change_world;



    var map = function(a1, f) {
        var b = new Array(a1.length), i;
        for (i = 0; i < a1.length; i++) {
                b[i] = f(a1[i]);
        }
        return b;
    };

    var concat_map = function(a, f) {
        var b = [], i;
        for (i = 0; i < a.length; i++) {
                b = b.concat(f(a[i]));
        }
        return b;
    };


    function member(a, x) {
        var i;
        for (i = 0; i < a.length; i++) {
            if (a[i] === x) {
                return true;
            }
        }
        return false;
    }


    //
    // DOM UPDATING STUFFS
    //

    // tree(N): { node: N, children: [tree(N)] }
    // relation(N): { relation: 'parent', parent: N, child: N } | { relation: 'neighbor', left: N, right: N }
    // relations(N): [relation(N)]
    // nodes(N): [N]
    // css(N): [css_node(N)]
    // css_node(N): { node: N, attribs: attribs } | { className: string, attribs: attribs }
    // attrib: { attrib: string, values: [string] }
    // attribs: [attrib]

    // treeable(nodes(N), relations(N)) = bool
    /*function treeable(nodes, relations) {
    // for all neighbor relations between x and y
    for (var i = 0; i < relations.length; i++)
    if (relations[i].relation == 'neighbor') {
    var x = relations[i].left, y = relations[i].right;
 
    // there does not exist a neighbor relation between x and z!=y or z!=x and y
    for (var j = 0; j < relations.length; j++)
    if (relations[j].relation === 'neighbor')
    if (relations[j].left === x && relations[j].right !== y ||
    relations[j].left !== x && relations[j].right === y)
    return false;
    }
 
    // for all parent relations between x and y
    for (var i = 0; i < relations.length; i++)
    if (relations[i].relation == 'parent') {
    var x = relations[i].parent, y = relations[i].child;
 
    // there does not exist a parent relation between z!=x and y
    for (var j = 0; j < relations.length; j++)
    if (relations[j].relation == 'parent')
    if (relations[j].parent !== x && relations[j].child === y)
    return false;
    }
 
    // for all neighbor relations between x and y
    for (var i = 0; i < relations.length; i++)
    if (relations[i].relation == 'neighbor') {
    var x = relations[i].left, y = relations[i].right;
 
    // all parent relations between z and x or y share the same z
    for (var j = 0; j < relations.length; j++)
    if (relations[j].relation == 'parent')
    for (var k = 0; k < relations.length; k++)
    if (relations[k].relation == 'parent')
    if (relations[j].child === x && relations[k].child === y &&
    relations[j].parent !== relations[k].parent)
    return false;
    }
 
    return true;
    }*/


    // node_to_tree: dom -> dom-tree
    // Given a native dom node, produces the appropriate tree.
    function node_to_tree(domNode) {
        var result = [domNode], c;
        for (c = domNode.firstChild; c !== null; c = c.nextSibling) {
            result.push(node_to_tree(c));
        }
        return result;
    }
    Jsworld.node_to_tree = node_to_tree;



    // nodes(tree(N)) = nodes(N)
    function nodes(tree) {
        var ret, i;
        if (tree.node.jsworldOpaque === true) {
            return [tree.node];
        }

        ret = [tree.node];
        for (i = 0; i < tree.children.length; i++) {
            ret = ret.concat(nodes(tree.children[i]));
        }
        return ret;
    }


    // relations(tree(N)) = relations(N)
    function relations(tree) {
        var ret = [];
        var i;
        for (i = 0; i < tree.children.length; i++) {
            ret.push({ relation: 'parent',
                       parent: tree.node,
                       child: tree.children[i].node });
        }

        for (i = 0; i < tree.children.length - 1; i++) {
            ret.push({ relation: 'neighbor',
                       left: tree.children[i].node,
                       right: tree.children[i + 1].node });
        }

        if (! tree.node.jsworldOpaque) {
            for (i = 0; i < tree.children.length; i++) {
                ret = ret.concat(relations(tree.children[i]));
            }
        }

        return ret;
    }





    // Preorder traversal.
    var preorder = function(node, f) {
        f(node, function() {
            var child = node.firstChild;
            var nextSibling;
            while (child) {
                nextSibling = child.nextSibling;
                preorder(child, f);
                child = nextSibling;
            }
        });
    };


    // nodeEq: node node -> boolean
    // Returns true if the two nodes should be the same.
    var nodeEq = function(node1, node2) {
        return (node1 && node2 && node1 === node2);
    };


    // isMemq: X (arrayof X) -> boolean
    // Produces true if any of the elements of L are nodeEq to x.
    var isMemq = function(x, L) {
        var i;
        for (i = 0 ; i < L.length; i++) {
            if (nodeEq(x, L[i])) {
                return true;
            }
        }
        return false;
    };



    // If any node cares about the world, send it in.
    function refresh_node_values(nodes) {
        var i;
        for (i = 0; i < nodes.length; i++) {
            if (nodes[i].onWorldChange) {
                nodes[i].onWorldChange(world);
            }
        }
    }



    // update_dom(nodes(Node), relations(Node)) = void
    function update_dom(toplevelNode, nodes, relations) {
        var i, parent, child;
        // TODO: rewrite this to move stuff all in one go... possible? necessary?

        // move all children to their proper parents
        for (i = 0; i < relations.length; i++) {
            if (relations[i].relation === 'parent') {
                parent = relations[i].parent;
                child = relations[i].child;
                if (child.parentNode !== parent) {
                    parent.appendChild(child);
                }
            }
        }

        // arrange siblings in proper order
        // truly terrible... BUBBLE SORT
        var unsorted = true;
        while (unsorted) {
            unsorted = false;
            for (i = 0; i < relations.length; i++) {
                if (relations[i].relation === 'neighbor') {
                    var left = relations[i].left, right = relations[i].right;

                    if (! nodeEq(left.nextSibling, right)) {
                        left.parentNode.insertBefore(left, right);
                        unsorted = true;
                    }
                }
            }
        }

        // Finally, remove nodes that shouldn't be attached anymore.
        var nodesPlus = nodes.concat([toplevelNode]);
        preorder(toplevelNode, function(aNode, continueTraversalDown) {
            if (aNode.jsworldOpaque) {
                if (! isMemq(aNode, nodesPlus)) {
                    aNode.parentNode.removeChild(aNode);
                }
            } else {
                if (! isMemq(aNode, nodesPlus)) {
                    aNode.parentNode.removeChild(aNode);
                } else {
                    continueTraversalDown();
                }
            }
        });

        refresh_node_values(nodes);
    }



    // camelCase: string -> string
    function camelCase(name) {
        return name.replace(/\-(.)/g, function(m, l){return l.toUpperCase();});
    }


    function set_css_attribs(node, attribs) {
        var j;
        for (j = 0; j < attribs.length; j++){
            node.style[camelCase(attribs[j].attrib)] = attribs[j].values.join(" ");
        }
    }


    // isMatchingCssSelector: node css -> boolean
    // Returns true if the CSS selector matches.
    function isMatchingCssSelector(node, css) {
        if (css.id.match(/^\./)) {
            // Check to see if we match the class
            return (node.className && member(node.className.split(/\s+/),
                                             css.id.substring(1)));
        } else {
            return (node.id && node.id === css.id);
        }
    }


    var clearCss = function(node) {
        // FIXME: we should not be clearing the css
//      if ('style' in node)
//          node.style.cssText = "";
    };



    function update_css(nodes, css) {
        // clear CSS
        var i, j;
        for (i = 0; i < nodes.length; i++) {
            if ( !nodes[i].jsworldOpaque ) {
                    clearCss(nodes[i]);
            }
        }

        // set CSS
        for (i = 0; i < css.length; i++) {
            if (css[i].id) {
                for (j = 0; j < nodes.length; j++) {
                    if (isMatchingCssSelector(nodes[j], css[i])) {
                        set_css_attribs(nodes[j], css[i].attribs);
                    }
                }
            } else {
                set_css_attribs(css[i].node, css[i].attribs);
            }
        }
    }



    var sexp2tree;
    var sexp2css;
    var maintainingSelection;



    function do_redraw(world, oldWorld, toplevelNode, redraw_func, redraw_css_func, k) {
        if (oldWorld instanceof InitialWorld) {
            // Simple path
            redraw_func(world,
                function(drawn) {
                        var t = sexp2tree(drawn);
                        var ns = nodes(t);
                        // HACK: css before dom, due to excanvas hack.
                        redraw_css_func(world,
                                function(css) {
                                        update_css(ns, sexp2css(css));
                                        update_dom(toplevelNode, ns, relations(t));
                                        k();
                                });
                });
        } else {
            maintainingSelection(
                function(k2) {
                    redraw_func(
                        world,
                        function(newRedraw) {

                            redraw_css_func(
                                world,
                                function(newRedrawCss) {
                                    var t = sexp2tree(newRedraw);
                                    var ns = nodes(t);
                                    // Try to save the current selection and preserve it across
                                    // dom updates.

                                    // Kludge: update the CSS styles first.
                                    // This is a workaround an issue with excanvas: any style change
                                    // clears the content of the canvas, so we do this first before
                                    // attaching the dom element.
                                    update_css(ns, sexp2css(newRedrawCss));
                                    update_dom(toplevelNode, ns, relations(t));

                                    k2();
                                });
                        });
                }, k);
        }
    }



    var FocusedSelection;

    function hasCurrentFocusedSelection() {
        return currentFocusedNode !== undefined;
    }

    function getCurrentFocusedSelection() {
        return new FocusedSelection();
    }


    // maintainingSelection: (-> void) -> void
    // Calls the thunk f while trying to maintain the current focused selection.
    maintainingSelection = function(f, k) {
        var currentFocusedSelection;
        if (hasCurrentFocusedSelection()) {
            currentFocusedSelection = getCurrentFocusedSelection();
            f(function() {
                currentFocusedSelection.restore();
                k();
            });
        } else {
            f(function() { k(); });
        }
    };



    FocusedSelection = function() {
        this.focused = currentFocusedNode;
        this.selectionStart = currentFocusedNode.selectionStart;
        this.selectionEnd = currentFocusedNode.selectionEnd;
    };

    // Try to restore the focus.
    FocusedSelection.prototype.restore = function() {
        // FIXME: if we're scrolling through, what's visible
        // isn't restored yet.
        if (this.focused.parentNode) {
            this.focused.selectionStart = this.selectionStart;
            this.focused.selectionEnd = this.selectionEnd;
            this.focused.focus();
        } else if (this.focused.id) {
            var matching = document.getElementById(this.focused.id);
            if (matching) {
                matching.selectionStart = this.selectionStart;
                matching.selectionEnd = this.selectionEnd;
                matching.focus();
            }
        }
    };





    //////////////////////////////////////////////////////////////////////

    var bigBang, StopWhenHandler;

    function BigBangRecord(top, world, handlerCreators, handlers, attribs,
                           success, fail) {
        this.top = top;
        this.world = world;
        this.handlers = handlers;
        this.handlerCreators = handlerCreators;
        this.attribs = attribs;
        this.success = success;
        this.fail = fail;
    }

    BigBangRecord.prototype.restart = function() {
        bigBang(this.top, this.world, this.handlerCreators, this.attribs);
    };

    BigBangRecord.prototype.pause = function() {
        var i;
        for(i = 0 ; i < this.handlers.length; i++) {
            if (! (this.handlers[i] instanceof StopWhenHandler)) {
                this.handlers[i].onUnregister(this.top);
            }
        }
    };
    //////////////////////////////////////////////////////////////////////


    var copy_attribs;


    // Notes: bigBang maintains a stack of activation records; it should be possible
    // to call bigBang re-entrantly.
    // top: dom
    // init_world: any
    // handlerCreators: (Arrayof (-> handler))
    // k: any -> void
    bigBang = function(top, init_world, handlerCreators, attribs, succ, fail) {
        var i;
        // clear_running_state();

        // Construct a fresh set of the handlers.
        var handlers = map(handlerCreators, function(x) { return x();} );
        if (runningBigBangs.length > 0) {
            runningBigBangs[runningBigBangs.length - 1].pause();
        }

        // Create an activation record for this big-bang.
        var activationRecord =
            new BigBangRecord(top, init_world, handlerCreators, handlers, attribs, 
                              succ, fail);
        runningBigBangs.push(activationRecord);
        function keepRecordUpToDate(w, oldW, k2) {
            activationRecord.world = w;
            k2();
        }
        add_world_listener(keepRecordUpToDate);



        // Monitor for termination and register the other handlers.
        var stopWhen = new StopWhenHandler(function(w, k2) { k2(false); },
                                           function(w, k2) { k2(w); });
        for(i = 0 ; i < handlers.length; i++) {
            if (handlers[i] instanceof StopWhenHandler) {
                stopWhen = handlers[i];
            } else {
                handlers[i].onRegister(top);
            }
        }

        var showLastPicture = function(w, oldW) {
            if (stopWhen.last_picture_handler) {
                var handler = stopWhen.last_picture_handler();
                handler.onRegister(top);
                handler._listener(w, oldW, function(v) {
                    Jsworld.shutdown({cleanShutdown: true});
                })
            } else {
                Jsworld.shutdown({cleanShutdown: true});
            }
        };

        var watchForTermination = function(w, oldW, k2) {
            stopWhen.test(w,
                function(stop) {
                    if (stop) {
                        showLastPicture(w, oldW);
                    }
                    k2();
                });
        };
        add_world_listener(watchForTermination);

        var watchForStopWith = function(w, oldW, k2) {
            /**
             * If we have a  last_picture we call that with new world, or
             * else call the regular draw handler
             *
             * TODO: We don't call regular draw handler as of now when
             *       when world ends with stop-with
             */
            if (isStopWithStruct(w)) {
                world = stopWithWorld(w); //NOTE: Is this assignment safe?
                showLastPicture(world, oldW);
            }
            k2();
        }
        /* Its important that this stays above all handlers, so that we
         * shutdown before calling any other handler */
        add_world_listener_first(watchForStopWith);

        // Finally, begin the big-bang.
        copy_attribs(top, attribs);
        change_world(function(w, k2) { k2(init_world); }, doNothing);
    };
    Jsworld.bigBang = bigBang;





    // on_tick: number CPS(world -> world) -> handler
    var on_tick = function(delay, tick) {
        return function() {
            var scheduleTick, ticker;
            scheduleTick = function(t) {
                ticker.watchId = setTimeout(
                    function() {
                        ticker.watchId = undefined;
                        var startTime = (new Date()).valueOf();
                        change_world(tick,
                                     function() {
                                         var endTime = (new Date()).valueOf();
                                         scheduleTick(Math.max(delay - (endTime - startTime),
                                                               0));
                                     });
                    },
                    t);
            };

            ticker = {
                watchId: -1,
                onRegister: function (top) {
                    scheduleTick(delay);
                },

                onUnregister: function (top) {
                    if (ticker.watchId) {
                        clearTimeout(ticker.watchId);
                    }
                }
            };
            return ticker;
        };
    };
    Jsworld.on_tick = on_tick;

    var preventDefault, stopPropagation;
    var attachEvent, detachEvent;


    function on_key(press) {
        return function() {
            var wrappedPress = function(e) {
                preventDefault(e);
                stopPropagation(e);
                change_world(function(w, k) { press(w, e, k); }, doNothing);
            };
            return {
                onRegister: function(top) {
                    //http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribue
                    jQuery(top).attr('tabindex', 1);
                    jQuery(top).focus();
                    attachEvent(top, 'keydown', wrappedPress);
                },
                onUnregister: function(top) {
                    detachEvent(top, 'keydown', wrappedPress);
                }
            };
        };
    }
    Jsworld.on_key = on_key;

    function on_release(release) {
        return function() {
            var wrappedRelease = function(e) {
                preventDefault(e);
                stopPropagation(e);
                change_world(function(w, k) { release(w, e, k); }, doNothing);
            };
            return {
                onRegister: function(top) {
                    //http://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribue
                    jQuery(top).attr('tabindex', 1);
                    jQuery(top).focus();
                    attachEvent(top, 'keyup', wrappedRelease);
                },
                onUnregister: function(top) {
                    detachEvent(top, 'keyup', wrappedRelease);
                }
            };
        };
    }
    Jsworld.on_release = on_release;


    // http://www.quirksmode.org/js/events_mouse.html
    // http://stackoverflow.com/questions/55677/how-do-i-get-the-coordinates-of-a-mouse-click-on-a-canvas-element
    function on_mouse(mouse) {
        return function() {
            var isButtonDown = false;
            var makeWrapped = function(type) {
                return function(e) {
                    preventDefault(e);
                    stopPropagation(e);
                    var x = e.pageX, y = e.pageY;
                    var currentElement = e.target;
                    do {
                        x -= currentElement.offsetLeft;
                        y -= currentElement.offsetTop;
                        currentElement = currentElement.offsetParent;
                    } while(currentElement);

                    if (type === 'button-down') {
                        isButtonDown = true;
                    } else if (type === 'button-up') {
                        isButtonDown = false;
                    }
                    if (type === 'move' && isButtonDown) {
                        change_world(function(w, k) {
                            mouse(w, x, y, 'drag', k);
                        }, doNothing);
                    } else {
                        change_world(function(w, k) {
                            mouse(w, x, y, type, k);
                        }, doNothing);
                    }
                };
            };
            var wrappedDown = makeWrapped('button-down');
            var wrappedUp = makeWrapped('button-up');
            // How do we do drag?
            var wrappedMove = makeWrapped('move');
            var wrappedEnter = makeWrapped('enter');
            var wrappedLeave = makeWrapped('leave');
            return {
                onRegister: function(top) {
                    attachEvent(top, 'mousedown', wrappedDown);
                    attachEvent(top, 'mouseup', wrappedUp);
                    attachEvent(top, 'mousemove', wrappedMove);
                    attachEvent(top, 'mouseenter', wrappedEnter);
                    attachEvent(top, 'mouseleave', wrappedLeave);
                },
                onUnregister: function(top) {
                    detachEvent(top, 'mousedown', wrappedDown);
                    detachEvent(top, 'mouseup', wrappedUp);
                    detachEvent(top, 'mousemove', wrappedMove);
                    detachEvent(top, 'mouseenter', wrappedEnter);
                    detachEvent(top, 'mouseleave', wrappedLeave);
                }
            };
        };
    }
    Jsworld.on_mouse = on_mouse;





    var checkDomSexp;


    //  on_draw: CPS(world -> (sexpof node)) CPS(world -> (sexpof css-style)) -> handler
    function on_draw(redraw, redraw_css) {
        var wrappedRedraw = function(w, k) {
            redraw(w, function(newDomTree) {
                checkDomSexp(newDomTree, newDomTree);
                k(newDomTree);
            });
        };

        return function() {
            var drawer = {
                _top: null,
                _listener: function(w, oldW, k2) {
                    do_redraw(w, oldW, drawer._top, wrappedRedraw, redraw_css, k2);
                },
                onRegister: function (top) {
                    drawer._top = top;
                    add_world_listener(drawer._listener);
                },

                onUnregister: function (top) {
                    remove_world_listener(drawer._listener);
                }
            };
            return drawer;
        };
    }
    Jsworld.on_draw = on_draw;



    StopWhenHandler = function(test, receiver, last_picture_handler) {
        this.test = test;
        this.receiver = receiver;
        this.last_picture_handler = last_picture_handler;
    };
    // stop_when: CPS(world -> boolean) CPS(world -> boolean) -> handler
    function stop_when(test, receiver, last_picture_handler) {
        return function() {
            if (receiver === undefined) {
                receiver = function(w, k) { k(w); };
            }
            return new StopWhenHandler(test, receiver, last_picture_handler);
        };
    }
    Jsworld.stop_when = stop_when;



    function on_world_change(f) {
        var listener = function(world, oldW, k) { f(world, k); };
        return function() {
            return {
                onRegister: function (top) {
                    add_world_listener(listener); },
                onUnregister: function (top) {
                    remove_world_listener(listener); }
            };
        };
    }
    Jsworld.on_world_change = on_world_change;





    // Compatibility for attaching events to nodes.
    attachEvent = function(node, eventName, fn) {
        if (node.addEventListener) {
            // Mozilla
            node.addEventListener(eventName, fn, false);
        } else {
            // IE
            node.attachEvent('on' + eventName, fn, false);
        }
    };

    detachEvent = function(node, eventName, fn) {
        if (node.addEventListener) {
            // Mozilla
            node.removeEventListener(eventName, fn, false);
        } else {
            // IE
            node.detachEvent('on' + eventName, fn, false);
        }
    };

    //
    // DOM CREATION STUFFS
    //

    // add_ev: node string CPS(world event -> world) -> void
    // Attaches a world-updating handler when the world is changed.
    function add_ev(node, event, f) {
        var eventHandler = function(e) { change_world(function(w, k) { f(w, e, k); },
                                                       doNothing); };
        attachEvent(node, event, eventHandler);
        eventDetachers.push(function() { detachEvent(node, event, eventHandler); });
    }

    // add_ev_after: node string CPS(world event -> world) -> void
    // Attaches a world-updating handler when the world is changed, but only
    // after the fired event has finished.
    function add_ev_after(node, event, f) {
        var eventHandler = function(e) {
                setTimeout(function() { change_world(function(w, k) { f(w, e, k); },
                                                     doNothing); },
                           0);
        };

        attachEvent(node, event, eventHandler);
        eventDetachers.push(function() { detachEvent(node, event, eventHandler); });
    }


    function addFocusTracking(node) {
        attachEvent(node, "focus", function(e) {
            currentFocusedNode = node; });
        attachEvent(node, "blur", function(e) {
            currentFocusedNode = undefined;
        });
        return node;
    }





    //
    // WORLD STUFFS
    //


    sexp2tree = function(sexp) {
        if(sexp.length === undefined) { return { node: sexp, children: [] }; }
        else { return { node: sexp[0], children: map(sexp.slice(1), sexp2tree) }; }
    };

    function sexp2attrib(sexp) {
        return { attrib: sexp[0], values: sexp.slice(1) };
    }

    function sexp2css_node(sexp) {
        var attribs = map(sexp.slice(1), sexp2attrib);
        if (typeof sexp[0] === 'string'){
            return [{ id: sexp[0], attribs: attribs }];
        } else if (sexp[0].length !== undefined){
            return map(sexp[0], function (id) { return { id: id, attribs: attribs }; });
        } else {
            return [{ node: sexp[0], attribs: attribs }];
        }
    }

    sexp2css = function(sexp) {
        return concat_map(sexp, sexp2css_node);
    };



    function isTextNode(n) {
        return (n.nodeType === 3);
    }


    function isElementNode(n) {
        return (n.nodeType === 1);
    }

    var JsworldDomError;

    var throwDomError = function(thing, topThing) {
        throw new JsworldDomError(
            plt.baselib.format.format(
                "Expected a non-empty array, received ~s within ~s",
                [thing, topThing]),
            thing);
    };

    // checkDomSexp: X X -> boolean
    // Checks to see if thing is a DOM-sexp.  If not,
    // throws an object that explains why not.
    checkDomSexp = function(thing, topThing) {
        var i;
        if (! thing instanceof Array) {
            throwDomError(thing, topThing);
        }
        if (thing.length === 0) {
            throwDomError(thing, topThing);
        }


        // Check that the first element is a Text or an element.
        if (isTextNode(thing[0])) {
            if (thing.length > 1) {
                throw new JsworldDomError(plt.baselib.format.format("Text node ~s can not have children",
                                                         [thing]),
                                          thing);
            }
        } else if (isElementNode(thing[0])) {
            for (i = 1; i < thing.length; i++) {
                checkDomSexp(thing[i], thing);
            }
        } else {
            if (window.console && window.console.log) { window.console.log(thing[0]); }

            throw new JsworldDomError(
                plt.baselib.format.format(
                    "expected a Text or an Element, received ~s within ~s",
                    [thing, topThing]),
                thing[0]);
        }
    };

    JsworldDomError = function(msg, elt) {
        this.msg = msg;
        this.elt = elt;
    };
    JsworldDomError.prototype.toString = function() {
        return "JsworldDomError: " + this.msg;
    };





    //
    // DOM CREATION STUFFS
    //


    copy_attribs = function(node, attribs) {
        var a;
        if (attribs) {
            for (a in attribs) {
                if (hasOwnProperty.call(attribs, a)) {
                    if (typeof attribs[a] === 'function') {
                        add_ev(node, a, attribs[a]);
                    } else {
                        node[a] = attribs[a];
                    }
                }
            }
        }
        return node;
    };


    //
    // NODE TYPES
    //

    function p(attribs) {
        return addFocusTracking(copy_attribs(document.createElement('p'), attribs));
    }
    Jsworld.p = p;

    function div(attribs) {
        return addFocusTracking(copy_attribs(document.createElement('div'), attribs));
    }
    Jsworld.div = div;

    // Used To Be: (world event -> world) (hashof X Y) -> domElement
    // Now: CPS(world event -> world) (hashof X Y) -> domElement
    function button(f, attribs) {
        var n = document.createElement('button');
        n.onclick = function(e) {return false;};
        add_ev(n, 'click', f);
        return addFocusTracking(copy_attribs(n, attribs));
    }
    Jsworld.button = button;




    preventDefault = function(event) {
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false;
        }
    };

    stopPropagation = function(event) {
        if (event.stopPropagation) {
            event.stopPropagation();
        } else {
            event.cancelBubble = true;
        }
    };


    var stopClickPropagation = function(node) {
        attachEvent(node, "click",
                    function(e) {
                        stopPropagation(e);
                    });
        return node;
    };


    var text_input, checkbox_input;

    // input: string CPS(world -> world) 
    function input(aType, updateF, attribs) {
        aType = aType.toLowerCase();
        var dispatchTable = { text : text_input,
                              password: text_input,
                              checkbox: checkbox_input
                              //button: button_input,
                              //radio: radio_input 
        };

        if (dispatchTable[aType]) {
            return (dispatchTable[aType])(aType, updateF, attribs);
        }
        else {
            throw new Error("js-input: does not currently support type " + aType);
        }
    }
    Jsworld.input = input;




    text_input = function(type, updateF, attribs) {
        var n = document.createElement('input');
        n.type = type;

        var lastVal = n.value;
        var onEvent = function() {
            if (! n.parentNode) { return; }
            setTimeout(
                function() {
                    if (lastVal !== n.value) {
                        lastVal = n.value;
                        change_world(function (w, k) {
                            updateF(w, n.value, k);
                        }, doNothing);
                    }
                },
                0);
        };

        attachEvent(n, "keydown", onEvent);
        eventDetachers.push(function() {
            detachEvent(n, "keydown", onEvent); });

        attachEvent(n, "change", onEvent);
        eventDetachers.push(function() {
            detachEvent(n, "change", onEvent); });

        return stopClickPropagation(
            addFocusTracking(copy_attribs(n, attribs)));
    };


    checkbox_input = function(type, updateF, attribs) {
        var n = document.createElement('input');
        n.type = type;
        var onCheck = function(w, e, k) {
            updateF(w, n.checked, k);
        };
        // This established the widget->world direction
        add_ev_after(n, 'change', onCheck);

        attachEvent(n, 'click', function(e) {
            stopPropagation(e);
        });

        return copy_attribs(n, attribs);
    };


    // var button_input = function(type, updateF, attribs) {
    //     var n = document.createElement('button');
    //     add_ev(n, 'click', function(w, e, k) { updateF(w, n.value, k); });
    //     return addFocusTracking(copy_attribs(n, attribs));
    // };




    function text(s, attribs) {
        var result = document.createElement("div");
        result.appendChild(document.createTextNode(String(s)));
        result.jsworldOpaque = true;
        return result;
    }
    Jsworld.text = text;

    var option;

    function select(attribs, opts, f){
        var n = document.createElement('select'), i;
        for(i = 0; i < opts.length; i++) {
            n.add(option({value: opts[i]}), null);
        }
        n.jsworldOpaque = true;
        add_ev(n, 'change', f);
        var result = addFocusTracking(copy_attribs(n, attribs));
        return result;
    }
    Jsworld.select = select;

    option = function(attribs){
        var node = document.createElement("option");
        node.text = attribs.value;
        node.value = attribs.value;
        return node;
    };



    function textarea(attribs){
        return addFocusTracking(copy_attribs(document.createElement('textarea'), attribs));
    }
    Jsworld.textarea = textarea;

    function h1(attribs){
        return addFocusTracking(copy_attribs(document.createElement('h1'), attribs));
    }
    Jsworld.h1 = h1;

    function canvas(attribs){
        return addFocusTracking(copy_attribs(document.createElement('canvas'), attribs));
    }
    Jsworld.canvas = canvas;


    function img(src, attribs) {
        var n = document.createElement('img');
        n.src = src;
        return addFocusTracking(copy_attribs(n, attribs));
    }
    Jsworld.img = img;



    function raw_node(node, attribs) {
        return addFocusTracking(copy_attribs(node, attribs));
    }
    Jsworld.raw_node = raw_node;



}());

var imageLibrary = MACHINE.modules['whalesong/image/private/main.rkt'].privateExports;
var isImage = imageLibrary.isImage;




var PAUSE = plt.runtime.PAUSE;
var EMPTY = plt.baselib.lists.EMPTY;
var isString = plt.baselib.strings.isString;
var isBoolean = function(x) { return x === true || x === false; }
var isSymbol = plt.baselib.symbols.isSymbol;
var makePair = plt.baselib.lists.makePair;
var makeList = plt.baselib.lists.makeList;
var makeRational = plt.baselib.numbers.makeRational;



var finalizeClosureCall = plt.baselib.functions.finalizeClosureCall;





//////////////////////////////////////////////////////////////////////

var bigBang = function(MACHINE, initW, handlers) {
    var outerToplevelNode = jQuery('<span/>').css('padding', '0px').get(0);
    MACHINE.params.currentOutputPort.writeDomNode(MACHINE, outerToplevelNode);
    var toplevelNode = jQuery('<span/>').css('padding', '0px').appendTo(outerToplevelNode).get(0);

    var configs = [];
    var isOutputConfigSeen = false;

    for (var i = 0 ; i < handlers.length; i++) {
        if (isWorldConfigOption(handlers[i])) {
            configs.push(handlers[i].toRawHandler(MACHINE, toplevelNode));
        }
        else {
            configs.push(handlers[i]);
        }
        if (isOutputConfig(handlers[i])) { isOutputConfigSeen = true; }
    }
    
    // If we haven't seen an onDraw function, use the default one.
    if (! isOutputConfigSeen) { 
        configs.push(new DefaultDrawingOutput().toRawHandler(MACHINE, toplevelNode));
    }


    PAUSE(function(restart) {
	var bigBangController = rawJsworld.bigBang(
	    toplevelNode,
	    initW,
	    configs,
	    {},
	    function(finalWorldValue) {
		restart(function(MACHINE) {
		    finalizeClosureCall(
			MACHINE, 
			finalWorldValue);
		});

	    },
            function(err) {
                restart(function(MACHINE) {
                    plt.baselib.exceptions.raise(MACHINE, err);
                });
            });

    });
};





//////////////////////////////////////////////////////////////////////

// Every world configuration function (on-tick, stop-when, ...)
// produces a WorldConfigOption instance.
var WorldConfigOption = function(name) {
    this.name = name;	    
};

WorldConfigOption.prototype.configure = function(config) {
    throw new Error('unimplemented WorldConfigOption');
};


WorldConfigOption.prototype.toDomNode = function(params) {  
    var span = document.createElement('span');
    span.appendChild(document.createTextNode("(" + this.name + " ...)"));
    return span;
};

WorldConfigOption.prototype.toWrittenString = function(cache) {
    return "(" + this.name + " ...)";
};

WorldConfigOption.prototype.toDisplayedString = function(cache) {
    return "(" + this.name + " ...)";
};

var isWorldConfigOption = plt.baselib.makeClassPredicate(WorldConfigOption);

//////////////////////////////////////////////////////////////////////




// adaptWorldFunction: Racket-function -> World-CPS
// Takes a racket function and converts it to the CPS-style function
// that our world implementation expects.
var adaptWorldFunction = function(worldFunction) {
    return function() {
        // Consumes any number of arguments.
        var success = arguments[arguments.length - 1];
        plt.baselib.functions.internalCallDuringPause.apply(
            null,
            [MACHINE,
             worldFunction,
             function(v) {
                 success(v);
             },
             function(err) {
                return rawJsworld.shutdown({errorShutdown: err});
             }].concat([].slice.call(arguments, 0, arguments.length - 1)));
    };
};






//////////////////////////////////////////////////////////////////////

// OnTick: racket-function javascript-float -> handler
var OnTick = function(handler, aDelay) {
    WorldConfigOption.call(this, 'on-tick');
    this.handler = handler;
    this.delay = aDelay;
};

OnTick.prototype = plt.baselib.heir(WorldConfigOption.prototype);
 
OnTick.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = adaptWorldFunction(that.handler);
    return rawJsworld.on_tick(this.delay, worldFunction);
};


//////////////////////////////////////////////////////////////////////
var OnKey = function(handler) {
    WorldConfigOption.call(this, 'on-key');
    this.handler = handler;
}

OnKey.prototype = plt.baselib.heir(WorldConfigOption.prototype);
 
OnKey.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = adaptWorldFunction(that.handler);
    return rawJsworld.on_key(
        function(w, e, success) {
            worldFunction(w, getKeyCodeName(e), success);
        });
};

var OnRelease = function(handler) {
    WorldConfigOption.call(this, 'on-release');
    this.handler = handler;
}

OnRelease.prototype = plt.baselib.heir(WorldConfigOption.prototype);
 
OnRelease.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = adaptWorldFunction(that.handler);
    return rawJsworld.on_release(
        function(w, e, success) {
            worldFunction(w, getKeyCodeName(e), success);
        });
};


var getKeyCodeName = function(e) {
    var code = e.charCode || e.keyCode;
    var keyname;
    switch(code) {
    case 16: keyname = "shift"; break;
    case 17: keyname = "control"; break;
    case 19: keyname = "pause"; break;
    case 27: keyname = "escape"; break;
    case 33: keyname = "prior"; break;
    case 34: keyname = "next"; break;
    case 35: keyname = "end"; break;
    case 36: keyname = "home"; break;
    case 37: keyname = "left"; break;
    case 38: keyname = "up"; break;
    case 39: keyname = "right"; break;
    case 40: keyname = "down"; break;
    case 42: keyname = "print"; break;
    case 45: keyname = "insert"; break;
    case 46: keyname = String.fromCharCode(127); break;
    case 106: keyname = "*"; break;
    case 107: keyname = "+"; break;
    case 109: keyname = "-"; break;
    case 110: keyname = "."; break;
    case 111: keyname = "/"; break;
    case 144: keyname = "numlock"; break;
    case 145: keyname = "scroll"; break;
    case 186: keyname = ";"; break;
    case 187: keyname = "="; break;
    case 188: keyname = ","; break;
    case 189: keyname = "-"; break;
    case 190: keyname = "."; break;
    case 191: keyname = "/"; break;
    case 192: keyname = "`"; break;
    case 219: keyname = "["; break;
    case 220: keyname = "\\"; break;
    case 221: keyname = "]"; break;
    case 222: keyname = "'"; break;
    default: 
        if (code >= 96 && code <= 105) {
	    keyname = (code - 96).toString();
        } else if (code >= 112 && code <= 123) {
	    keyname = "f" + (code - 111);
	} else {
	    keyname = String.fromCharCode(code).toLowerCase();
	}
	break;
    }
    return keyname;
}
//////////////////////////////////////////////////////////////////////





var OnMouse = function(handler) {
    WorldConfigOption.call(this, 'on-mouse');
    this.handler = handler;
}

OnMouse.prototype = plt.baselib.heir(WorldConfigOption.prototype);
 
OnMouse.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = adaptWorldFunction(that.handler);
    return rawJsworld.on_mouse(
        function(w, x, y, type, success) {
            worldFunction(w, x, y, type, success);
        });
};








var OutputConfig = function() {}
OutputConfig.prototype = plt.baselib.heir(WorldConfigOption.prototype);
var isOutputConfig = plt.baselib.makeClassPredicate(OutputConfig);





// // ToDraw

var ToDraw = function(handler) {
    WorldConfigOption.call(this, 'to-draw');
    this.handler = handler;
};

ToDraw.prototype = plt.baselib.heir(OutputConfig.prototype);
 
ToDraw.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var adaptedWorldFunction = adaptWorldFunction(this.handler);

    var worldFunction = function(world, success) {

        adaptedWorldFunction(
            world,
            function(v) {
                var reusableCanvas = toplevelNode.getElementsByTagName('canvas')[0];
                var reusableCanvasNode;
                if (reusableCanvas) {
                    reusableCanvasNode = rawJsworld.node_to_tree(reusableCanvas);
                }

                // fixme: once jsworld supports fail continuations, use them
                // to check the status of the scene object and make sure it's an
                // image.

                
                if (isImage(v) ) {
		    var width = v.getWidth();
		    var height = v.getHeight();

		    if (! reusableCanvas) {
			reusableCanvas = imageLibrary.makeCanvas(width, height);
			// Note: the canvas object may itself manage objects,
			// as in the case of an excanvas.  In that case, we must make
			// sure jsworld doesn't try to disrupt its contents!
			reusableCanvas.jsworldOpaque = true;
			reusableCanvasNode = rawJsworld.node_to_tree(reusableCanvas);
		    }
		    if (reusableCanvas.width !== width) { 
                        reusableCanvas.width = width; 
                    }
		    if (reusableCanvas.height !== height) { 
                        reusableCanvas.height = height;
                    }
		    var ctx = reusableCanvas.getContext("2d");
                    ctx.clearRect(0, 0, width, height);
		    v.render(ctx, 0, 0);
		    success([toplevelNode, reusableCanvasNode]);
		} else {
		    success([toplevelNode, rawJsworld.node_to_tree(plt.baselib.format.toDomNode(v, MACHINE.params['print-mode']))]);
		}
            });
    };

    var cssFunction = function(w, k) { 
        var reusableCanvas = toplevelNode.getElementsByTagName('canvas')[0];
        if (reusableCanvas) {
 	    k([[reusableCanvas, 
                ["padding", "0px"],
 		["width", reusableCanvas.width + "px"],
 		["height", reusableCanvas.height + "px"]]]);
        } else {
            k([]); 
        }
    }

    return rawJsworld.on_draw(worldFunction, cssFunction);
};







var DefaultDrawingOutput = function() {
    WorldConfigOption.call(this, 'to-draw');
};

DefaultDrawingOutput.prototype = plt.baselib.heir(WorldConfigOption.prototype);
 
DefaultDrawingOutput.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = function(world, success) {
        success([toplevelNode,
                 rawJsworld.node_to_tree(plt.baselib.format.toDomNode(world,
                                                                      MACHINE.params['print-mode']))]);
        //k(rawJsworld.node_to_tree(plt.baselib.format.toDomNode(world)));
    };
    var cssFunction = function(w, success) { success([]); }
    return rawJsworld.on_draw(worldFunction, cssFunction);
};




//////////////////////////////////////////////////////////////////////



var StopWhen = function(handler, last_picture) {
    WorldConfigOption.call(this, 'stop-when');
    this.handler = handler;
    this.last_picture = last_picture && new ToDraw(last_picture);
};

StopWhen.prototype = plt.baselib.heir(WorldConfigOption.prototype);

StopWhen.prototype.toRawHandler = function(MACHINE, toplevelNode) {
    var that = this;
    var worldFunction = adaptWorldFunction(that.handler);
    var lastPictureHandler = that.last_picture && that.last_picture.toRawHandler(MACHINE, toplevelNode);
    return rawJsworld.stop_when(worldFunction, undefined, lastPictureHandler);
};

var PAUSE = plt.runtime.PAUSE;
var makeClosure = plt.baselib.functions.makeClosure;
var makeRational = plt.baselib.numbers.makeRational;
var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;


var checkNonNegativeReal = plt.baselib.check.checkNonNegativeReal;
var checkString = plt.baselib.check.checkString;

var checkProcedure = plt.baselib.check.checkProcedure;

// More specific function checkers, based on arity.
var checkProcedure1 = plt.baselib.check.makeCheckArgumentType(
    function(x) { return (plt.baselib.functions.isProcedure(x) &&
                          plt.baselib.arity.isArityMatching(x.racketArity, 1)); },
    'procedure that consumes a world argument');


var checkProcedureWithKey = plt.baselib.check.makeCheckArgumentType(
    function(x) { return (plt.baselib.functions.isProcedure(x) &&
                          plt.baselib.arity.isArityMatching(x.racketArity, 2)); },
    'procedure that consumes a world argument and a key');

var checkProcedureWithMouse = plt.baselib.check.makeCheckArgumentType(
    function(x) { return (plt.baselib.functions.isProcedure(x) &&
                          plt.baselib.arity.isArityMatching(x.racketArity, 4)); },
    'procedure that consumes a world argument, an x and y coordinate, and a mouse event');



var checkHandler = plt.baselib.check.makeCheckArgumentType(
    isWorldConfigOption,
    "world configuration handler");

var worldNamespace = MACHINE.modules['whalesong/world/types.rkt'].getExternalExports();
var stopWithStruct = worldNamespace.get('struct:stop-with');
var isStopWithStruct = stopWithStruct.predicate
var stopWithWorld = function(s) { return stopWithStruct.accessor(s, 0); }


// The default tick delay is 28 times a second.
var DEFAULT_TICK_DELAY = 1/28;



EXPORTS['big-bang'] = 
    makeClosure(
        'big-bang',
        plt.baselib.arity.makeArityAtLeast(1),
        function(MACHINE) {
            var initialWorldValue = MACHINE.e[MACHINE.e.length - 1];
	    var handlers = [];
	    for (var i = 1; i < MACHINE.a; i++) {
		handlers.push(checkHandler(MACHINE, 'big-bang', i));
	    }
	    bigBang(MACHINE, initialWorldValue, handlers);
        });



EXPORTS['on-tick'] = 
    makePrimitiveProcedure(
        'on-tick',
        plt.baselib.lists.makeList(1, 2),
        function(MACHINE) {
	    if (MACHINE.a === 1) {
		var f = checkProcedure1(MACHINE, "on-tick", 0);
		return new OnTick(f, Math.floor(DEFAULT_TICK_DELAY * 1000));
	    } else if (MACHINE.a === 2) {
		var f = checkProcedure1(MACHINE, "on-tick", 0);
		var delay = checkNonNegativeReal(MACHINE, "on-tick", 1);
		return new OnTick(f, Math.floor(jsnums.toFixnum(delay) * 1000));
	    }
        });



EXPORTS['to-draw'] =
    makePrimitiveProcedure(
        'to-draw',
        1,
        function(MACHINE) {
            var f = checkProcedure1(MACHINE, "on-tick", 0);
            return new ToDraw(f);
        });




EXPORTS['stop-when'] =
    makePrimitiveProcedure(
        'stop-when',
        plt.baselib.lists.makeList(1, 2),
        function(MACHINE) {
            var f = checkProcedure1(MACHINE, "on-tick", 0);
            if (MACHINE.a === 2) {
                var lp = checkProcedure1(MACHINE, "to-draw", 1);
            } else {
                var lp = null;
            }

            return new StopWhen(f, lp);
        });


EXPORTS['on-key'] =
    makePrimitiveProcedure(
        'on-key',
        1,
        function(MACHINE) {
            var f = checkProcedureWithKey(MACHINE, "on-key", 0);
            return new OnKey(f);
        });

EXPORTS['on-release'] =
    makePrimitiveProcedure(
        'on-release',
        1,
        function(MACHINE) {
            var f = checkProcedureWithKey(MACHINE, "on-key", 0);
            return new OnRelease(f);
        });

EXPORTS['on-mouse'] =
    makePrimitiveProcedure(
        'on-mouse',
        1,
        function(MACHINE) {
            var f = checkProcedureWithMouse(MACHINE, "on-key", 0);
            return new OnMouse(f);
        });



EXPORTS['key=?'] =
    makePrimitiveProcedure(
        'on-key',
        2,
        function(MACHINE) {
            var k1 = checkString(MACHINE, "key=?", 0);
            var k2 = checkString(MACHINE, "key=?", 1);
            return k1.toString().toLowerCase() === k2.toString().toLowerCase();
        });

})(M, exports);
             ns.set("big-bang1.1",exports["big-bang"]);
extNs.set("big-bang",exports["big-bang"]);
modrec.prefix[0]=exports["big-bang"];
ns.set("key=?6.11",exports["key=?"]);
extNs.set("key=?",exports["key=?"]);
modrec.prefix[1]=exports["key=?"];
ns.set("on-key3.5",exports["on-key"]);
extNs.set("on-key",exports["on-key"]);
modrec.prefix[2]=exports["on-key"];
ns.set("on-mouse5.9",exports["on-mouse"]);
extNs.set("on-mouse",exports["on-mouse"]);
modrec.prefix[3]=exports["on-mouse"];
ns.set("on-release4.7",exports["on-release"]);
extNs.set("on-release",exports["on-release"]);
modrec.prefix[4]=exports["on-release"];
ns.set("on-tick2.3",exports["on-tick"]);
extNs.set("on-tick",exports["on-tick"]);
modrec.prefix[5]=exports["on-tick"];
ns.set("stop-when8.15",exports["stop-when"]);
extNs.set("stop-when",exports["stop-when"]);
modrec.prefix[6]=exports["stop-when"];
ns.set("to-draw7.13",exports["to-draw"]);
extNs.set("to-draw",exports["to-draw"]);
modrec.prefix[7]=exports["to-draw"];

             modrec.privateExports = exports;
             return M.c.pop().label(M); };
        plt.runtime.PAUSE(function(restart) {
             var modName = "whalesong/image.rkt";
             plt.runtime.currentModuleLoader(M,
                                             modName,
                                             function() {
                                                restart(function(M) {
                                                    M.modules[modName] = M.installedModules[modName]();
                                                    if (! M.modules[modName].isInvoked) {
                                                        M.modules[modName].internalInvoke(M,
                                                                                     afterName1782,
                                                                                      M.params.currentErrorHandler);
                                                    } else {
                                                        afterName1782();
                                                    }
                                                })
                                             },
                                             function() {
                                                alert('Could not load ' + modName);
                                             })
       });      };
        plt.runtime.PAUSE(function(restart) {
             var modName = "whalesong/world/types.rkt";
             plt.runtime.currentModuleLoader(M,
                                             modName,
                                             function() {
                                                restart(function(M) {
                                                    M.modules[modName] = M.installedModules[modName]();
                                                    if (! M.modules[modName].isInvoked) {
                                                        M.modules[modName].internalInvoke(M,
                                                                                     afterName1783,
                                                                                      M.params.currentErrorHandler);
                                                    } else {
                                                        afterName1783();
                                                    }
                                                })
                                             },
                                             function() {
                                                alert('Could not load ' + modName);
                                             })
       });     
        });
   }
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3325=function(M){if(--M.cbt<0){throw _3325;}
if((M.installedModules["whalesong/image/main.rkt"]!==void(0)&&M.modules["whalesong/image/main.rkt"]!==undefined)!==false){return(_3326)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image/main.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3326);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3326)(M);}};

var _3323=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3325)(M);}else{M.c.push(new RT.CallFrame(_3325,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3321=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3322=function(M){M.modules["whalesong/image.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3323)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3323);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3323)(M);}};

var _3319=function(M){if(--M.cbt<0){throw _3319;}
M.e.length-=(M.a-1);
return(_3320)(M);};

var _3318=function(M){M.c.push(new RT.CallFrame(_3320,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/image.rkt"]=function(){return new RT.ModuleRecord("image",_3322);}
return(_3321)(M);};

var _3329=function(M){return(_3318)(M);};

var _3320=function(M){if(--M.cbt<0){throw _3320;}
};

var _3327=function(M){if(--M.cbt<0){throw _3327;}
M.e.length-=(M.a-1);
return(_3328)(M);};

var _3328=function(M){if(--M.cbt<0){throw _3328;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/image.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("above", M.modules["whalesong/image/private/main.rkt"].getExports().get("above18.35"));ns.set("above/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("above/align19.37"));ns.set("add-line", M.modules["whalesong/image/private/main.rkt"].getExports().get("add-line32.63"));ns.set("angle?", M.modules["whalesong/image/private/main.rkt"].getExports().get("angle?64.127"));ns.set("beside", M.modules["whalesong/image/private/main.rkt"].getExports().get("beside16.31"));ns.set("beside/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("beside/align17.33"));ns.set("bitmap/url", M.modules["whalesong/image/private/main.rkt"].getExports().get("bitmap/url3.5"));ns.set("circle", M.modules["whalesong/image/private/main.rkt"].getExports().get("circle34.67"));ns.set("color", M.modules["whalesong/image/private/color.rkt"].getExports().get("-color"));ns.set("color-alpha", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-alpha"));ns.set("color-blue", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-blue"));ns.set("color-green", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-green"));ns.set("color-list->bitmap", M.modules["whalesong/image/private/main.rkt"].getExports().get("color-list->bitmap56.111"));ns.set("color-list->image", M.modules["whalesong/image/private/main.rkt"].getExports().get("color-list->image55.109"));ns.set("color-red", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-red"));ns.set("color?", M.modules["whalesong/image/private/color.rkt"].getExports().get("color?"));ns.set("crop", M.modules["whalesong/image/private/main.rkt"].getExports().get("crop30.59"));ns.set("ellipse", M.modules["whalesong/image/private/main.rkt"].getExports().get("ellipse39.77"));ns.set("empty-image", M.modules["whalesong/image/private/image.rkt"].getExports().get("empty-image"));ns.set("empty-scene", M.modules["whalesong/image/private/main.rkt"].getExports().get("empty-scene20.39"));ns.set("flip-horizontal", M.modules["whalesong/image/private/main.rkt"].getExports().get("flip-horizontal27.53"));ns.set("flip-vertical", M.modules["whalesong/image/private/main.rkt"].getExports().get("flip-vertical28.55"));ns.set("frame", M.modules["whalesong/image/private/main.rkt"].getExports().get("frame29.57"));ns.set("image->color-list", M.modules["whalesong/image/private/main.rkt"].getExports().get("image->color-list54.107"));ns.set("image-baseline", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-baseline59.117"));ns.set("image-color?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-color?60.119"));ns.set("image-height", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-height58.115"));ns.set("image-url", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-url4.7"));ns.set("image-width", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-width57.113"));ns.set("image=?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image=?68.135"));ns.set("image?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image?67.133"));ns.set("isosceles-triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("isosceles-triangle49.97"));ns.set("line", M.modules["whalesong/image/private/main.rkt"].getExports().get("line31.61"));ns.set("make-color", M.modules["whalesong/image/private/color.rkt"].getExports().get("-color"));ns.set("mode?", M.modules["whalesong/image/private/main.rkt"].getExports().get("mode?61.121"));ns.set("name->color", M.modules["whalesong/image/private/main.rkt"].getExports().get("name->color69.137"));ns.set("open-image-url", M.modules["whalesong/image/private/main.rkt"].getExports().get("open-image-url5.9"));ns.set("overlay", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay8.15"));ns.set("overlay/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/align11.21"));ns.set("overlay/offset", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/offset9.17"));ns.set("overlay/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/xy10.19"));ns.set("place-image", M.modules["whalesong/image/private/main.rkt"].getExports().get("place-image22.43"));ns.set("place-image/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("place-image/align23.45"));ns.set("place-images", M.modules["whalesong/image/private/image.rkt"].getExports().get("place-images"));ns.set("place-images/align", M.modules["whalesong/image/private/image.rkt"].getExports().get("place-images/align"));ns.set("play-sound", M.modules["whalesong/image/private/main.rkt"].getExports().get("play-sound7.13"));ns.set("polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("polygon37.73"));ns.set("put-image", M.modules["whalesong/image/private/main.rkt"].getExports().get("put-image21.41"));ns.set("radial-star", M.modules["whalesong/image/private/main.rkt"].getExports().get("radial-star51.101"));ns.set("rectangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("rectangle36.71"));ns.set("regular-polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("regular-polygon38.75"));ns.set("rhombus", M.modules["whalesong/image/private/main.rkt"].getExports().get("rhombus53.105"));ns.set("right-triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("right-triangle48.95"));ns.set("rotate", M.modules["whalesong/image/private/main.rkt"].getExports().get("rotate24.47"));ns.set("scale", M.modules["whalesong/image/private/main.rkt"].getExports().get("scale25.49"));ns.set("scale/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("scale/xy26.51"));ns.set("scene+line", M.modules["whalesong/image/private/main.rkt"].getExports().get("scene+line33.65"));ns.set("side-count?", M.modules["whalesong/image/private/main.rkt"].getExports().get("side-count?65.129"));ns.set("square", M.modules["whalesong/image/private/main.rkt"].getExports().get("square35.69"));ns.set("star", M.modules["whalesong/image/private/main.rkt"].getExports().get("star50.99"));ns.set("star-polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("star-polygon52.103"));ns.set("step-count?", M.modules["whalesong/image/private/main.rkt"].getExports().get("step-count?66.131"));ns.set("struct:color", M.modules["whalesong/image/private/color.rkt"].getExports().get("struct:color"));ns.set("text", M.modules["whalesong/image/private/main.rkt"].getExports().get("text1.1"));ns.set("text/font", M.modules["whalesong/image/private/main.rkt"].getExports().get("text/font2.3"));ns.set("triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle40.79"));ns.set("triangle/aas", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/aas45.89"));ns.set("triangle/asa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/asa46.91"));ns.set("triangle/ass", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/ass43.85"));ns.set("triangle/saa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/saa47.93"));ns.set("triangle/sas", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/sas41.81"));ns.set("triangle/ssa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/ssa44.87"));ns.set("triangle/sss", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/sss42.83"));ns.set("underlay", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay12.23"));ns.set("underlay/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/align15.29"));ns.set("underlay/offset", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/offset13.25"));ns.set("underlay/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/xy14.27"));ns.set("video/url", M.modules["whalesong/image/private/main.rkt"].getExports().get("video/url6.11"));ns.set("x-place?", M.modules["whalesong/image/private/main.rkt"].getExports().get("x-place?62.123"));ns.set("y-place?", M.modules["whalesong/image/private/main.rkt"].getExports().get("y-place?63.125"));}(M.modules["whalesong/image.rkt"],M.modules["whalesong/image.rkt"].getExports(),M.modules["whalesong/image.rkt"].getExternalExports(),M.modules["whalesong/image.rkt"].prefix));
return(M.p)(M);};

var _3326=function(M){if(M.modules["whalesong/image/main.rkt"].isInvoked!==false){return(_3328)(M);}else{M.c.push(new RT.CallFrame(_3328,M.p));
return(M.modules["whalesong/image/main.rkt"].label)(M);}};

var _3324=function(M){if(--M.cbt<0){throw _3324;}
M.e.length-=(M.a-1);
return(_3325)(M);};

_3325.mvr=_3324;
_3328.mvr=_3327;
_3320.mvr=_3319;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3329(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/main.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3335=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3337)(M);}else{M.c.push(new RT.CallFrame(_3337,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3333=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3334=function(M){M.modules["whalesong/image/main.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3335)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3335);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3335)(M);}};

var _3331=function(M){if(--M.cbt<0){throw _3331;}
M.e.length-=(M.a-1);
return(_3332)(M);};

var _3330=function(M){M.c.push(new RT.CallFrame(_3332,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/image/main.rkt"]=function(){return new RT.ModuleRecord("main",_3334);}
return(_3333)(M);};

var _3347=function(M){return(_3330)(M);};

var _3332=function(M){if(--M.cbt<0){throw _3332;}
};

var _3345=function(M){if(--M.cbt<0){throw _3345;}
M.e.length-=(M.a-1);
return(_3346)(M);};

var _3346=function(M){if(--M.cbt<0){throw _3346;}
M.e.push([]);M.e[M.e.length-1].names=[];
M.modules["whalesong/image/main.rkt"].prefix=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("above", M.modules["whalesong/image/private/main.rkt"].getExports().get("above18.35"));ns.set("above/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("above/align19.37"));ns.set("add-line", M.modules["whalesong/image/private/main.rkt"].getExports().get("add-line32.63"));ns.set("angle?", M.modules["whalesong/image/private/main.rkt"].getExports().get("angle?64.127"));ns.set("beside", M.modules["whalesong/image/private/main.rkt"].getExports().get("beside16.31"));ns.set("beside/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("beside/align17.33"));ns.set("bitmap/url", M.modules["whalesong/image/private/main.rkt"].getExports().get("bitmap/url3.5"));ns.set("circle", M.modules["whalesong/image/private/main.rkt"].getExports().get("circle34.67"));ns.set("color", M.modules["whalesong/image/private/color.rkt"].getExports().get("-color"));ns.set("color-alpha", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-alpha"));ns.set("color-blue", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-blue"));ns.set("color-green", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-green"));ns.set("color-list->bitmap", M.modules["whalesong/image/private/main.rkt"].getExports().get("color-list->bitmap56.111"));ns.set("color-list->image", M.modules["whalesong/image/private/main.rkt"].getExports().get("color-list->image55.109"));ns.set("color-red", M.modules["whalesong/image/private/color.rkt"].getExports().get("color-red"));ns.set("color?", M.modules["whalesong/image/private/color.rkt"].getExports().get("color?"));ns.set("crop", M.modules["whalesong/image/private/main.rkt"].getExports().get("crop30.59"));ns.set("ellipse", M.modules["whalesong/image/private/main.rkt"].getExports().get("ellipse39.77"));ns.set("empty-image", M.modules["whalesong/image/private/image.rkt"].getExports().get("empty-image"));ns.set("empty-scene", M.modules["whalesong/image/private/main.rkt"].getExports().get("empty-scene20.39"));ns.set("flip-horizontal", M.modules["whalesong/image/private/main.rkt"].getExports().get("flip-horizontal27.53"));ns.set("flip-vertical", M.modules["whalesong/image/private/main.rkt"].getExports().get("flip-vertical28.55"));ns.set("frame", M.modules["whalesong/image/private/main.rkt"].getExports().get("frame29.57"));ns.set("image->color-list", M.modules["whalesong/image/private/main.rkt"].getExports().get("image->color-list54.107"));ns.set("image-baseline", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-baseline59.117"));ns.set("image-color?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-color?60.119"));ns.set("image-height", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-height58.115"));ns.set("image-url", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-url4.7"));ns.set("image-width", M.modules["whalesong/image/private/main.rkt"].getExports().get("image-width57.113"));ns.set("image=?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image=?68.135"));ns.set("image?", M.modules["whalesong/image/private/main.rkt"].getExports().get("image?67.133"));ns.set("isosceles-triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("isosceles-triangle49.97"));ns.set("line", M.modules["whalesong/image/private/main.rkt"].getExports().get("line31.61"));ns.set("make-color", M.modules["whalesong/image/private/color.rkt"].getExports().get("-color"));ns.set("mode?", M.modules["whalesong/image/private/main.rkt"].getExports().get("mode?61.121"));ns.set("name->color", M.modules["whalesong/image/private/main.rkt"].getExports().get("name->color69.137"));ns.set("open-image-url", M.modules["whalesong/image/private/main.rkt"].getExports().get("open-image-url5.9"));ns.set("overlay", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay8.15"));ns.set("overlay/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/align11.21"));ns.set("overlay/offset", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/offset9.17"));ns.set("overlay/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("overlay/xy10.19"));ns.set("place-image", M.modules["whalesong/image/private/main.rkt"].getExports().get("place-image22.43"));ns.set("place-image/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("place-image/align23.45"));ns.set("place-images", M.modules["whalesong/image/private/image.rkt"].getExports().get("place-images"));ns.set("place-images/align", M.modules["whalesong/image/private/image.rkt"].getExports().get("place-images/align"));ns.set("play-sound", M.modules["whalesong/image/private/main.rkt"].getExports().get("play-sound7.13"));ns.set("polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("polygon37.73"));ns.set("put-image", M.modules["whalesong/image/private/main.rkt"].getExports().get("put-image21.41"));ns.set("radial-star", M.modules["whalesong/image/private/main.rkt"].getExports().get("radial-star51.101"));ns.set("rectangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("rectangle36.71"));ns.set("regular-polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("regular-polygon38.75"));ns.set("rhombus", M.modules["whalesong/image/private/main.rkt"].getExports().get("rhombus53.105"));ns.set("right-triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("right-triangle48.95"));ns.set("rotate", M.modules["whalesong/image/private/main.rkt"].getExports().get("rotate24.47"));ns.set("scale", M.modules["whalesong/image/private/main.rkt"].getExports().get("scale25.49"));ns.set("scale/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("scale/xy26.51"));ns.set("scene+line", M.modules["whalesong/image/private/main.rkt"].getExports().get("scene+line33.65"));ns.set("side-count?", M.modules["whalesong/image/private/main.rkt"].getExports().get("side-count?65.129"));ns.set("square", M.modules["whalesong/image/private/main.rkt"].getExports().get("square35.69"));ns.set("star", M.modules["whalesong/image/private/main.rkt"].getExports().get("star50.99"));ns.set("star-polygon", M.modules["whalesong/image/private/main.rkt"].getExports().get("star-polygon52.103"));ns.set("step-count?", M.modules["whalesong/image/private/main.rkt"].getExports().get("step-count?66.131"));ns.set("struct:color", M.modules["whalesong/image/private/color.rkt"].getExports().get("struct:color"));ns.set("text", M.modules["whalesong/image/private/main.rkt"].getExports().get("text1.1"));ns.set("text/font", M.modules["whalesong/image/private/main.rkt"].getExports().get("text/font2.3"));ns.set("triangle", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle40.79"));ns.set("triangle/aas", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/aas45.89"));ns.set("triangle/asa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/asa46.91"));ns.set("triangle/ass", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/ass43.85"));ns.set("triangle/saa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/saa47.93"));ns.set("triangle/sas", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/sas41.81"));ns.set("triangle/ssa", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/ssa44.87"));ns.set("triangle/sss", M.modules["whalesong/image/private/main.rkt"].getExports().get("triangle/sss42.83"));ns.set("underlay", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay12.23"));ns.set("underlay/align", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/align15.29"));ns.set("underlay/offset", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/offset13.25"));ns.set("underlay/xy", M.modules["whalesong/image/private/main.rkt"].getExports().get("underlay/xy14.27"));ns.set("video/url", M.modules["whalesong/image/private/main.rkt"].getExports().get("video/url6.11"));ns.set("x-place?", M.modules["whalesong/image/private/main.rkt"].getExports().get("x-place?62.123"));ns.set("y-place?", M.modules["whalesong/image/private/main.rkt"].getExports().get("y-place?63.125"));}(M.modules["whalesong/image/main.rkt"],M.modules["whalesong/image/main.rkt"].getExports(),M.modules["whalesong/image/main.rkt"].getExternalExports(),M.modules["whalesong/image/main.rkt"].prefix));
return(M.p)(M);};

var _3344=function(M){if(M.modules["whalesong/image/private/image.rkt"].isInvoked!==false){return(_3346)(M);}else{M.c.push(new RT.CallFrame(_3346,M.p));
return(M.modules["whalesong/image/private/image.rkt"].label)(M);}};

var _3342=function(M){if(--M.cbt<0){throw _3342;}
M.e.length-=(M.a-1);
return(_3343)(M);};

var _3343=function(M){if(--M.cbt<0){throw _3343;}
if((M.installedModules["whalesong/image/private/image.rkt"]!==void(0)&&M.modules["whalesong/image/private/image.rkt"]!==undefined)!==false){return(_3344)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image/private/image.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3344);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3344)(M);}};

var _3341=function(M){if(M.modules["whalesong/image/private/color.rkt"].isInvoked!==false){return(_3343)(M);}else{M.c.push(new RT.CallFrame(_3343,M.p));
return(M.modules["whalesong/image/private/color.rkt"].label)(M);}};

var _3339=function(M){if(--M.cbt<0){throw _3339;}
M.e.length-=(M.a-1);
return(_3340)(M);};

var _3340=function(M){if(--M.cbt<0){throw _3340;}
if((M.installedModules["whalesong/image/private/color.rkt"]!==void(0)&&M.modules["whalesong/image/private/color.rkt"]!==undefined)!==false){return(_3341)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image/private/color.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3341);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3341)(M);}};

var _3338=function(M){if(M.modules["whalesong/image/private/main.rkt"].isInvoked!==false){return(_3340)(M);}else{M.c.push(new RT.CallFrame(_3340,M.p));
return(M.modules["whalesong/image/private/main.rkt"].label)(M);}};

var _3336=function(M){if(--M.cbt<0){throw _3336;}
M.e.length-=(M.a-1);
return(_3337)(M);};

var _3337=function(M){if(--M.cbt<0){throw _3337;}
if((M.installedModules["whalesong/image/private/main.rkt"]!==void(0)&&M.modules["whalesong/image/private/main.rkt"]!==undefined)!==false){return(_3338)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image/private/main.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3338);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3338)(M);}};

_3337.mvr=_3336;
_3340.mvr=_3339;
_3343.mvr=_3342;
_3346.mvr=_3345;
_3332.mvr=_3331;
M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3347(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/main.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/main.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <UninterpretedSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/main.rkt>
(function(M) {
"use strict";
 
M.installedModules["whalesong/image/private/main.rkt"] = function() {
    return new plt.runtime.ModuleRecord("whalesong/image/private/main.rkt",
        function(M) {
            
        var afterName2026 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/image/private/main.rkt"];
             var ns = modrec.getExports();
             var extNs = modrec.getExternalExports();
             modrec.prefix=[void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0)];modrec.prefix.names=["above18.35","above/align19.37","add-line32.63","angle?64.127","beside16.31","beside/align17.33","bitmap/url3.5","circle34.67","color-list->bitmap56.111","color-list->image55.109","crop30.59","ellipse39.77","empty-scene20.39","flip-horizontal27.53","flip-vertical28.55","frame29.57","image->color-list54.107","image-baseline59.117","image-color?60.119","image-height58.115","image-url4.7","image-width57.113","image=?68.135","image?67.133","isosceles-triangle49.97","line31.61","mode?61.121","name->color69.137","open-image-url5.9","overlay8.15","overlay/align11.21","overlay/offset9.17","overlay/xy10.19","place-image22.43","place-image/align23.45","play-sound7.13","polygon37.73","put-image21.41","radial-star51.101","rectangle36.71","regular-polygon38.75","rhombus53.105","right-triangle48.95","rotate24.47","scale25.49","scale/xy26.51","scene+line33.65","side-count?65.129","square35.69","star50.99","star-polygon52.103","step-count?66.131","text1.1","text/font2.3","triangle40.79","triangle/aas45.89","triangle/asa46.91","triangle/ass43.85","triangle/saa47.93","triangle/sas41.81","triangle/ssa44.87","triangle/sss42.83","underlay12.23","underlay/align15.29","underlay/offset13.25","underlay/xy14.27","video/url6.11","x-place?62.123","y-place?63.125"];modrec.prefix.internalNames=["above","above/align","add-line","angle?","beside","beside/align","bitmap/url","circle","color-list->bitmap","color-list->image","crop","ellipse","empty-scene","flip-horizontal","flip-vertical","frame","image->color-list","image-baseline","image-color?","image-height","image-url","image-width","image=?","image?","isosceles-triangle","line","mode?","name->color","open-image-url","overlay","overlay/align","overlay/offset","overlay/xy","place-image","place-image/align","play-sound","polygon","put-image","radial-star","rectangle","regular-polygon","rhombus","right-triangle","rotate","scale","scale/xy","scene+line","side-count?","square","star","star-polygon","step-count?","text","text/font","triangle","triangle/aas","triangle/asa","triangle/ass","triangle/saa","triangle/sas","triangle/ssa","triangle/sss","underlay","underlay/align","underlay/offset","underlay/xy","video/url","x-place?","y-place?"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){// This might want to live in the Racket world rather than in
// JavaScript land...


var colorNamespace = MACHINE.modules['whalesong/image/private/color.rkt'].getExternalExports();
var colorStruct = colorNamespace.get('struct:color');
var makeColor = function(r,g,b,a) { return colorStruct.constructor([r,g,b,a]); };



// Color database
var ColorDb = function() {
    this.colors = {};
};


ColorDb.prototype.put = function(name, color) {
    this.colors[name] = color;
};

ColorDb.prototype.get = function(name) {
    return this.colors[name.toString().toUpperCase()];
};


// FIXME: update toString to handle the primitive field values.

var colorDb = new ColorDb();
colorDb.put("ORANGE", makeColor(255, 165, 0));
colorDb.put("RED", makeColor(255, 0, 0));
colorDb.put("ORANGERED", makeColor(255, 69, 0));
colorDb.put("TOMATO", makeColor(255, 99, 71));
colorDb.put("DARKRED", makeColor(139, 0, 0));
colorDb.put("RED", makeColor(255, 0, 0));
colorDb.put("FIREBRICK", makeColor(178, 34, 34));
colorDb.put("CRIMSON", makeColor(220, 20, 60));
colorDb.put("DEEPPINK", makeColor(255, 20, 147));
colorDb.put("MAROON", makeColor(176, 48, 96));
colorDb.put("INDIAN RED", makeColor(205, 92, 92));
colorDb.put("INDIANRED", makeColor(205, 92, 92));
colorDb.put("MEDIUM VIOLET RED", makeColor(199, 21, 133));
colorDb.put("MEDIUMVIOLETRED", makeColor(199, 21, 133));
colorDb.put("VIOLET RED", makeColor(208, 32, 144));
colorDb.put("VIOLETRED", makeColor(208, 32, 144));
colorDb.put("LIGHTCORAL", makeColor(240, 128, 128));
colorDb.put("HOTPINK", makeColor(255, 105, 180));
colorDb.put("PALEVIOLETRED", makeColor(219, 112, 147));
colorDb.put("LIGHTPINK", makeColor(255, 182, 193));
colorDb.put("ROSYBROWN", makeColor(188, 143, 143));
colorDb.put("PINK", makeColor(255, 192, 203));
colorDb.put("ORCHID", makeColor(218, 112, 214));
colorDb.put("LAVENDERBLUSH", makeColor(255, 240, 245));
colorDb.put("SNOW", makeColor(255, 250, 250));
colorDb.put("CHOCOLATE", makeColor(210, 105, 30));
colorDb.put("SADDLEBROWN", makeColor(139, 69, 19));
colorDb.put("BROWN", makeColor(132, 60, 36));
colorDb.put("DARKORANGE", makeColor(255, 140, 0));
colorDb.put("CORAL", makeColor(255, 127, 80));
colorDb.put("SIENNA", makeColor(160, 82, 45));
colorDb.put("ORANGE", makeColor(255, 165, 0));
colorDb.put("SALMON", makeColor(250, 128, 114));
colorDb.put("PERU", makeColor(205, 133, 63));
colorDb.put("DARKGOLDENROD", makeColor(184, 134, 11));
colorDb.put("GOLDENROD", makeColor(218, 165, 32));
colorDb.put("SANDYBROWN", makeColor(244, 164, 96));
colorDb.put("LIGHTSALMON", makeColor(255, 160, 122));
colorDb.put("DARKSALMON", makeColor(233, 150, 122));
colorDb.put("GOLD", makeColor(255, 215, 0));
colorDb.put("YELLOW", makeColor(255, 255, 0));
colorDb.put("OLIVE", makeColor(128, 128, 0));
colorDb.put("BURLYWOOD", makeColor(222, 184, 135));
colorDb.put("TAN", makeColor(210, 180, 140));
colorDb.put("NAVAJOWHITE", makeColor(255, 222, 173));
colorDb.put("PEACHPUFF", makeColor(255, 218, 185));
colorDb.put("KHAKI", makeColor(240, 230, 140));
colorDb.put("DARKKHAKI", makeColor(189, 183, 107));
colorDb.put("MOCCASIN", makeColor(255, 228, 181));
colorDb.put("WHEAT", makeColor(245, 222, 179));
colorDb.put("BISQUE", makeColor(255, 228, 196));
colorDb.put("PALEGOLDENROD", makeColor(238, 232, 170));
colorDb.put("BLANCHEDALMOND", makeColor(255, 235, 205));
colorDb.put("MEDIUM GOLDENROD", makeColor(234, 234, 173));
colorDb.put("MEDIUMGOLDENROD", makeColor(234, 234, 173));
colorDb.put("PAPAYAWHIP", makeColor(255, 239, 213));
colorDb.put("MISTYROSE", makeColor(255, 228, 225));
colorDb.put("LEMONCHIFFON", makeColor(255, 250, 205));
colorDb.put("ANTIQUEWHITE", makeColor(250, 235, 215));
colorDb.put("CORNSILK", makeColor(255, 248, 220));
colorDb.put("LIGHTGOLDENRODYELLOW", makeColor(250, 250, 210));
colorDb.put("OLDLACE", makeColor(253, 245, 230));
colorDb.put("LINEN", makeColor(250, 240, 230));
colorDb.put("LIGHTYELLOW", makeColor(255, 255, 224));
colorDb.put("SEASHELL", makeColor(255, 245, 238));
colorDb.put("BEIGE", makeColor(245, 245, 220));
colorDb.put("FLORALWHITE", makeColor(255, 250, 240));
colorDb.put("IVORY", makeColor(255, 255, 240));
colorDb.put("GREEN", makeColor(0, 255, 0));
colorDb.put("LAWNGREEN", makeColor(124, 252, 0));
colorDb.put("CHARTREUSE", makeColor(127, 255, 0));
colorDb.put("GREEN YELLOW", makeColor(173, 255, 47));
colorDb.put("GREENYELLOW", makeColor(173, 255, 47));
colorDb.put("YELLOW GREEN", makeColor(154, 205, 50));
colorDb.put("YELLOWGREEN", makeColor(154, 205, 50));
colorDb.put("MEDIUM FOREST GREEN", makeColor(107, 142, 35));
colorDb.put("OLIVEDRAB", makeColor(107, 142, 35));
colorDb.put("MEDIUMFORESTGREEN", makeColor(107, 142, 35));
colorDb.put("DARK OLIVE GREEN", makeColor(85, 107, 47));
colorDb.put("DARKOLIVEGREEN", makeColor(85, 107, 47));
colorDb.put("DARKSEAGREEN", makeColor(143, 188, 139));
colorDb.put("LIME", makeColor(0, 255, 0));
colorDb.put("DARK GREEN", makeColor(0, 100, 0));
colorDb.put("DARKGREEN", makeColor(0, 100, 0));
colorDb.put("LIME GREEN", makeColor(50, 205, 50));
colorDb.put("LIMEGREEN", makeColor(50, 205, 50));
colorDb.put("FOREST GREEN", makeColor(34, 139, 34));
colorDb.put("FORESTGREEN", makeColor(34, 139, 34));
colorDb.put("SPRING GREEN", makeColor(0, 255, 127));
colorDb.put("SPRINGGREEN", makeColor(0, 255, 127));
colorDb.put("MEDIUM SPRING GREEN", makeColor(0, 250, 154));
colorDb.put("MEDIUMSPRINGGREEN", makeColor(0, 250, 154));
colorDb.put("SEA GREEN", makeColor(46, 139, 87));
colorDb.put("SEAGREEN", makeColor(46, 139, 87));
colorDb.put("MEDIUM SEA GREEN", makeColor(60, 179, 113));
colorDb.put("MEDIUMSEAGREEN", makeColor(60, 179, 113));
colorDb.put("AQUAMARINE", makeColor(112, 216, 144));
colorDb.put("LIGHTGREEN", makeColor(144, 238, 144));
colorDb.put("PALE GREEN", makeColor(152, 251, 152));
colorDb.put("PALEGREEN", makeColor(152, 251, 152));
colorDb.put("MEDIUM AQUAMARINE", makeColor(102, 205, 170));
colorDb.put("MEDIUMAQUAMARINE", makeColor(102, 205, 170));
colorDb.put("TURQUOISE", makeColor(64, 224, 208));
colorDb.put("LIGHTSEAGREEN", makeColor(32, 178, 170));
colorDb.put("MEDIUM TURQUOISE", makeColor(72, 209, 204));
colorDb.put("MEDIUMTURQUOISE", makeColor(72, 209, 204));
colorDb.put("HONEYDEW", makeColor(240, 255, 240));
colorDb.put("MINTCREAM", makeColor(245, 255, 250));
colorDb.put("ROYALBLUE", makeColor(65, 105, 225));
colorDb.put("DODGERBLUE", makeColor(30, 144, 255));
colorDb.put("DEEPSKYBLUE", makeColor(0, 191, 255));
colorDb.put("CORNFLOWERBLUE", makeColor(100, 149, 237));
colorDb.put("STEEL BLUE", makeColor(70, 130, 180));
colorDb.put("STEELBLUE", makeColor(70, 130, 180));
colorDb.put("LIGHTSKYBLUE", makeColor(135, 206, 250));
colorDb.put("DARK TURQUOISE", makeColor(0, 206, 209));
colorDb.put("DARKTURQUOISE", makeColor(0, 206, 209));
colorDb.put("CYAN", makeColor(0, 255, 255));
colorDb.put("AQUA", makeColor(0, 255, 255));
colorDb.put("DARKCYAN", makeColor(0, 139, 139));
colorDb.put("TEAL", makeColor(0, 128, 128));
colorDb.put("SKY BLUE", makeColor(135, 206, 235));
colorDb.put("SKYBLUE", makeColor(135, 206, 235));
colorDb.put("CADET BLUE", makeColor(96, 160, 160));
colorDb.put("CADETBLUE", makeColor(95, 158, 160));
colorDb.put("DARK SLATE GRAY", makeColor(47, 79, 79));
colorDb.put("DARKSLATEGRAY", makeColor(47, 79, 79));
colorDb.put("LIGHTSLATEGRAY", makeColor(119, 136, 153));
colorDb.put("SLATEGRAY", makeColor(112, 128, 144));
colorDb.put("LIGHT STEEL BLUE", makeColor(176, 196, 222));
colorDb.put("LIGHTSTEELBLUE", makeColor(176, 196, 222));
colorDb.put("LIGHT BLUE", makeColor(173, 216, 230));
colorDb.put("LIGHTBLUE", makeColor(173, 216, 230));
colorDb.put("POWDERBLUE", makeColor(176, 224, 230));
colorDb.put("PALETURQUOISE", makeColor(175, 238, 238));
colorDb.put("LIGHTCYAN", makeColor(224, 255, 255));
colorDb.put("ALICEBLUE", makeColor(240, 248, 255));
colorDb.put("AZURE", makeColor(240, 255, 255));
colorDb.put("MEDIUM BLUE", makeColor(0, 0, 205));
colorDb.put("MEDIUMBLUE", makeColor(0, 0, 205));
colorDb.put("DARKBLUE", makeColor(0, 0, 139));
colorDb.put("MIDNIGHT BLUE", makeColor(25, 25, 112));
colorDb.put("MIDNIGHTBLUE", makeColor(25, 25, 112));
colorDb.put("NAVY", makeColor(36, 36, 140));
colorDb.put("BLUE", makeColor(0, 0, 255));
colorDb.put("INDIGO", makeColor(75, 0, 130));
colorDb.put("BLUE VIOLET", makeColor(138, 43, 226));
colorDb.put("BLUEVIOLET", makeColor(138, 43, 226));
colorDb.put("MEDIUM SLATE BLUE", makeColor(123, 104, 238));
colorDb.put("MEDIUMSLATEBLUE", makeColor(123, 104, 238));
colorDb.put("SLATE BLUE", makeColor(106, 90, 205));
colorDb.put("SLATEBLUE", makeColor(106, 90, 205));
colorDb.put("PURPLE", makeColor(160, 32, 240));
colorDb.put("DARK SLATE BLUE", makeColor(72, 61, 139));
colorDb.put("DARKSLATEBLUE", makeColor(72, 61, 139));
colorDb.put("DARKVIOLET", makeColor(148, 0, 211));
colorDb.put("DARK ORCHID", makeColor(153, 50, 204));
colorDb.put("DARKORCHID", makeColor(153, 50, 204));
colorDb.put("MEDIUMPURPLE", makeColor(147, 112, 219));
colorDb.put("CORNFLOWER BLUE", makeColor(68, 64, 108));
colorDb.put("MEDIUM ORCHID", makeColor(186, 85, 211));
colorDb.put("MEDIUMORCHID", makeColor(186, 85, 211));
colorDb.put("MAGENTA", makeColor(255, 0, 255));
colorDb.put("FUCHSIA", makeColor(255, 0, 255));
colorDb.put("DARKMAGENTA", makeColor(139, 0, 139));
colorDb.put("VIOLET", makeColor(238, 130, 238));
colorDb.put("PLUM", makeColor(221, 160, 221));
colorDb.put("LAVENDER", makeColor(230, 230, 250));
colorDb.put("THISTLE", makeColor(216, 191, 216));
colorDb.put("GHOSTWHITE", makeColor(248, 248, 255));
colorDb.put("WHITE", makeColor(255, 255, 255));
colorDb.put("WHITESMOKE", makeColor(245, 245, 245));
colorDb.put("GAINSBORO", makeColor(220, 220, 220));
colorDb.put("LIGHT GRAY", makeColor(211, 211, 211));
colorDb.put("LIGHTGRAY", makeColor(211, 211, 211));
colorDb.put("SILVER", makeColor(192, 192, 192));
colorDb.put("GRAY", makeColor(190, 190, 190));
colorDb.put("DARK GRAY", makeColor(169, 169, 169));
colorDb.put("DARKGRAY", makeColor(169, 169, 169));
colorDb.put("DIM GRAY", makeColor(105, 105, 105));
colorDb.put("DIMGRAY", makeColor(105, 105, 105));
colorDb.put("BLACK", makeColor(0, 0, 0));



EXPORTS['_colorDb'] = colorDb;

// Basic implementation of the image library.
//
// This should mimic the implementation of 2htdp/image.


//////////////////////////////////////////////////////////////////////
var colorNamespace = MACHINE.modules['whalesong/image/private/color.rkt'].getExternalExports();
var colorStruct = colorNamespace.get('struct:color');
var makeColor = function(r,g,b,a) { return colorStruct.constructor([r,g,b,a]); };
var isColor = colorStruct.predicate;
var colorRed = function(c) { return colorStruct.accessor(c, 0); };
var colorGreen = function(c) { return colorStruct.accessor(c, 1); };
var colorBlue = function(c) { return colorStruct.accessor(c, 2); };
var colorAlpha = function(c) { return colorStruct.accessor(c, 3); };
var equals = plt.baselib.equality.equals;
//////////////////////////////////////////////////////////////////////

var heir = plt.baselib.heir;
var clone = plt.baselib.clone;




var isAngle = function(x) {
    return plt.baselib.numbers.isReal(x) &&
        jsnums.greaterThanOrEqual(x, 0) &&
        jsnums.lessThan(x, 360);
};
// differentiate between rotation angle and other angles
var isRotateAngle = function(x) {
    return plt.baselib.numbers.isReal(x);
};


// Produces true if the value is a color or a color string.
// On the Racket side of things, this is exposed as image-color?.
var isColorOrColorString = function(thing) {
    return (isColor(thing) ||
            ((plt.baselib.strings.isString(thing) ||
              plt.baselib.symbols.isSymbol(thing)) &&
              typeof(colorDb.get(thing)) != 'undefined'));
};




//////////////////////////////////////////////////////////////////////
// colorString : hexColor -> rgba
var colorString = function(aColor) {
  return "rgba(" + colorRed(aColor) + "," +
                  colorGreen(aColor) + ", " +
                  colorBlue(aColor) + ", " +
                  (colorAlpha(aColor) || 255)/255.0 + ")";
};




var isSideCount = function(x) {
    return plt.baselib.numbers.isInteger(x) && jsnums.greaterThanOrEqual(x, 3);
};

var isStepCount = function(x) {
    return plt.baselib.numbers.isInteger(x) && jsnums.greaterThanOrEqual(x, 1);
};


var isPointsCount = function(x) {
    return plt.baselib.numbers.isNatural(x) && jsnums.greaterThanOrEqual(x, 2); 
};





// Produces true if thing is an image-like object.
var isImage = function(thing) {
    if (typeof(thing.getHeight) !== 'function')
        return false;
    if (typeof(thing.getWidth) !== 'function')
        return false;
    if (typeof(thing.getBaseline) !== 'function')
        return false;
    if (typeof(thing.updatePinhole) !== 'function')
        return false;
    if (typeof(thing.render) !== 'function')
        return false;
    return true;
};

// given two arrays of {x,y} structs, determine their equivalence
var verticesEqual = function(v1, v2){
  if(v1.length !== v2.length){ return false; }
  for(var i=0; i< v1.length; i++){
    if(v1[i].x !== v2[i].x || v1[i].y !== v2[i].y){ return false; }
  }
  return true;
};
// given two arrays of xs and ys, zip them into a vertex array
var zipVertices = function(xs, ys){
  if(xs.length !== ys.length){throw new Error('failure in zipVertices');}
  var vertices = [];
  for(var i=0; i<xs.length;i++){
    vertices.push({x: xs[i], y: ys[i]});
  }
  return vertices;
};


// Base class for all images.
var BaseImage = function() {};



BaseImage.prototype.updatePinhole = function(x, y) {
    var aCopy = clone(this);
    aCopy.pinholeX = x;
    aCopy.pinholeY = y;
    return aCopy;
};

BaseImage.prototype.getHeight = function(){
    return this.height;
};

BaseImage.prototype.getWidth = function(){
    return this.width;
};

BaseImage.prototype.getBaseline = function(){
    return this.height;
};

// return the vertex array if it exists, otherwise make one using height and width
BaseImage.prototype.getVertices = function(){
  if(this.vertices){ return this.vertices; }
  else{ return [{x:0 , y: 0},
                {x: this.width, y: 0},
                {x: 0, y: this.height},
                {x: this.width, y: this.height}]; }
};

// render: context fixnum fixnum: -> void
// Render the image, where the upper-left corner of the image is drawn at
// (x, y).
// If the image isn't vertex-based, throw an error
// Otherwise, stroke and fill the vertices.
BaseImage.prototype.render = function(ctx, x, y) {
  if(!this.vertices){
    throw new Error('BaseImage.render is not implemented for this type!');
  }
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(x+this.vertices[0].x, y+this.vertices[0].y);
  for(var i=1; i < this.vertices.length; i++){
    ctx.lineTo(x+this.vertices[i].x, y+this.vertices[i].y);
  }
  ctx.closePath();

  if (this.style.toString().toLowerCase() === "outline") {
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  } else {
    ctx.fillStyle = colorString(this.color);
    ctx.fill();
  }
  ctx.restore();
};


// makeCanvas: number number -> canvas
// Constructs a canvas object of a particular width and height.
var makeCanvas = function(width, height) {
    var canvas = document.createElement("canvas");
    canvas.width = width;
    canvas.height = height;

    jQuery(canvas).css('width', canvas.width + "px");
    jQuery(canvas).css('height', canvas.height + "px");
    jQuery(canvas).css('padding', '0px');

    // KLUDGE: IE compatibility uses /js/excanvas.js, and dynamic
    // elements must be marked this way.
    if (window.G_vmlCanvasManager) {
	canvas = window.G_vmlCanvasManager.initElement(canvas);
    }
    return canvas;
};



var withIeHack = function(canvas, f) {
    // 	canvas.style.display = 'none';
    // 	document.body.appendChild(canvas);
    // 	try {
    var result = f(canvas);
    // 	} catch(e) {
    // 	    document.body.removeChild(canvas);
    // 	    canvas.style.display = '';
    // 	    throw e;
    // 	}
    // 	document.body.removeChild(canvas);
    // 	canvas.style.display = '';
    return result;
};



// Images are expected to define a render() method, which is used
// here to draw to the canvas.
BaseImage.prototype.toDomNode = function(params) {
    var that = this;
    var width = that.getWidth();
    var height = that.getHeight();
    var canvas = makeCanvas(width, height);
    var ctx;

    // // Try best effort to render to screen at this point.
    // try {
    //     ctx = canvas.getContext("2d");
    //     that.render(ctx, 0, 0);
    // } catch (e) {
    // }
    // KLUDGE: on IE, the canvas rendering functions depend on a
    // context where the canvas is attached to the DOM tree.
    // We initialize an afterAttach hook; the client's responsible
    // for calling this after the dom node is attached to the
    // document.
    var onAfterAttach = function(event) {
        // jQuery(canvas).unbind('afterAttach', onAfterAttach);
        var ctx = this.getContext("2d");
      that.render(ctx, 0, 0);
    };
    jQuery(canvas).bind('afterAttach', onAfterAttach);

    // Canvases lose their drawn content on cloning.  data may help us to preserve it.
    jQuery(canvas).data('toRender', onAfterAttach);

    return canvas;
};




BaseImage.prototype.toWrittenString = function(cache) { return "<image>"; }
BaseImage.prototype.toDisplayedString = function(cache) { return "<image>"; }

// Best-Guess equivalence for images. If they're vertex-based we're in luck,
// otherwise we go pixel-by-pixel. It's up to exotic image types to provide
// more efficient ways of comparing one another
BaseImage.prototype.equals = function(other, aUnionFind) {
  if(this.width    !== other.getWidth()    ||
     this.height   !== other.getHeight()){ return false; }
  // if they're both vertex-based images, all we need to compare are
  // their styles, vertices and color
  if(this.vertices && other.vertices){
    return (this.style    === other.style &&
            verticesEqual(this.vertices, other.vertices) &&
            equals(this.color, other.color, aUnionFind));
  }
  // if it's something more sophisticated, render both images to canvases
  // First check canvas dimensions, then go pixel-by-pixel
  var c1 = this.toDomNode(), c2 = other.toDomNode();
  if(c1.width !== c2.width || c1.height !== c2.height){ return false;}
  try{
    var ctx1 = c1.getContext('2d'), ctx2 = c2.getContext('2d'),
    data1 = ctx1.getImageData(0, 0, c1.width, c1.height),
    data2 = ctx2.getImageData(0, 0, c2.width, c2.height);
    var pixels1 = data1.data,
    pixels2 = data2.data;
    for(var i = 0; i < pixels1.length; i++){
      if(pixels1[i] !== pixels2[i]){ return false; }
    }
  } catch(e){
    // if we violate CORS, just bail
    return false;
  }
  // if, after all this, we're still good...then they're equal!
  return true;
};




// isScene: any -> boolean
// Produces true when x is a scene.
var isScene = function(x) {
    return ((x != undefined) && (x != null) && (x instanceof SceneImage));
};


//////////////////////////////////////////////////////////////////////
// SceneImage: primitive-number primitive-number color (listof image) boolean -> Scene
var SceneImage = function(width, height, color, children, withBorder) {
  BaseImage.call(this);
  this.width    = width;
  this.height   = height;
  this.children = children; // arrayof [image, number, number]
  this.withBorder = withBorder;
  this.color    = color;
};
SceneImage.prototype = heir(BaseImage.prototype);

// add: image primitive-number primitive-number -> Scene
SceneImage.prototype.add = function(anImage, x, y) {
  return new SceneImage(this.width,
                        this.height,
                        null,
                        this.children.concat([[anImage,
                                               x - anImage.getWidth()/2,
                                               y - anImage.getHeight()/2]]),
                        this.withBorder);
};

// render: 2d-context primitive-number primitive-number -> void
SceneImage.prototype.render = function(ctx, x, y) {
  var i;
  var childImage, childX, childY;
  // create a clipping region around the boundaries of the Scene
  ctx.save();
  // if no color is defined, default to transparent
  ctx.fillStyle = this.color? colorString(this.color) : "rgba(0,0,0,0)";
  ctx.fillRect(x, y, this.width, this.height);
  ctx.restore();
  // save the context, reset the path, and clip to the path around the scene edge
  ctx.save();
  ctx.beginPath();
  ctx.rect(x, y, this.width, this.height);
  ctx.clip();
  // Ask every object to render itself inside the region
  for(i = 0; i < this.children.length; i++) {
    // then, render the child images
    childImage = this.children[i][0];
    childX = this.children[i][1];
    childY = this.children[i][2];
    childImage.render(ctx, childX + x, childY + y);
  }
  // unclip
  ctx.restore();
  
  if (this.withBorder) {
    ctx.strokeStyle = 'black';
    ctx.strokeRect(x, y, this.width, this.height);
  }
};

SceneImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof SceneImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  if (this.width    !== other.width ||
      this.height   !== other.height ||
      this.children.length !== other.children.length) {
    return false;
  }
  
  for (var i = 0; i < this.children.length; i++) {
    var rec1 = this.children[i];
    var rec2 = other.children[i];
    if (rec1[1] !== rec2[1] ||
        rec1[2] !== rec2[2] ||
        !equals(rec1[0], rec2[0], aUnionFind)) {
      return false;
    }
  }
  return true;
};

//////////////////////////////////////////////////////////////////////
// FileImage: string node -> Image
var FileImage = function(src, rawImage) {
  BaseImage.call(this);
  var self = this;
  this.src = src;
  this.isLoaded = false;
  
  // animationHack: see installHackToSupportAnimatedGifs() for details.
  this.animationHackImg = undefined;
  
  if (rawImage && rawImage.complete) {
    this.img = rawImage;
    this.isLoaded = true;
    self.width = self.img.width;
    self.height = self.img.height;
  } else {
    // fixme: we may want to do something blocking here for
    // onload, since we don't know at this time what the file size
    // should be, nor will drawImage do the right thing until the
    // file is loaded.
    this.img = new Image();
    this.img.onload = function() {
	    self.isLoaded = true;
      self.width = self.img.width;
      self.height = self.img.height;
    };
    this.img.onerror = function(e) {
	    self.img.onerror = "";
	    self.img.src = "http://www.wescheme.org/images/broken.png";
    }
    this.img.src = src;
  }
}
FileImage.prototype = heir(BaseImage.prototype);


var imageCache = {};
FileImage.makeInstance = function(path, rawImage) {
  if (! (path in imageCache)) {
    imageCache[path] = new FileImage(path, rawImage);
  }
  return imageCache[path];
};

FileImage.installInstance = function(path, rawImage) {
  imageCache[path] = new FileImage(path, rawImage);
};

FileImage.installBrokenImage = function(path) {
  imageCache[path] = new TextImage("Unable to load " + path, 10, colorDb.get("red"),
                                   "normal", "Optimer","","",false);
};



FileImage.prototype.render = function(ctx, x, y) {
  this.installHackToSupportAnimatedGifs();
  ctx.drawImage(this.animationHackImg, x, y);
};


// The following is a hack that we use to allow animated gifs to show
// as animating on the canvas.
FileImage.prototype.installHackToSupportAnimatedGifs = function() {
  if (this.animationHackImg) { return; }
  this.animationHackImg = this.img.cloneNode(true);
  document.body.appendChild(this.animationHackImg);
  this.animationHackImg.style.position = 'absolute';
  this.animationHackImg.style.top = '-2000px';
};


FileImage.prototype.getWidth = function() {
  return this.img.width;
};


FileImage.prototype.getHeight = function() {
  return this.img.height;
};

// Override toDomNode: we don't need a full-fledged canvas here.
FileImage.prototype.toDomNode = function(params) {
  return this.img.cloneNode(true);
};

FileImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FileImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.src === other.src);
};

//////////////////////////////////////////////////////////////////////
// FileVideo: String Node -> Video
var FileVideo = function(src, rawVideo) {
    BaseImage.call(this);
    var self = this;
    this.src = src;
    if (rawVideo) {
	this.video			= rawVideo;
	this.width			= self.video.videoWidth;
	this.height			= self.video.videoHeight;
	this.video.volume	= 1;
	this.video.poster	= "http://www.wescheme.org/images/broken.png";
	this.video.autoplay	= true;
	this.video.autobuffer=true;
	this.video.loop		= true;
	this.video.play();
    } else {
	// fixme: we may want to do something blocking here for
	// onload, since we don't know at this time what the file size
	// should be, nor will drawImage do the right thing until the
	// file is loaded.
	this.video = document.createElement('video');
	this.video.src = src;
	this.video.addEventListener('canplay', function() {
	    this.width			= self.video.videoWidth;
	    this.height			= self.video.videoHeight;
	    this.video.poster	= "http://www.wescheme.org/images/broken.png";
	    this.video.autoplay	= true;
	    this.video.autobuffer=true;
	    this.video.loop		= true;
	    this.video.play();
	});
	this.video.addEventListener('error', function(e) {
	    self.video.onerror = "";
	    self.video.poster = "http://www.wescheme.org/images/broken.png";
	});
    }
}
FileVideo.prototype = heir(BaseImage.prototype);

var videos = {};
FileVideo.makeInstance = function(path, rawVideo) {
    if (! (path in FileVideo)) {
	videos[path] = new FileVideo(path, rawVideo);
    } 
    return videos[path];
};

FileVideo.prototype.render = function(ctx, x, y) {
    ctx.drawImage(this.video, x, y);
};
FileVideo.prototype.equals = function(other, aUnionFind) {
    return (other instanceof FileVideo) && (this.src === other.src);
};

//////////////////////////////////////////////////////////////////////
// FileAudio: String Boolean Audio -> FileAudio
var FileAudio = function(src, loop, rawAudio) {
    this.src = src;
    if(rawAudio) {
        this.audio = rawAudio;
    }
    else {
        this.audio = document.createElement('audio');
    }
    this.audio.src = src;
    this.audio.autoplay         = false;
    this.audio.autobuffer       = true;
    // the below caused firefox to hang (but things work ok without it)
    // this.audio.currentTime      = 0;
    this.audio.loop             = loop;
    return true;
};

FileAudio.makeInstance = function(path, loop, rawAudio) {
    return new FileAudio(path, loop, rawAudio);
};

FileAudio.prototype.play = function () {
    this.audio.play();
    return true;
}



//////////////////////////////////////////////////////////////////////
// ImageDataImage: imageData -> image
// Given an array of pixel data, create an image
var ImageDataImage = function(imageData) {
  BaseImage.call(this);
  this.imageData= imageData;
  this.width    = imageData.width;
  this.height   = imageData.height;
};

ImageDataImage.prototype = heir(BaseImage.prototype);

ImageDataImage.prototype.render = function(ctx, x, y) {
  ctx.putImageData(this.imageData, x, y);
};


//////////////////////////////////////////////////////////////////////
// OverlayImage: image image placeX placeY -> image
// Creates an image that overlays img1 on top of the
// other image img2.
var OverlayImage = function(img1, img2, placeX, placeY) {
  BaseImage.call(this);
  
  // An overlay image consists of width, height, x1, y1, x2, and
  // y2.  We need to compute these based on the inputs img1,
  // img2, placex, and placey.
  
  // placeX and placeY may be non-numbers, in which case their values
  // depend on the img1 and img2 geometry.

  var x1, y1, x2, y2;
  
  if (placeX === "left") {
    x1 = 0;
    x2 = 0;
  } else if (placeX === "right") {
    x1 = Math.max(img1.getWidth(), img2.getWidth()) - img1.getWidth();
    x2 = Math.max(img1.getWidth(), img2.getWidth()) - img2.getWidth();
  } else if (placeX === "beside") {
    x1 = 0;
    x2 = img1.getWidth();
  } else if (placeX === "middle" || placeX === "center") {
    x1 = Math.max(img1.getWidth(), img2.getWidth())/2 - img1.getWidth()/2;
    x2 = Math.max(img1.getWidth(), img2.getWidth())/2 - img2.getWidth()/2;
  } else {
    x1 = Math.max(placeX, 0) - placeX;
    x2 = Math.max(placeX, 0);
  }
  
  if (placeY === "top") {
    y1 = 0;
    y2 = 0;
  } else if (placeY === "bottom") {
    y1 = Math.max(img1.getHeight(), img2.getHeight()) - img1.getHeight();
    y2 = Math.max(img1.getHeight(), img2.getHeight()) - img2.getHeight();
  } else if (placeY === "above") {
    y1 = 0;
    y2 = img1.getHeight();
  } else if (placeY === "baseline") {
    y1 = Math.max(img1.getBaseline(), img2.getBaseline()) - img1.getBaseline();
    y2 = Math.max(img1.getBaseline(), img2.getBaseline()) - img2.getBaseline();
  } else if (placeY === "middle" || placeY === "center") {
    y1 = Math.max(img1.getHeight(), img2.getHeight())/2 - img1.getHeight()/2;
    y2 = Math.max(img1.getHeight(), img2.getHeight())/2 - img2.getHeight()/2;
  } else {
    y1 = Math.max(placeY, 0) - placeY;
    y2 = Math.max(placeY, 0);
  }
  
  // calculate the vertices of this image by translating the verticies of the sub-images
  var i, v1 = img1.getVertices(), v2 = img2.getVertices(), xs = [], ys = [];

  for(i=0; i<v1.length; i++){
    xs.push(Math.round(v1[i].x + x1));
    ys.push(Math.round(v1[i].y + y1));
  }
  for(i=0; i<v2.length; i++){
    xs.push(Math.round(v2[i].x + x2));
    ys.push(Math.round(v2[i].y + y2));
  }
  
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs, ys);
  this.width  = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  
  // store the offsets for rendering
  this.x1 = Math.floor(x1);
  this.y1 = Math.floor(y1);
  this.x2 = Math.floor(x2);
  this.y2 = Math.floor(y2);
  this.img1 = img1;
  this.img2 = img2;
};

OverlayImage.prototype = heir(BaseImage.prototype);

OverlayImage.prototype.getVertices = function() { return this._vertices; };

OverlayImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  this.img2.render(ctx, x + this.x2, y + this.y2);
  this.img1.render(ctx, x + this.x1, y + this.y1);
  ctx.restore();
};

OverlayImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof OverlayImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.x1        === other.x1 &&
          this.y1        === other.y1 &&
          this.x2        === other.x2 &&
          this.y2        === other.y2 &&
          equals(this.img1, other.img1, aUnionFind) &&
          equals(this.img2, other.img2, aUnionFind) );
};


//////////////////////////////////////////////////////////////////////
// RotateImage: angle image -> image
// Rotates image by angle degrees in a *clockwise* direction.
// NOTE: the angle direction differs from the rotate function.
// TODO: special case for ellipse?
var RotateImage = function(angle, img) {
  BaseImage.call(this);
  var sin   = Math.sin(angle * Math.PI / 180);
  var cos   = Math.cos(angle * Math.PI / 180);
  var width = img.getWidth();
  var height= img.getHeight();
  
  // rotate each point as if it were rotated about (0,0)
  var vertices = img.getVertices(), xs = [], ys = [];
  for(var i=0; i<vertices.length; i++){
    xs[i] = Math.round(vertices[i].x*cos - vertices[i].y*sin);
    ys[i] = Math.round(vertices[i].x*sin + vertices[i].y*cos);
  }
  // figure out what translation is necessary to shift the vertices back to 0,0
  var translateX = Math.floor(-Math.min.apply( Math, xs ));
  var translateY = Math.floor(-Math.min.apply( Math, ys ));
  for(var i=0; i<vertices.length; i++){
    xs[i] += translateX;
    ys[i] += translateY;
  }
  
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs,ys);
  var rotatedWidth  = Math.max.apply( Math, xs ) - Math.min.apply( Math, xs );
  var rotatedHeight = Math.max.apply( Math, ys ) - Math.min.apply( Math, ys );
  
  this.img        = img;
  this.width      = Math.floor(rotatedWidth);
  this.height     = Math.floor(rotatedHeight);
  this.angle      = angle;
  this.translateX = translateX;
  this.translateY  = translateY;
};

RotateImage.prototype = heir(BaseImage.prototype);

RotateImage.prototype.getVertices = function() { return this._vertices; };

// translate the canvas using the calculated values, then draw at the rotated (x,y) offset.
RotateImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.translate(x+this.translateX, y + this.translateY);
  ctx.rotate(this.angle * Math.PI / 180);
  this.img.render(ctx, 0, 0);
  ctx.restore();
};

RotateImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof RotateImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.angle     === other.angle &&
          this.translateX=== other.translateX &&
          this.translateY=== other.translateY &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// ScaleImage: factor factor image -> image
// Scale an image
var ScaleImage = function(xFactor, yFactor, img) {
  BaseImage.call(this);
  var vertices = img.getVertices();
  var xs = [], ys = [];
  for(var i=0; i<vertices.length; i++){
    xs[i] = Math.round(vertices[i].x*xFactor);
    ys[i] = Math.round(vertices[i].y*yFactor);
  }
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs,ys);
  
  this.img      = img;
  this.width    = Math.floor(img.getWidth() * xFactor);
  this.height   = Math.floor(img.getHeight() * yFactor);
  this.xFactor  = xFactor;
  this.yFactor  = yFactor;
};

ScaleImage.prototype = heir(BaseImage.prototype);

ScaleImage.prototype.getVertices = function() { return this._vertices; };

// scale the context, and pass it to the image's render function
ScaleImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.scale(this.xFactor, this.yFactor);
  this.img.render(ctx, x / this.xFactor, y / this.yFactor);
  ctx.restore();
};

ScaleImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof ScaleImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.xFactor   === other.xFactor &&
          this.yFactor   === other.yFactor &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// CropImage: startX startY width height image -> image
// Crop an image
var CropImage = function(x, y, width, height, img) {
  BaseImage.call(this);
  this.x          = x;
  this.y          = y;
  this.width      = width;
  this.height     = height;
  this.img        = img;
};

CropImage.prototype = heir(BaseImage.prototype);

CropImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.beginPath();
  ctx.rect(x, y, this.width, this.height);
  ctx.clip();
  ctx.translate(-this.x, -this.y);
  this.img.render(ctx, x, y);
  ctx.restore();
};

CropImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof CropImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.x         === other.x &&
          this.y         === other.y &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// FrameImage: factor factor image -> image
// Stick a frame around the image
var FrameImage = function(img) {
  BaseImage.call(this);
  this.img        = img;
  this.width      = img.getWidth();
  this.height     = img.getHeight();
};

FrameImage.prototype = heir(BaseImage.prototype);

// scale the context, and pass it to the image's render function
FrameImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  this.img.render(ctx, x, y);
  ctx.beginPath();
  ctx.strokeStyle = "black";
  ctx.strokeRect(x, y, this.width, this.height);
  ctx.closePath();
  ctx.restore();
};

FrameImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FrameImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return equals(this.img, other.img, aUnionFind);
};

//////////////////////////////////////////////////////////////////////
// FlipImage: image string -> image
// Flip an image either horizontally or vertically
var FlipImage = function(img, direction) {
  BaseImage.call(this);
  this.img        = img;
  this.width      = img.getWidth();
  this.height     = img.getHeight();
  this.direction  = direction;
};

FlipImage.prototype = heir(BaseImage.prototype);

FlipImage.prototype.render = function(ctx, x, y) {
  // when flipping an image of dimension M and offset by N across an axis,
  // we need to translate the canvas by M+2N in the opposite direction
  ctx.save();
  if(this.direction === "horizontal"){
    ctx.scale(-1, 1);
    ctx.translate(-(this.width+2*x), 0);
    this.img.render(ctx, x, y);
  }
  if (this.direction === "vertical"){
    ctx.scale(1, -1);
    ctx.translate(0, -(this.height+2*y));
    this.img.render(ctx, x, y);
  }
  ctx.restore();
};

FlipImage.prototype.getWidth = function() {
  return this.width;
};

FlipImage.prototype.getHeight = function() {
  return this.height;
};

FlipImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FlipImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.direction === other.direction &&
          equals(this.img, other.img, aUnionFind) );
};




//////////////////////////////////////////////////////////////////////
// RectangleImage: Number Number Mode Color -> Image
var RectangleImage = function(width, height, style, color) {
  BaseImage.call(this);
  this.width  = width;
  this.height = height;
  this.style  = style;
  this.color  = color;
  this.vertices = [{x:0,y:height},{x:0,y:0},{x:width,y:0},{x:width,y:height}];
};
RectangleImage.prototype = heir(BaseImage.prototype);

RectangleImage.prototype.getWidth = function() {
  return this.width;
};

RectangleImage.prototype.getHeight = function() {
  return this.height;
};

//////////////////////////////////////////////////////////////////////
// RhombusImage: Number Number Mode Color -> Image
var RhombusImage = function(side, angle, style, color) {
  BaseImage.call(this);
  // sin(angle/2-in-radians) * side = half of base
  // cos(angle/2-in-radians) * side = half of height
  this.width  = Math.sin(angle/2 * Math.PI / 180) * side * 2;
  this.height = Math.abs(Math.cos(angle/2 * Math.PI / 180)) * side * 2;
  this.side   = side;
  this.angle  = angle;
  this.style  = style;
  this.color  = color;
  this.vertices = [{x:this.width/2, y:0},
                   {x:this.width,   y:this.height/2},
                   {x:this.width/2, y:this.height},
                   {x:0,            y:this.height/2}];
  
};
RhombusImage.prototype = heir(BaseImage.prototype);

RhombusImage.prototype.getWidth = function() {
  return this.width;
};

RhombusImage.prototype.getHeight = function() {
  return this.height;
};

//////////////////////////////////////////////////////////////////////
// PosnImage: Vertices Mode Color -> Image
//
var PosnImage = function(vertices, style, color) {
  BaseImage.call(this);
  var xs = vertices.map(function(v){return types.posnX(v);}),
  ys = vertices.map(function(v){return types.posnY(v);}),
  vertices = zipVertices(xs, ys);
  
  this.width      = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height     = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  this.style      = style;
  this.color      = color;
  // shift the vertices by the calculated offsets, now that we know the width
  var xOffset = Math.min.apply(Math, xs);
  var yOffset = Math.min.apply(Math, ys);
  for(var i=0; i<vertices.length; i++){
    vertices[i].x -= xOffset; vertices[i].y -= yOffset;
  }
  this.vertices   = vertices;
};
PosnImage.prototype = heir(BaseImage.prototype);

//////////////////////////////////////////////////////////////////////
// PolygonImage: Number Count Step Mode Color -> Image
//
// See http://www.algebra.com/algebra/homework/Polygons/Inscribed-and-circumscribed-polygons.lesson
// the polygon is inscribed in a circle, whose radius is length/2sin(pi/count)
// another circle is inscribed in the polygon, whose radius is length/2tan(pi/count)
// rotate a 3/4 quarter turn plus half the angle length to keep bottom base level
var PolygonImage = function(length, count, step, style, color) {
  BaseImage.call(this);
  this.outerRadius = Math.floor(length/(2*Math.sin(Math.PI/count)));
  this.innerRadius = Math.floor(length/(2*Math.tan(Math.PI/count)));
  var adjust = (3*Math.PI/2)+Math.PI/count;
  
  // rotate around outer circle, storing x and y coordinates
  var radians = 0, xs = [], ys = [];
  for(var i = 0; i < count; i++) {
    radians = radians + (step*2*Math.PI/count);
    xs.push(Math.round(this.outerRadius*Math.cos(radians-adjust)));
    ys.push(Math.round(this.outerRadius*Math.sin(radians-adjust)));
  }
  var vertices = zipVertices(xs, ys);
  
  this.width      = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height     = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  this.length     = length;
  this.count      = count;
  this.step       = step;
  this.style      = style;
  this.color      = color;
  
  // shift the vertices by the calculated offsets, now that we know the width
  var xOffset = Math.round(this.width/2);
  var yOffset = ((this.count % 2)? this.outerRadius : this.innerRadius);
  for(i=0; i<vertices.length; i++){
    vertices[i].x += xOffset; vertices[i].y += yOffset;
  }
  this.vertices   = vertices;
};

PolygonImage.prototype = heir(BaseImage.prototype);

var maybeQuote = function(s) {
  if (/ /.test(s)) {
    return "\"" + s + "\"";
  }
  return s;
};


//////////////////////////////////////////////////////////////////////
// TextImage: String Number Color String String String String any/c -> Image
var TextImage = function(msg, size, color, face, family, style, weight, underline) {
  BaseImage.call(this);
  var metrics;
  this.msg        = msg;
  this.size       = size;   // 18
  this.color      = color;  // red
  this.face       = face;   // Gill Sans
  this.family     = family; // 'swiss
  this.style      = (style === "slant")? "oblique" : style;  // Racket's "slant" -> CSS's "oblique"
  this.weight     = (weight=== "light")? "lighter" : weight; // Racket's "light" -> CSS's "lighter"
  this.underline  = underline;
  // example: "bold italic 20px 'Times', sans-serif".
  // Default weight is "normal", face is "Arial"
  
  // NOTE: we *ignore* font-family, as it causes a number of font bugs due the browser inconsistencies
  var canvas  = makeCanvas(0, 0),
      ctx     = canvas.getContext("2d");
  
  this.font = (this.style + " " +
               this.weight + " " +
               this.size + "px " +
               '"'+this.face+'", '+
               this.family);
  
  try {
    ctx.font    = this.font;
  } catch (e) {
    this.fallbackOnFont();
    ctx.font    = this.font;
  }
  
  // Defensive: on IE, this can break.
  try {
    metrics     = ctx.measureText(msg);
    this.width  = metrics.width;
    this.height = Number(this.size);
  } catch(e) {
    this.fallbackOnFont();
  }
};


TextImage.prototype = heir(BaseImage.prototype);

TextImage.prototype.fallbackOnFont = function() {
  // Defensive: if the browser doesn't support certain features, we
  // reduce to a smaller feature set and try again.
  this.font       = this.size + "px " + maybeQuote(this.family);
  var canvas      = makeCanvas(0, 0);
  var ctx         = canvas.getContext("2d");
  ctx.font        = this.font;
  var metrics     = ctx.measureText(this.msg);
  this.width      = metrics.width;
  // KLUDGE: I don't know how to get at the height.
  this.height     = Number(this.size);//ctx.measureText("m").width + 20;
};


TextImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.textAlign   = 'left';
  ctx.textBaseline= 'top';
  ctx.fillStyle   = colorString(this.color);
  ctx.font        = this.font;
  try {
    ctx.fillText(this.msg, x, y);
  } catch (e) {
    this.fallbackOnFont();
    ctx.font = this.font;
    ctx.fillText(this.msg, x, y);
  }
  if(this.underline){
    ctx.beginPath();
    ctx.moveTo(x, y+this.size);
    // we use this.size, as it is more accurate for underlining than this.height
    ctx.lineTo(x+this.width, y+this.size);
    ctx.closePath();
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  }
  ctx.restore();
};

TextImage.prototype.getBaseline = function() {
  return this.size;
};

TextImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof TextImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.msg      === other.msg &&
          this.size     === other.size &&
          this.face     === other.face &&
          this.family   === other.family &&
          this.style    === other.style &&
          this.weight   === other.weight &&
          this.underline === other.underline &&
          equals(this.color, other.color, aUnionFind) &&
          this.font === other.font);
};


//////////////////////////////////////////////////////////////////////
// StarImage: fixnum fixnum fixnum color -> image
// Most of this code here adapted from the Canvas tutorial at:
// http://developer.apple.com/safari/articles/makinggraphicswithcanvas.html
var StarImage = function(points, outer, inner, style, color) {
  BaseImage.call(this);
  this.points     = points;
  this.outer      = outer;
  this.inner      = inner;
  this.style      = style;
  this.color      = color;
  this.radius     = Math.max(this.inner, this.outer);
  this.width      = this.radius*2;
  this.height     = this.radius*2;
  var vertices   = [];
  
  var oneDegreeAsRadian = Math.PI / 180;
  for(var pt = 0; pt < (this.points * 2) + 1; pt++ ) {
    var rads = ( ( 360 / (2 * this.points) ) * pt ) * oneDegreeAsRadian - 0.5;
    var radius = ( pt % 2 === 1 ) ? this.outer : this.inner;
    vertices.push({x:this.radius + ( Math.sin( rads ) * radius ),
                  y:this.radius + ( Math.cos( rads ) * radius )} );
  }
  this.vertices = vertices;
};

StarImage.prototype = heir(BaseImage.prototype);

/////////////////////////////////////////////////////////////////////
//TriangleImage: Number Number Number Mode Color -> Image
// Draws a triangle with the base = sideC, and the angle between sideC
// and sideB being angleA
// See http://docs.racket-lang.org/teachpack/2htdpimage.html#(def._((lib._2htdp/image..rkt)._triangle))
var TriangleImage = function(sideC, angleA, sideB, style, color) {
  BaseImage.call(this);
  this.width = sideC;
  this.height = Math.sqrt(Math.pow(sideB,2) - Math.pow(0.5*sideC,2));
  
  var vertices = [];
  // if angle < 180 start at the top of the canvas, otherwise start at the bottom
  if(angleA < 180){
    vertices.push({x: 0, y: 0});
    vertices.push({x: sideC, y: 0});
    vertices.push({x: sideB*Math.cos(angleA*Math.PI/180),
                   y: this.height});
  } else {
    vertices.push({x: 0, y: this.height - 0});
    vertices.push({x: sideC, y: this.height - 0});
    vertices.push({x: Math.abs(sideB*Math.cos(angleA*Math.PI/180)),
                   y: 0});
  }
  this.vertices = vertices;
  
  this.style = style;
  this.color = color;
};
TriangleImage.prototype = heir(BaseImage.prototype);

//////////////////////////////////////////////////////////////////////
//Ellipse : Number Number Mode Color -> Image
var EllipseImage = function(width, height, style, color) {
  BaseImage.call(this);
  this.width = width;
  this.height = height;
  this.style = style;
  this.color = color;
};

EllipseImage.prototype = heir(BaseImage.prototype);

EllipseImage.prototype.render = function(ctx, aX, aY) {
  ctx.save();
  ctx.beginPath();
  
  // Most of this code is taken from:
  // http://webreflection.blogspot.com/2009/01/ellipse-and-circle-for-canvas-2d.html
  var hB = (this.width / 2) * 0.5522848,
  vB = (this.height / 2) * 0.5522848,
  eX = aX + this.width,
  eY = aY + this.height,
  mX = aX + this.width / 2,
  mY = aY + this.height / 2;
  ctx.moveTo(aX, mY);
  ctx.bezierCurveTo(aX, mY - vB, mX - hB, aY, mX, aY);
  ctx.bezierCurveTo(mX + hB, aY, eX, mY - vB, eX, mY);
  ctx.bezierCurveTo(eX, mY + vB, mX + hB, eY, mX, eY);
  ctx.bezierCurveTo(mX - hB, eY, aX, mY + vB, aX, mY);
  ctx.closePath();
  if (this.style.toString().toLowerCase() === "outline") {
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  }
  else {
    ctx.fillStyle = colorString(this.color);
    ctx.fill();
  }
  
  ctx.restore();
};

EllipseImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof EllipseImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width    === other.width &&
          this.height   === other.height &&
          this.style    === other.style &&
          equals(this.color, other.color, aUnionFind));
};


//////////////////////////////////////////////////////////////////////
// Line: Number Number Color Boolean -> Image
var LineImage = function(x, y, color) {
  BaseImage.call(this);
  var vertices;
  if (x >= 0) {
    if (y >= 0) { vertices = [{x:  0, y:  0}, {x: x, y: y}]; }
    else        { vertices = [{x:  0, y: -y}, {x: x, y: 0}]; }
  } else {
    if (y >= 0) { vertices = [{x: -x, y:  0}, {x: 0, y: y}]; }
    else        { vertices = [{x: -x, y: -y}, {x: 0, y: 0}]; }
  }
  // preserve the invariant that all vertex-based images have a style
  this.style  = "outline";
  this.color  = color;
  this.width  = Math.abs(x);
  this.height = Math.abs(y);
  this.vertices = vertices;
};

LineImage.prototype = heir(BaseImage.prototype);




var imageToColorList = function(img) {
    var width = img.getWidth(),
    height = img.getHeight(),
    canvas = makeCanvas(width, height),
    ctx = canvas.getContext("2d"),
    imageData,
    data,
    i,
    r, g, b, a;
    img.render(ctx, 0, 0);
    imageData = ctx.getImageData(0, 0, width, height);
    data = imageData.data;
    var colors = [];
    for (i = 0 ; i < data.length; i += 4) {
	r = data[i];
	g = data[i+1];
	b = data[i+2];
	a = data[i+3];
	colors.push(makeColor(r, g, b, a));
    }
    return plt.baselib.lists.arrayToList(colors);
}


var colorListToImage = function(listOfColors,
                                width,
                                height,
                                pinholeX,
                                pinholeY) {
    var canvas = makeCanvas(jsnums.toFixnum(width),
			    jsnums.toFixnum(height)),
    ctx = canvas.getContext("2d"),
    imageData = ctx.createImageData(jsnums.toFixnum(width),
				    jsnums.toFixnum(height)),
    data = imageData.data,
    aColor, i = 0;
    while (listOfColors !== plt.baselib.lists.EMPTY) {
	aColor = listOfColors.first;
	data[i] = jsnums.toFixnum(colorRed(aColor));
	data[i+1] = jsnums.toFixnum(colorGreen(aColor));
	data[i+2] = jsnums.toFixnum(colorBlue(aColor));
	data[i+3] = jsnums.toFixnum(colorAlpha(aColor));

	i += 4;
	listOfColors = listOfColors.rest;
    };

    return makeImageDataImage(imageData);
};













var makeSceneImage = function(width, height, color, children, withBorder) {
    return new SceneImage(width, height, color, children, withBorder);
};
var makeCircleImage = function(radius, style, color) {
    return new EllipseImage(2*radius, 2*radius, style, color);
};
var makeStarImage = function(points, outer, inner, style, color) {
    return new StarImage(points, outer, inner, style, color);
};
var makeRectangleImage = function(width, height, style, color) {
    return new RectangleImage(width, height, style, color);
};
var makeRhombusImage = function(side, angle, style, color) {
    return new RhombusImage(side, angle, style, color);
};
var makePosnImage = function(posns, style, color) {
  return new PosnImage(posns, style, color);
};
var makePolygonImage = function(length, count, step, style, color) {
    return new PolygonImage(length, count, step, style, color);
};
var makeSquareImage = function(length, style, color) {
    return new RectangleImage(length, length, style, color);
};
var makeTriangleImage = function(side, angle, side2, style, color) {
  return new TriangleImage(side, angle, side2, style, color);
};
var makeEllipseImage = function(width, height, style, color) {
    return new EllipseImage(width, height, style, color);
};
var makeLineImage = function(x, y, color, normalPinhole) {
    return new LineImage(x, y, color, normalPinhole);
};
var makeOverlayImage = function(img1, img2, X, Y) {
    return new OverlayImage(img1, img2, X, Y);
};
var makeRotateImage = function(angle, img) {
    return new RotateImage(angle, img);
};
var makeScaleImage = function(xFactor, yFactor, img) {
    return new ScaleImage(xFactor, yFactor, img);
};
var makeCropImage = function(x, y, width, height, img) {
    return new CropImage(x, y, width, height, img);
};
var makeFrameImage = function(img) {
    return new FrameImage(img);
};
var makeFlipImage = function(img, direction) {
    return new FlipImage(img, direction);
};
var makeTextImage = function(msg, size, color, face, family, style, weight, underline) {
    return new TextImage(msg, size, color, face, family, style, weight, underline);
};
var makeImageDataImage = function(imageData) {
    return new ImageDataImage(imageData);
};
var makeFileImage = function(path, rawImage) {
    return FileImage.makeInstance(path, rawImage);
};
var makeFileVideo = function(path, rawVideo) {
    return FileVideo.makeInstance(path, rawVideo);
};
var makeFileAudio = function(path, loop, rawAudio){
  return FileAudio.makeInstance(path, loop, rawAudio)
};


var isSceneImage = function(x) { return x instanceof SceneImage; };
var isCircleImage = function(x) { return x instanceof EllipseImage && 
                                  x.width === x.height; };
var isStarImage	= function(x) { return x instanceof StarImage; };
var isRectangleImage=function(x) { return x instanceof RectangleImage; };
var isPolygonImage = function(x) { return x instanceof PolygonImage; };
var isRhombusImage = function(x) { return x instanceof RhombusImage; };
var isSquareImage	= function(x) { return x instanceof SquareImage; };
var isTriangleImage= function(x) { return x instanceof TriangleImage; };
var isEllipseImage = function(x) { return x instanceof EllipseImage; };
var isLineImage	= function(x) { return x instanceof LineImage; };
var isOverlayImage = function(x) { return x instanceof OverlayImage; };
var isRotateImage	= function(x) { return x instanceof RotateImage; };
var isScaleImage	= function(x) { return x instanceof ScaleImage; };
var isCropImage	= function(x) { return x instanceof CropImage; };
var isFrameImage	= function(x) { return x instanceof FrameImage; };
var isFlipImage	= function(x) { return x instanceof FlipImage; };
var isTextImage	= function(x) { return x instanceof TextImage; };
var isFileImage	= function(x) { return x instanceof FileImage; };
var isFileVideo	= function(x) { return x instanceof FileVideo; };
var isFileAudio = function(x) { return x instanceof FileAudio; };



///////////////////////////////////////////////////////////////
// Exports

// These functions are available for direct access without the typechecks
// of the Racket-exposed functions.


EXPORTS.makeCanvas = makeCanvas;



EXPORTS.BaseImage = BaseImage;
EXPORTS.SceneImage = SceneImage;
EXPORTS.FileImage = FileImage;
EXPORTS.FileVideo = FileVideo;
EXPORTS.FileAudio = FileAudio
EXPORTS.OverlayImage = OverlayImage;
EXPORTS.RotateImage = RotateImage;
EXPORTS.ScaleImage = ScaleImage;
EXPORTS.CropImage = CropImage;
EXPORTS.FrameImage = FrameImage;
EXPORTS.FlipImage = FlipImage;
EXPORTS.RectangleImage = RectangleImage;
EXPORTS.RhombusImage = RhombusImage;
EXPORTS.ImageDataImage = ImageDataImage;
EXPORTS.PolygonImage = PolygonImage;
EXPORTS.TextImage = TextImage;
EXPORTS.StarImage = StarImage;
EXPORTS.TriangleImage = TriangleImage;
EXPORTS.EllipseImage = EllipseImage;
EXPORTS.LineImage = LineImage;
EXPORTS.StarImage = StarImage;



EXPORTS.colorDb = colorDb;

EXPORTS.makeSceneImage = makeSceneImage;
EXPORTS.makeCircleImage = makeCircleImage;
EXPORTS.makeStarImage = makeStarImage;
EXPORTS.makeRectangleImage = makeRectangleImage;
EXPORTS.makeRhombusImage = makeRhombusImage;
EXPORTS.makePolygonImage = makePolygonImage;
EXPORTS.makeSquareImage = makeSquareImage;
EXPORTS.makeTriangleImage = makeTriangleImage;
EXPORTS.makeEllipseImage = makeEllipseImage;
EXPORTS.makeLineImage = makeLineImage;
EXPORTS.makeOverlayImage = makeOverlayImage;
EXPORTS.makeRotateImage = makeRotateImage;
EXPORTS.makeScaleImage = makeScaleImage;
EXPORTS.makeCropImage = makeCropImage;
EXPORTS.makeFrameImage = makeFrameImage;
EXPORTS.makeFlipImage = makeFlipImage;
EXPORTS.makeTextImage = makeTextImage;
EXPORTS.makeImageDataImage = makeImageDataImage;
EXPORTS.makeFileImage = makeFileImage;
EXPORTS.makeFileVideo = makeFileVideo;
EXPORTS.makeFileAudio = makeFileAudio;
EXPORTS.imageToColorList = imageToColorList;
EXPORTS.colorListToImage = colorListToImage;


EXPORTS.isImage = isImage;
EXPORTS.isScene = isScene;
EXPORTS.isColorOrColorString = isColorOrColorString;
EXPORTS.isAngle = isAngle;
EXPORTS.isRotateAngle = isRotateAngle;
EXPORTS.isSideCount = isSideCount;
EXPORTS.isStepCount = isStepCount;
EXPORTS.isPointsCount = isPointsCount;


EXPORTS.isSceneImage = isSceneImage;
EXPORTS.isCircleImage = isCircleImage;
EXPORTS.isStarImage = isStarImage;
EXPORTS.isRectangleImage = isRectangleImage;
EXPORTS.isPolygonImage = isPolygonImage;
EXPORTS.isRhombusImage = isRhombusImage;
EXPORTS.isSquareImage = isSquareImage;
EXPORTS.isTriangleImage = isTriangleImage;
EXPORTS.isEllipseImage = isEllipseImage;
EXPORTS.isLineImage = isLineImage;
EXPORTS.isOverlayImage = isOverlayImage;
EXPORTS.isRotateImage = isRotateImage;
EXPORTS.isScaleImage = isScaleImage;
EXPORTS.isCropImage = isCropImage;
EXPORTS.isFrameImage = isFrameImage;
EXPORTS.isFlipImage = isFlipImage;
EXPORTS.isTextImage = isTextImage;
EXPORTS.isFileImage = isFileImage;
EXPORTS.isFileVideo = isFileVideo;
EXPORTS.isFileAudio = isFileAudio;


EXPORTS.makeColor = makeColor;
EXPORTS.isColor = isColor;
EXPORTS.colorRed = colorRed;
EXPORTS.colorGreen = colorGreen;
EXPORTS.colorBlue = colorBlue;
EXPORTS.colorAlpha = colorAlpha;


var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;
var makeClosure = plt.baselib.functions.makeClosure;
var finalizeClosureCall = plt.baselib.functions.finalizeClosureCall;
var PAUSE = plt.runtime.PAUSE;

var checkSymbolOrString = plt.baselib.check.checkSymbolOrString;

var isString = plt.baselib.strings.isString;
var isSymbol = plt.baselib.symbols.isSymbol;


var isFontFamily = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "default" ||
	     x.toString().toLowerCase() == "decorative" ||
	     x.toString().toLowerCase() == "roman" ||
	     x.toString().toLowerCase() == "script" ||
	     x.toString().toLowerCase() == "swiss" ||
	     x.toString().toLowerCase() == "modern" ||
	     x.toString().toLowerCase() == "symbol" ||
	     x.toString().toLowerCase() == "system"))
	|| (x === false);		// false is also acceptable
};
var isFontStyle = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "normal" ||
	     x.toString().toLowerCase() == "italic" ||
	     x.toString().toLowerCase() == "slant"))
	|| (x === false);		// false is also acceptable
};
var isFontWeight = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "normal" ||
	     x.toString().toLowerCase() == "bold" ||
	     x.toString().toLowerCase() == "light"))
	|| (x === false);		// false is also acceptable
};
var isMode = function(x) {
	return ((isString(x) || isSymbol(x)) &&
          (x.toString().toLowerCase() == "solid" ||
           x.toString().toLowerCase() == "outline")) ||
         ((jsnums.isReal(x)) &&
          (jsnums.greaterThanOrEqual(x, 0) &&
           jsnums.lessThanOrEqual(x, 255)));
};

var isPlaceX = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "left"  ||
	     x.toString().toLowerCase() == "right" ||
	     x.toString().toLowerCase() == "center" ||
	     x.toString().toLowerCase() == "middle"));
};

var isPlaceY = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "top"	  ||
	     x.toString().toLowerCase() == "bottom"   ||
	     x.toString().toLowerCase() == "baseline" ||
	     x.toString().toLowerCase() == "center"   ||
	     x.toString().toLowerCase() == "middle"));
};

var isStyle = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "solid" ||
	     x.toString().toLowerCase() == "outline"));
};



// Useful trigonometric functions based on htdp teachpack

// excess : compute the Euclidean excess
//  Note: If the excess is 0, then C is 90 deg.
//        If the excess is negative, then C is obtuse.
//        If the excess is positive, then C is acuse.
function excess(sideA, sideB, sideC) {
  return sideA*sideA + sideB*sideB - sideC*sideC;
}

// return c^2 = a^2 + b^2 - 2ab cos(C)
function cosRel(sideA, sideB, angleC) {
  return (sideA*sideA) + (sideB*sideB) - (2*sideA*sideB*Math.cos(angleC * Math.PI/180));
}

var less = function(lhs, rhs) {
  return (rhs - lhs) > 0.00001;
}

var checkString = plt.baselib.check.checkString;
var checkStringOrFalse = plt.baselib.check.makeCheckArgumentType(
    function(x) { return plt.baselib.strings.isString(x) || x === false; },
    "string or false");

var checkByte = plt.baselib.check.checkByte;
var checkReal = plt.baselib.check.checkReal;
var checkBoolean = plt.baselib.check.checkBoolean;

var checkNatural = plt.baselib.check.checkNatural;

var checkPositiveInteger = plt.baselib.check.makeCheckArgumentType(
    function(x) { return plt.baselib.numbers.isInteger(x) &&
		  plt.baselib.numbers.greaterThan(x, 0);},
    "positive integer");

var checkNonNegativeReal = plt.baselib.check.checkNonNegativeReal;


var _checkColor = plt.baselib.check.makeCheckArgumentType(
    isColorOrColorString,
    'color');

var checkColor = function(MACHINE, functionName, position) {
    var aColor = _checkColor(MACHINE, functionName, position);
    if (colorDb.get(aColor)) {
	aColor = colorDb.get(aColor);
    }
    return aColor;
};

var checkImage = plt.baselib.check.makeCheckArgumentType(
    isImage,
    'image');

var checkImageOrScene = plt.baselib.check.makeCheckArgumentType(
    function(x) { return isImage(x) || isScene(x); },
    'image or scene');

var checkFontFamily = plt.baselib.check.makeCheckArgumentType(
    isFontFamily,
    'font family');

var checkFontStyle = plt.baselib.check.makeCheckArgumentType(
    isFontStyle,
    'font style');

var checkFontWeight = plt.baselib.check.makeCheckArgumentType(
    isFontWeight,
    'font weight');

var checkPlaceX = plt.baselib.check.makeCheckArgumentType(
    isPlaceX,
    'x-place');

var checkPlaceY = plt.baselib.check.makeCheckArgumentType(
    isPlaceY,
    'y-place');


var checkAngle = plt.baselib.check.makeCheckArgumentType(
    isAngle,
    "finite real number between 0 and 360");
var checkRotateAngle = plt.baselib.check.makeCheckArgumentType(
    isRotateAngle,
    "finite real number between -360 and 360");


var checkMode = plt.baselib.check.makeCheckArgumentType(
    isMode,
    'solid or outline or [0-255]');


var checkSideCount = plt.baselib.check.makeCheckArgumentType(
    isSideCount,
    "positive integer greater than or equal to 3");


var checkStepCount = plt.baselib.check.makeCheckArgumentType(
    isStepCount,
    "positive integer greater than or equal to 1");


var checkPointsCount = plt.baselib.check.makeCheckArgumentType(
    isPointsCount,
    "positive integer greater than or equal to 2");


var checkListofColor = plt.baselib.check.makeCheckListofArgumentType(
    isColor,
    'color');



//////////////////////////////////////////////////////////////////////

EXPORTS['image=?'] =
    makePrimitiveProcedure(
        'image=?',
        2,
        function(MACHINE) {
          var img1 = checkImageOrScene(MACHINE,'image=?', 0);
          var img2 = checkImageOrScene(MACHINE,'image=?', 1);
         return img1.equals(img2);
        });


EXPORTS['image-color?'] =
    makePrimitiveProcedure(
        'image-color?',
        1,
        function(MACHINE) {
            var elt = MACHINE.e[MACHINE.e.length - 1];
            return (isColorOrColorString(elt));
        });



EXPORTS['mode?'] = 
    makePrimitiveProcedure(
        'mode?',
        1,
        function(MACHINE) {
            return isMode(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['x-place?'] = 
    makePrimitiveProcedure(
        'x-place?',
        1,
        function(MACHINE) {
            return isPlaceX(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['y-place?'] = 
    makePrimitiveProcedure(
        'y-place?',
        1,
        function(MACHINE) {
            return isPlaceY(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['angle?'] = 
    makePrimitiveProcedure(
        'angle?',
        1,
        function(MACHINE) {
            return isAngle(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['side-count?'] = 
    makePrimitiveProcedure(
        'side-count?',
        1,
        function(MACHINE) {
            return isSideCount(MACHINE.e[MACHINE.e.length - 1]);
        });


EXPORTS['step-count?'] = 
    makePrimitiveProcedure(
        'step-count?',
            1,
        function(MACHINE) {
            return isStepCount(MACHINE.e[MACHINE.e.length - 1]);
        });


EXPORTS['image?'] = 
    makePrimitiveProcedure(
        'image?',
            1,
        function(MACHINE) {
            return isImage(MACHINE.e[MACHINE.e.length - 1]);
        });



EXPORTS['text'] =
    makePrimitiveProcedure(
        'text',
        3,
        function(MACHINE) {
	    var aString = checkString(MACHINE,'text', 0);
	    // Unlike 2htdp, we'll allow this to be a positive integer
	    var aSize = checkPositiveInteger(MACHINE, 'text', 1); 
	    var aColor = checkColor(MACHINE, 'text', 2);
	    return makeTextImage(aString.toString(), 
                                 jsnums.toFixnum(aSize),
                                 aColor,
				 "normal",
                                 "Optimer",
                                 "",
                                 "",
                                 false);
        });


EXPORTS['text/font'] = 
    makePrimitiveProcedure(
        'text/font',
        8,
        function(MACHINE) {
            var aString = checkString(MACHINE, "text/font", 0);
	    var aSize = checkByte(MACHINE, "text/font", 1);
	    var aColor = checkColor(MACHINE, "text/font", 2);
	    var aFace = checkStringOrFalse(MACHINE, "text/font", 3);
	    var aFamily = checkFontFamily(MACHINE, "text/font", 4);
	    var aStyle = checkFontStyle(MACHINE, "text/font", 5);
	    var aWeight = checkFontWeight(MACHINE, "text/font", 6);
	    var aUnderline = checkBoolean(MACHINE, "text/font", 7);
	    return makeTextImage(aString.toString(),
                                 jsnums.toFixnum(aSize),
                                 aColor,
				 aFace.toString(),
                                 aFamily.toString(),
                                 aStyle.toString(),
				 aWeight.toString(),
                                 aUnderline);
        });


EXPORTS['bitmap/url'] = 
    makeClosure(
        'bitmap/url',
        1,
        function(MACHINE) {
            var url = checkString(MACHINE, 'bitmap/url', 0);
            PAUSE(
                function(restart) {
                    var rawImage = new Image();
                    rawImage.onload = function() {
                        restart(function(MACHINE) {
                            finalizeClosureCall(
                                MACHINE, 
                                makeFileImage(url.toString(),
                                              rawImage));
                        });
                    };
                    rawImage.onerror = function(e) {
                        restart(function(MACHINE) {
                            plt.baselib.exceptions.raiseFailure(
                                MACHINE, 
                                plt.baselib.format.format(
                                    "unable to load ~a: ~a",
                                    [url,
                                     e.message]));
                        });
                    }
                    rawImage.src = url.toString();
                }
            );
        });

EXPORTS['open-image-url'] = 
    plt.baselib.functions.renameProcedure(EXPORTS['bitmap/url'],
                                          'open-image-url');

EXPORTS['image-url'] = 
    plt.baselib.functions.renameProcedure(EXPORTS['bitmap/url'],
                                          'image-url');


EXPORTS['video/url'] =
    makeClosure(
        'video/url',
        1,
        function(MACHINE) {
            var path = checkString(MACHINE, 'video/url', 0);
            PAUSE(
                function(restart) {
                  var rawVideo = document.createElement('video');
                  rawVideo.src = path.toString();
                  rawVideo.addEventListener('canplay', function() {
                    restart(function(MACHINE) {
                            function pause(){ rawVideo.pause(); return true;};
                            finalizeClosureCall(
                              MACHINE,
                              makeFileVideo(path.toString(), rawVideo));
//                    aState.addBreakRequestedListener(pause);
                    });
                  });
                  rawVideo.addEventListener('error', function(e) {
                    restart(function(MACHINE) {
                        plt.baselib.exceptions.raiseFailure(
                            MACHINE, 
                            plt.baselib.format.format(
                                "unable to load ~a: ~a",
                                [url,
                                 e.message]));
                    });
                  });
                  rawVideo.src = path.toString();
                }
            );
        });

// We keep a cache of loaded sounds:
var audioCache = {};

EXPORTS['play-sound'] =
    makeClosure(
        'play-sound',
        1,
        function(MACHINE) {
            var path = checkString(MACHINE, 'play-sound', 0);
            var fileAudio = audioCache[path];
            if (fileAudio) {
                // the sound was already loaded
                finalizeClosureCall(
                    MACHINE,
                    fileAudio.play());
            }
            else {
               // this sound has never been played before
               PAUSE(
                   function(restart) {
                      fileAudio = makeFileAudio(path.toString());
                      audioCache[path] = fileAudio;
                      // let the audio file load before playing...
                      fileAudio.loading = true;
                      // (fileAudio.audio is the raw html5 Audio object)
                      fileAudio.audio.addEventListener('canplay', function() {
                          // ignore canplay events that follow the initial load
                          if(fileAudio.loading) {
                            restart(function(MACHINE) {
                              finalizeClosureCall(
                                  MACHINE,
                                  fileAudio.play());
                              });
                            fileAudio.loading = false; // we're done loading
                          }
                      })
                      fileAudio.audio.addEventListener('error', function(e) {
                          restart(function(MACHINE) {
                              plt.baselib.exceptions.raiseFailure(
                                  MACHINE,
                                  plt.baselib.format.format(
                                      "unable to load ~a: ~a",
                                      [path,
                                      e.message]));
                              });
                      });
                  });
            }
        });



EXPORTS['overlay'] = 
    makePrimitiveProcedure(
        'overlay',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay", 0);
	    var img2 = checkImage(MACHINE, "overlay", 1);
            var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
		restImages.push(checkImage(MACHINE, "overlay", i));
	    }
            
	    var img = makeOverlayImage(img1, img2, "middle", "middle");
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img, restImages[i], "middle", "middle");
	    }
	    return img;
        });



EXPORTS['overlay/xy'] = 
    makePrimitiveProcedure(
        'overlay/xy',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay/xy", 0);
	    var deltaX = checkReal(MACHINE, "overlay/xy", 1);
	    var deltaY = checkReal(MACHINE, "overlay/xy", 2);
	    var img2 = checkImage(MACHINE, "overlay/xy", 3);
	    return makeOverlayImage(img1.updatePinhole(0, 0),
				    img2.updatePinhole(0, 0),
				    jsnums.toFixnum(deltaX),
				    jsnums.toFixnum(deltaY));
        });

EXPORTS['overlay/offset'] = 
    makePrimitiveProcedure(
        'overlay/offset',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay/offset", 0);
	    var deltaX = checkReal(MACHINE, "overlay/offset", 1);
	    var deltaY = checkReal(MACHINE, "overlay/offset", 2);
	    var img2 = checkImage(MACHINE, "overlay/offset", 3);
            var middleX = (img1.getWidth() - img2.getWidth()) / 2;
            var middleY = (img1.getHeight() - img2.getHeight()) / 2;
	    return makeOverlayImage(img1,
				    img2,
				    jsnums.toFixnum(middleX) + deltaX,
				    jsnums.toFixnum(middleY) + deltaY);
        });


 EXPORTS['overlay/align'] = 
     makePrimitiveProcedure(
         'overlay/align',
         plt.baselib.arity.makeArityAtLeast(4),
         function(MACHINE) {
	     var placeX = checkPlaceX(MACHINE, "overlay/align", 0);
	     var placeY = checkPlaceY(MACHINE, "overlay/align", 1);
	     var img1 = checkImage(MACHINE, "overlay/align", 2);
	     var img2 = checkImage(MACHINE, "overlay/align", 3);
             var restImages = [];
	     for (var i = 4; i < MACHINE.a; i++) {
                 restImages.push(checkImage(MACHINE, "overlay/align", i));
             }
	     var img = makeOverlayImage(img1,
					img2,
					placeX.toString(),
					placeY.toString());
	     for (var i = 0; i < restImages.length; i++)
		 img = makeOverlayImage(img,
					restImages[i], 
					placeX.toString(), 
					placeY.toString());
	     return img;
         });





EXPORTS['underlay'] = 
    makePrimitiveProcedure(
        'underlay',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay", 0);
	    var img2 = checkImage(MACHINE, "underlay", 1);
	    var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
		restImages.push(checkImage(MACHINE, "underlay", i));
	    }

	    var img = makeOverlayImage(img2, img1, 0, 0);
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(restImages[i], img, 0, 0);
	    }
	    return img;
        });


EXPORTS['underlay/xy'] = 
    makePrimitiveProcedure(
        'underlay/xy',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay/xy", 0);
	    var deltaX = checkReal(MACHINE, "underlay/xy", 1);
	    var deltaY = checkReal(MACHINE, "underlay/xy", 2);
	    var img2 = checkImage(MACHINE, "underlay/xy", 3);
	    return makeOverlayImage(img2.updatePinhole(0, 0), 
				    img1.updatePinhole(0, 0),
				    -(jsnums.toFixnum(deltaX)),
				    -(jsnums.toFixnum(deltaY)));
        });

EXPORTS['underlay/offset'] = 
    makePrimitiveProcedure(
        'underlay/offset',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay/offset", 0);
	    var deltaX = checkReal(MACHINE, "underlay/offset", 1);
	    var deltaY = checkReal(MACHINE, "underlay/offset", 2);
	    var img2 = checkImage(MACHINE, "underlay/offset", 3);
            var middleX = (img1.getWidth() - img2.getWidth()) / 2;
            var middleY = (img1.getHeight() - img2.getHeight()) / 2;
	    return makeOverlayImage(img2,
				    img1,
				    -(jsnums.toFixnum(middleX) + deltaX),
				    -(jsnums.toFixnum(middleY) + deltaY));
        });

EXPORTS['underlay/align'] = 
    makePrimitiveProcedure(
        'underlay/align',
        plt.baselib.arity.makeArityAtLeast(4),
        function(MACHINE) {
	    var placeX = checkPlaceX(MACHINE, "underlay/align", 0);
	    var placeY = checkPlaceY(MACHINE, "underlay/align", 1);
	    var img1 = checkImage(MACHINE, "underlay/align", 2);
	    var img2 = checkImage(MACHINE, "underlay/align", 3);
            var restImages = [];
            for (var i = 4; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "underlay/align", i));
            }
	    
	    var img = makeOverlayImage(img2,
				       img1,
				       placeX.toString(),
				       placeY.toString());
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(restImages[i], 
				       img,
				       placeX.toString(), 
				       placeY.toString());
            }
	    return img;
        });



EXPORTS['beside'] = 
    makePrimitiveProcedure(
        'beside',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "beside", 0);
	    var img2 = checkImage(MACHINE, "beside", 1);
            var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "beside", i));
            }
	    
	    var img = makeOverlayImage(img1,
				       img2,
				       "beside",
				       "middle");
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img, restImages[i], "beside", "middle");
            }

            return img;
	});


EXPORTS['beside/align'] = 
    makePrimitiveProcedure(
        'beside/align',
        plt.baselib.arity.makeArityAtLeast(3),
        function(MACHINE) {
	    var placeY = checkPlaceY(MACHINE, "beside/align", 0);
	    var img1 = checkImage(MACHINE, "beside/align", 1);
	    var img2 = checkImage(MACHINE, "beside/align", 2);
            var restImages = [];
            for (var i = 3; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "beside/align", i));
            }

	    var img = makeOverlayImage(img1,
				       img2,
				       "beside",
				       placeY.toString());
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img,
				       restImages[i], 
				       "beside",
				       placeY.toString());
            }
	    
	    return img;

        });

EXPORTS['above'] = 
    makePrimitiveProcedure(
        'above',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "above", 0);
	    var img2 = checkImage(MACHINE, "above", 1);
	    var restImages = [];
            for (var i = 2; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "above", i));
            }
	    
	    var img = makeOverlayImage(img1,
				       img2,
				       "middle",
				       "above");
	    
	    for (var i = 0; i < restImages.length; i++)
		img = makeOverlayImage(img,
				       restImages[i], 
				       "middle",
				       "above");
            return img;
	    
        });

EXPORTS['above/align'] = 
    makePrimitiveProcedure(
        'above/align',
        plt.baselib.arity.makeArityAtLeast(3),
        function(MACHINE) {
	    var placeX = checkPlaceX(MACHINE, "above/align", 0);
	    var img1 = checkImage(MACHINE, "above/align", 1);
	    var img2 = checkImage(MACHINE, "above/align", 2);
            var restImages = [];
            for (var i = 3; i < MACHINE.a; i++) {
	        restImages.push(checkImage(MACHINE, "above/align", i));
            }

	    
	    var img = makeOverlayImage(img1,
				       img2,
				       placeX.toString(),
				       "above");
	    
	    for (var i = 0; i < restImages.length; i++)
		img = makeOverlayImage(img,
				       restImages[i], 
				       placeX.toString(),
				       "above");
	    
	    return img;
        });




EXPORTS['empty-scene'] =
    makePrimitiveProcedure(
        'empty-scene',
        plt.baselib.lists.makeList(2, 3),
	function(MACHINE) {
	    var width = checkNonNegativeReal(MACHINE, 'empty-scene', 0);
	    var height = checkNonNegativeReal(MACHINE, 'empty-scene', 1);
            var color = (MACHINE.a===3)? checkColor(MACHINE, 'empty-scene', 2) : null;

            return makeSceneImage(jsnums.toFixnum(width),
                                  jsnums.toFixnum(height),
                                  color,
                                  [],
                                  true);
	});

EXPORTS['put-image'] =
    makePrimitiveProcedure(
        'put-image',
        4,
        function(MACHINE) {
	    var picture = checkImage(MACHINE, "put-image", 0);
	    var x = checkReal(MACHINE, "put-image", 1);
	    var y = checkReal(MACHINE, "put-image", 2);
            var background = checkImageOrScene(MACHINE, "place-image", 3);
	    if (isScene(background)) {
		return background.add(picture, jsnums.toFixnum(x), background.getHeight() - jsnums.toFixnum(y));
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
          newScene = newScene.add(picture, jsnums.toFixnum(x), background.getHeight() - jsnums.toFixnum(y));
		return newScene;
	    }

        });


EXPORTS['place-image'] = 
    makePrimitiveProcedure(
        'place-image',
        4,
        function(MACHINE) {
	    var picture = checkImage(MACHINE, "place-image", 0);
	    var x = checkReal(MACHINE, "place-image", 1);
	    var y = checkReal(MACHINE, "place-image", 2);
            var background = checkImageOrScene(MACHINE, "place-image", 3);
	    if (isScene(background)) {
		return background.add(picture, jsnums.toFixnum(x), jsnums.toFixnum(y));
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
          newScene = newScene.add(picture, jsnums.toFixnum(x), jsnums.toFixnum(y));
		return newScene;
	    }

        });



EXPORTS['place-image/align'] = 
    makePrimitiveProcedure(
        'place-image/align',
        6,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "place-image/align", 0);
	    var x = jsnums.toFixnum(checkReal(MACHINE, "place-image/align", 1));
	    var y = jsnums.toFixnum(checkReal(MACHINE, "place-image/align", 2));
	    var placeX = checkPlaceX(MACHINE, "place-image/align", 3);
	    var placeY = checkPlaceY(MACHINE, "place-image/align", 4);
	    var background = checkImageOrScene(MACHINE, "place-image/align", 5);
	    
            var pinholeX = img.pinholeX || img.getWidth() / 2;
            var pinholeY = img.pinholeY || img.getHeight() / 2;

	    // calculate x and y based on placeX and placeY
	    if (placeX == "left") x = x + pinholeX;
	    else if (placeX == "right") x = x - pinholeX;
	    if (placeY == "top") y = y + pinholeY;
	    else if (placeY == "bottom") y = y - pinholeY;

	    if (isScene(background)) {
		return background.add(img, x, y);
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
                newScene = newScene.add(img, x, y);
		return newScene;
            }
        });

//////////////////////////////////////////////////////////////////////
// rotate: angle image -> image
// Rotates image by angle degrees in a counter-clockwise direction.
EXPORTS['rotate'] = 
    makePrimitiveProcedure(
        'rotate',
        2,
        function(MACHINE) {
	    var angle = checkRotateAngle(MACHINE, "rotate", 0);
	    var angle360 = angle % 360;
	    var img = checkImage(MACHINE, "rotate", 1);
	    // convert to clockwise rotation for makeRotateImage
	    if (angle360 < 0) {
		return makeRotateImage(jsnums.toFixnum(-(360 + angle360)), img);
	    } else {
		return makeRotateImage(jsnums.toFixnum(-angle360), img);
	    }
        });


EXPORTS['scale'] = 
    makePrimitiveProcedure(
        'scale',
        2,
        function(MACHINE) {
	    var factor = checkReal(MACHINE, "scale", 0);
	    var img = checkImage(MACHINE, "image", 1);
	    
	    return makeScaleImage(jsnums.toFixnum(factor),
				  jsnums.toFixnum(factor),
				  img);
        });


EXPORTS['scale/xy'] = 
    makePrimitiveProcedure(
        'scale/xy',
        3,
        function(MACHINE) {
	    var xFactor = checkReal(MACHINE, "scale/xy", 0);
	    var yFactor = checkReal(MACHINE, "scale/xy", 1);
	    var img = checkImage(MACHINE, "scale/xy", 2);
	    return makeScaleImage(jsnums.toFixnum(xFactor), 
				  jsnums.toFixnum(yFactor),
				  img);
	    
        });


EXPORTS['flip-horizontal'] = 
    makePrimitiveProcedure(
        'flip-horizontal',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "flip-horizontal", 0);
	    return makeFlipImage(img, "horizontal");
        });


EXPORTS['flip-vertical'] = 
    makePrimitiveProcedure(
        'flip-vertical',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "flip-vertical", 0);
	    return makeFlipImage(img, "vertical");
        });


EXPORTS['frame'] = 
    makePrimitiveProcedure(
        'frame',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "frame", 0);
	    return makeFrameImage(img);            
        });


EXPORTS['crop'] = 
    makePrimitiveProcedure(
        'crop',
        5,
        function(MACHINE) {
            var x = checkReal(MACHINE, "crop", 0);
	    var y = checkReal(MACHINE, "crop", 1);
	    var width = checkNonNegativeReal(MACHINE, "crop", 2);
	    var height = checkNonNegativeReal(MACHINE, "crop", 3);
	    var img = checkImage(MACHINE, "crop", 4);
	    return makeCropImage(jsnums.toFixnum(x),
				 jsnums.toFixnum(y),
				 jsnums.toFixnum(width),
				 jsnums.toFixnum(height),
				 img);
        });



EXPORTS['line'] = 
    makePrimitiveProcedure(
        'line',
        3,
        function(MACHINE) {
	    var x = checkReal(MACHINE, 'line', 0);
	    var y = checkReal(MACHINE, 'line', 1);
	    var c = checkColor(MACHINE, 'line', 2);
	    return makeLineImage(jsnums.toFixnum(x),
				 jsnums.toFixnum(y),
				 c,
				 true);
        });




EXPORTS['add-line'] = 
    makePrimitiveProcedure(
        'add-line',
        6,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "add-line", 0);
	    var x1 = checkReal(MACHINE, "add-line", 1);
	    var y1 = checkReal(MACHINE, "add-line", 2);
	    var x2 = checkReal(MACHINE, "add-line", 3);
	    var y2 = checkReal(MACHINE, "add-line", 4);
	    var c = checkColor(MACHINE, "add-line", 5);
	    var line = makeLineImage(jsnums.toFixnum(x2-x1),
				     jsnums.toFixnum(y2-y1),
				     c,
				     true);
	    return makeOverlayImage(line, img, x1, y1);
        });



EXPORTS['scene+line'] = 
    makePrimitiveProcedure(
        'scene+line',
        6,
        function(MACHINE) {
            var img = checkImage(MACHINE, "scene+line", 0);
	    var x1 = checkReal(MACHINE, "scene+line", 1);
	    var y1 = checkReal(MACHINE, "scene+line", 2);
	    var x2 = checkReal(MACHINE, "scene+line", 3);
	    var y2 = checkReal(MACHINE,	"scene+line", 4);
	    var c = checkColor(MACHINE, "scene+line", 5);
	    // make a scene containing the image
            var newScene = makeSceneImage(jsnums.toFixnum(img.getWidth()), 
                                          jsnums.toFixnum(img.getHeight()),
                                          null,
                                          [],
                                          false);
	    newScene = newScene.add(img, img.getWidth()/2, img.getHeight()/2);
	    // make an image containing the line
	    var line = makeLineImage(jsnums.toFixnum(x2-x1),
                               jsnums.toFixnum(y2-y1),
                               c,
                               false),
          leftMost = Math.min(x1,x2),
          topMost = Math.min(y1,y2);
	    // add the line to scene, offset by the original amount
	    return newScene.add(line, line.getWidth()/2+leftMost, line.getHeight()/2+topMost);
        });


EXPORTS['circle'] = 
    makePrimitiveProcedure(
        'circle',
        3,
        function(MACHINE) {
            var aRadius = checkNonNegativeReal(MACHINE, "circle", 0);
	    var aMode = checkMode(MACHINE, "circle", 1);
	    var aColor = checkColor(MACHINE, "circle", 2);
	    return makeCircleImage(jsnums.toFixnum(aRadius), aMode.toString(), aColor);
        });


EXPORTS['square'] = 
    makePrimitiveProcedure(
        'square',
        3,
        function(MACHINE) {
	    var l = checkNonNegativeReal(MACHINE, "square", 0);
	    var s = checkMode(MACHINE, "square", 1);
	    var c = checkColor(MACHINE, "square", 2);
	    return makeSquareImage(jsnums.toFixnum(l), s.toString(), c);
        });


EXPORTS['rectangle'] = 
    makePrimitiveProcedure(
        'rectangle',
        4,
        function(MACHINE) {
	    var w = checkNonNegativeReal(MACHINE, "rectangle", 0);
	    var h = checkNonNegativeReal(MACHINE, "rectangle", 1);
	    var s = checkMode(MACHINE, "rectangle", 2);
	    var c = checkColor(MACHINE, "rectangle", 3);
	    return makeRectangleImage(jsnums.toFixnum(w),
				      jsnums.toFixnum(h),
				      s.toString(), 
                                      c);
        });
/*

 need to port over checks for isListofPosns and isListOfLength
 
EXPORTS['polygon'] =
    makePrimitiveProcedure(
        'polygon',
        3,
        function(MACHINE) {
      function isPosnList(lst){ return isListOf(lst, types.isPosn); }
	    var points = checkListOfLength(MACHINE, "polygon", 0);
	    var points = checkListOfPosns(MACHINE, "polygon", 0);
	    var s = checkMode(MACHINE, "polygon", 2);
      var c = checkColor(MACHINE, "polygon", 3);
	    return makePosnImage(points,
				    s.toString(),
				    c);            
        });

*/
EXPORTS['regular-polygon'] =
    makePrimitiveProcedure(
        'regular-polygon',
        4,
        function(MACHINE) {
	    var length = checkNonNegativeReal(MACHINE, "regular-polygon", 0);
	    var count = checkSideCount(MACHINE, "regular-polygon", 1);
	    var s = checkMode(MACHINE, "regular-polygon", 2);
	    var c = checkColor(MACHINE, "regular-polygon", 3);
	    return makePolygonImage(jsnums.toFixnum(length), 
				    jsnums.toFixnum(count), 
				    jsnums.toFixnum(1), 
				    s.toString(), 
				    c);            
        });


EXPORTS['ellipse'] = 
    makePrimitiveProcedure(
        'ellipse',
        4,
        function(MACHINE) {
            var w = checkNonNegativeReal(MACHINE, "ellipse", 0);
	    var h = checkNonNegativeReal(MACHINE, "ellipse", 1);
	    var s = checkMode(MACHINE, "ellipse", 2);
	    var c = checkColor(MACHINE, MACHINE, 3);
	    return makeEllipseImage(jsnums.toFixnum(w),
				    jsnums.toFixnum(h),
				    s.toString(),
				    c);
        });



EXPORTS['triangle'] = 
    makePrimitiveProcedure(
        'triangle',
        3,
        function(MACHINE) {
	    var s = checkNonNegativeReal(MACHINE, "triangle", 0);
	    var m = checkMode(MACHINE, "triangle", 1);
	    var c = checkColor(MACHINE, "triangle", 2);
	    return makeTriangleImage(jsnums.toFixnum(s),
                                        jsnums.toFixnum(360-60),
                                        jsnums.toFixnum(s),
                                        m.toString(),
                                        c);
        });


EXPORTS['triangle/sas'] =
    makePrimitiveProcedure(
        'triangle/sas',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/sas", 0);
	    var angleB = checkAngle(MACHINE, "triangle/sas", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/sas", 2);
	    var style = checkMode(MACHINE, "triangle/sas", 3);
	    var color = checkColor(MACHINE, "triangle/sas", 4);
       // cast to fixnums
       sideA = jsnums.toFixnum(sideA); angleB = jsnums.toFixnum(angleB); sideC = jsnums.toFixnum(sideC);
       var sideB2 = cosRel(sideA, sideC, angleB);
       var sideB  = Math.sqrt(sideB2);
              
       if (sideB2 <= 0) {
         raise( types.incompleteExn(types.exnFailContract, "The given side, angle and side will not form a triangle: "
                                    + sideA + ", " + angleB + ", " + sideC, []) );
       } else {
        if (less(sideA + sideC, sideB) ||
            less(sideB + sideC, sideA) ||
            less(sideA + sideB, sideC)) {
         raise( types.incompleteExn(types.exnFailContract, "The given side, angle and side will not form a triangle: "
                                    + sideA + ", " + angleB + ", " + sideC, []) );
        }
       }

       var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);

	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                         jsnums.toFixnum(angleA),
                                         jsnums.toFixnum(sideB),
                                         style.toString(),
                                         color);
        });

EXPORTS['triangle/sss'] =
    makePrimitiveProcedure(
        'triangle/sss',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/sss", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/sss", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/sss", 2);
	    var style = checkMode(MACHINE, "triangle/sss", 3);
	    var color = checkColor(MACHINE, "triangle/sss", 4);
      // cast to fixnums
      sideA = jsnums.toFixnum(sideA); sideB = jsnums.toFixnum(sideB); sideC = jsnums.toFixnum(sideC);
      if (less(sideA + sideB, sideC) ||
            less(sideC + sideB, sideA) ||
            less(sideA + sideC, sideB)) {
        raise( types.incompleteExn(types.exnFailContract, "The given sides will not form a triangle: "
                                    + sideA+", "+sideB+", "+sideC, []) );
      }

      var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                         jsnums.toFixnum(angleA),
                                         jsnums.toFixnum(sideB),
                                         style.toString(),
                                         color);
        });

EXPORTS['triangle/ass'] =
    makePrimitiveProcedure(
        'triangle/ass',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/ass", 0);
	    var sideB = checkNonNegativeReal(MACHINE, "triangle/ass", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/ass", 2);
	    var style = checkMode(MACHINE, "triangle/ass", 3);
	    var color = checkColor(MACHINE, "triangle/ass", 4);
       // cast to fixnums
       angleA = jsnums.toFixnum(angleA); sideB = jsnums.toFixnum(sideB); sideC = jsnums.toFixnum(sideC);
       if (colorDb.get(color)) { color = colorDb.get(color); }
       if (less(180, angleA)) {
         raise( types.incompleteExn(types.exnFailContract, "The given angle, side and side will not form a triangle: "
                                    + angleA + ", " + sideB + ", " + sideC, []) );
       }
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                        jsnums.toFixnum(angleA),
                                        jsnums.toFixnum(sideB),
                                        style.toString(),
                                        color);
        });

EXPORTS['triangle/ssa'] =
    makePrimitiveProcedure(
        'triangle/ssa',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/ssa", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/ssa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/ssa", 2);
	    var style = checkMode(MACHINE, "triangle/ssa", 3);
	    var color = checkColor(MACHINE, "triangle/ssa", 4);
         // cast to fixnums
         sideA = jsnums.toFixnum(sideA); sideB = jsnums.toFixnum(sideB); angleC = jsnums.toFixnum(angleC);
         if (less(180, angleC)) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
         }
         var sideC2 = cosRel(sideA, sideB, angleC);
         var sideC  = Math.sqrt(sideC2);
        
         if (sideC2 <= 0) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
         } else {
           if (less(sideA + sideB, sideC) ||
               less(sideC + sideB, sideA) ||
               less(sideA + sideC, sideB)) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
           }
         }

         var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                          jsnums.toFixnum(angleA),
                                          jsnums.toFixnum(sideB),
                                          style.toString(),
                                          color);
        });

EXPORTS['triangle/aas'] =
    makePrimitiveProcedure(
        'triangle/aas',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/aas", 0);
	    var angleB = checkAngle(MACHINE, "triangle/aas", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/aas", 2);
	    var style = checkMode(MACHINE, "triangle/aas", 3);
	    var color = checkColor(MACHINE, "triangle/aas", 4);
      // cast to fixnums
      var angleA = jsnums.toFixnum(angleA); angleB = jsnums.toFixnum(angleB); sideC = jsnums.toFixnum(sideC);
      var angleC = (180 - angleA - angleB);
      if (less(angleC, 0)) {
         raise( types.incompleteExn(types.exnFailContract, "The given angle, angle and side will not form a triangle: "
                                    + angleA + ", " + angleB + ", " + sideC, []) );
      }
      var hypotenuse = sideC / (Math.sin(angleC*Math.PI/180))
      var sideB = hypotenuse * Math.sin(angleB*Math.PI/180);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                          jsnums.toFixnum(angleA),
                                          jsnums.toFixnum(sideB),
                                          style.toString(),
                                          color);
        });


EXPORTS['triangle/asa'] =
    makePrimitiveProcedure(
        'triangle/asa',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/asa", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/asa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/asa", 2);
	    var style = checkMode(MACHINE, "triangle/asa", 3);
	    var color = checkColor(MACHINE, "triangle/asa", 4);
      // cast to fixnums
      var angleA = jsnums.toFixnum(angleA); sideB = jsnums.toFixnum(sideB); angleC = jsnums.toFixnum(angleC);
      var angleB = (180 - angleA - angleC);
      if (less(angleB, 0)) {
        raise( types.incompleteExn(types.exnFailContract, "The given angle, side and angle will not form a triangle: "
                                   + angleA + ", " + sideB + ", " + angleC, []) );
      }
      var base = (sideB * Math.sin(angleA*Math.PI/180)) / (Math.sin(angleB*Math.PI/180));
      var sideC = (sideB * Math.sin(angleC*Math.PI/180)) / (Math.sin(angleB*Math.PI/180));
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                             jsnums.toFixnum(angleA),
                                             jsnums.toFixnum(sideB),
                                             style.toString(),
                                             color);
        });

EXPORTS['triangle/saa'] =
    makePrimitiveProcedure(
        'triangle/saa',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/saa", 0);
      var angleB = checkAngle(MACHINE, "triangle/saa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/saa", 2);
	    var style = checkMode(MACHINE, "triangle/saa", 3);
	    var color = checkColor(MACHINE, "triangle/saa", 4);
       // cast to fixnums
       var sideA = jsnums.toFixnum(sideA); angleB = jsnums.toFixnum(angleB); angleC = jsnums.toFixnum(angleC);
       var angleA = (180 - angleC - angleB);
       var hypotenuse = sideA / (Math.sin(angleA*Math.PI/180));
       var sideC = hypotenuse * Math.sin(angleC*Math.PI/180);
       var sideB = hypotenuse * Math.sin(angleB*Math.PI/180);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                               jsnums.toFixnum(angleA),
                                               jsnums.toFixnum(sideB),
                                               style.toString(),
                                               color);
        });



EXPORTS['right-triangle'] =
    makePrimitiveProcedure(
        'right-triangle',
        4,
        function(MACHINE) {
	    var side1 = checkNonNegativeReal(MACHINE, "right-triangle", 0);
	    var side2 = checkNonNegativeReal(MACHINE, "right-triangle", 1);
	    var s = checkMode(MACHINE, "right-triangle", 2);
	    var c = checkColor(MACHINE, "right-triangle", 3);
	    return makeTriangleImage(jsnums.toFixnum(side1),
                               jsnums.toFixnum(360-90),
                               jsnums.toFixnum(side2),
                               s.toString(),
                               c);
        });


EXPORTS['isosceles-triangle'] = 
    makePrimitiveProcedure(
        'isosceles-triangle',
        4,
        function(MACHINE) {
	    var side = checkNonNegativeReal(MACHINE, "isosceles-triangle", 0);
	    var angleC = checkAngle(MACHINE, "isosceles-triangle", 1);
	    var s = checkMode(MACHINE, "isosceles-triangle", 2);
	    var c = checkColor(MACHINE, "isosceles-triangle", 3);
      // cast to fixnums
      side = jsnums.toFixnum(side); angleC = jsnums.toFixnum(angleC);
      var angleAB = (180-angleC)/2;
      var base = 2*side*Math.sin((angleC*Math.PI/180)/2);
	    return makeTriangleImage(jsnums.toFixnum(base),
                                         jsnums.toFixnum(360-angleAB),// add 180 to make the triangle point up
                                         jsnums.toFixnum(side),
                                         s.toString(),
                                         c);
        });


EXPORTS['star'] = 
    makePrimitiveProcedure(
        'star',
        plt.baselib.lists.makeList(3, 5),
        function(MACHINE) {
            if (MACHINE.a === 3) {
                var sideLength = checkNonNegativeReal(MACHINE, "star", 0);
		var mode = checkMode(MACHINE, "star", 1);
		var color = checkColor(MACHINE, "star", 2);
		return makePolygonImage(jsnums.toFixnum(sideLength), 
					jsnums.toFixnum(5), 
					jsnums.toFixnum(2), 
					mode.toString(), 
					color);
            } else if (MACHINE.a === 5) {
		var n = checkSideCount(MACHINE, "star", 0);
		var outer = checkNonNegativeReal(MACHINE, "star", 1);
		var inner = checkNonNegativeReal(MACHINE, "star", 2);
		var m = checkMode(MACHINE, "star", 3);
		var c = checkColor(MACHINE, "star", 4);
		return makeStarImage(jsnums.toFixnum(n),
				     jsnums.toFixnum(outer),
				     jsnums.toFixnum(inner),
				     m.toString(),
				     c);
            }
        });

EXPORTS['radial-star'] = 
    makePrimitiveProcedure(
        'radial-star',
        5,
        function(MACHINE) {
            var aPoints = checkPointsCount(MACHINE, 'radial-star', 0);
	    var anOuter = checkNonNegativeReal(MACHINE, 'radial-star', 1);
	    var anInner = checkNonNegativeReal(MACHINE, 'radial-star', 2);
	    var aStyle = checkMode(MACHINE, "radial-star", 3);
	    var aColor = checkColor(MACHINE, "radial-star", 4);
	    return makeStarImage(jsnums.toFixnum(aPoints),
				 jsnums.toFixnum(anOuter),
				 jsnums.toFixnum(anInner),
				 aStyle.toString(),
				 aColor);
        });



EXPORTS['star-polygon'] = 
    makePrimitiveProcedure(
        'star-polygon',
        5,
        function(MACHINE) {
            var length = checkNonNegativeReal(MACHINE, "star-polygon", 0);
	    var count = checkNonNegativeReal(MACHINE, "star-polygon", 1);
	    var step = checkStepCount(MACHINE, "star-polygon", 2);
	    var s = checkMode(MACHINE, "star-polygon", 3);
	    var c = checkColor(MACHINE, "star-polygon", 4);
	    return makePolygonImage(jsnums.toFixnum(length), 
				    jsnums.toFixnum(count), 
				    jsnums.toFixnum(step), 
				    s.toString(), 
				    c);
        });


EXPORTS['rhombus'] = 
    makePrimitiveProcedure(
        'rhombus',
        4,
        function(MACHINE) {
            var l = checkNonNegativeReal(MACHINE, "rhombus", 0);
	    var a = checkNonNegativeReal(MACHINE, "rhombus", 1);
	    var s = checkMode(MACHINE, "rhombus", 2);
	    var c = checkColor(MACHINE, "rhombus", 3);
	    return makeRhombusImage(jsnums.toFixnum(l),
                                    jsnums.toFixnum(a),
                                    s.toString(),
                                    c);
	    
        });


EXPORTS['image->color-list'] = 
    makePrimitiveProcedure(
        'image->color-list',
        1,
        function(MACHINE) {
            var img = checkImage(MACHINE, 'image->color-list', 0);
            return imageToColorList(img);
        });



EXPORTS['color-list->image'] = 
    makePrimitiveProcedure(
        'color-list->image',
        5,
        function(MACHINE) {
            var listOfColors = checkListofColor(MACHINE, 'color-list->image', 0);
	    var width = checkNatural(MACHINE, 'color-list->image', 1);
	    var height = checkNatural(MACHINE, 'color-list->image', 2);
	    var pinholeX = checkNatural(MACHINE, 'color-list->image', 3);
	    var pinholeY = checkNatural(MACHINE, 'color-list->image', 4);

            return colorListToImage(listOfColors,
                                    width,
                                    height,
                                    pinholeX,
                                    pinholeY);
        });

EXPORTS['color-list->bitmap'] = 
    makePrimitiveProcedure(
        'color-list->image',
        3,
        function(MACHINE) {
            var listOfColors = checkListofColor(MACHINE, 'color-list->image', 0);
	    var width = checkNatural(MACHINE, 'color-list->image', 1);
	    var height = checkNatural(MACHINE, 'color-list->image', 2);
            return colorListToImage(listOfColors,
                                    width,
                                    height,
                                    0,
                                    0);
        });


EXPORTS['image-width'] = 
    makePrimitiveProcedure(
        'image-width',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-width', 0);
	    return img.getWidth();
        });

EXPORTS['image-height'] = 
    makePrimitiveProcedure(
        'image-height',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-height', 0);
	    return img.getHeight();
        });

EXPORTS['image-baseline'] = 
    makePrimitiveProcedure(
        'image-baseline',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-baseline', 0);
	    return img.getBaseline();
        });


EXPORTS['name->color'] = 
    makePrimitiveProcedure(
        'name->color',
        1,
        function(MACHINE) {
            var name = checkSymbolOrString(MACHINE, 'name->color', 0);
            var result = colorDb.get('' + name) || false;
            return result;
        });
})(M, exports);
             ns.set("above18.35",exports["above"]);
extNs.set("above",exports["above"]);
modrec.prefix[0]=exports["above"];
ns.set("above/align19.37",exports["above/align"]);
extNs.set("above/align",exports["above/align"]);
modrec.prefix[1]=exports["above/align"];
ns.set("add-line32.63",exports["add-line"]);
extNs.set("add-line",exports["add-line"]);
modrec.prefix[2]=exports["add-line"];
ns.set("angle?64.127",exports["angle?"]);
extNs.set("angle?",exports["angle?"]);
modrec.prefix[3]=exports["angle?"];
ns.set("beside16.31",exports["beside"]);
extNs.set("beside",exports["beside"]);
modrec.prefix[4]=exports["beside"];
ns.set("beside/align17.33",exports["beside/align"]);
extNs.set("beside/align",exports["beside/align"]);
modrec.prefix[5]=exports["beside/align"];
ns.set("bitmap/url3.5",exports["bitmap/url"]);
extNs.set("bitmap/url",exports["bitmap/url"]);
modrec.prefix[6]=exports["bitmap/url"];
ns.set("circle34.67",exports["circle"]);
extNs.set("circle",exports["circle"]);
modrec.prefix[7]=exports["circle"];
ns.set("color-list->bitmap56.111",exports["color-list->bitmap"]);
extNs.set("color-list->bitmap",exports["color-list->bitmap"]);
modrec.prefix[8]=exports["color-list->bitmap"];
ns.set("color-list->image55.109",exports["color-list->image"]);
extNs.set("color-list->image",exports["color-list->image"]);
modrec.prefix[9]=exports["color-list->image"];
ns.set("crop30.59",exports["crop"]);
extNs.set("crop",exports["crop"]);
modrec.prefix[10]=exports["crop"];
ns.set("ellipse39.77",exports["ellipse"]);
extNs.set("ellipse",exports["ellipse"]);
modrec.prefix[11]=exports["ellipse"];
ns.set("empty-scene20.39",exports["empty-scene"]);
extNs.set("empty-scene",exports["empty-scene"]);
modrec.prefix[12]=exports["empty-scene"];
ns.set("flip-horizontal27.53",exports["flip-horizontal"]);
extNs.set("flip-horizontal",exports["flip-horizontal"]);
modrec.prefix[13]=exports["flip-horizontal"];
ns.set("flip-vertical28.55",exports["flip-vertical"]);
extNs.set("flip-vertical",exports["flip-vertical"]);
modrec.prefix[14]=exports["flip-vertical"];
ns.set("frame29.57",exports["frame"]);
extNs.set("frame",exports["frame"]);
modrec.prefix[15]=exports["frame"];
ns.set("image->color-list54.107",exports["image->color-list"]);
extNs.set("image->color-list",exports["image->color-list"]);
modrec.prefix[16]=exports["image->color-list"];
ns.set("image-baseline59.117",exports["image-baseline"]);
extNs.set("image-baseline",exports["image-baseline"]);
modrec.prefix[17]=exports["image-baseline"];
ns.set("image-color?60.119",exports["image-color?"]);
extNs.set("image-color?",exports["image-color?"]);
modrec.prefix[18]=exports["image-color?"];
ns.set("image-height58.115",exports["image-height"]);
extNs.set("image-height",exports["image-height"]);
modrec.prefix[19]=exports["image-height"];
ns.set("image-url4.7",exports["image-url"]);
extNs.set("image-url",exports["image-url"]);
modrec.prefix[20]=exports["image-url"];
ns.set("image-width57.113",exports["image-width"]);
extNs.set("image-width",exports["image-width"]);
modrec.prefix[21]=exports["image-width"];
ns.set("image=?68.135",exports["image=?"]);
extNs.set("image=?",exports["image=?"]);
modrec.prefix[22]=exports["image=?"];
ns.set("image?67.133",exports["image?"]);
extNs.set("image?",exports["image?"]);
modrec.prefix[23]=exports["image?"];
ns.set("isosceles-triangle49.97",exports["isosceles-triangle"]);
extNs.set("isosceles-triangle",exports["isosceles-triangle"]);
modrec.prefix[24]=exports["isosceles-triangle"];
ns.set("line31.61",exports["line"]);
extNs.set("line",exports["line"]);
modrec.prefix[25]=exports["line"];
ns.set("mode?61.121",exports["mode?"]);
extNs.set("mode?",exports["mode?"]);
modrec.prefix[26]=exports["mode?"];
ns.set("name->color69.137",exports["name->color"]);
extNs.set("name->color",exports["name->color"]);
modrec.prefix[27]=exports["name->color"];
ns.set("open-image-url5.9",exports["open-image-url"]);
extNs.set("open-image-url",exports["open-image-url"]);
modrec.prefix[28]=exports["open-image-url"];
ns.set("overlay8.15",exports["overlay"]);
extNs.set("overlay",exports["overlay"]);
modrec.prefix[29]=exports["overlay"];
ns.set("overlay/align11.21",exports["overlay/align"]);
extNs.set("overlay/align",exports["overlay/align"]);
modrec.prefix[30]=exports["overlay/align"];
ns.set("overlay/offset9.17",exports["overlay/offset"]);
extNs.set("overlay/offset",exports["overlay/offset"]);
modrec.prefix[31]=exports["overlay/offset"];
ns.set("overlay/xy10.19",exports["overlay/xy"]);
extNs.set("overlay/xy",exports["overlay/xy"]);
modrec.prefix[32]=exports["overlay/xy"];
ns.set("place-image22.43",exports["place-image"]);
extNs.set("place-image",exports["place-image"]);
modrec.prefix[33]=exports["place-image"];
ns.set("place-image/align23.45",exports["place-image/align"]);
extNs.set("place-image/align",exports["place-image/align"]);
modrec.prefix[34]=exports["place-image/align"];
ns.set("play-sound7.13",exports["play-sound"]);
extNs.set("play-sound",exports["play-sound"]);
modrec.prefix[35]=exports["play-sound"];
ns.set("polygon37.73",exports["polygon"]);
extNs.set("polygon",exports["polygon"]);
modrec.prefix[36]=exports["polygon"];
ns.set("put-image21.41",exports["put-image"]);
extNs.set("put-image",exports["put-image"]);
modrec.prefix[37]=exports["put-image"];
ns.set("radial-star51.101",exports["radial-star"]);
extNs.set("radial-star",exports["radial-star"]);
modrec.prefix[38]=exports["radial-star"];
ns.set("rectangle36.71",exports["rectangle"]);
extNs.set("rectangle",exports["rectangle"]);
modrec.prefix[39]=exports["rectangle"];
ns.set("regular-polygon38.75",exports["regular-polygon"]);
extNs.set("regular-polygon",exports["regular-polygon"]);
modrec.prefix[40]=exports["regular-polygon"];
ns.set("rhombus53.105",exports["rhombus"]);
extNs.set("rhombus",exports["rhombus"]);
modrec.prefix[41]=exports["rhombus"];
ns.set("right-triangle48.95",exports["right-triangle"]);
extNs.set("right-triangle",exports["right-triangle"]);
modrec.prefix[42]=exports["right-triangle"];
ns.set("rotate24.47",exports["rotate"]);
extNs.set("rotate",exports["rotate"]);
modrec.prefix[43]=exports["rotate"];
ns.set("scale25.49",exports["scale"]);
extNs.set("scale",exports["scale"]);
modrec.prefix[44]=exports["scale"];
ns.set("scale/xy26.51",exports["scale/xy"]);
extNs.set("scale/xy",exports["scale/xy"]);
modrec.prefix[45]=exports["scale/xy"];
ns.set("scene+line33.65",exports["scene+line"]);
extNs.set("scene+line",exports["scene+line"]);
modrec.prefix[46]=exports["scene+line"];
ns.set("side-count?65.129",exports["side-count?"]);
extNs.set("side-count?",exports["side-count?"]);
modrec.prefix[47]=exports["side-count?"];
ns.set("square35.69",exports["square"]);
extNs.set("square",exports["square"]);
modrec.prefix[48]=exports["square"];
ns.set("star50.99",exports["star"]);
extNs.set("star",exports["star"]);
modrec.prefix[49]=exports["star"];
ns.set("star-polygon52.103",exports["star-polygon"]);
extNs.set("star-polygon",exports["star-polygon"]);
modrec.prefix[50]=exports["star-polygon"];
ns.set("step-count?66.131",exports["step-count?"]);
extNs.set("step-count?",exports["step-count?"]);
modrec.prefix[51]=exports["step-count?"];
ns.set("text1.1",exports["text"]);
extNs.set("text",exports["text"]);
modrec.prefix[52]=exports["text"];
ns.set("text/font2.3",exports["text/font"]);
extNs.set("text/font",exports["text/font"]);
modrec.prefix[53]=exports["text/font"];
ns.set("triangle40.79",exports["triangle"]);
extNs.set("triangle",exports["triangle"]);
modrec.prefix[54]=exports["triangle"];
ns.set("triangle/aas45.89",exports["triangle/aas"]);
extNs.set("triangle/aas",exports["triangle/aas"]);
modrec.prefix[55]=exports["triangle/aas"];
ns.set("triangle/asa46.91",exports["triangle/asa"]);
extNs.set("triangle/asa",exports["triangle/asa"]);
modrec.prefix[56]=exports["triangle/asa"];
ns.set("triangle/ass43.85",exports["triangle/ass"]);
extNs.set("triangle/ass",exports["triangle/ass"]);
modrec.prefix[57]=exports["triangle/ass"];
ns.set("triangle/saa47.93",exports["triangle/saa"]);
extNs.set("triangle/saa",exports["triangle/saa"]);
modrec.prefix[58]=exports["triangle/saa"];
ns.set("triangle/sas41.81",exports["triangle/sas"]);
extNs.set("triangle/sas",exports["triangle/sas"]);
modrec.prefix[59]=exports["triangle/sas"];
ns.set("triangle/ssa44.87",exports["triangle/ssa"]);
extNs.set("triangle/ssa",exports["triangle/ssa"]);
modrec.prefix[60]=exports["triangle/ssa"];
ns.set("triangle/sss42.83",exports["triangle/sss"]);
extNs.set("triangle/sss",exports["triangle/sss"]);
modrec.prefix[61]=exports["triangle/sss"];
ns.set("underlay12.23",exports["underlay"]);
extNs.set("underlay",exports["underlay"]);
modrec.prefix[62]=exports["underlay"];
ns.set("underlay/align15.29",exports["underlay/align"]);
extNs.set("underlay/align",exports["underlay/align"]);
modrec.prefix[63]=exports["underlay/align"];
ns.set("underlay/offset13.25",exports["underlay/offset"]);
extNs.set("underlay/offset",exports["underlay/offset"]);
modrec.prefix[64]=exports["underlay/offset"];
ns.set("underlay/xy14.27",exports["underlay/xy"]);
extNs.set("underlay/xy",exports["underlay/xy"]);
modrec.prefix[65]=exports["underlay/xy"];
ns.set("video/url6.11",exports["video/url"]);
extNs.set("video/url",exports["video/url"]);
modrec.prefix[66]=exports["video/url"];
ns.set("x-place?62.123",exports["x-place?"]);
extNs.set("x-place?",exports["x-place?"]);
modrec.prefix[67]=exports["x-place?"];
ns.set("y-place?63.125",exports["y-place?"]);
extNs.set("y-place?",exports["y-place?"]);
modrec.prefix[68]=exports["y-place?"];

             modrec.privateExports = exports;
             return M.c.pop().label(M); };
        plt.runtime.PAUSE(function(restart) {
             var modName = "whalesong/image/private/color.rkt";
             plt.runtime.currentModuleLoader(M,
                                             modName,
                                             function() {
                                                restart(function(M) {
                                                    M.modules[modName] = M.installedModules[modName]();
                                                    if (! M.modules[modName].isInvoked) {
                                                        M.modules[modName].internalInvoke(M,
                                                                                     afterName2026,
                                                                                      M.params.currentErrorHandler);
                                                    } else {
                                                        afterName2026();
                                                    }
                                                })
                                             },
                                             function() {
                                                alert('Could not load ' + modName);
                                             })
       });     
        });
   }
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/color.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3441=function(M){if(--M.cbt<0){throw _3441;}
if((M.a-7)===0){return(_3437)(M);}else{RT.si_context_expected(7)(M);
}};

var _3440=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-7]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym2154;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym2155;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym2156;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-6]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=3;
M.e[M.e.length-3]=sym2157;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-7];
M.e[M.e.length-7]=M.v;
M.a=7;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3442,M.p));
return((M.p).label)(M);};

var _3438=function(M){if(--M.cbt<0){throw _3438;}
if((M.a-5)===0){return(_3440)(M);}else{RT.si_context_expected(5)(M);
}};

var _3434=function(M){if(--M.cbt<0){throw _3434;}
M.e.length-=(M.a-1);
return(_3435)(M);};

var _3432=function(M){if(--M.cbt<0){throw _3432;}
M.e.length-=(M.a-1);
return(_3433)(M);};

var _3433=function(M){if(--M.cbt<0){throw _3433;}
M.e.push([M.params.currentNamespace.get("struct:color")||M.primitives["struct:color"],M.params.currentNamespace.get("make-color")||M.primitives["make-color"],M.params.currentNamespace.get("color?")||M.primitives["color?"],M.params.currentNamespace.get("color-red")||M.primitives["color-red"],M.params.currentNamespace.get("color-green")||M.primitives["color-green"],M.params.currentNamespace.get("color-blue")||M.primitives["color-blue"],M.params.currentNamespace.get("color-alpha")||M.primitives["color-alpha"],M.params.currentNamespace.get("-color")||M.primitives["-color"]]);M.e[M.e.length-1].names=["struct:color","make-color","color?","color-red","color-green","color-blue","color-alpha","-color"];
M.modules["whalesong/image/private/color.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3435,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym2158;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=4;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL))));
M.e[M.e.length-10]=false;
M.v=sym2158;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3439,M.p));
return((M.p).label)(M);};

var _3431=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3433)(M);}else{M.c.push(new RT.CallFrame(_3433,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3429=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3430=function(M){M.modules["whalesong/image/private/color.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3431)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3431);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3431)(M);}};

var _3421=function(M){if(--M.cbt<0){throw _3421;}
M.e.length-=(M.a-1);
return(_3422)(M);};

var _3419=function(M){if(--M.cbt<0){throw _3419;}

//"lambda body for #(struct:LamPositionalName ...rivate/color.rkt:14:4 whalesong/image/private/color.rkt 14 4 329 32)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3423=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3418)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3419)(M);}};

var _3417=function(M){if(--M.cbt<0){throw _3417;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_3423)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3418)(M);}};

var _3420=function(M){M.c.push(new RT.CallFrame(_3422,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/image/private/color.rkt"]=function(){return new RT.ModuleRecord("color",_3430);}
return(_3429)(M);};

var _3437=function(M){M.e.splice(M.e.length-11,5);
M.e[M.e.length-7][0]=M.v;
M.e[M.e.length-7][1]=M.e[M.e.length-1];
M.e[M.e.length-7][2]=M.e[M.e.length-2];
M.e[M.e.length-7][3]=M.e[M.e.length-3];
M.e[M.e.length-7][4]=M.e[M.e.length-4];
M.e[M.e.length-7][5]=M.e[M.e.length-5];
M.e[M.e.length-7][6]=M.e[M.e.length-6];
M.e.length-=6;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3418=function(M){if(--M.cbt<0){throw _3418;}

//"lambda body for #(struct:LamPositionalName ...rivate/color.rkt:12:4 whalesong/image/private/color.rkt 12 4 292 32)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][1];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=255;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3446=function(M){return(_3420)(M);};

var _3445=function(M){if(--M.cbt<0){throw _3445;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("-color", prefix[selfMod.getPrefixOffset("-color")]);extNs.set("color", prefix[selfMod.getPrefixOffset("-color")]);ns.set("color-alpha", prefix[selfMod.getPrefixOffset("color-alpha")]);extNs.set("color-alpha", prefix[selfMod.getPrefixOffset("color-alpha")]);ns.set("color-blue", prefix[selfMod.getPrefixOffset("color-blue")]);extNs.set("color-blue", prefix[selfMod.getPrefixOffset("color-blue")]);ns.set("color-green", prefix[selfMod.getPrefixOffset("color-green")]);extNs.set("color-green", prefix[selfMod.getPrefixOffset("color-green")]);ns.set("color-red", prefix[selfMod.getPrefixOffset("color-red")]);extNs.set("color-red", prefix[selfMod.getPrefixOffset("color-red")]);ns.set("color?", prefix[selfMod.getPrefixOffset("color?")]);extNs.set("color?", prefix[selfMod.getPrefixOffset("color?")]);ns.set("-color", prefix[selfMod.getPrefixOffset("-color")]);extNs.set("make-color", prefix[selfMod.getPrefixOffset("-color")]);ns.set("struct:color", prefix[selfMod.getPrefixOffset("struct:color")]);extNs.set("struct:color", prefix[selfMod.getPrefixOffset("struct:color")]);}(M.modules["whalesong/image/private/color.rkt"],M.modules["whalesong/image/private/color.rkt"].getExports(),M.modules["whalesong/image/private/color.rkt"].getExternalExports(),M.modules["whalesong/image/private/color.rkt"].prefix));
return(M.p)(M);};

var _3442=RT.si_context_expected(7);

var _3439=RT.si_context_expected(5);

var _3435=function(M){if(--M.cbt<0){throw _3435;}
M.c.push(new RT.CallFrame(_3445,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3418,3,[M.e[M.e.length-3]],"...rivate/color.rkt:12:4");
M.e[M.e.length-2]=new RT.Closure(_3419,4,[M.e[M.e.length-3]],"...rivate/color.rkt:14:4");
M.v=new RT.Closure(_3417,RT.makePair(3,RT.makePair(4,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"-color");
M.e.length-=2;
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3422=function(M){if(--M.cbt<0){throw _3422;}
};

var _3444=function(M){if(--M.cbt<0){throw _3444;}
M.e.length-=(M.a-1);
return(_3445)(M);};

_3433.mvr=_3432;
_3439.mvr=_3438;
_3442.mvr=_3441;
_3435.mvr=_3434;
_3445.mvr=_3444;
_3422.mvr=_3421;
var sym2158=RT.makeSymbol("color");
var sym2157=RT.makeSymbol("alpha");
var sym2156=RT.makeSymbol("blue");
var sym2155=RT.makeSymbol("green");
var sym2154=RT.makeSymbol("red");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3446(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/color.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/color.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _3617=function(M){if(--M.cbt<0){throw _3617;}
M.p=M.e[M.e.length-15];
M.e[M.e.length-15]=M.v;
M.a=15;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-34,19);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3613=function(M){if(--M.cbt<0){throw _3613;}
M.e[M.e.length-14]=M.v;
M.c.push(new RT.CallFrame(_3617,M.p));
M.v=M.e[M.e.length-19][1][0][M.e[M.e.length-19][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-27];
M.e[M.e.length-1]=M.e[M.e.length-35];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3609=function(M){if(--M.cbt<0){throw _3609;}
return(_3607)(M);};

var _3601=function(M){if(--M.cbt<0){throw _3601;}
return(_3599)(M);};

var _3594=function(M){if(--M.cbt<0){throw _3594;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-9];
if(M.v===false){return(_3598)(M);}else{M.c.push(new RT.CallFrame(_3601,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-11];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3592=function(M){if(--M.cbt<0){throw _3592;}
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=M.e[M.e.length-21];
M.e[M.e.length-5]=M.e[M.e.length-22];
M.v=M.e[M.e.length-23];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3594,M.p));
return((M.p).label)(M);};

var _3590=function(M){if(--M.cbt<0){throw _3590;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-11][6][0][M.e[M.e.length-11][6][1]];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3592,M.p));
return((M.p).label)(M);};

var _3586=function(M){if(--M.cbt<0){throw _3586;}
return(_3584)(M);};

var _3578=function(M){if(--M.cbt<0){throw _3578;}
return(_3576)(M);};

var _3569=function(M){if(--M.cbt<0){throw _3569;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
if(M.v===false){return(_3575)(M);}else{M.c.push(new RT.CallFrame(_3578,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3564=function(M){if(--M.cbt<0){throw _3564;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3569,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",772,23,32,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3560=function(M){if(--M.cbt<0){throw _3560;}
return(_3558)(M);};

var _3552=function(M){if(--M.cbt<0){throw _3552;}
return(_3550)(M);};

var _3544=function(M){if(--M.cbt<0){throw _3544;}
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-26][11];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-17];
M.e[M.e.length-4]=M.e[M.e.length-18];
M.e[M.e.length-5]=M.e[M.e.length-19];
M.e[M.e.length-6]=M.e[M.e.length-20];
M.e[M.e.length-7]=M.e[M.e.length-21];
M.e[M.e.length-8]=M.e[M.e.length-23];
M.e[M.e.length-9]=M.e[M.e.length-24];
M.e[M.e.length-10]=M.e[M.e.length-25];
M.e[M.e.length-11]=M.e[M.e.length-29];
M.e[M.e.length-12]=M.e[M.e.length-16];
M.e[M.e.length-13]=M.e[M.e.length-22];
M.a=13;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-29,16);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3542=function(M){if(--M.cbt<0){throw _3542;}
M.c.push(new RT.CallFrame(_3544,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3537=RT.si_context_expected(6);

var _3532=RT.si_context_expected(6);

var _3524=function(M){if(--M.cbt<0){throw _3524;}
M.p=M.e[M.e.length-13];
M.e[M.e.length-13]=M.v;
M.a=13;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-30,17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3520=function(M){if(--M.cbt<0){throw _3520;}
M.e[M.e.length-12]=M.v;
M.c.push(new RT.CallFrame(_3524,M.p));
M.v=M.e[M.e.length-17][1][0][M.e[M.e.length-17][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-25];
M.e[M.e.length-1]=M.e[M.e.length-31];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3516=function(M){if(--M.cbt<0){throw _3516;}
return(_3514)(M);};

var _3508=function(M){if(--M.cbt<0){throw _3508;}
return(_3506)(M);};

var _3501=function(M){if(--M.cbt<0){throw _3501;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-9];
if(M.v===false){return(_3505)(M);}else{M.c.push(new RT.CallFrame(_3508,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-11];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3499=function(M){if(--M.cbt<0){throw _3499;}
M.e[M.e.length-3]=M.v;
M.v=M.e[M.e.length-19];
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3501,M.p));
return((M.p).label)(M);};

var _3497=function(M){if(--M.cbt<0){throw _3497;}
M.e[M.e.length-2]=M.v;
M.e.push(void(0));
M.p=M.e[M.e.length-9][6][0][M.e[M.e.length-9][6][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3499,M.p));
return((M.p).label)(M);};

var _3493=function(M){if(--M.cbt<0){throw _3493;}
return(_3491)(M);};

var _3485=function(M){if(--M.cbt<0){throw _3485;}
return(_3483)(M);};

var _3476=function(M){if(--M.cbt<0){throw _3476;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-7];
if(M.v===false){return(_3482)(M);}else{M.c.push(new RT.CallFrame(_3485,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3471=function(M){if(--M.cbt<0){throw _3471;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3476,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",494,17,32,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3467=function(M){if(--M.cbt<0){throw _3467;}
return(_3465)(M);};

var _3459=function(M){if(--M.cbt<0){throw _3459;}
return(_3457)(M);};


var _3662=function(M){if(--M.cbt<0){throw _3662;}
M.e.length-=(M.a-1);
return(_3663)(M);};

var _3660=function(M){if(--M.cbt<0){throw _3660;}
M.e.length-=(M.a-1);
return(_3661)(M);};

var _3658=function(M){if(--M.cbt<0){throw _3658;}
M.e.length-=(M.a-1);
return(_3659)(M);};

var _3656=function(M){if(--M.cbt<0){throw _3656;}
M.e.length-=(M.a-1);
return(_3657)(M);};

var _3654=function(M){if(--M.cbt<0){throw _3654;}
M.e.length-=(M.a-1);
return(_3655)(M);};

var _3652=function(M){if(--M.cbt<0){throw _3652;}
M.e.length-=(M.a-1);
return(_3653)(M);};

var _3653=function(M){if(--M.cbt<0){throw _3653;}
M.e.push([M.params.currentNamespace.get("place-images")||M.primitives["place-images"],[M.modules["whalesong/lang/private/traced-app.rkt"].prefix,M.modules["whalesong/lang/private/traced-app.rkt"].getPrefixOffset("traced-app-key"),{moduleName:"whalesong/lang/private/traced-app.rkt",name:"traced-app-key"}],[M.modules["whalesong/lang/for.rkt"].prefix,M.modules["whalesong/lang/for.rkt"].getPrefixOffset("make-sequence"),{moduleName:"whalesong/lang/for.rkt",name:"make-sequence"}],M.primitives["void"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("place-image22.43"),{moduleName:"whalesong/image/private/main.rkt",name:"place-image22.43"}],[M.modules["whalesong/lang/posn.rkt"].prefix,M.modules["whalesong/lang/posn.rkt"].getPrefixOffset("posn-x"),{moduleName:"whalesong/lang/posn.rkt",name:"posn-x"}],[M.modules["whalesong/lang/posn.rkt"].prefix,M.modules["whalesong/lang/posn.rkt"].getPrefixOffset("posn-y"),{moduleName:"whalesong/lang/posn.rkt",name:"posn-y"}],M.params.currentNamespace.get("place-images/align")||M.primitives["place-images/align"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("place-image/align23.45"),{moduleName:"whalesong/image/private/main.rkt",name:"place-image/align23.45"}],M.params.currentNamespace.get("empty-image")||M.primitives["empty-image"],[M.modules["whalesong/image/private/main.rkt"].prefix,M.modules["whalesong/image/private/main.rkt"].getPrefixOffset("rectangle36.71"),{moduleName:"whalesong/image/private/main.rkt",name:"rectangle36.71"}],false,false]);M.e[M.e.length-1].names=["place-images","traced-app-key","make-sequence","void","place-image22.43","posn-x","posn-y","place-images/align","place-image/align23.45","empty-image","rectangle36.71",false,false];
M.modules["whalesong/image/private/image.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3655,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3447,13,[M.e[M.e.length-1]],"for-loop");
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3651=function(M){if(M.modules["whalesong/lang/posn.rkt"].isInvoked!==false){return(_3653)(M);}else{M.c.push(new RT.CallFrame(_3653,M.p));
return(M.modules["whalesong/lang/posn.rkt"].label)(M);}};

var _3649=function(M){if(--M.cbt<0){throw _3649;}
M.e.length-=(M.a-1);
return(_3650)(M);};

var _3650=function(M){if(--M.cbt<0){throw _3650;}
if((M.installedModules["whalesong/lang/posn.rkt"]!==void(0)&&M.modules["whalesong/lang/posn.rkt"]!==undefined)!==false){return(_3651)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/posn.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3651);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3651)(M);}};

var _3648=function(M){if(M.modules["whalesong/lang/for.rkt"].isInvoked!==false){return(_3650)(M);}else{M.c.push(new RT.CallFrame(_3650,M.p));
return(M.modules["whalesong/lang/for.rkt"].label)(M);}};

var _3646=function(M){if(--M.cbt<0){throw _3646;}
M.e.length-=(M.a-1);
return(_3647)(M);};

var _3647=function(M){if(--M.cbt<0){throw _3647;}
if((M.installedModules["whalesong/lang/for.rkt"]!==void(0)&&M.modules["whalesong/lang/for.rkt"]!==undefined)!==false){return(_3648)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/for.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3648);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3648)(M);}};

var _3645=function(M){if(M.modules["whalesong/image/private/main.rkt"].isInvoked!==false){return(_3647)(M);}else{M.c.push(new RT.CallFrame(_3647,M.p));
return(M.modules["whalesong/image/private/main.rkt"].label)(M);}};

var _3643=function(M){if(--M.cbt<0){throw _3643;}
M.e.length-=(M.a-1);
return(_3644)(M);};

var _3644=function(M){if(--M.cbt<0){throw _3644;}
if((M.installedModules["whalesong/image/private/main.rkt"]!==void(0)&&M.modules["whalesong/image/private/main.rkt"]!==undefined)!==false){return(_3645)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/image/private/main.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3645);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3645)(M);}};

var _3642=function(M){if(M.modules["whalesong/lang/base.rkt"].isInvoked!==false){return(_3644)(M);}else{M.c.push(new RT.CallFrame(_3644,M.p));
return(M.modules["whalesong/lang/base.rkt"].label)(M);}};

var _3640=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3641=function(M){M.modules["whalesong/image/private/image.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/base.rkt"]!==void(0)&&M.modules["whalesong/lang/base.rkt"]!==undefined)!==false){return(_3642)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/base.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_3642);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_3642)(M);}};

var _3452=function(M){if(--M.cbt<0){throw _3452;}
M.e.length-=(M.a-1);
return(_3453)(M);};

var _3636=function(M){if(--M.cbt<0){throw _3636;}
M.e.length-=(M.a-1);
return(_3637)(M);};

var _3634=function(M){if(--M.cbt<0){throw _3634;}
M.e.length-=(M.a-1);
return(_3635)(M);};

var _3631=function(M){M.e[M.e.length-12]=M.v;
M.e[M.e.length-13]=M.e[M.e.length-1];
M.e[M.e.length-14]=M.e[M.e.length-2];
M.e[M.e.length-15]=M.e[M.e.length-3];
M.e[M.e.length-16]=M.e[M.e.length-4];
M.e[M.e.length-17]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_3635,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3629=function(M){if(--M.cbt<0){throw _3629;}
if((M.a-6)===0){return(_3631)(M);}else{RT.si_context_expected(6)(M);
}};

var _3626=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_3630,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",772,23,32,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.e[M.e.length-1]=RT.makePair(sym2192,RT.NULL);
M.e[M.e.length-2]=M.e[M.e.length-17];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3624=function(M){if(--M.cbt<0){throw _3624;}
if((M.a-6)===0){return(_3626)(M);}else{RT.si_context_expected(6)(M);
}};

var _3450=function(M){if(--M.cbt<0){throw _3450;}

//"lambda body for #(struct:LamPositionalName place-images/align whalesong/image/private/image.rkt 21 0 650 215)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_3625,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",758,23,18,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.e[M.e.length-1]=RT.makePair(sym2193,RT.NULL);
M.e[M.e.length-2]=M.e[M.e.length-16];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3604=function(M){M.v=M.e[M.e.length-1];
M.e.length-=19;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3607=function(M){if(M.v===false){return(_3604)(M);}else{M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-15]=M.e[M.e.length-19][12];
M.e[M.e.length-1]=M.e[M.e.length-20];
M.e[M.e.length-2]=M.e[M.e.length-21];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-23];
M.e[M.e.length-5]=M.e[M.e.length-24];
M.e[M.e.length-6]=M.e[M.e.length-25];
M.e[M.e.length-7]=M.e[M.e.length-26];
M.e[M.e.length-8]=M.e[M.e.length-27];
M.e[M.e.length-9]=M.e[M.e.length-28];
M.e[M.e.length-10]=M.e[M.e.length-29];
M.e[M.e.length-11]=M.e[M.e.length-30];
M.e[M.e.length-12]=M.e[M.e.length-31];
M.e[M.e.length-13]=M.e[M.e.length-16];
M.c.push(new RT.CallFrame(_3613,M.p));
M.v=M.e[M.e.length-19][1][0][M.e[M.e.length-19][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-22];
M.e[M.e.length-1]=M.e[M.e.length-34];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _3606=function(M){M.v=M.e[M.e.length-2];
M.v=true;
return(_3607)(M);};

var _3596=function(M){M.v=M.e[M.e.length-1];
M.e.length-=19;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3599=function(M){if(M.v===false){return(_3596)(M);}else{M.v=M.e[M.e.length-14];
if(M.v===false){return(_3606)(M);}else{M.c.push(new RT.CallFrame(_3609,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-16];
M.e[M.e.length-1]=M.e[M.e.length-21];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3598=function(M){M.v=M.e[M.e.length-3];
M.v=true;
return(_3599)(M);};




var _3581=function(M){M.v=M.e[M.e.length-16];
M.e.length-=18;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3584=function(M){if(M.v===false){return(_3581)(M);}else{M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.e[M.e.length-10][8][0][M.e[M.e.length-10][8][1]];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e.push(void(0));
M.p=M.e[M.e.length-11][5][0][M.e[M.e.length-11][5][1]];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3590,M.p));
return((M.p).label)(M);}};


var _3583=function(M){M.v=true;
return(_3584)(M);};

var _3573=function(M){M.v=M.e[M.e.length-16];
M.e.length-=18;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3576=function(M){if(M.v===false){return(_3573)(M);}else{M.v=M.e[M.e.length-12];
if(M.v===false){return(_3583)(M);}else{M.c.push(new RT.CallFrame(_3586,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-13];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3575=function(M){M.v=true;
return(_3576)(M);};



var _3555=function(M){M.v=M.e[M.e.length-14];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3558=function(M){if(M.v===false){return(_3555)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_3564,M.p));
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",758,23,18,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _3557=function(M){M.v=true;
return(_3558)(M);};

var _3547=function(M){M.v=M.e[M.e.length-14];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3550=function(M){if(M.v===false){return(_3547)(M);}else{M.v=M.e[M.e.length-9];
if(M.v===false){return(_3557)(M);}else{M.c.push(new RT.CallFrame(_3560,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-17];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3549=function(M){M.v=true;
return(_3550)(M);};

var _3449=function(M){if(--M.cbt<0){throw _3449;}

//"lambda body for #(struct:LamPositionalName for-loop whalesong/image/private/image.rkt 22 2 716 148)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-4];
if(M.v===false){return(_3549)(M);}else{M.c.push(new RT.CallFrame(_3552,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3543=function(M){if(--M.cbt<0){throw _3543;}
M.e.length-=(M.a-1);
return(_3544)(M);};

var _3541=function(M){if(--M.cbt<0){throw _3541;}
M.e.length-=(M.a-1);
return(_3542)(M);};

var _3538=function(M){M.e[M.e.length-12]=M.v;
M.e[M.e.length-13]=M.e[M.e.length-1];
M.e[M.e.length-14]=M.e[M.e.length-2];
M.e[M.e.length-15]=M.e[M.e.length-3];
M.e[M.e.length-16]=M.e[M.e.length-4];
M.e[M.e.length-17]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_3542,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3536=function(M){if(--M.cbt<0){throw _3536;}
if((M.a-6)===0){return(_3538)(M);}else{RT.si_context_expected(6)(M);
}};

var _3533=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_3537,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",494,17,32,5]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.e[M.e.length-1]=RT.makePair(sym2192,RT.NULL);
M.e[M.e.length-2]=M.e[M.e.length-17];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3531=function(M){if(--M.cbt<0){throw _3531;}
if((M.a-6)===0){return(_3533)(M);}else{RT.si_context_expected(6)(M);
}};

var _3448=function(M){if(--M.cbt<0){throw _3448;}

//"lambda body for #(struct:LamPositionalName place-images whalesong/image/private/image.rkt 15 0 394 171)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_3532,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",480,17,18,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-15][2][0][M.e[M.e.length-15][2][1]];
M.e[M.e.length-1]=RT.makePair(sym2193,RT.NULL);
M.e[M.e.length-2]=M.e[M.e.length-16];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3511=function(M){M.v=M.e[M.e.length-1];
M.e.length-=17;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3514=function(M){if(M.v===false){return(_3511)(M);}else{M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-13]=M.e[M.e.length-17][11];
M.e[M.e.length-1]=M.e[M.e.length-18];
M.e[M.e.length-2]=M.e[M.e.length-19];
M.e[M.e.length-3]=M.e[M.e.length-20];
M.e[M.e.length-4]=M.e[M.e.length-21];
M.e[M.e.length-5]=M.e[M.e.length-22];
M.e[M.e.length-6]=M.e[M.e.length-23];
M.e[M.e.length-7]=M.e[M.e.length-24];
M.e[M.e.length-8]=M.e[M.e.length-25];
M.e[M.e.length-9]=M.e[M.e.length-26];
M.e[M.e.length-10]=M.e[M.e.length-27];
M.e[M.e.length-11]=M.e[M.e.length-14];
M.c.push(new RT.CallFrame(_3520,M.p));
M.v=M.e[M.e.length-17][1][0][M.e[M.e.length-17][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-20];
M.e[M.e.length-1]=M.e[M.e.length-30];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _3513=function(M){M.v=M.e[M.e.length-2];
M.v=true;
return(_3514)(M);};

var _3503=function(M){M.v=M.e[M.e.length-1];
M.e.length-=17;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3506=function(M){if(M.v===false){return(_3503)(M);}else{M.v=M.e[M.e.length-14];
if(M.v===false){return(_3513)(M);}else{M.c.push(new RT.CallFrame(_3516,M.p));
M.v=M.e[M.e.length-4][1][0][M.e[M.e.length-4][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-16];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3505=function(M){M.v=M.e[M.e.length-3];
M.v=true;
return(_3506)(M);};




var _3488=function(M){M.v=M.e[M.e.length-14];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3491=function(M){if(M.v===false){return(_3488)(M);}else{M.e.push(void(0));
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-4]=M.e[M.e.length-8][4][0][M.e[M.e.length-8][4][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e.push(void(0));
M.p=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3497,M.p));
return((M.p).label)(M);}};


var _3490=function(M){M.v=true;
return(_3491)(M);};

var _3480=function(M){M.v=M.e[M.e.length-14];
M.e.length-=16;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3483=function(M){if(M.v===false){return(_3480)(M);}else{M.v=M.e[M.e.length-12];
if(M.v===false){return(_3490)(M);}else{M.c.push(new RT.CallFrame(_3493,M.p));
M.v=M.e[M.e.length-3][1][0][M.e[M.e.length-3][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-13];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3482=function(M){M.v=true;
return(_3483)(M);};



var _3462=function(M){M.v=M.e[M.e.length-12];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3465=function(M){if(M.v===false){return(_3462)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_3471,M.p));
M.v=M.e[M.e.length-2][1][0][M.e[M.e.length-2][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>",480,17,18,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _3464=function(M){M.v=true;
return(_3465)(M);};

var _3454=function(M){M.v=M.e[M.e.length-12];
M.e.length-=14;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3457=function(M){if(M.v===false){return(_3454)(M);}else{M.v=M.e[M.e.length-9];
if(M.v===false){return(_3464)(M);}else{M.c.push(new RT.CallFrame(_3467,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}}};


var _3456=function(M){M.v=true;
return(_3457)(M);};

var _3447=function(M){if(--M.cbt<0){throw _3447;}

//"lambda body for #(struct:LamPositionalName for-loop whalesong/image/private/image.rkt 16 2 438 126)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-4];
if(M.v===false){return(_3456)(M);}else{M.c.push(new RT.CallFrame(_3459,M.p));
M.v=M.e[M.e.length-1][1][0][M.e[M.e.length-1][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3451=function(M){M.c.push(new RT.CallFrame(_3453,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/image/private/image.rkt"]=function(){return new RT.ModuleRecord("image",_3641);}
return(_3640)(M);};

var _3666=function(M){return(_3451)(M);};

var _3665=function(M){if(--M.cbt<0){throw _3665;}
M.e[M.e.length-1][9]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3663=function(M){if(--M.cbt<0){throw _3663;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("empty-image", prefix[selfMod.getPrefixOffset("empty-image")]);extNs.set("empty-image", prefix[selfMod.getPrefixOffset("empty-image")]);ns.set("place-images", prefix[selfMod.getPrefixOffset("place-images")]);extNs.set("place-images", prefix[selfMod.getPrefixOffset("place-images")]);ns.set("place-images/align", prefix[selfMod.getPrefixOffset("place-images/align")]);extNs.set("place-images/align", prefix[selfMod.getPrefixOffset("place-images/align")]);}(M.modules["whalesong/image/private/image.rkt"],M.modules["whalesong/image/private/image.rkt"].getExports(),M.modules["whalesong/image/private/image.rkt"].getExternalExports(),M.modules["whalesong/image/private/image.rkt"].prefix));
return(M.p)(M);};

var _3661=function(M){if(--M.cbt<0){throw _3661;}
M.c.push(new RT.CallFrame(_3663,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-5][10][0][M.e[M.e.length-5][10][1]];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=0;
M.e[M.e.length-3]="solid";
M.e[M.e.length-4]="black";
M.a=4;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_3665,M.p));
return((M.p).label)(M);};

var _3659=function(M){if(--M.cbt<0){throw _3659;}
M.c.push(new RT.CallFrame(_3661,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3450,5,[M.e[M.e.length-1]],"place-images/align");
M.e[M.e.length-1][7]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3657=function(M){if(--M.cbt<0){throw _3657;}
M.c.push(new RT.CallFrame(_3659,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3449,15,[M.e[M.e.length-1]],"for-loop");
M.e[M.e.length-1][12]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3655=function(M){if(--M.cbt<0){throw _3655;}
M.c.push(new RT.CallFrame(_3657,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3448,3,[M.e[M.e.length-1]],"place-images");
M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3453=function(M){if(--M.cbt<0){throw _3453;}
};

var _3637=function(M){if(--M.cbt<0){throw _3637;}
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-28][12];
M.e[M.e.length-1]=M.e[M.e.length-16];
M.e[M.e.length-2]=M.e[M.e.length-17];
M.e[M.e.length-3]=M.e[M.e.length-19];
M.e[M.e.length-4]=M.e[M.e.length-20];
M.e[M.e.length-5]=M.e[M.e.length-21];
M.e[M.e.length-6]=M.e[M.e.length-22];
M.e[M.e.length-7]=M.e[M.e.length-23];
M.e[M.e.length-8]=M.e[M.e.length-25];
M.e[M.e.length-9]=M.e[M.e.length-26];
M.e[M.e.length-10]=M.e[M.e.length-27];
M.e[M.e.length-11]=M.e[M.e.length-31];
M.e[M.e.length-12]=M.e[M.e.length-32];
M.e[M.e.length-13]=M.e[M.e.length-33];
M.e[M.e.length-14]=M.e[M.e.length-18];
M.e[M.e.length-15]=M.e[M.e.length-24];
M.a=15;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-33,18);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3635=function(M){if(--M.cbt<0){throw _3635;}
M.c.push(new RT.CallFrame(_3637,M.p));
M.v=M.e[M.e.length-13][1][0][M.e[M.e.length-13][1][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#f",false,false,false,0]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3630=RT.si_context_expected(6);

var _3625=RT.si_context_expected(6);

_3532.mvr=_3531;
_3537.mvr=_3536;
_3542.mvr=_3541;
_3544.mvr=_3543;
_3625.mvr=_3624;
_3630.mvr=_3629;
_3635.mvr=_3634;
_3637.mvr=_3636;
_3644.mvr=_3643;
_3647.mvr=_3646;
_3650.mvr=_3649;
_3653.mvr=_3652;
_3655.mvr=_3654;
_3657.mvr=_3656;
_3659.mvr=_3658;
_3661.mvr=_3660;
_3663.mvr=_3662;
_3453.mvr=_3452;
var sym2193=RT.makeSymbol("img");
var sym2192=RT.makeSymbol("posn");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_3666(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/image.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});
// ** Visiting <UninterpretedSource /usr/racket/share/pkgs/whalesong/whalesong/image/private/main.rkt>
(function(M) {
"use strict";
 
M.installedModules["whalesong/image/private/main.rkt"] = function() {
    return new plt.runtime.ModuleRecord("whalesong/image/private/main.rkt",
        function(M) {
            
        var afterName2258 = function() { 
             if(--M.cbt<0) { throw arguments.callee; }
             var modrec = M.modules["whalesong/image/private/main.rkt"];
             var ns = modrec.getExports();
             var extNs = modrec.getExternalExports();
             modrec.prefix=[void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0)];modrec.prefix.names=["above18.35","above/align19.37","add-line32.63","angle?64.127","beside16.31","beside/align17.33","bitmap/url3.5","circle34.67","color-list->bitmap56.111","color-list->image55.109","crop30.59","ellipse39.77","empty-scene20.39","flip-horizontal27.53","flip-vertical28.55","frame29.57","image->color-list54.107","image-baseline59.117","image-color?60.119","image-height58.115","image-url4.7","image-width57.113","image=?68.135","image?67.133","isosceles-triangle49.97","line31.61","mode?61.121","name->color69.137","open-image-url5.9","overlay8.15","overlay/align11.21","overlay/offset9.17","overlay/xy10.19","place-image22.43","place-image/align23.45","play-sound7.13","polygon37.73","put-image21.41","radial-star51.101","rectangle36.71","regular-polygon38.75","rhombus53.105","right-triangle48.95","rotate24.47","scale25.49","scale/xy26.51","scene+line33.65","side-count?65.129","square35.69","star50.99","star-polygon52.103","step-count?66.131","text1.1","text/font2.3","triangle40.79","triangle/aas45.89","triangle/asa46.91","triangle/ass43.85","triangle/saa47.93","triangle/sas41.81","triangle/ssa44.87","triangle/sss42.83","underlay12.23","underlay/align15.29","underlay/offset13.25","underlay/xy14.27","video/url6.11","x-place?62.123","y-place?63.125"];modrec.prefix.internalNames=["above","above/align","add-line","angle?","beside","beside/align","bitmap/url","circle","color-list->bitmap","color-list->image","crop","ellipse","empty-scene","flip-horizontal","flip-vertical","frame","image->color-list","image-baseline","image-color?","image-height","image-url","image-width","image=?","image?","isosceles-triangle","line","mode?","name->color","open-image-url","overlay","overlay/align","overlay/offset","overlay/xy","place-image","place-image/align","play-sound","polygon","put-image","radial-star","rectangle","regular-polygon","rhombus","right-triangle","rotate","scale","scale/xy","scene+line","side-count?","square","star","star-polygon","step-count?","text","text/font","triangle","triangle/aas","triangle/asa","triangle/ass","triangle/saa","triangle/sas","triangle/ssa","triangle/sss","underlay","underlay/align","underlay/offset","underlay/xy","video/url","x-place?","y-place?"];
             var exports = {};
             modrec.isInvoked = true;
             (function(MACHINE, EXPORTS){// This might want to live in the Racket world rather than in
// JavaScript land...


var colorNamespace = MACHINE.modules['whalesong/image/private/color.rkt'].getExternalExports();
var colorStruct = colorNamespace.get('struct:color');
var makeColor = function(r,g,b,a) { return colorStruct.constructor([r,g,b,a]); };



// Color database
var ColorDb = function() {
    this.colors = {};
};


ColorDb.prototype.put = function(name, color) {
    this.colors[name] = color;
};

ColorDb.prototype.get = function(name) {
    return this.colors[name.toString().toUpperCase()];
};


// FIXME: update toString to handle the primitive field values.

var colorDb = new ColorDb();
colorDb.put("ORANGE", makeColor(255, 165, 0));
colorDb.put("RED", makeColor(255, 0, 0));
colorDb.put("ORANGERED", makeColor(255, 69, 0));
colorDb.put("TOMATO", makeColor(255, 99, 71));
colorDb.put("DARKRED", makeColor(139, 0, 0));
colorDb.put("RED", makeColor(255, 0, 0));
colorDb.put("FIREBRICK", makeColor(178, 34, 34));
colorDb.put("CRIMSON", makeColor(220, 20, 60));
colorDb.put("DEEPPINK", makeColor(255, 20, 147));
colorDb.put("MAROON", makeColor(176, 48, 96));
colorDb.put("INDIAN RED", makeColor(205, 92, 92));
colorDb.put("INDIANRED", makeColor(205, 92, 92));
colorDb.put("MEDIUM VIOLET RED", makeColor(199, 21, 133));
colorDb.put("MEDIUMVIOLETRED", makeColor(199, 21, 133));
colorDb.put("VIOLET RED", makeColor(208, 32, 144));
colorDb.put("VIOLETRED", makeColor(208, 32, 144));
colorDb.put("LIGHTCORAL", makeColor(240, 128, 128));
colorDb.put("HOTPINK", makeColor(255, 105, 180));
colorDb.put("PALEVIOLETRED", makeColor(219, 112, 147));
colorDb.put("LIGHTPINK", makeColor(255, 182, 193));
colorDb.put("ROSYBROWN", makeColor(188, 143, 143));
colorDb.put("PINK", makeColor(255, 192, 203));
colorDb.put("ORCHID", makeColor(218, 112, 214));
colorDb.put("LAVENDERBLUSH", makeColor(255, 240, 245));
colorDb.put("SNOW", makeColor(255, 250, 250));
colorDb.put("CHOCOLATE", makeColor(210, 105, 30));
colorDb.put("SADDLEBROWN", makeColor(139, 69, 19));
colorDb.put("BROWN", makeColor(132, 60, 36));
colorDb.put("DARKORANGE", makeColor(255, 140, 0));
colorDb.put("CORAL", makeColor(255, 127, 80));
colorDb.put("SIENNA", makeColor(160, 82, 45));
colorDb.put("ORANGE", makeColor(255, 165, 0));
colorDb.put("SALMON", makeColor(250, 128, 114));
colorDb.put("PERU", makeColor(205, 133, 63));
colorDb.put("DARKGOLDENROD", makeColor(184, 134, 11));
colorDb.put("GOLDENROD", makeColor(218, 165, 32));
colorDb.put("SANDYBROWN", makeColor(244, 164, 96));
colorDb.put("LIGHTSALMON", makeColor(255, 160, 122));
colorDb.put("DARKSALMON", makeColor(233, 150, 122));
colorDb.put("GOLD", makeColor(255, 215, 0));
colorDb.put("YELLOW", makeColor(255, 255, 0));
colorDb.put("OLIVE", makeColor(128, 128, 0));
colorDb.put("BURLYWOOD", makeColor(222, 184, 135));
colorDb.put("TAN", makeColor(210, 180, 140));
colorDb.put("NAVAJOWHITE", makeColor(255, 222, 173));
colorDb.put("PEACHPUFF", makeColor(255, 218, 185));
colorDb.put("KHAKI", makeColor(240, 230, 140));
colorDb.put("DARKKHAKI", makeColor(189, 183, 107));
colorDb.put("MOCCASIN", makeColor(255, 228, 181));
colorDb.put("WHEAT", makeColor(245, 222, 179));
colorDb.put("BISQUE", makeColor(255, 228, 196));
colorDb.put("PALEGOLDENROD", makeColor(238, 232, 170));
colorDb.put("BLANCHEDALMOND", makeColor(255, 235, 205));
colorDb.put("MEDIUM GOLDENROD", makeColor(234, 234, 173));
colorDb.put("MEDIUMGOLDENROD", makeColor(234, 234, 173));
colorDb.put("PAPAYAWHIP", makeColor(255, 239, 213));
colorDb.put("MISTYROSE", makeColor(255, 228, 225));
colorDb.put("LEMONCHIFFON", makeColor(255, 250, 205));
colorDb.put("ANTIQUEWHITE", makeColor(250, 235, 215));
colorDb.put("CORNSILK", makeColor(255, 248, 220));
colorDb.put("LIGHTGOLDENRODYELLOW", makeColor(250, 250, 210));
colorDb.put("OLDLACE", makeColor(253, 245, 230));
colorDb.put("LINEN", makeColor(250, 240, 230));
colorDb.put("LIGHTYELLOW", makeColor(255, 255, 224));
colorDb.put("SEASHELL", makeColor(255, 245, 238));
colorDb.put("BEIGE", makeColor(245, 245, 220));
colorDb.put("FLORALWHITE", makeColor(255, 250, 240));
colorDb.put("IVORY", makeColor(255, 255, 240));
colorDb.put("GREEN", makeColor(0, 255, 0));
colorDb.put("LAWNGREEN", makeColor(124, 252, 0));
colorDb.put("CHARTREUSE", makeColor(127, 255, 0));
colorDb.put("GREEN YELLOW", makeColor(173, 255, 47));
colorDb.put("GREENYELLOW", makeColor(173, 255, 47));
colorDb.put("YELLOW GREEN", makeColor(154, 205, 50));
colorDb.put("YELLOWGREEN", makeColor(154, 205, 50));
colorDb.put("MEDIUM FOREST GREEN", makeColor(107, 142, 35));
colorDb.put("OLIVEDRAB", makeColor(107, 142, 35));
colorDb.put("MEDIUMFORESTGREEN", makeColor(107, 142, 35));
colorDb.put("DARK OLIVE GREEN", makeColor(85, 107, 47));
colorDb.put("DARKOLIVEGREEN", makeColor(85, 107, 47));
colorDb.put("DARKSEAGREEN", makeColor(143, 188, 139));
colorDb.put("LIME", makeColor(0, 255, 0));
colorDb.put("DARK GREEN", makeColor(0, 100, 0));
colorDb.put("DARKGREEN", makeColor(0, 100, 0));
colorDb.put("LIME GREEN", makeColor(50, 205, 50));
colorDb.put("LIMEGREEN", makeColor(50, 205, 50));
colorDb.put("FOREST GREEN", makeColor(34, 139, 34));
colorDb.put("FORESTGREEN", makeColor(34, 139, 34));
colorDb.put("SPRING GREEN", makeColor(0, 255, 127));
colorDb.put("SPRINGGREEN", makeColor(0, 255, 127));
colorDb.put("MEDIUM SPRING GREEN", makeColor(0, 250, 154));
colorDb.put("MEDIUMSPRINGGREEN", makeColor(0, 250, 154));
colorDb.put("SEA GREEN", makeColor(46, 139, 87));
colorDb.put("SEAGREEN", makeColor(46, 139, 87));
colorDb.put("MEDIUM SEA GREEN", makeColor(60, 179, 113));
colorDb.put("MEDIUMSEAGREEN", makeColor(60, 179, 113));
colorDb.put("AQUAMARINE", makeColor(112, 216, 144));
colorDb.put("LIGHTGREEN", makeColor(144, 238, 144));
colorDb.put("PALE GREEN", makeColor(152, 251, 152));
colorDb.put("PALEGREEN", makeColor(152, 251, 152));
colorDb.put("MEDIUM AQUAMARINE", makeColor(102, 205, 170));
colorDb.put("MEDIUMAQUAMARINE", makeColor(102, 205, 170));
colorDb.put("TURQUOISE", makeColor(64, 224, 208));
colorDb.put("LIGHTSEAGREEN", makeColor(32, 178, 170));
colorDb.put("MEDIUM TURQUOISE", makeColor(72, 209, 204));
colorDb.put("MEDIUMTURQUOISE", makeColor(72, 209, 204));
colorDb.put("HONEYDEW", makeColor(240, 255, 240));
colorDb.put("MINTCREAM", makeColor(245, 255, 250));
colorDb.put("ROYALBLUE", makeColor(65, 105, 225));
colorDb.put("DODGERBLUE", makeColor(30, 144, 255));
colorDb.put("DEEPSKYBLUE", makeColor(0, 191, 255));
colorDb.put("CORNFLOWERBLUE", makeColor(100, 149, 237));
colorDb.put("STEEL BLUE", makeColor(70, 130, 180));
colorDb.put("STEELBLUE", makeColor(70, 130, 180));
colorDb.put("LIGHTSKYBLUE", makeColor(135, 206, 250));
colorDb.put("DARK TURQUOISE", makeColor(0, 206, 209));
colorDb.put("DARKTURQUOISE", makeColor(0, 206, 209));
colorDb.put("CYAN", makeColor(0, 255, 255));
colorDb.put("AQUA", makeColor(0, 255, 255));
colorDb.put("DARKCYAN", makeColor(0, 139, 139));
colorDb.put("TEAL", makeColor(0, 128, 128));
colorDb.put("SKY BLUE", makeColor(135, 206, 235));
colorDb.put("SKYBLUE", makeColor(135, 206, 235));
colorDb.put("CADET BLUE", makeColor(96, 160, 160));
colorDb.put("CADETBLUE", makeColor(95, 158, 160));
colorDb.put("DARK SLATE GRAY", makeColor(47, 79, 79));
colorDb.put("DARKSLATEGRAY", makeColor(47, 79, 79));
colorDb.put("LIGHTSLATEGRAY", makeColor(119, 136, 153));
colorDb.put("SLATEGRAY", makeColor(112, 128, 144));
colorDb.put("LIGHT STEEL BLUE", makeColor(176, 196, 222));
colorDb.put("LIGHTSTEELBLUE", makeColor(176, 196, 222));
colorDb.put("LIGHT BLUE", makeColor(173, 216, 230));
colorDb.put("LIGHTBLUE", makeColor(173, 216, 230));
colorDb.put("POWDERBLUE", makeColor(176, 224, 230));
colorDb.put("PALETURQUOISE", makeColor(175, 238, 238));
colorDb.put("LIGHTCYAN", makeColor(224, 255, 255));
colorDb.put("ALICEBLUE", makeColor(240, 248, 255));
colorDb.put("AZURE", makeColor(240, 255, 255));
colorDb.put("MEDIUM BLUE", makeColor(0, 0, 205));
colorDb.put("MEDIUMBLUE", makeColor(0, 0, 205));
colorDb.put("DARKBLUE", makeColor(0, 0, 139));
colorDb.put("MIDNIGHT BLUE", makeColor(25, 25, 112));
colorDb.put("MIDNIGHTBLUE", makeColor(25, 25, 112));
colorDb.put("NAVY", makeColor(36, 36, 140));
colorDb.put("BLUE", makeColor(0, 0, 255));
colorDb.put("INDIGO", makeColor(75, 0, 130));
colorDb.put("BLUE VIOLET", makeColor(138, 43, 226));
colorDb.put("BLUEVIOLET", makeColor(138, 43, 226));
colorDb.put("MEDIUM SLATE BLUE", makeColor(123, 104, 238));
colorDb.put("MEDIUMSLATEBLUE", makeColor(123, 104, 238));
colorDb.put("SLATE BLUE", makeColor(106, 90, 205));
colorDb.put("SLATEBLUE", makeColor(106, 90, 205));
colorDb.put("PURPLE", makeColor(160, 32, 240));
colorDb.put("DARK SLATE BLUE", makeColor(72, 61, 139));
colorDb.put("DARKSLATEBLUE", makeColor(72, 61, 139));
colorDb.put("DARKVIOLET", makeColor(148, 0, 211));
colorDb.put("DARK ORCHID", makeColor(153, 50, 204));
colorDb.put("DARKORCHID", makeColor(153, 50, 204));
colorDb.put("MEDIUMPURPLE", makeColor(147, 112, 219));
colorDb.put("CORNFLOWER BLUE", makeColor(68, 64, 108));
colorDb.put("MEDIUM ORCHID", makeColor(186, 85, 211));
colorDb.put("MEDIUMORCHID", makeColor(186, 85, 211));
colorDb.put("MAGENTA", makeColor(255, 0, 255));
colorDb.put("FUCHSIA", makeColor(255, 0, 255));
colorDb.put("DARKMAGENTA", makeColor(139, 0, 139));
colorDb.put("VIOLET", makeColor(238, 130, 238));
colorDb.put("PLUM", makeColor(221, 160, 221));
colorDb.put("LAVENDER", makeColor(230, 230, 250));
colorDb.put("THISTLE", makeColor(216, 191, 216));
colorDb.put("GHOSTWHITE", makeColor(248, 248, 255));
colorDb.put("WHITE", makeColor(255, 255, 255));
colorDb.put("WHITESMOKE", makeColor(245, 245, 245));
colorDb.put("GAINSBORO", makeColor(220, 220, 220));
colorDb.put("LIGHT GRAY", makeColor(211, 211, 211));
colorDb.put("LIGHTGRAY", makeColor(211, 211, 211));
colorDb.put("SILVER", makeColor(192, 192, 192));
colorDb.put("GRAY", makeColor(190, 190, 190));
colorDb.put("DARK GRAY", makeColor(169, 169, 169));
colorDb.put("DARKGRAY", makeColor(169, 169, 169));
colorDb.put("DIM GRAY", makeColor(105, 105, 105));
colorDb.put("DIMGRAY", makeColor(105, 105, 105));
colorDb.put("BLACK", makeColor(0, 0, 0));



EXPORTS['_colorDb'] = colorDb;

// Basic implementation of the image library.
//
// This should mimic the implementation of 2htdp/image.


//////////////////////////////////////////////////////////////////////
var colorNamespace = MACHINE.modules['whalesong/image/private/color.rkt'].getExternalExports();
var colorStruct = colorNamespace.get('struct:color');
var makeColor = function(r,g,b,a) { return colorStruct.constructor([r,g,b,a]); };
var isColor = colorStruct.predicate;
var colorRed = function(c) { return colorStruct.accessor(c, 0); };
var colorGreen = function(c) { return colorStruct.accessor(c, 1); };
var colorBlue = function(c) { return colorStruct.accessor(c, 2); };
var colorAlpha = function(c) { return colorStruct.accessor(c, 3); };
var equals = plt.baselib.equality.equals;
//////////////////////////////////////////////////////////////////////

var heir = plt.baselib.heir;
var clone = plt.baselib.clone;




var isAngle = function(x) {
    return plt.baselib.numbers.isReal(x) &&
        jsnums.greaterThanOrEqual(x, 0) &&
        jsnums.lessThan(x, 360);
};
// differentiate between rotation angle and other angles
var isRotateAngle = function(x) {
    return plt.baselib.numbers.isReal(x);
};


// Produces true if the value is a color or a color string.
// On the Racket side of things, this is exposed as image-color?.
var isColorOrColorString = function(thing) {
    return (isColor(thing) ||
            ((plt.baselib.strings.isString(thing) ||
              plt.baselib.symbols.isSymbol(thing)) &&
              typeof(colorDb.get(thing)) != 'undefined'));
};




//////////////////////////////////////////////////////////////////////
// colorString : hexColor -> rgba
var colorString = function(aColor) {
  return "rgba(" + colorRed(aColor) + "," +
                  colorGreen(aColor) + ", " +
                  colorBlue(aColor) + ", " +
                  (colorAlpha(aColor) || 255)/255.0 + ")";
};




var isSideCount = function(x) {
    return plt.baselib.numbers.isInteger(x) && jsnums.greaterThanOrEqual(x, 3);
};

var isStepCount = function(x) {
    return plt.baselib.numbers.isInteger(x) && jsnums.greaterThanOrEqual(x, 1);
};


var isPointsCount = function(x) {
    return plt.baselib.numbers.isNatural(x) && jsnums.greaterThanOrEqual(x, 2); 
};





// Produces true if thing is an image-like object.
var isImage = function(thing) {
    if (typeof(thing.getHeight) !== 'function')
        return false;
    if (typeof(thing.getWidth) !== 'function')
        return false;
    if (typeof(thing.getBaseline) !== 'function')
        return false;
    if (typeof(thing.updatePinhole) !== 'function')
        return false;
    if (typeof(thing.render) !== 'function')
        return false;
    return true;
};

// given two arrays of {x,y} structs, determine their equivalence
var verticesEqual = function(v1, v2){
  if(v1.length !== v2.length){ return false; }
  for(var i=0; i< v1.length; i++){
    if(v1[i].x !== v2[i].x || v1[i].y !== v2[i].y){ return false; }
  }
  return true;
};
// given two arrays of xs and ys, zip them into a vertex array
var zipVertices = function(xs, ys){
  if(xs.length !== ys.length){throw new Error('failure in zipVertices');}
  var vertices = [];
  for(var i=0; i<xs.length;i++){
    vertices.push({x: xs[i], y: ys[i]});
  }
  return vertices;
};


// Base class for all images.
var BaseImage = function() {};



BaseImage.prototype.updatePinhole = function(x, y) {
    var aCopy = clone(this);
    aCopy.pinholeX = x;
    aCopy.pinholeY = y;
    return aCopy;
};

BaseImage.prototype.getHeight = function(){
    return this.height;
};

BaseImage.prototype.getWidth = function(){
    return this.width;
};

BaseImage.prototype.getBaseline = function(){
    return this.height;
};

// return the vertex array if it exists, otherwise make one using height and width
BaseImage.prototype.getVertices = function(){
  if(this.vertices){ return this.vertices; }
  else{ return [{x:0 , y: 0},
                {x: this.width, y: 0},
                {x: 0, y: this.height},
                {x: this.width, y: this.height}]; }
};

// render: context fixnum fixnum: -> void
// Render the image, where the upper-left corner of the image is drawn at
// (x, y).
// If the image isn't vertex-based, throw an error
// Otherwise, stroke and fill the vertices.
BaseImage.prototype.render = function(ctx, x, y) {
  if(!this.vertices){
    throw new Error('BaseImage.render is not implemented for this type!');
  }
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(x+this.vertices[0].x, y+this.vertices[0].y);
  for(var i=1; i < this.vertices.length; i++){
    ctx.lineTo(x+this.vertices[i].x, y+this.vertices[i].y);
  }
  ctx.closePath();

  if (this.style.toString().toLowerCase() === "outline") {
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  } else {
    ctx.fillStyle = colorString(this.color);
    ctx.fill();
  }
  ctx.restore();
};


// makeCanvas: number number -> canvas
// Constructs a canvas object of a particular width and height.
var makeCanvas = function(width, height) {
    var canvas = document.createElement("canvas");
    canvas.width = width;
    canvas.height = height;

    jQuery(canvas).css('width', canvas.width + "px");
    jQuery(canvas).css('height', canvas.height + "px");
    jQuery(canvas).css('padding', '0px');

    // KLUDGE: IE compatibility uses /js/excanvas.js, and dynamic
    // elements must be marked this way.
    if (window.G_vmlCanvasManager) {
	canvas = window.G_vmlCanvasManager.initElement(canvas);
    }
    return canvas;
};



var withIeHack = function(canvas, f) {
    // 	canvas.style.display = 'none';
    // 	document.body.appendChild(canvas);
    // 	try {
    var result = f(canvas);
    // 	} catch(e) {
    // 	    document.body.removeChild(canvas);
    // 	    canvas.style.display = '';
    // 	    throw e;
    // 	}
    // 	document.body.removeChild(canvas);
    // 	canvas.style.display = '';
    return result;
};



// Images are expected to define a render() method, which is used
// here to draw to the canvas.
BaseImage.prototype.toDomNode = function(params) {
    var that = this;
    var width = that.getWidth();
    var height = that.getHeight();
    var canvas = makeCanvas(width, height);
    var ctx;

    // // Try best effort to render to screen at this point.
    // try {
    //     ctx = canvas.getContext("2d");
    //     that.render(ctx, 0, 0);
    // } catch (e) {
    // }
    // KLUDGE: on IE, the canvas rendering functions depend on a
    // context where the canvas is attached to the DOM tree.
    // We initialize an afterAttach hook; the client's responsible
    // for calling this after the dom node is attached to the
    // document.
    var onAfterAttach = function(event) {
        // jQuery(canvas).unbind('afterAttach', onAfterAttach);
        var ctx = this.getContext("2d");
      that.render(ctx, 0, 0);
    };
    jQuery(canvas).bind('afterAttach', onAfterAttach);

    // Canvases lose their drawn content on cloning.  data may help us to preserve it.
    jQuery(canvas).data('toRender', onAfterAttach);

    return canvas;
};




BaseImage.prototype.toWrittenString = function(cache) { return "<image>"; }
BaseImage.prototype.toDisplayedString = function(cache) { return "<image>"; }

// Best-Guess equivalence for images. If they're vertex-based we're in luck,
// otherwise we go pixel-by-pixel. It's up to exotic image types to provide
// more efficient ways of comparing one another
BaseImage.prototype.equals = function(other, aUnionFind) {
  if(this.width    !== other.getWidth()    ||
     this.height   !== other.getHeight()){ return false; }
  // if they're both vertex-based images, all we need to compare are
  // their styles, vertices and color
  if(this.vertices && other.vertices){
    return (this.style    === other.style &&
            verticesEqual(this.vertices, other.vertices) &&
            equals(this.color, other.color, aUnionFind));
  }
  // if it's something more sophisticated, render both images to canvases
  // First check canvas dimensions, then go pixel-by-pixel
  var c1 = this.toDomNode(), c2 = other.toDomNode();
  if(c1.width !== c2.width || c1.height !== c2.height){ return false;}
  try{
    var ctx1 = c1.getContext('2d'), ctx2 = c2.getContext('2d'),
    data1 = ctx1.getImageData(0, 0, c1.width, c1.height),
    data2 = ctx2.getImageData(0, 0, c2.width, c2.height);
    var pixels1 = data1.data,
    pixels2 = data2.data;
    for(var i = 0; i < pixels1.length; i++){
      if(pixels1[i] !== pixels2[i]){ return false; }
    }
  } catch(e){
    // if we violate CORS, just bail
    return false;
  }
  // if, after all this, we're still good...then they're equal!
  return true;
};




// isScene: any -> boolean
// Produces true when x is a scene.
var isScene = function(x) {
    return ((x != undefined) && (x != null) && (x instanceof SceneImage));
};


//////////////////////////////////////////////////////////////////////
// SceneImage: primitive-number primitive-number color (listof image) boolean -> Scene
var SceneImage = function(width, height, color, children, withBorder) {
  BaseImage.call(this);
  this.width    = width;
  this.height   = height;
  this.children = children; // arrayof [image, number, number]
  this.withBorder = withBorder;
  this.color    = color;
};
SceneImage.prototype = heir(BaseImage.prototype);

// add: image primitive-number primitive-number -> Scene
SceneImage.prototype.add = function(anImage, x, y) {
  return new SceneImage(this.width,
                        this.height,
                        null,
                        this.children.concat([[anImage,
                                               x - anImage.getWidth()/2,
                                               y - anImage.getHeight()/2]]),
                        this.withBorder);
};

// render: 2d-context primitive-number primitive-number -> void
SceneImage.prototype.render = function(ctx, x, y) {
  var i;
  var childImage, childX, childY;
  // create a clipping region around the boundaries of the Scene
  ctx.save();
  // if no color is defined, default to transparent
  ctx.fillStyle = this.color? colorString(this.color) : "rgba(0,0,0,0)";
  ctx.fillRect(x, y, this.width, this.height);
  ctx.restore();
  // save the context, reset the path, and clip to the path around the scene edge
  ctx.save();
  ctx.beginPath();
  ctx.rect(x, y, this.width, this.height);
  ctx.clip();
  // Ask every object to render itself inside the region
  for(i = 0; i < this.children.length; i++) {
    // then, render the child images
    childImage = this.children[i][0];
    childX = this.children[i][1];
    childY = this.children[i][2];
    childImage.render(ctx, childX + x, childY + y);
  }
  // unclip
  ctx.restore();
  
  if (this.withBorder) {
    ctx.strokeStyle = 'black';
    ctx.strokeRect(x, y, this.width, this.height);
  }
};

SceneImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof SceneImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  if (this.width    !== other.width ||
      this.height   !== other.height ||
      this.children.length !== other.children.length) {
    return false;
  }
  
  for (var i = 0; i < this.children.length; i++) {
    var rec1 = this.children[i];
    var rec2 = other.children[i];
    if (rec1[1] !== rec2[1] ||
        rec1[2] !== rec2[2] ||
        !equals(rec1[0], rec2[0], aUnionFind)) {
      return false;
    }
  }
  return true;
};

//////////////////////////////////////////////////////////////////////
// FileImage: string node -> Image
var FileImage = function(src, rawImage) {
  BaseImage.call(this);
  var self = this;
  this.src = src;
  this.isLoaded = false;
  
  // animationHack: see installHackToSupportAnimatedGifs() for details.
  this.animationHackImg = undefined;
  
  if (rawImage && rawImage.complete) {
    this.img = rawImage;
    this.isLoaded = true;
    self.width = self.img.width;
    self.height = self.img.height;
  } else {
    // fixme: we may want to do something blocking here for
    // onload, since we don't know at this time what the file size
    // should be, nor will drawImage do the right thing until the
    // file is loaded.
    this.img = new Image();
    this.img.onload = function() {
	    self.isLoaded = true;
      self.width = self.img.width;
      self.height = self.img.height;
    };
    this.img.onerror = function(e) {
	    self.img.onerror = "";
	    self.img.src = "http://www.wescheme.org/images/broken.png";
    }
    this.img.src = src;
  }
}
FileImage.prototype = heir(BaseImage.prototype);


var imageCache = {};
FileImage.makeInstance = function(path, rawImage) {
  if (! (path in imageCache)) {
    imageCache[path] = new FileImage(path, rawImage);
  }
  return imageCache[path];
};

FileImage.installInstance = function(path, rawImage) {
  imageCache[path] = new FileImage(path, rawImage);
};

FileImage.installBrokenImage = function(path) {
  imageCache[path] = new TextImage("Unable to load " + path, 10, colorDb.get("red"),
                                   "normal", "Optimer","","",false);
};



FileImage.prototype.render = function(ctx, x, y) {
  this.installHackToSupportAnimatedGifs();
  ctx.drawImage(this.animationHackImg, x, y);
};


// The following is a hack that we use to allow animated gifs to show
// as animating on the canvas.
FileImage.prototype.installHackToSupportAnimatedGifs = function() {
  if (this.animationHackImg) { return; }
  this.animationHackImg = this.img.cloneNode(true);
  document.body.appendChild(this.animationHackImg);
  this.animationHackImg.style.position = 'absolute';
  this.animationHackImg.style.top = '-2000px';
};


FileImage.prototype.getWidth = function() {
  return this.img.width;
};


FileImage.prototype.getHeight = function() {
  return this.img.height;
};

// Override toDomNode: we don't need a full-fledged canvas here.
FileImage.prototype.toDomNode = function(params) {
  return this.img.cloneNode(true);
};

FileImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FileImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.src === other.src);
};

//////////////////////////////////////////////////////////////////////
// FileVideo: String Node -> Video
var FileVideo = function(src, rawVideo) {
    BaseImage.call(this);
    var self = this;
    this.src = src;
    if (rawVideo) {
	this.video			= rawVideo;
	this.width			= self.video.videoWidth;
	this.height			= self.video.videoHeight;
	this.video.volume	= 1;
	this.video.poster	= "http://www.wescheme.org/images/broken.png";
	this.video.autoplay	= true;
	this.video.autobuffer=true;
	this.video.loop		= true;
	this.video.play();
    } else {
	// fixme: we may want to do something blocking here for
	// onload, since we don't know at this time what the file size
	// should be, nor will drawImage do the right thing until the
	// file is loaded.
	this.video = document.createElement('video');
	this.video.src = src;
	this.video.addEventListener('canplay', function() {
	    this.width			= self.video.videoWidth;
	    this.height			= self.video.videoHeight;
	    this.video.poster	= "http://www.wescheme.org/images/broken.png";
	    this.video.autoplay	= true;
	    this.video.autobuffer=true;
	    this.video.loop		= true;
	    this.video.play();
	});
	this.video.addEventListener('error', function(e) {
	    self.video.onerror = "";
	    self.video.poster = "http://www.wescheme.org/images/broken.png";
	});
    }
}
FileVideo.prototype = heir(BaseImage.prototype);

var videos = {};
FileVideo.makeInstance = function(path, rawVideo) {
    if (! (path in FileVideo)) {
	videos[path] = new FileVideo(path, rawVideo);
    } 
    return videos[path];
};

FileVideo.prototype.render = function(ctx, x, y) {
    ctx.drawImage(this.video, x, y);
};
FileVideo.prototype.equals = function(other, aUnionFind) {
    return (other instanceof FileVideo) && (this.src === other.src);
};

//////////////////////////////////////////////////////////////////////
// FileAudio: String Boolean Audio -> FileAudio
var FileAudio = function(src, loop, rawAudio) {
    this.src = src;
    if(rawAudio) {
        this.audio = rawAudio;
    }
    else {
        this.audio = document.createElement('audio');
    }
    this.audio.src = src;
    this.audio.autoplay         = false;
    this.audio.autobuffer       = true;
    // the below caused firefox to hang (but things work ok without it)
    // this.audio.currentTime      = 0;
    this.audio.loop             = loop;
    return true;
};

FileAudio.makeInstance = function(path, loop, rawAudio) {
    return new FileAudio(path, loop, rawAudio);
};

FileAudio.prototype.play = function () {
    this.audio.play();
    return true;
}



//////////////////////////////////////////////////////////////////////
// ImageDataImage: imageData -> image
// Given an array of pixel data, create an image
var ImageDataImage = function(imageData) {
  BaseImage.call(this);
  this.imageData= imageData;
  this.width    = imageData.width;
  this.height   = imageData.height;
};

ImageDataImage.prototype = heir(BaseImage.prototype);

ImageDataImage.prototype.render = function(ctx, x, y) {
  ctx.putImageData(this.imageData, x, y);
};


//////////////////////////////////////////////////////////////////////
// OverlayImage: image image placeX placeY -> image
// Creates an image that overlays img1 on top of the
// other image img2.
var OverlayImage = function(img1, img2, placeX, placeY) {
  BaseImage.call(this);
  
  // An overlay image consists of width, height, x1, y1, x2, and
  // y2.  We need to compute these based on the inputs img1,
  // img2, placex, and placey.
  
  // placeX and placeY may be non-numbers, in which case their values
  // depend on the img1 and img2 geometry.

  var x1, y1, x2, y2;
  
  if (placeX === "left") {
    x1 = 0;
    x2 = 0;
  } else if (placeX === "right") {
    x1 = Math.max(img1.getWidth(), img2.getWidth()) - img1.getWidth();
    x2 = Math.max(img1.getWidth(), img2.getWidth()) - img2.getWidth();
  } else if (placeX === "beside") {
    x1 = 0;
    x2 = img1.getWidth();
  } else if (placeX === "middle" || placeX === "center") {
    x1 = Math.max(img1.getWidth(), img2.getWidth())/2 - img1.getWidth()/2;
    x2 = Math.max(img1.getWidth(), img2.getWidth())/2 - img2.getWidth()/2;
  } else {
    x1 = Math.max(placeX, 0) - placeX;
    x2 = Math.max(placeX, 0);
  }
  
  if (placeY === "top") {
    y1 = 0;
    y2 = 0;
  } else if (placeY === "bottom") {
    y1 = Math.max(img1.getHeight(), img2.getHeight()) - img1.getHeight();
    y2 = Math.max(img1.getHeight(), img2.getHeight()) - img2.getHeight();
  } else if (placeY === "above") {
    y1 = 0;
    y2 = img1.getHeight();
  } else if (placeY === "baseline") {
    y1 = Math.max(img1.getBaseline(), img2.getBaseline()) - img1.getBaseline();
    y2 = Math.max(img1.getBaseline(), img2.getBaseline()) - img2.getBaseline();
  } else if (placeY === "middle" || placeY === "center") {
    y1 = Math.max(img1.getHeight(), img2.getHeight())/2 - img1.getHeight()/2;
    y2 = Math.max(img1.getHeight(), img2.getHeight())/2 - img2.getHeight()/2;
  } else {
    y1 = Math.max(placeY, 0) - placeY;
    y2 = Math.max(placeY, 0);
  }
  
  // calculate the vertices of this image by translating the verticies of the sub-images
  var i, v1 = img1.getVertices(), v2 = img2.getVertices(), xs = [], ys = [];

  for(i=0; i<v1.length; i++){
    xs.push(Math.round(v1[i].x + x1));
    ys.push(Math.round(v1[i].y + y1));
  }
  for(i=0; i<v2.length; i++){
    xs.push(Math.round(v2[i].x + x2));
    ys.push(Math.round(v2[i].y + y2));
  }
  
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs, ys);
  this.width  = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  
  // store the offsets for rendering
  this.x1 = Math.floor(x1);
  this.y1 = Math.floor(y1);
  this.x2 = Math.floor(x2);
  this.y2 = Math.floor(y2);
  this.img1 = img1;
  this.img2 = img2;
};

OverlayImage.prototype = heir(BaseImage.prototype);

OverlayImage.prototype.getVertices = function() { return this._vertices; };

OverlayImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  this.img2.render(ctx, x + this.x2, y + this.y2);
  this.img1.render(ctx, x + this.x1, y + this.y1);
  ctx.restore();
};

OverlayImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof OverlayImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.x1        === other.x1 &&
          this.y1        === other.y1 &&
          this.x2        === other.x2 &&
          this.y2        === other.y2 &&
          equals(this.img1, other.img1, aUnionFind) &&
          equals(this.img2, other.img2, aUnionFind) );
};


//////////////////////////////////////////////////////////////////////
// RotateImage: angle image -> image
// Rotates image by angle degrees in a *clockwise* direction.
// NOTE: the angle direction differs from the rotate function.
// TODO: special case for ellipse?
var RotateImage = function(angle, img) {
  BaseImage.call(this);
  var sin   = Math.sin(angle * Math.PI / 180);
  var cos   = Math.cos(angle * Math.PI / 180);
  var width = img.getWidth();
  var height= img.getHeight();
  
  // rotate each point as if it were rotated about (0,0)
  var vertices = img.getVertices(), xs = [], ys = [];
  for(var i=0; i<vertices.length; i++){
    xs[i] = Math.round(vertices[i].x*cos - vertices[i].y*sin);
    ys[i] = Math.round(vertices[i].x*sin + vertices[i].y*cos);
  }
  // figure out what translation is necessary to shift the vertices back to 0,0
  var translateX = Math.floor(-Math.min.apply( Math, xs ));
  var translateY = Math.floor(-Math.min.apply( Math, ys ));
  for(var i=0; i<vertices.length; i++){
    xs[i] += translateX;
    ys[i] += translateY;
  }
  
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs,ys);
  var rotatedWidth  = Math.max.apply( Math, xs ) - Math.min.apply( Math, xs );
  var rotatedHeight = Math.max.apply( Math, ys ) - Math.min.apply( Math, ys );
  
  this.img        = img;
  this.width      = Math.floor(rotatedWidth);
  this.height     = Math.floor(rotatedHeight);
  this.angle      = angle;
  this.translateX = translateX;
  this.translateY  = translateY;
};

RotateImage.prototype = heir(BaseImage.prototype);

RotateImage.prototype.getVertices = function() { return this._vertices; };

// translate the canvas using the calculated values, then draw at the rotated (x,y) offset.
RotateImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.translate(x+this.translateX, y + this.translateY);
  ctx.rotate(this.angle * Math.PI / 180);
  this.img.render(ctx, 0, 0);
  ctx.restore();
};

RotateImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof RotateImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.angle     === other.angle &&
          this.translateX=== other.translateX &&
          this.translateY=== other.translateY &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// ScaleImage: factor factor image -> image
// Scale an image
var ScaleImage = function(xFactor, yFactor, img) {
  BaseImage.call(this);
  var vertices = img.getVertices();
  var xs = [], ys = [];
  for(var i=0; i<vertices.length; i++){
    xs[i] = Math.round(vertices[i].x*xFactor);
    ys[i] = Math.round(vertices[i].y*yFactor);
  }
  // store the vertices as something private, so this.getVertices() will still return undefined
  this._vertices = zipVertices(xs,ys);
  
  this.img      = img;
  this.width    = Math.floor(img.getWidth() * xFactor);
  this.height   = Math.floor(img.getHeight() * yFactor);
  this.xFactor  = xFactor;
  this.yFactor  = yFactor;
};

ScaleImage.prototype = heir(BaseImage.prototype);

ScaleImage.prototype.getVertices = function() { return this._vertices; };

// scale the context, and pass it to the image's render function
ScaleImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.scale(this.xFactor, this.yFactor);
  this.img.render(ctx, x / this.xFactor, y / this.yFactor);
  ctx.restore();
};

ScaleImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof ScaleImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.xFactor   === other.xFactor &&
          this.yFactor   === other.yFactor &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// CropImage: startX startY width height image -> image
// Crop an image
var CropImage = function(x, y, width, height, img) {
  BaseImage.call(this);
  this.x          = x;
  this.y          = y;
  this.width      = width;
  this.height     = height;
  this.img        = img;
};

CropImage.prototype = heir(BaseImage.prototype);

CropImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.beginPath();
  ctx.rect(x, y, this.width, this.height);
  ctx.clip();
  ctx.translate(-this.x, -this.y);
  this.img.render(ctx, x, y);
  ctx.restore();
};

CropImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof CropImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.x         === other.x &&
          this.y         === other.y &&
          equals(this.img, other.img, aUnionFind) );
};

//////////////////////////////////////////////////////////////////////
// FrameImage: factor factor image -> image
// Stick a frame around the image
var FrameImage = function(img) {
  BaseImage.call(this);
  this.img        = img;
  this.width      = img.getWidth();
  this.height     = img.getHeight();
};

FrameImage.prototype = heir(BaseImage.prototype);

// scale the context, and pass it to the image's render function
FrameImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  this.img.render(ctx, x, y);
  ctx.beginPath();
  ctx.strokeStyle = "black";
  ctx.strokeRect(x, y, this.width, this.height);
  ctx.closePath();
  ctx.restore();
};

FrameImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FrameImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return equals(this.img, other.img, aUnionFind);
};

//////////////////////////////////////////////////////////////////////
// FlipImage: image string -> image
// Flip an image either horizontally or vertically
var FlipImage = function(img, direction) {
  BaseImage.call(this);
  this.img        = img;
  this.width      = img.getWidth();
  this.height     = img.getHeight();
  this.direction  = direction;
};

FlipImage.prototype = heir(BaseImage.prototype);

FlipImage.prototype.render = function(ctx, x, y) {
  // when flipping an image of dimension M and offset by N across an axis,
  // we need to translate the canvas by M+2N in the opposite direction
  ctx.save();
  if(this.direction === "horizontal"){
    ctx.scale(-1, 1);
    ctx.translate(-(this.width+2*x), 0);
    this.img.render(ctx, x, y);
  }
  if (this.direction === "vertical"){
    ctx.scale(1, -1);
    ctx.translate(0, -(this.height+2*y));
    this.img.render(ctx, x, y);
  }
  ctx.restore();
};

FlipImage.prototype.getWidth = function() {
  return this.width;
};

FlipImage.prototype.getHeight = function() {
  return this.height;
};

FlipImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof FlipImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width     === other.width &&
          this.height    === other.height &&
          this.direction === other.direction &&
          equals(this.img, other.img, aUnionFind) );
};




//////////////////////////////////////////////////////////////////////
// RectangleImage: Number Number Mode Color -> Image
var RectangleImage = function(width, height, style, color) {
  BaseImage.call(this);
  this.width  = width;
  this.height = height;
  this.style  = style;
  this.color  = color;
  this.vertices = [{x:0,y:height},{x:0,y:0},{x:width,y:0},{x:width,y:height}];
};
RectangleImage.prototype = heir(BaseImage.prototype);

RectangleImage.prototype.getWidth = function() {
  return this.width;
};

RectangleImage.prototype.getHeight = function() {
  return this.height;
};

//////////////////////////////////////////////////////////////////////
// RhombusImage: Number Number Mode Color -> Image
var RhombusImage = function(side, angle, style, color) {
  BaseImage.call(this);
  // sin(angle/2-in-radians) * side = half of base
  // cos(angle/2-in-radians) * side = half of height
  this.width  = Math.sin(angle/2 * Math.PI / 180) * side * 2;
  this.height = Math.abs(Math.cos(angle/2 * Math.PI / 180)) * side * 2;
  this.side   = side;
  this.angle  = angle;
  this.style  = style;
  this.color  = color;
  this.vertices = [{x:this.width/2, y:0},
                   {x:this.width,   y:this.height/2},
                   {x:this.width/2, y:this.height},
                   {x:0,            y:this.height/2}];
  
};
RhombusImage.prototype = heir(BaseImage.prototype);

RhombusImage.prototype.getWidth = function() {
  return this.width;
};

RhombusImage.prototype.getHeight = function() {
  return this.height;
};

//////////////////////////////////////////////////////////////////////
// PosnImage: Vertices Mode Color -> Image
//
var PosnImage = function(vertices, style, color) {
  BaseImage.call(this);
  var xs = vertices.map(function(v){return types.posnX(v);}),
  ys = vertices.map(function(v){return types.posnY(v);}),
  vertices = zipVertices(xs, ys);
  
  this.width      = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height     = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  this.style      = style;
  this.color      = color;
  // shift the vertices by the calculated offsets, now that we know the width
  var xOffset = Math.min.apply(Math, xs);
  var yOffset = Math.min.apply(Math, ys);
  for(var i=0; i<vertices.length; i++){
    vertices[i].x -= xOffset; vertices[i].y -= yOffset;
  }
  this.vertices   = vertices;
};
PosnImage.prototype = heir(BaseImage.prototype);

//////////////////////////////////////////////////////////////////////
// PolygonImage: Number Count Step Mode Color -> Image
//
// See http://www.algebra.com/algebra/homework/Polygons/Inscribed-and-circumscribed-polygons.lesson
// the polygon is inscribed in a circle, whose radius is length/2sin(pi/count)
// another circle is inscribed in the polygon, whose radius is length/2tan(pi/count)
// rotate a 3/4 quarter turn plus half the angle length to keep bottom base level
var PolygonImage = function(length, count, step, style, color) {
  BaseImage.call(this);
  this.outerRadius = Math.floor(length/(2*Math.sin(Math.PI/count)));
  this.innerRadius = Math.floor(length/(2*Math.tan(Math.PI/count)));
  var adjust = (3*Math.PI/2)+Math.PI/count;
  
  // rotate around outer circle, storing x and y coordinates
  var radians = 0, xs = [], ys = [];
  for(var i = 0; i < count; i++) {
    radians = radians + (step*2*Math.PI/count);
    xs.push(Math.round(this.outerRadius*Math.cos(radians-adjust)));
    ys.push(Math.round(this.outerRadius*Math.sin(radians-adjust)));
  }
  var vertices = zipVertices(xs, ys);
  
  this.width      = Math.max.apply(Math, xs) - Math.min.apply(Math, xs);
  this.height     = Math.max.apply(Math, ys) - Math.min.apply(Math, ys);
  this.length     = length;
  this.count      = count;
  this.step       = step;
  this.style      = style;
  this.color      = color;
  
  // shift the vertices by the calculated offsets, now that we know the width
  var xOffset = Math.round(this.width/2);
  var yOffset = ((this.count % 2)? this.outerRadius : this.innerRadius);
  for(i=0; i<vertices.length; i++){
    vertices[i].x += xOffset; vertices[i].y += yOffset;
  }
  this.vertices   = vertices;
};

PolygonImage.prototype = heir(BaseImage.prototype);

var maybeQuote = function(s) {
  if (/ /.test(s)) {
    return "\"" + s + "\"";
  }
  return s;
};


//////////////////////////////////////////////////////////////////////
// TextImage: String Number Color String String String String any/c -> Image
var TextImage = function(msg, size, color, face, family, style, weight, underline) {
  BaseImage.call(this);
  var metrics;
  this.msg        = msg;
  this.size       = size;   // 18
  this.color      = color;  // red
  this.face       = face;   // Gill Sans
  this.family     = family; // 'swiss
  this.style      = (style === "slant")? "oblique" : style;  // Racket's "slant" -> CSS's "oblique"
  this.weight     = (weight=== "light")? "lighter" : weight; // Racket's "light" -> CSS's "lighter"
  this.underline  = underline;
  // example: "bold italic 20px 'Times', sans-serif".
  // Default weight is "normal", face is "Arial"
  
  // NOTE: we *ignore* font-family, as it causes a number of font bugs due the browser inconsistencies
  var canvas  = makeCanvas(0, 0),
      ctx     = canvas.getContext("2d");
  
  this.font = (this.style + " " +
               this.weight + " " +
               this.size + "px " +
               '"'+this.face+'", '+
               this.family);
  
  try {
    ctx.font    = this.font;
  } catch (e) {
    this.fallbackOnFont();
    ctx.font    = this.font;
  }
  
  // Defensive: on IE, this can break.
  try {
    metrics     = ctx.measureText(msg);
    this.width  = metrics.width;
    this.height = Number(this.size);
  } catch(e) {
    this.fallbackOnFont();
  }
};


TextImage.prototype = heir(BaseImage.prototype);

TextImage.prototype.fallbackOnFont = function() {
  // Defensive: if the browser doesn't support certain features, we
  // reduce to a smaller feature set and try again.
  this.font       = this.size + "px " + maybeQuote(this.family);
  var canvas      = makeCanvas(0, 0);
  var ctx         = canvas.getContext("2d");
  ctx.font        = this.font;
  var metrics     = ctx.measureText(this.msg);
  this.width      = metrics.width;
  // KLUDGE: I don't know how to get at the height.
  this.height     = Number(this.size);//ctx.measureText("m").width + 20;
};


TextImage.prototype.render = function(ctx, x, y) {
  ctx.save();
  ctx.textAlign   = 'left';
  ctx.textBaseline= 'top';
  ctx.fillStyle   = colorString(this.color);
  ctx.font        = this.font;
  try {
    ctx.fillText(this.msg, x, y);
  } catch (e) {
    this.fallbackOnFont();
    ctx.font = this.font;
    ctx.fillText(this.msg, x, y);
  }
  if(this.underline){
    ctx.beginPath();
    ctx.moveTo(x, y+this.size);
    // we use this.size, as it is more accurate for underlining than this.height
    ctx.lineTo(x+this.width, y+this.size);
    ctx.closePath();
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  }
  ctx.restore();
};

TextImage.prototype.getBaseline = function() {
  return this.size;
};

TextImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof TextImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.msg      === other.msg &&
          this.size     === other.size &&
          this.face     === other.face &&
          this.family   === other.family &&
          this.style    === other.style &&
          this.weight   === other.weight &&
          this.underline === other.underline &&
          equals(this.color, other.color, aUnionFind) &&
          this.font === other.font);
};


//////////////////////////////////////////////////////////////////////
// StarImage: fixnum fixnum fixnum color -> image
// Most of this code here adapted from the Canvas tutorial at:
// http://developer.apple.com/safari/articles/makinggraphicswithcanvas.html
var StarImage = function(points, outer, inner, style, color) {
  BaseImage.call(this);
  this.points     = points;
  this.outer      = outer;
  this.inner      = inner;
  this.style      = style;
  this.color      = color;
  this.radius     = Math.max(this.inner, this.outer);
  this.width      = this.radius*2;
  this.height     = this.radius*2;
  var vertices   = [];
  
  var oneDegreeAsRadian = Math.PI / 180;
  for(var pt = 0; pt < (this.points * 2) + 1; pt++ ) {
    var rads = ( ( 360 / (2 * this.points) ) * pt ) * oneDegreeAsRadian - 0.5;
    var radius = ( pt % 2 === 1 ) ? this.outer : this.inner;
    vertices.push({x:this.radius + ( Math.sin( rads ) * radius ),
                  y:this.radius + ( Math.cos( rads ) * radius )} );
  }
  this.vertices = vertices;
};

StarImage.prototype = heir(BaseImage.prototype);

/////////////////////////////////////////////////////////////////////
//TriangleImage: Number Number Number Mode Color -> Image
// Draws a triangle with the base = sideC, and the angle between sideC
// and sideB being angleA
// See http://docs.racket-lang.org/teachpack/2htdpimage.html#(def._((lib._2htdp/image..rkt)._triangle))
var TriangleImage = function(sideC, angleA, sideB, style, color) {
  BaseImage.call(this);
  this.width = sideC;
  this.height = Math.sqrt(Math.pow(sideB,2) - Math.pow(0.5*sideC,2));
  
  var vertices = [];
  // if angle < 180 start at the top of the canvas, otherwise start at the bottom
  if(angleA < 180){
    vertices.push({x: 0, y: 0});
    vertices.push({x: sideC, y: 0});
    vertices.push({x: sideB*Math.cos(angleA*Math.PI/180),
                   y: this.height});
  } else {
    vertices.push({x: 0, y: this.height - 0});
    vertices.push({x: sideC, y: this.height - 0});
    vertices.push({x: Math.abs(sideB*Math.cos(angleA*Math.PI/180)),
                   y: 0});
  }
  this.vertices = vertices;
  
  this.style = style;
  this.color = color;
};
TriangleImage.prototype = heir(BaseImage.prototype);

//////////////////////////////////////////////////////////////////////
//Ellipse : Number Number Mode Color -> Image
var EllipseImage = function(width, height, style, color) {
  BaseImage.call(this);
  this.width = width;
  this.height = height;
  this.style = style;
  this.color = color;
};

EllipseImage.prototype = heir(BaseImage.prototype);

EllipseImage.prototype.render = function(ctx, aX, aY) {
  ctx.save();
  ctx.beginPath();
  
  // Most of this code is taken from:
  // http://webreflection.blogspot.com/2009/01/ellipse-and-circle-for-canvas-2d.html
  var hB = (this.width / 2) * 0.5522848,
  vB = (this.height / 2) * 0.5522848,
  eX = aX + this.width,
  eY = aY + this.height,
  mX = aX + this.width / 2,
  mY = aY + this.height / 2;
  ctx.moveTo(aX, mY);
  ctx.bezierCurveTo(aX, mY - vB, mX - hB, aY, mX, aY);
  ctx.bezierCurveTo(mX + hB, aY, eX, mY - vB, eX, mY);
  ctx.bezierCurveTo(eX, mY + vB, mX + hB, eY, mX, eY);
  ctx.bezierCurveTo(mX - hB, eY, aX, mY + vB, aX, mY);
  ctx.closePath();
  if (this.style.toString().toLowerCase() === "outline") {
    ctx.strokeStyle = colorString(this.color);
    ctx.stroke();
  }
  else {
    ctx.fillStyle = colorString(this.color);
    ctx.fill();
  }
  
  ctx.restore();
};

EllipseImage.prototype.equals = function(other, aUnionFind) {
  if (!(other instanceof EllipseImage)) {
    return BaseImage.prototype.equals.call(this, other, aUnionFind);
  }
  return (this.width    === other.width &&
          this.height   === other.height &&
          this.style    === other.style &&
          equals(this.color, other.color, aUnionFind));
};


//////////////////////////////////////////////////////////////////////
// Line: Number Number Color Boolean -> Image
var LineImage = function(x, y, color) {
  BaseImage.call(this);
  var vertices;
  if (x >= 0) {
    if (y >= 0) { vertices = [{x:  0, y:  0}, {x: x, y: y}]; }
    else        { vertices = [{x:  0, y: -y}, {x: x, y: 0}]; }
  } else {
    if (y >= 0) { vertices = [{x: -x, y:  0}, {x: 0, y: y}]; }
    else        { vertices = [{x: -x, y: -y}, {x: 0, y: 0}]; }
  }
  // preserve the invariant that all vertex-based images have a style
  this.style  = "outline";
  this.color  = color;
  this.width  = Math.abs(x);
  this.height = Math.abs(y);
  this.vertices = vertices;
};

LineImage.prototype = heir(BaseImage.prototype);




var imageToColorList = function(img) {
    var width = img.getWidth(),
    height = img.getHeight(),
    canvas = makeCanvas(width, height),
    ctx = canvas.getContext("2d"),
    imageData,
    data,
    i,
    r, g, b, a;
    img.render(ctx, 0, 0);
    imageData = ctx.getImageData(0, 0, width, height);
    data = imageData.data;
    var colors = [];
    for (i = 0 ; i < data.length; i += 4) {
	r = data[i];
	g = data[i+1];
	b = data[i+2];
	a = data[i+3];
	colors.push(makeColor(r, g, b, a));
    }
    return plt.baselib.lists.arrayToList(colors);
}


var colorListToImage = function(listOfColors,
                                width,
                                height,
                                pinholeX,
                                pinholeY) {
    var canvas = makeCanvas(jsnums.toFixnum(width),
			    jsnums.toFixnum(height)),
    ctx = canvas.getContext("2d"),
    imageData = ctx.createImageData(jsnums.toFixnum(width),
				    jsnums.toFixnum(height)),
    data = imageData.data,
    aColor, i = 0;
    while (listOfColors !== plt.baselib.lists.EMPTY) {
	aColor = listOfColors.first;
	data[i] = jsnums.toFixnum(colorRed(aColor));
	data[i+1] = jsnums.toFixnum(colorGreen(aColor));
	data[i+2] = jsnums.toFixnum(colorBlue(aColor));
	data[i+3] = jsnums.toFixnum(colorAlpha(aColor));

	i += 4;
	listOfColors = listOfColors.rest;
    };

    return makeImageDataImage(imageData);
};













var makeSceneImage = function(width, height, color, children, withBorder) {
    return new SceneImage(width, height, color, children, withBorder);
};
var makeCircleImage = function(radius, style, color) {
    return new EllipseImage(2*radius, 2*radius, style, color);
};
var makeStarImage = function(points, outer, inner, style, color) {
    return new StarImage(points, outer, inner, style, color);
};
var makeRectangleImage = function(width, height, style, color) {
    return new RectangleImage(width, height, style, color);
};
var makeRhombusImage = function(side, angle, style, color) {
    return new RhombusImage(side, angle, style, color);
};
var makePosnImage = function(posns, style, color) {
  return new PosnImage(posns, style, color);
};
var makePolygonImage = function(length, count, step, style, color) {
    return new PolygonImage(length, count, step, style, color);
};
var makeSquareImage = function(length, style, color) {
    return new RectangleImage(length, length, style, color);
};
var makeTriangleImage = function(side, angle, side2, style, color) {
  return new TriangleImage(side, angle, side2, style, color);
};
var makeEllipseImage = function(width, height, style, color) {
    return new EllipseImage(width, height, style, color);
};
var makeLineImage = function(x, y, color, normalPinhole) {
    return new LineImage(x, y, color, normalPinhole);
};
var makeOverlayImage = function(img1, img2, X, Y) {
    return new OverlayImage(img1, img2, X, Y);
};
var makeRotateImage = function(angle, img) {
    return new RotateImage(angle, img);
};
var makeScaleImage = function(xFactor, yFactor, img) {
    return new ScaleImage(xFactor, yFactor, img);
};
var makeCropImage = function(x, y, width, height, img) {
    return new CropImage(x, y, width, height, img);
};
var makeFrameImage = function(img) {
    return new FrameImage(img);
};
var makeFlipImage = function(img, direction) {
    return new FlipImage(img, direction);
};
var makeTextImage = function(msg, size, color, face, family, style, weight, underline) {
    return new TextImage(msg, size, color, face, family, style, weight, underline);
};
var makeImageDataImage = function(imageData) {
    return new ImageDataImage(imageData);
};
var makeFileImage = function(path, rawImage) {
    return FileImage.makeInstance(path, rawImage);
};
var makeFileVideo = function(path, rawVideo) {
    return FileVideo.makeInstance(path, rawVideo);
};
var makeFileAudio = function(path, loop, rawAudio){
  return FileAudio.makeInstance(path, loop, rawAudio)
};


var isSceneImage = function(x) { return x instanceof SceneImage; };
var isCircleImage = function(x) { return x instanceof EllipseImage && 
                                  x.width === x.height; };
var isStarImage	= function(x) { return x instanceof StarImage; };
var isRectangleImage=function(x) { return x instanceof RectangleImage; };
var isPolygonImage = function(x) { return x instanceof PolygonImage; };
var isRhombusImage = function(x) { return x instanceof RhombusImage; };
var isSquareImage	= function(x) { return x instanceof SquareImage; };
var isTriangleImage= function(x) { return x instanceof TriangleImage; };
var isEllipseImage = function(x) { return x instanceof EllipseImage; };
var isLineImage	= function(x) { return x instanceof LineImage; };
var isOverlayImage = function(x) { return x instanceof OverlayImage; };
var isRotateImage	= function(x) { return x instanceof RotateImage; };
var isScaleImage	= function(x) { return x instanceof ScaleImage; };
var isCropImage	= function(x) { return x instanceof CropImage; };
var isFrameImage	= function(x) { return x instanceof FrameImage; };
var isFlipImage	= function(x) { return x instanceof FlipImage; };
var isTextImage	= function(x) { return x instanceof TextImage; };
var isFileImage	= function(x) { return x instanceof FileImage; };
var isFileVideo	= function(x) { return x instanceof FileVideo; };
var isFileAudio = function(x) { return x instanceof FileAudio; };



///////////////////////////////////////////////////////////////
// Exports

// These functions are available for direct access without the typechecks
// of the Racket-exposed functions.


EXPORTS.makeCanvas = makeCanvas;



EXPORTS.BaseImage = BaseImage;
EXPORTS.SceneImage = SceneImage;
EXPORTS.FileImage = FileImage;
EXPORTS.FileVideo = FileVideo;
EXPORTS.FileAudio = FileAudio
EXPORTS.OverlayImage = OverlayImage;
EXPORTS.RotateImage = RotateImage;
EXPORTS.ScaleImage = ScaleImage;
EXPORTS.CropImage = CropImage;
EXPORTS.FrameImage = FrameImage;
EXPORTS.FlipImage = FlipImage;
EXPORTS.RectangleImage = RectangleImage;
EXPORTS.RhombusImage = RhombusImage;
EXPORTS.ImageDataImage = ImageDataImage;
EXPORTS.PolygonImage = PolygonImage;
EXPORTS.TextImage = TextImage;
EXPORTS.StarImage = StarImage;
EXPORTS.TriangleImage = TriangleImage;
EXPORTS.EllipseImage = EllipseImage;
EXPORTS.LineImage = LineImage;
EXPORTS.StarImage = StarImage;



EXPORTS.colorDb = colorDb;

EXPORTS.makeSceneImage = makeSceneImage;
EXPORTS.makeCircleImage = makeCircleImage;
EXPORTS.makeStarImage = makeStarImage;
EXPORTS.makeRectangleImage = makeRectangleImage;
EXPORTS.makeRhombusImage = makeRhombusImage;
EXPORTS.makePolygonImage = makePolygonImage;
EXPORTS.makeSquareImage = makeSquareImage;
EXPORTS.makeTriangleImage = makeTriangleImage;
EXPORTS.makeEllipseImage = makeEllipseImage;
EXPORTS.makeLineImage = makeLineImage;
EXPORTS.makeOverlayImage = makeOverlayImage;
EXPORTS.makeRotateImage = makeRotateImage;
EXPORTS.makeScaleImage = makeScaleImage;
EXPORTS.makeCropImage = makeCropImage;
EXPORTS.makeFrameImage = makeFrameImage;
EXPORTS.makeFlipImage = makeFlipImage;
EXPORTS.makeTextImage = makeTextImage;
EXPORTS.makeImageDataImage = makeImageDataImage;
EXPORTS.makeFileImage = makeFileImage;
EXPORTS.makeFileVideo = makeFileVideo;
EXPORTS.makeFileAudio = makeFileAudio;
EXPORTS.imageToColorList = imageToColorList;
EXPORTS.colorListToImage = colorListToImage;


EXPORTS.isImage = isImage;
EXPORTS.isScene = isScene;
EXPORTS.isColorOrColorString = isColorOrColorString;
EXPORTS.isAngle = isAngle;
EXPORTS.isRotateAngle = isRotateAngle;
EXPORTS.isSideCount = isSideCount;
EXPORTS.isStepCount = isStepCount;
EXPORTS.isPointsCount = isPointsCount;


EXPORTS.isSceneImage = isSceneImage;
EXPORTS.isCircleImage = isCircleImage;
EXPORTS.isStarImage = isStarImage;
EXPORTS.isRectangleImage = isRectangleImage;
EXPORTS.isPolygonImage = isPolygonImage;
EXPORTS.isRhombusImage = isRhombusImage;
EXPORTS.isSquareImage = isSquareImage;
EXPORTS.isTriangleImage = isTriangleImage;
EXPORTS.isEllipseImage = isEllipseImage;
EXPORTS.isLineImage = isLineImage;
EXPORTS.isOverlayImage = isOverlayImage;
EXPORTS.isRotateImage = isRotateImage;
EXPORTS.isScaleImage = isScaleImage;
EXPORTS.isCropImage = isCropImage;
EXPORTS.isFrameImage = isFrameImage;
EXPORTS.isFlipImage = isFlipImage;
EXPORTS.isTextImage = isTextImage;
EXPORTS.isFileImage = isFileImage;
EXPORTS.isFileVideo = isFileVideo;
EXPORTS.isFileAudio = isFileAudio;


EXPORTS.makeColor = makeColor;
EXPORTS.isColor = isColor;
EXPORTS.colorRed = colorRed;
EXPORTS.colorGreen = colorGreen;
EXPORTS.colorBlue = colorBlue;
EXPORTS.colorAlpha = colorAlpha;


var makePrimitiveProcedure = plt.baselib.functions.makePrimitiveProcedure;
var makeClosure = plt.baselib.functions.makeClosure;
var finalizeClosureCall = plt.baselib.functions.finalizeClosureCall;
var PAUSE = plt.runtime.PAUSE;

var checkSymbolOrString = plt.baselib.check.checkSymbolOrString;

var isString = plt.baselib.strings.isString;
var isSymbol = plt.baselib.symbols.isSymbol;


var isFontFamily = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "default" ||
	     x.toString().toLowerCase() == "decorative" ||
	     x.toString().toLowerCase() == "roman" ||
	     x.toString().toLowerCase() == "script" ||
	     x.toString().toLowerCase() == "swiss" ||
	     x.toString().toLowerCase() == "modern" ||
	     x.toString().toLowerCase() == "symbol" ||
	     x.toString().toLowerCase() == "system"))
	|| (x === false);		// false is also acceptable
};
var isFontStyle = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "normal" ||
	     x.toString().toLowerCase() == "italic" ||
	     x.toString().toLowerCase() == "slant"))
	|| (x === false);		// false is also acceptable
};
var isFontWeight = function(x){
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "normal" ||
	     x.toString().toLowerCase() == "bold" ||
	     x.toString().toLowerCase() == "light"))
	|| (x === false);		// false is also acceptable
};
var isMode = function(x) {
	return ((isString(x) || isSymbol(x)) &&
          (x.toString().toLowerCase() == "solid" ||
           x.toString().toLowerCase() == "outline")) ||
         ((jsnums.isReal(x)) &&
          (jsnums.greaterThanOrEqual(x, 0) &&
           jsnums.lessThanOrEqual(x, 255)));
};

var isPlaceX = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "left"  ||
	     x.toString().toLowerCase() == "right" ||
	     x.toString().toLowerCase() == "center" ||
	     x.toString().toLowerCase() == "middle"));
};

var isPlaceY = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "top"	  ||
	     x.toString().toLowerCase() == "bottom"   ||
	     x.toString().toLowerCase() == "baseline" ||
	     x.toString().toLowerCase() == "center"   ||
	     x.toString().toLowerCase() == "middle"));
};

var isStyle = function(x) {
    return ((isString(x) || isSymbol(x)) &&
	    (x.toString().toLowerCase() == "solid" ||
	     x.toString().toLowerCase() == "outline"));
};



// Useful trigonometric functions based on htdp teachpack

// excess : compute the Euclidean excess
//  Note: If the excess is 0, then C is 90 deg.
//        If the excess is negative, then C is obtuse.
//        If the excess is positive, then C is acuse.
function excess(sideA, sideB, sideC) {
  return sideA*sideA + sideB*sideB - sideC*sideC;
}

// return c^2 = a^2 + b^2 - 2ab cos(C)
function cosRel(sideA, sideB, angleC) {
  return (sideA*sideA) + (sideB*sideB) - (2*sideA*sideB*Math.cos(angleC * Math.PI/180));
}

var less = function(lhs, rhs) {
  return (rhs - lhs) > 0.00001;
}

var checkString = plt.baselib.check.checkString;
var checkStringOrFalse = plt.baselib.check.makeCheckArgumentType(
    function(x) { return plt.baselib.strings.isString(x) || x === false; },
    "string or false");

var checkByte = plt.baselib.check.checkByte;
var checkReal = plt.baselib.check.checkReal;
var checkBoolean = plt.baselib.check.checkBoolean;

var checkNatural = plt.baselib.check.checkNatural;

var checkPositiveInteger = plt.baselib.check.makeCheckArgumentType(
    function(x) { return plt.baselib.numbers.isInteger(x) &&
		  plt.baselib.numbers.greaterThan(x, 0);},
    "positive integer");

var checkNonNegativeReal = plt.baselib.check.checkNonNegativeReal;


var _checkColor = plt.baselib.check.makeCheckArgumentType(
    isColorOrColorString,
    'color');

var checkColor = function(MACHINE, functionName, position) {
    var aColor = _checkColor(MACHINE, functionName, position);
    if (colorDb.get(aColor)) {
	aColor = colorDb.get(aColor);
    }
    return aColor;
};

var checkImage = plt.baselib.check.makeCheckArgumentType(
    isImage,
    'image');

var checkImageOrScene = plt.baselib.check.makeCheckArgumentType(
    function(x) { return isImage(x) || isScene(x); },
    'image or scene');

var checkFontFamily = plt.baselib.check.makeCheckArgumentType(
    isFontFamily,
    'font family');

var checkFontStyle = plt.baselib.check.makeCheckArgumentType(
    isFontStyle,
    'font style');

var checkFontWeight = plt.baselib.check.makeCheckArgumentType(
    isFontWeight,
    'font weight');

var checkPlaceX = plt.baselib.check.makeCheckArgumentType(
    isPlaceX,
    'x-place');

var checkPlaceY = plt.baselib.check.makeCheckArgumentType(
    isPlaceY,
    'y-place');


var checkAngle = plt.baselib.check.makeCheckArgumentType(
    isAngle,
    "finite real number between 0 and 360");
var checkRotateAngle = plt.baselib.check.makeCheckArgumentType(
    isRotateAngle,
    "finite real number between -360 and 360");


var checkMode = plt.baselib.check.makeCheckArgumentType(
    isMode,
    'solid or outline or [0-255]');


var checkSideCount = plt.baselib.check.makeCheckArgumentType(
    isSideCount,
    "positive integer greater than or equal to 3");


var checkStepCount = plt.baselib.check.makeCheckArgumentType(
    isStepCount,
    "positive integer greater than or equal to 1");


var checkPointsCount = plt.baselib.check.makeCheckArgumentType(
    isPointsCount,
    "positive integer greater than or equal to 2");


var checkListofColor = plt.baselib.check.makeCheckListofArgumentType(
    isColor,
    'color');



//////////////////////////////////////////////////////////////////////

EXPORTS['image=?'] =
    makePrimitiveProcedure(
        'image=?',
        2,
        function(MACHINE) {
          var img1 = checkImageOrScene(MACHINE,'image=?', 0);
          var img2 = checkImageOrScene(MACHINE,'image=?', 1);
         return img1.equals(img2);
        });


EXPORTS['image-color?'] =
    makePrimitiveProcedure(
        'image-color?',
        1,
        function(MACHINE) {
            var elt = MACHINE.e[MACHINE.e.length - 1];
            return (isColorOrColorString(elt));
        });



EXPORTS['mode?'] = 
    makePrimitiveProcedure(
        'mode?',
        1,
        function(MACHINE) {
            return isMode(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['x-place?'] = 
    makePrimitiveProcedure(
        'x-place?',
        1,
        function(MACHINE) {
            return isPlaceX(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['y-place?'] = 
    makePrimitiveProcedure(
        'y-place?',
        1,
        function(MACHINE) {
            return isPlaceY(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['angle?'] = 
    makePrimitiveProcedure(
        'angle?',
        1,
        function(MACHINE) {
            return isAngle(MACHINE.e[MACHINE.e.length - 1]);
        });

EXPORTS['side-count?'] = 
    makePrimitiveProcedure(
        'side-count?',
        1,
        function(MACHINE) {
            return isSideCount(MACHINE.e[MACHINE.e.length - 1]);
        });


EXPORTS['step-count?'] = 
    makePrimitiveProcedure(
        'step-count?',
            1,
        function(MACHINE) {
            return isStepCount(MACHINE.e[MACHINE.e.length - 1]);
        });


EXPORTS['image?'] = 
    makePrimitiveProcedure(
        'image?',
            1,
        function(MACHINE) {
            return isImage(MACHINE.e[MACHINE.e.length - 1]);
        });



EXPORTS['text'] =
    makePrimitiveProcedure(
        'text',
        3,
        function(MACHINE) {
	    var aString = checkString(MACHINE,'text', 0);
	    // Unlike 2htdp, we'll allow this to be a positive integer
	    var aSize = checkPositiveInteger(MACHINE, 'text', 1); 
	    var aColor = checkColor(MACHINE, 'text', 2);
	    return makeTextImage(aString.toString(), 
                                 jsnums.toFixnum(aSize),
                                 aColor,
				 "normal",
                                 "Optimer",
                                 "",
                                 "",
                                 false);
        });


EXPORTS['text/font'] = 
    makePrimitiveProcedure(
        'text/font',
        8,
        function(MACHINE) {
            var aString = checkString(MACHINE, "text/font", 0);
	    var aSize = checkByte(MACHINE, "text/font", 1);
	    var aColor = checkColor(MACHINE, "text/font", 2);
	    var aFace = checkStringOrFalse(MACHINE, "text/font", 3);
	    var aFamily = checkFontFamily(MACHINE, "text/font", 4);
	    var aStyle = checkFontStyle(MACHINE, "text/font", 5);
	    var aWeight = checkFontWeight(MACHINE, "text/font", 6);
	    var aUnderline = checkBoolean(MACHINE, "text/font", 7);
	    return makeTextImage(aString.toString(),
                                 jsnums.toFixnum(aSize),
                                 aColor,
				 aFace.toString(),
                                 aFamily.toString(),
                                 aStyle.toString(),
				 aWeight.toString(),
                                 aUnderline);
        });


EXPORTS['bitmap/url'] = 
    makeClosure(
        'bitmap/url',
        1,
        function(MACHINE) {
            var url = checkString(MACHINE, 'bitmap/url', 0);
            PAUSE(
                function(restart) {
                    var rawImage = new Image();
                    rawImage.onload = function() {
                        restart(function(MACHINE) {
                            finalizeClosureCall(
                                MACHINE, 
                                makeFileImage(url.toString(),
                                              rawImage));
                        });
                    };
                    rawImage.onerror = function(e) {
                        restart(function(MACHINE) {
                            plt.baselib.exceptions.raiseFailure(
                                MACHINE, 
                                plt.baselib.format.format(
                                    "unable to load ~a: ~a",
                                    [url,
                                     e.message]));
                        });
                    }
                    rawImage.src = url.toString();
                }
            );
        });

EXPORTS['open-image-url'] = 
    plt.baselib.functions.renameProcedure(EXPORTS['bitmap/url'],
                                          'open-image-url');

EXPORTS['image-url'] = 
    plt.baselib.functions.renameProcedure(EXPORTS['bitmap/url'],
                                          'image-url');


EXPORTS['video/url'] =
    makeClosure(
        'video/url',
        1,
        function(MACHINE) {
            var path = checkString(MACHINE, 'video/url', 0);
            PAUSE(
                function(restart) {
                  var rawVideo = document.createElement('video');
                  rawVideo.src = path.toString();
                  rawVideo.addEventListener('canplay', function() {
                    restart(function(MACHINE) {
                            function pause(){ rawVideo.pause(); return true;};
                            finalizeClosureCall(
                              MACHINE,
                              makeFileVideo(path.toString(), rawVideo));
//                    aState.addBreakRequestedListener(pause);
                    });
                  });
                  rawVideo.addEventListener('error', function(e) {
                    restart(function(MACHINE) {
                        plt.baselib.exceptions.raiseFailure(
                            MACHINE, 
                            plt.baselib.format.format(
                                "unable to load ~a: ~a",
                                [url,
                                 e.message]));
                    });
                  });
                  rawVideo.src = path.toString();
                }
            );
        });

// We keep a cache of loaded sounds:
var audioCache = {};

EXPORTS['play-sound'] =
    makeClosure(
        'play-sound',
        1,
        function(MACHINE) {
            var path = checkString(MACHINE, 'play-sound', 0);
            var fileAudio = audioCache[path];
            if (fileAudio) {
                // the sound was already loaded
                finalizeClosureCall(
                    MACHINE,
                    fileAudio.play());
            }
            else {
               // this sound has never been played before
               PAUSE(
                   function(restart) {
                      fileAudio = makeFileAudio(path.toString());
                      audioCache[path] = fileAudio;
                      // let the audio file load before playing...
                      fileAudio.loading = true;
                      // (fileAudio.audio is the raw html5 Audio object)
                      fileAudio.audio.addEventListener('canplay', function() {
                          // ignore canplay events that follow the initial load
                          if(fileAudio.loading) {
                            restart(function(MACHINE) {
                              finalizeClosureCall(
                                  MACHINE,
                                  fileAudio.play());
                              });
                            fileAudio.loading = false; // we're done loading
                          }
                      })
                      fileAudio.audio.addEventListener('error', function(e) {
                          restart(function(MACHINE) {
                              plt.baselib.exceptions.raiseFailure(
                                  MACHINE,
                                  plt.baselib.format.format(
                                      "unable to load ~a: ~a",
                                      [path,
                                      e.message]));
                              });
                      });
                  });
            }
        });



EXPORTS['overlay'] = 
    makePrimitiveProcedure(
        'overlay',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay", 0);
	    var img2 = checkImage(MACHINE, "overlay", 1);
            var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
		restImages.push(checkImage(MACHINE, "overlay", i));
	    }
            
	    var img = makeOverlayImage(img1, img2, "middle", "middle");
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img, restImages[i], "middle", "middle");
	    }
	    return img;
        });



EXPORTS['overlay/xy'] = 
    makePrimitiveProcedure(
        'overlay/xy',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay/xy", 0);
	    var deltaX = checkReal(MACHINE, "overlay/xy", 1);
	    var deltaY = checkReal(MACHINE, "overlay/xy", 2);
	    var img2 = checkImage(MACHINE, "overlay/xy", 3);
	    return makeOverlayImage(img1.updatePinhole(0, 0),
				    img2.updatePinhole(0, 0),
				    jsnums.toFixnum(deltaX),
				    jsnums.toFixnum(deltaY));
        });

EXPORTS['overlay/offset'] = 
    makePrimitiveProcedure(
        'overlay/offset',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "overlay/offset", 0);
	    var deltaX = checkReal(MACHINE, "overlay/offset", 1);
	    var deltaY = checkReal(MACHINE, "overlay/offset", 2);
	    var img2 = checkImage(MACHINE, "overlay/offset", 3);
            var middleX = (img1.getWidth() - img2.getWidth()) / 2;
            var middleY = (img1.getHeight() - img2.getHeight()) / 2;
	    return makeOverlayImage(img1,
				    img2,
				    jsnums.toFixnum(middleX) + deltaX,
				    jsnums.toFixnum(middleY) + deltaY);
        });


 EXPORTS['overlay/align'] = 
     makePrimitiveProcedure(
         'overlay/align',
         plt.baselib.arity.makeArityAtLeast(4),
         function(MACHINE) {
	     var placeX = checkPlaceX(MACHINE, "overlay/align", 0);
	     var placeY = checkPlaceY(MACHINE, "overlay/align", 1);
	     var img1 = checkImage(MACHINE, "overlay/align", 2);
	     var img2 = checkImage(MACHINE, "overlay/align", 3);
             var restImages = [];
	     for (var i = 4; i < MACHINE.a; i++) {
                 restImages.push(checkImage(MACHINE, "overlay/align", i));
             }
	     var img = makeOverlayImage(img1,
					img2,
					placeX.toString(),
					placeY.toString());
	     for (var i = 0; i < restImages.length; i++)
		 img = makeOverlayImage(img,
					restImages[i], 
					placeX.toString(), 
					placeY.toString());
	     return img;
         });





EXPORTS['underlay'] = 
    makePrimitiveProcedure(
        'underlay',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay", 0);
	    var img2 = checkImage(MACHINE, "underlay", 1);
	    var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
		restImages.push(checkImage(MACHINE, "underlay", i));
	    }

	    var img = makeOverlayImage(img2, img1, 0, 0);
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(restImages[i], img, 0, 0);
	    }
	    return img;
        });


EXPORTS['underlay/xy'] = 
    makePrimitiveProcedure(
        'underlay/xy',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay/xy", 0);
	    var deltaX = checkReal(MACHINE, "underlay/xy", 1);
	    var deltaY = checkReal(MACHINE, "underlay/xy", 2);
	    var img2 = checkImage(MACHINE, "underlay/xy", 3);
	    return makeOverlayImage(img2.updatePinhole(0, 0), 
				    img1.updatePinhole(0, 0),
				    -(jsnums.toFixnum(deltaX)),
				    -(jsnums.toFixnum(deltaY)));
        });

EXPORTS['underlay/offset'] = 
    makePrimitiveProcedure(
        'underlay/offset',
        4,
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "underlay/offset", 0);
	    var deltaX = checkReal(MACHINE, "underlay/offset", 1);
	    var deltaY = checkReal(MACHINE, "underlay/offset", 2);
	    var img2 = checkImage(MACHINE, "underlay/offset", 3);
            var middleX = (img1.getWidth() - img2.getWidth()) / 2;
            var middleY = (img1.getHeight() - img2.getHeight()) / 2;
	    return makeOverlayImage(img2,
				    img1,
				    -(jsnums.toFixnum(middleX) + deltaX),
				    -(jsnums.toFixnum(middleY) + deltaY));
        });

EXPORTS['underlay/align'] = 
    makePrimitiveProcedure(
        'underlay/align',
        plt.baselib.arity.makeArityAtLeast(4),
        function(MACHINE) {
	    var placeX = checkPlaceX(MACHINE, "underlay/align", 0);
	    var placeY = checkPlaceY(MACHINE, "underlay/align", 1);
	    var img1 = checkImage(MACHINE, "underlay/align", 2);
	    var img2 = checkImage(MACHINE, "underlay/align", 3);
            var restImages = [];
            for (var i = 4; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "underlay/align", i));
            }
	    
	    var img = makeOverlayImage(img2,
				       img1,
				       placeX.toString(),
				       placeY.toString());
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(restImages[i], 
				       img,
				       placeX.toString(), 
				       placeY.toString());
            }
	    return img;
        });



EXPORTS['beside'] = 
    makePrimitiveProcedure(
        'beside',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "beside", 0);
	    var img2 = checkImage(MACHINE, "beside", 1);
            var restImages = [];
	    for (var i = 2; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "beside", i));
            }
	    
	    var img = makeOverlayImage(img1,
				       img2,
				       "beside",
				       "middle");
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img, restImages[i], "beside", "middle");
            }

            return img;
	});


EXPORTS['beside/align'] = 
    makePrimitiveProcedure(
        'beside/align',
        plt.baselib.arity.makeArityAtLeast(3),
        function(MACHINE) {
	    var placeY = checkPlaceY(MACHINE, "beside/align", 0);
	    var img1 = checkImage(MACHINE, "beside/align", 1);
	    var img2 = checkImage(MACHINE, "beside/align", 2);
            var restImages = [];
            for (var i = 3; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "beside/align", i));
            }

	    var img = makeOverlayImage(img1,
				       img2,
				       "beside",
				       placeY.toString());
	    
	    for (var i = 0; i < restImages.length; i++) {
		img = makeOverlayImage(img,
				       restImages[i], 
				       "beside",
				       placeY.toString());
            }
	    
	    return img;

        });

EXPORTS['above'] = 
    makePrimitiveProcedure(
        'above',
        plt.baselib.arity.makeArityAtLeast(2),
        function(MACHINE) {
	    var img1 = checkImage(MACHINE, "above", 0);
	    var img2 = checkImage(MACHINE, "above", 1);
	    var restImages = [];
            for (var i = 2; i < MACHINE.a; i++) {
                restImages.push(checkImage(MACHINE, "above", i));
            }
	    
	    var img = makeOverlayImage(img1,
				       img2,
				       "middle",
				       "above");
	    
	    for (var i = 0; i < restImages.length; i++)
		img = makeOverlayImage(img,
				       restImages[i], 
				       "middle",
				       "above");
            return img;
	    
        });

EXPORTS['above/align'] = 
    makePrimitiveProcedure(
        'above/align',
        plt.baselib.arity.makeArityAtLeast(3),
        function(MACHINE) {
	    var placeX = checkPlaceX(MACHINE, "above/align", 0);
	    var img1 = checkImage(MACHINE, "above/align", 1);
	    var img2 = checkImage(MACHINE, "above/align", 2);
            var restImages = [];
            for (var i = 3; i < MACHINE.a; i++) {
	        restImages.push(checkImage(MACHINE, "above/align", i));
            }

	    
	    var img = makeOverlayImage(img1,
				       img2,
				       placeX.toString(),
				       "above");
	    
	    for (var i = 0; i < restImages.length; i++)
		img = makeOverlayImage(img,
				       restImages[i], 
				       placeX.toString(),
				       "above");
	    
	    return img;
        });




EXPORTS['empty-scene'] =
    makePrimitiveProcedure(
        'empty-scene',
        plt.baselib.lists.makeList(2, 3),
	function(MACHINE) {
	    var width = checkNonNegativeReal(MACHINE, 'empty-scene', 0);
	    var height = checkNonNegativeReal(MACHINE, 'empty-scene', 1);
            var color = (MACHINE.a===3)? checkColor(MACHINE, 'empty-scene', 2) : null;

            return makeSceneImage(jsnums.toFixnum(width),
                                  jsnums.toFixnum(height),
                                  color,
                                  [],
                                  true);
	});

EXPORTS['put-image'] =
    makePrimitiveProcedure(
        'put-image',
        4,
        function(MACHINE) {
	    var picture = checkImage(MACHINE, "put-image", 0);
	    var x = checkReal(MACHINE, "put-image", 1);
	    var y = checkReal(MACHINE, "put-image", 2);
            var background = checkImageOrScene(MACHINE, "place-image", 3);
	    if (isScene(background)) {
		return background.add(picture, jsnums.toFixnum(x), background.getHeight() - jsnums.toFixnum(y));
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
          newScene = newScene.add(picture, jsnums.toFixnum(x), background.getHeight() - jsnums.toFixnum(y));
		return newScene;
	    }

        });


EXPORTS['place-image'] = 
    makePrimitiveProcedure(
        'place-image',
        4,
        function(MACHINE) {
	    var picture = checkImage(MACHINE, "place-image", 0);
	    var x = checkReal(MACHINE, "place-image", 1);
	    var y = checkReal(MACHINE, "place-image", 2);
            var background = checkImageOrScene(MACHINE, "place-image", 3);
	    if (isScene(background)) {
		return background.add(picture, jsnums.toFixnum(x), jsnums.toFixnum(y));
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
          newScene = newScene.add(picture, jsnums.toFixnum(x), jsnums.toFixnum(y));
		return newScene;
	    }

        });



EXPORTS['place-image/align'] = 
    makePrimitiveProcedure(
        'place-image/align',
        6,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "place-image/align", 0);
	    var x = jsnums.toFixnum(checkReal(MACHINE, "place-image/align", 1));
	    var y = jsnums.toFixnum(checkReal(MACHINE, "place-image/align", 2));
	    var placeX = checkPlaceX(MACHINE, "place-image/align", 3);
	    var placeY = checkPlaceY(MACHINE, "place-image/align", 4);
	    var background = checkImageOrScene(MACHINE, "place-image/align", 5);
	    
            var pinholeX = img.pinholeX || img.getWidth() / 2;
            var pinholeY = img.pinholeY || img.getHeight() / 2;

	    // calculate x and y based on placeX and placeY
	    if (placeX == "left") x = x + pinholeX;
	    else if (placeX == "right") x = x - pinholeX;
	    if (placeY == "top") y = y + pinholeY;
	    else if (placeY == "bottom") y = y - pinholeY;

	    if (isScene(background)) {
		return background.add(img, x, y);
	    } else {
                var newScene = makeSceneImage(background.getWidth(),
                                              background.getHeight(),
                                              null,
                                              [],
                                              false);
		newScene = newScene.add(background, background.getWidth()/2, background.getHeight()/2);
                newScene = newScene.add(img, x, y);
		return newScene;
            }
        });

//////////////////////////////////////////////////////////////////////
// rotate: angle image -> image
// Rotates image by angle degrees in a counter-clockwise direction.
EXPORTS['rotate'] = 
    makePrimitiveProcedure(
        'rotate',
        2,
        function(MACHINE) {
	    var angle = checkRotateAngle(MACHINE, "rotate", 0);
	    var angle360 = angle % 360;
	    var img = checkImage(MACHINE, "rotate", 1);
	    // convert to clockwise rotation for makeRotateImage
	    if (angle360 < 0) {
		return makeRotateImage(jsnums.toFixnum(-(360 + angle360)), img);
	    } else {
		return makeRotateImage(jsnums.toFixnum(-angle360), img);
	    }
        });


EXPORTS['scale'] = 
    makePrimitiveProcedure(
        'scale',
        2,
        function(MACHINE) {
	    var factor = checkReal(MACHINE, "scale", 0);
	    var img = checkImage(MACHINE, "image", 1);
	    
	    return makeScaleImage(jsnums.toFixnum(factor),
				  jsnums.toFixnum(factor),
				  img);
        });


EXPORTS['scale/xy'] = 
    makePrimitiveProcedure(
        'scale/xy',
        3,
        function(MACHINE) {
	    var xFactor = checkReal(MACHINE, "scale/xy", 0);
	    var yFactor = checkReal(MACHINE, "scale/xy", 1);
	    var img = checkImage(MACHINE, "scale/xy", 2);
	    return makeScaleImage(jsnums.toFixnum(xFactor), 
				  jsnums.toFixnum(yFactor),
				  img);
	    
        });


EXPORTS['flip-horizontal'] = 
    makePrimitiveProcedure(
        'flip-horizontal',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "flip-horizontal", 0);
	    return makeFlipImage(img, "horizontal");
        });


EXPORTS['flip-vertical'] = 
    makePrimitiveProcedure(
        'flip-vertical',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "flip-vertical", 0);
	    return makeFlipImage(img, "vertical");
        });


EXPORTS['frame'] = 
    makePrimitiveProcedure(
        'frame',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "frame", 0);
	    return makeFrameImage(img);            
        });


EXPORTS['crop'] = 
    makePrimitiveProcedure(
        'crop',
        5,
        function(MACHINE) {
            var x = checkReal(MACHINE, "crop", 0);
	    var y = checkReal(MACHINE, "crop", 1);
	    var width = checkNonNegativeReal(MACHINE, "crop", 2);
	    var height = checkNonNegativeReal(MACHINE, "crop", 3);
	    var img = checkImage(MACHINE, "crop", 4);
	    return makeCropImage(jsnums.toFixnum(x),
				 jsnums.toFixnum(y),
				 jsnums.toFixnum(width),
				 jsnums.toFixnum(height),
				 img);
        });



EXPORTS['line'] = 
    makePrimitiveProcedure(
        'line',
        3,
        function(MACHINE) {
	    var x = checkReal(MACHINE, 'line', 0);
	    var y = checkReal(MACHINE, 'line', 1);
	    var c = checkColor(MACHINE, 'line', 2);
	    return makeLineImage(jsnums.toFixnum(x),
				 jsnums.toFixnum(y),
				 c,
				 true);
        });




EXPORTS['add-line'] = 
    makePrimitiveProcedure(
        'add-line',
        6,
        function(MACHINE) {
	    var img = checkImage(MACHINE, "add-line", 0);
	    var x1 = checkReal(MACHINE, "add-line", 1);
	    var y1 = checkReal(MACHINE, "add-line", 2);
	    var x2 = checkReal(MACHINE, "add-line", 3);
	    var y2 = checkReal(MACHINE, "add-line", 4);
	    var c = checkColor(MACHINE, "add-line", 5);
	    var line = makeLineImage(jsnums.toFixnum(x2-x1),
				     jsnums.toFixnum(y2-y1),
				     c,
				     true);
	    return makeOverlayImage(line, img, x1, y1);
        });



EXPORTS['scene+line'] = 
    makePrimitiveProcedure(
        'scene+line',
        6,
        function(MACHINE) {
            var img = checkImage(MACHINE, "scene+line", 0);
	    var x1 = checkReal(MACHINE, "scene+line", 1);
	    var y1 = checkReal(MACHINE, "scene+line", 2);
	    var x2 = checkReal(MACHINE, "scene+line", 3);
	    var y2 = checkReal(MACHINE,	"scene+line", 4);
	    var c = checkColor(MACHINE, "scene+line", 5);
	    // make a scene containing the image
            var newScene = makeSceneImage(jsnums.toFixnum(img.getWidth()), 
                                          jsnums.toFixnum(img.getHeight()),
                                          null,
                                          [],
                                          false);
	    newScene = newScene.add(img, img.getWidth()/2, img.getHeight()/2);
	    // make an image containing the line
	    var line = makeLineImage(jsnums.toFixnum(x2-x1),
                               jsnums.toFixnum(y2-y1),
                               c,
                               false),
          leftMost = Math.min(x1,x2),
          topMost = Math.min(y1,y2);
	    // add the line to scene, offset by the original amount
	    return newScene.add(line, line.getWidth()/2+leftMost, line.getHeight()/2+topMost);
        });


EXPORTS['circle'] = 
    makePrimitiveProcedure(
        'circle',
        3,
        function(MACHINE) {
            var aRadius = checkNonNegativeReal(MACHINE, "circle", 0);
	    var aMode = checkMode(MACHINE, "circle", 1);
	    var aColor = checkColor(MACHINE, "circle", 2);
	    return makeCircleImage(jsnums.toFixnum(aRadius), aMode.toString(), aColor);
        });


EXPORTS['square'] = 
    makePrimitiveProcedure(
        'square',
        3,
        function(MACHINE) {
	    var l = checkNonNegativeReal(MACHINE, "square", 0);
	    var s = checkMode(MACHINE, "square", 1);
	    var c = checkColor(MACHINE, "square", 2);
	    return makeSquareImage(jsnums.toFixnum(l), s.toString(), c);
        });


EXPORTS['rectangle'] = 
    makePrimitiveProcedure(
        'rectangle',
        4,
        function(MACHINE) {
	    var w = checkNonNegativeReal(MACHINE, "rectangle", 0);
	    var h = checkNonNegativeReal(MACHINE, "rectangle", 1);
	    var s = checkMode(MACHINE, "rectangle", 2);
	    var c = checkColor(MACHINE, "rectangle", 3);
	    return makeRectangleImage(jsnums.toFixnum(w),
				      jsnums.toFixnum(h),
				      s.toString(), 
                                      c);
        });
/*

 need to port over checks for isListofPosns and isListOfLength
 
EXPORTS['polygon'] =
    makePrimitiveProcedure(
        'polygon',
        3,
        function(MACHINE) {
      function isPosnList(lst){ return isListOf(lst, types.isPosn); }
	    var points = checkListOfLength(MACHINE, "polygon", 0);
	    var points = checkListOfPosns(MACHINE, "polygon", 0);
	    var s = checkMode(MACHINE, "polygon", 2);
      var c = checkColor(MACHINE, "polygon", 3);
	    return makePosnImage(points,
				    s.toString(),
				    c);            
        });

*/
EXPORTS['regular-polygon'] =
    makePrimitiveProcedure(
        'regular-polygon',
        4,
        function(MACHINE) {
	    var length = checkNonNegativeReal(MACHINE, "regular-polygon", 0);
	    var count = checkSideCount(MACHINE, "regular-polygon", 1);
	    var s = checkMode(MACHINE, "regular-polygon", 2);
	    var c = checkColor(MACHINE, "regular-polygon", 3);
	    return makePolygonImage(jsnums.toFixnum(length), 
				    jsnums.toFixnum(count), 
				    jsnums.toFixnum(1), 
				    s.toString(), 
				    c);            
        });


EXPORTS['ellipse'] = 
    makePrimitiveProcedure(
        'ellipse',
        4,
        function(MACHINE) {
            var w = checkNonNegativeReal(MACHINE, "ellipse", 0);
	    var h = checkNonNegativeReal(MACHINE, "ellipse", 1);
	    var s = checkMode(MACHINE, "ellipse", 2);
	    var c = checkColor(MACHINE, MACHINE, 3);
	    return makeEllipseImage(jsnums.toFixnum(w),
				    jsnums.toFixnum(h),
				    s.toString(),
				    c);
        });



EXPORTS['triangle'] = 
    makePrimitiveProcedure(
        'triangle',
        3,
        function(MACHINE) {
	    var s = checkNonNegativeReal(MACHINE, "triangle", 0);
	    var m = checkMode(MACHINE, "triangle", 1);
	    var c = checkColor(MACHINE, "triangle", 2);
	    return makeTriangleImage(jsnums.toFixnum(s),
                                        jsnums.toFixnum(360-60),
                                        jsnums.toFixnum(s),
                                        m.toString(),
                                        c);
        });


EXPORTS['triangle/sas'] =
    makePrimitiveProcedure(
        'triangle/sas',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/sas", 0);
	    var angleB = checkAngle(MACHINE, "triangle/sas", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/sas", 2);
	    var style = checkMode(MACHINE, "triangle/sas", 3);
	    var color = checkColor(MACHINE, "triangle/sas", 4);
       // cast to fixnums
       sideA = jsnums.toFixnum(sideA); angleB = jsnums.toFixnum(angleB); sideC = jsnums.toFixnum(sideC);
       var sideB2 = cosRel(sideA, sideC, angleB);
       var sideB  = Math.sqrt(sideB2);
              
       if (sideB2 <= 0) {
         raise( types.incompleteExn(types.exnFailContract, "The given side, angle and side will not form a triangle: "
                                    + sideA + ", " + angleB + ", " + sideC, []) );
       } else {
        if (less(sideA + sideC, sideB) ||
            less(sideB + sideC, sideA) ||
            less(sideA + sideB, sideC)) {
         raise( types.incompleteExn(types.exnFailContract, "The given side, angle and side will not form a triangle: "
                                    + sideA + ", " + angleB + ", " + sideC, []) );
        }
       }

       var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);

	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                         jsnums.toFixnum(angleA),
                                         jsnums.toFixnum(sideB),
                                         style.toString(),
                                         color);
        });

EXPORTS['triangle/sss'] =
    makePrimitiveProcedure(
        'triangle/sss',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/sss", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/sss", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/sss", 2);
	    var style = checkMode(MACHINE, "triangle/sss", 3);
	    var color = checkColor(MACHINE, "triangle/sss", 4);
      // cast to fixnums
      sideA = jsnums.toFixnum(sideA); sideB = jsnums.toFixnum(sideB); sideC = jsnums.toFixnum(sideC);
      if (less(sideA + sideB, sideC) ||
            less(sideC + sideB, sideA) ||
            less(sideA + sideC, sideB)) {
        raise( types.incompleteExn(types.exnFailContract, "The given sides will not form a triangle: "
                                    + sideA+", "+sideB+", "+sideC, []) );
      }

      var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                         jsnums.toFixnum(angleA),
                                         jsnums.toFixnum(sideB),
                                         style.toString(),
                                         color);
        });

EXPORTS['triangle/ass'] =
    makePrimitiveProcedure(
        'triangle/ass',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/ass", 0);
	    var sideB = checkNonNegativeReal(MACHINE, "triangle/ass", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/ass", 2);
	    var style = checkMode(MACHINE, "triangle/ass", 3);
	    var color = checkColor(MACHINE, "triangle/ass", 4);
       // cast to fixnums
       angleA = jsnums.toFixnum(angleA); sideB = jsnums.toFixnum(sideB); sideC = jsnums.toFixnum(sideC);
       if (colorDb.get(color)) { color = colorDb.get(color); }
       if (less(180, angleA)) {
         raise( types.incompleteExn(types.exnFailContract, "The given angle, side and side will not form a triangle: "
                                    + angleA + ", " + sideB + ", " + sideC, []) );
       }
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                        jsnums.toFixnum(angleA),
                                        jsnums.toFixnum(sideB),
                                        style.toString(),
                                        color);
        });

EXPORTS['triangle/ssa'] =
    makePrimitiveProcedure(
        'triangle/ssa',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/ssa", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/ssa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/ssa", 2);
	    var style = checkMode(MACHINE, "triangle/ssa", 3);
	    var color = checkColor(MACHINE, "triangle/ssa", 4);
         // cast to fixnums
         sideA = jsnums.toFixnum(sideA); sideB = jsnums.toFixnum(sideB); angleC = jsnums.toFixnum(angleC);
         if (less(180, angleC)) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
         }
         var sideC2 = cosRel(sideA, sideB, angleC);
         var sideC  = Math.sqrt(sideC2);
        
         if (sideC2 <= 0) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
         } else {
           if (less(sideA + sideB, sideC) ||
               less(sideC + sideB, sideA) ||
               less(sideA + sideC, sideB)) {
           raise( types.incompleteExn(types.exnFailContract, "The given side, side and angle will not form a triangle: "
                                      + sideA + ", " + sideB + ", " + angleC, []) );
           }
         }

         var angleA = Math.acos(excess(sideB, sideC, sideA) / (2 * sideB * sideC)) * (180 / Math.PI);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                          jsnums.toFixnum(angleA),
                                          jsnums.toFixnum(sideB),
                                          style.toString(),
                                          color);
        });

EXPORTS['triangle/aas'] =
    makePrimitiveProcedure(
        'triangle/aas',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/aas", 0);
	    var angleB = checkAngle(MACHINE, "triangle/aas", 1);
      var sideC = checkNonNegativeReal(MACHINE, "triangle/aas", 2);
	    var style = checkMode(MACHINE, "triangle/aas", 3);
	    var color = checkColor(MACHINE, "triangle/aas", 4);
      // cast to fixnums
      var angleA = jsnums.toFixnum(angleA); angleB = jsnums.toFixnum(angleB); sideC = jsnums.toFixnum(sideC);
      var angleC = (180 - angleA - angleB);
      if (less(angleC, 0)) {
         raise( types.incompleteExn(types.exnFailContract, "The given angle, angle and side will not form a triangle: "
                                    + angleA + ", " + angleB + ", " + sideC, []) );
      }
      var hypotenuse = sideC / (Math.sin(angleC*Math.PI/180))
      var sideB = hypotenuse * Math.sin(angleB*Math.PI/180);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                          jsnums.toFixnum(angleA),
                                          jsnums.toFixnum(sideB),
                                          style.toString(),
                                          color);
        });


EXPORTS['triangle/asa'] =
    makePrimitiveProcedure(
        'triangle/asa',
        5,
        function(MACHINE) {
	    var angleA = checkAngle(MACHINE, "triangle/asa", 0);
      var sideB = checkNonNegativeReal(MACHINE, "triangle/asa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/asa", 2);
	    var style = checkMode(MACHINE, "triangle/asa", 3);
	    var color = checkColor(MACHINE, "triangle/asa", 4);
      // cast to fixnums
      var angleA = jsnums.toFixnum(angleA); sideB = jsnums.toFixnum(sideB); angleC = jsnums.toFixnum(angleC);
      var angleB = (180 - angleA - angleC);
      if (less(angleB, 0)) {
        raise( types.incompleteExn(types.exnFailContract, "The given angle, side and angle will not form a triangle: "
                                   + angleA + ", " + sideB + ", " + angleC, []) );
      }
      var base = (sideB * Math.sin(angleA*Math.PI/180)) / (Math.sin(angleB*Math.PI/180));
      var sideC = (sideB * Math.sin(angleC*Math.PI/180)) / (Math.sin(angleB*Math.PI/180));
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                             jsnums.toFixnum(angleA),
                                             jsnums.toFixnum(sideB),
                                             style.toString(),
                                             color);
        });

EXPORTS['triangle/saa'] =
    makePrimitiveProcedure(
        'triangle/saa',
        5,
        function(MACHINE) {
	    var sideA = checkNonNegativeReal(MACHINE, "triangle/saa", 0);
      var angleB = checkAngle(MACHINE, "triangle/saa", 1);
	    var angleC = checkAngle(MACHINE, "triangle/saa", 2);
	    var style = checkMode(MACHINE, "triangle/saa", 3);
	    var color = checkColor(MACHINE, "triangle/saa", 4);
       // cast to fixnums
       var sideA = jsnums.toFixnum(sideA); angleB = jsnums.toFixnum(angleB); angleC = jsnums.toFixnum(angleC);
       var angleA = (180 - angleC - angleB);
       var hypotenuse = sideA / (Math.sin(angleA*Math.PI/180));
       var sideC = hypotenuse * Math.sin(angleC*Math.PI/180);
       var sideB = hypotenuse * Math.sin(angleB*Math.PI/180);
	    return makeTriangleImage(jsnums.toFixnum(sideC),
                                               jsnums.toFixnum(angleA),
                                               jsnums.toFixnum(sideB),
                                               style.toString(),
                                               color);
        });



EXPORTS['right-triangle'] =
    makePrimitiveProcedure(
        'right-triangle',
        4,
        function(MACHINE) {
	    var side1 = checkNonNegativeReal(MACHINE, "right-triangle", 0);
	    var side2 = checkNonNegativeReal(MACHINE, "right-triangle", 1);
	    var s = checkMode(MACHINE, "right-triangle", 2);
	    var c = checkColor(MACHINE, "right-triangle", 3);
	    return makeTriangleImage(jsnums.toFixnum(side1),
                               jsnums.toFixnum(360-90),
                               jsnums.toFixnum(side2),
                               s.toString(),
                               c);
        });


EXPORTS['isosceles-triangle'] = 
    makePrimitiveProcedure(
        'isosceles-triangle',
        4,
        function(MACHINE) {
	    var side = checkNonNegativeReal(MACHINE, "isosceles-triangle", 0);
	    var angleC = checkAngle(MACHINE, "isosceles-triangle", 1);
	    var s = checkMode(MACHINE, "isosceles-triangle", 2);
	    var c = checkColor(MACHINE, "isosceles-triangle", 3);
      // cast to fixnums
      side = jsnums.toFixnum(side); angleC = jsnums.toFixnum(angleC);
      var angleAB = (180-angleC)/2;
      var base = 2*side*Math.sin((angleC*Math.PI/180)/2);
	    return makeTriangleImage(jsnums.toFixnum(base),
                                         jsnums.toFixnum(360-angleAB),// add 180 to make the triangle point up
                                         jsnums.toFixnum(side),
                                         s.toString(),
                                         c);
        });


EXPORTS['star'] = 
    makePrimitiveProcedure(
        'star',
        plt.baselib.lists.makeList(3, 5),
        function(MACHINE) {
            if (MACHINE.a === 3) {
                var sideLength = checkNonNegativeReal(MACHINE, "star", 0);
		var mode = checkMode(MACHINE, "star", 1);
		var color = checkColor(MACHINE, "star", 2);
		return makePolygonImage(jsnums.toFixnum(sideLength), 
					jsnums.toFixnum(5), 
					jsnums.toFixnum(2), 
					mode.toString(), 
					color);
            } else if (MACHINE.a === 5) {
		var n = checkSideCount(MACHINE, "star", 0);
		var outer = checkNonNegativeReal(MACHINE, "star", 1);
		var inner = checkNonNegativeReal(MACHINE, "star", 2);
		var m = checkMode(MACHINE, "star", 3);
		var c = checkColor(MACHINE, "star", 4);
		return makeStarImage(jsnums.toFixnum(n),
				     jsnums.toFixnum(outer),
				     jsnums.toFixnum(inner),
				     m.toString(),
				     c);
            }
        });

EXPORTS['radial-star'] = 
    makePrimitiveProcedure(
        'radial-star',
        5,
        function(MACHINE) {
            var aPoints = checkPointsCount(MACHINE, 'radial-star', 0);
	    var anOuter = checkNonNegativeReal(MACHINE, 'radial-star', 1);
	    var anInner = checkNonNegativeReal(MACHINE, 'radial-star', 2);
	    var aStyle = checkMode(MACHINE, "radial-star", 3);
	    var aColor = checkColor(MACHINE, "radial-star", 4);
	    return makeStarImage(jsnums.toFixnum(aPoints),
				 jsnums.toFixnum(anOuter),
				 jsnums.toFixnum(anInner),
				 aStyle.toString(),
				 aColor);
        });



EXPORTS['star-polygon'] = 
    makePrimitiveProcedure(
        'star-polygon',
        5,
        function(MACHINE) {
            var length = checkNonNegativeReal(MACHINE, "star-polygon", 0);
	    var count = checkNonNegativeReal(MACHINE, "star-polygon", 1);
	    var step = checkStepCount(MACHINE, "star-polygon", 2);
	    var s = checkMode(MACHINE, "star-polygon", 3);
	    var c = checkColor(MACHINE, "star-polygon", 4);
	    return makePolygonImage(jsnums.toFixnum(length), 
				    jsnums.toFixnum(count), 
				    jsnums.toFixnum(step), 
				    s.toString(), 
				    c);
        });


EXPORTS['rhombus'] = 
    makePrimitiveProcedure(
        'rhombus',
        4,
        function(MACHINE) {
            var l = checkNonNegativeReal(MACHINE, "rhombus", 0);
	    var a = checkNonNegativeReal(MACHINE, "rhombus", 1);
	    var s = checkMode(MACHINE, "rhombus", 2);
	    var c = checkColor(MACHINE, "rhombus", 3);
	    return makeRhombusImage(jsnums.toFixnum(l),
                                    jsnums.toFixnum(a),
                                    s.toString(),
                                    c);
	    
        });


EXPORTS['image->color-list'] = 
    makePrimitiveProcedure(
        'image->color-list',
        1,
        function(MACHINE) {
            var img = checkImage(MACHINE, 'image->color-list', 0);
            return imageToColorList(img);
        });



EXPORTS['color-list->image'] = 
    makePrimitiveProcedure(
        'color-list->image',
        5,
        function(MACHINE) {
            var listOfColors = checkListofColor(MACHINE, 'color-list->image', 0);
	    var width = checkNatural(MACHINE, 'color-list->image', 1);
	    var height = checkNatural(MACHINE, 'color-list->image', 2);
	    var pinholeX = checkNatural(MACHINE, 'color-list->image', 3);
	    var pinholeY = checkNatural(MACHINE, 'color-list->image', 4);

            return colorListToImage(listOfColors,
                                    width,
                                    height,
                                    pinholeX,
                                    pinholeY);
        });

EXPORTS['color-list->bitmap'] = 
    makePrimitiveProcedure(
        'color-list->image',
        3,
        function(MACHINE) {
            var listOfColors = checkListofColor(MACHINE, 'color-list->image', 0);
	    var width = checkNatural(MACHINE, 'color-list->image', 1);
	    var height = checkNatural(MACHINE, 'color-list->image', 2);
            return colorListToImage(listOfColors,
                                    width,
                                    height,
                                    0,
                                    0);
        });


EXPORTS['image-width'] = 
    makePrimitiveProcedure(
        'image-width',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-width', 0);
	    return img.getWidth();
        });

EXPORTS['image-height'] = 
    makePrimitiveProcedure(
        'image-height',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-height', 0);
	    return img.getHeight();
        });

EXPORTS['image-baseline'] = 
    makePrimitiveProcedure(
        'image-baseline',
        1,
        function(MACHINE) {
	    var img = checkImage(MACHINE, 'image-baseline', 0);
	    return img.getBaseline();
        });


EXPORTS['name->color'] = 
    makePrimitiveProcedure(
        'name->color',
        1,
        function(MACHINE) {
            var name = checkSymbolOrString(MACHINE, 'name->color', 0);
            var result = colorDb.get('' + name) || false;
            return result;
        });
})(M, exports);
             ns.set("above18.35",exports["above"]);
extNs.set("above",exports["above"]);
modrec.prefix[0]=exports["above"];
ns.set("above/align19.37",exports["above/align"]);
extNs.set("above/align",exports["above/align"]);
modrec.prefix[1]=exports["above/align"];
ns.set("add-line32.63",exports["add-line"]);
extNs.set("add-line",exports["add-line"]);
modrec.prefix[2]=exports["add-line"];
ns.set("angle?64.127",exports["angle?"]);
extNs.set("angle?",exports["angle?"]);
modrec.prefix[3]=exports["angle?"];
ns.set("beside16.31",exports["beside"]);
extNs.set("beside",exports["beside"]);
modrec.prefix[4]=exports["beside"];
ns.set("beside/align17.33",exports["beside/align"]);
extNs.set("beside/align",exports["beside/align"]);
modrec.prefix[5]=exports["beside/align"];
ns.set("bitmap/url3.5",exports["bitmap/url"]);
extNs.set("bitmap/url",exports["bitmap/url"]);
modrec.prefix[6]=exports["bitmap/url"];
ns.set("circle34.67",exports["circle"]);
extNs.set("circle",exports["circle"]);
modrec.prefix[7]=exports["circle"];
ns.set("color-list->bitmap56.111",exports["color-list->bitmap"]);
extNs.set("color-list->bitmap",exports["color-list->bitmap"]);
modrec.prefix[8]=exports["color-list->bitmap"];
ns.set("color-list->image55.109",exports["color-list->image"]);
extNs.set("color-list->image",exports["color-list->image"]);
modrec.prefix[9]=exports["color-list->image"];
ns.set("crop30.59",exports["crop"]);
extNs.set("crop",exports["crop"]);
modrec.prefix[10]=exports["crop"];
ns.set("ellipse39.77",exports["ellipse"]);
extNs.set("ellipse",exports["ellipse"]);
modrec.prefix[11]=exports["ellipse"];
ns.set("empty-scene20.39",exports["empty-scene"]);
extNs.set("empty-scene",exports["empty-scene"]);
modrec.prefix[12]=exports["empty-scene"];
ns.set("flip-horizontal27.53",exports["flip-horizontal"]);
extNs.set("flip-horizontal",exports["flip-horizontal"]);
modrec.prefix[13]=exports["flip-horizontal"];
ns.set("flip-vertical28.55",exports["flip-vertical"]);
extNs.set("flip-vertical",exports["flip-vertical"]);
modrec.prefix[14]=exports["flip-vertical"];
ns.set("frame29.57",exports["frame"]);
extNs.set("frame",exports["frame"]);
modrec.prefix[15]=exports["frame"];
ns.set("image->color-list54.107",exports["image->color-list"]);
extNs.set("image->color-list",exports["image->color-list"]);
modrec.prefix[16]=exports["image->color-list"];
ns.set("image-baseline59.117",exports["image-baseline"]);
extNs.set("image-baseline",exports["image-baseline"]);
modrec.prefix[17]=exports["image-baseline"];
ns.set("image-color?60.119",exports["image-color?"]);
extNs.set("image-color?",exports["image-color?"]);
modrec.prefix[18]=exports["image-color?"];
ns.set("image-height58.115",exports["image-height"]);
extNs.set("image-height",exports["image-height"]);
modrec.prefix[19]=exports["image-height"];
ns.set("image-url4.7",exports["image-url"]);
extNs.set("image-url",exports["image-url"]);
modrec.prefix[20]=exports["image-url"];
ns.set("image-width57.113",exports["image-width"]);
extNs.set("image-width",exports["image-width"]);
modrec.prefix[21]=exports["image-width"];
ns.set("image=?68.135",exports["image=?"]);
extNs.set("image=?",exports["image=?"]);
modrec.prefix[22]=exports["image=?"];
ns.set("image?67.133",exports["image?"]);
extNs.set("image?",exports["image?"]);
modrec.prefix[23]=exports["image?"];
ns.set("isosceles-triangle49.97",exports["isosceles-triangle"]);
extNs.set("isosceles-triangle",exports["isosceles-triangle"]);
modrec.prefix[24]=exports["isosceles-triangle"];
ns.set("line31.61",exports["line"]);
extNs.set("line",exports["line"]);
modrec.prefix[25]=exports["line"];
ns.set("mode?61.121",exports["mode?"]);
extNs.set("mode?",exports["mode?"]);
modrec.prefix[26]=exports["mode?"];
ns.set("name->color69.137",exports["name->color"]);
extNs.set("name->color",exports["name->color"]);
modrec.prefix[27]=exports["name->color"];
ns.set("open-image-url5.9",exports["open-image-url"]);
extNs.set("open-image-url",exports["open-image-url"]);
modrec.prefix[28]=exports["open-image-url"];
ns.set("overlay8.15",exports["overlay"]);
extNs.set("overlay",exports["overlay"]);
modrec.prefix[29]=exports["overlay"];
ns.set("overlay/align11.21",exports["overlay/align"]);
extNs.set("overlay/align",exports["overlay/align"]);
modrec.prefix[30]=exports["overlay/align"];
ns.set("overlay/offset9.17",exports["overlay/offset"]);
extNs.set("overlay/offset",exports["overlay/offset"]);
modrec.prefix[31]=exports["overlay/offset"];
ns.set("overlay/xy10.19",exports["overlay/xy"]);
extNs.set("overlay/xy",exports["overlay/xy"]);
modrec.prefix[32]=exports["overlay/xy"];
ns.set("place-image22.43",exports["place-image"]);
extNs.set("place-image",exports["place-image"]);
modrec.prefix[33]=exports["place-image"];
ns.set("place-image/align23.45",exports["place-image/align"]);
extNs.set("place-image/align",exports["place-image/align"]);
modrec.prefix[34]=exports["place-image/align"];
ns.set("play-sound7.13",exports["play-sound"]);
extNs.set("play-sound",exports["play-sound"]);
modrec.prefix[35]=exports["play-sound"];
ns.set("polygon37.73",exports["polygon"]);
extNs.set("polygon",exports["polygon"]);
modrec.prefix[36]=exports["polygon"];
ns.set("put-image21.41",exports["put-image"]);
extNs.set("put-image",exports["put-image"]);
modrec.prefix[37]=exports["put-image"];
ns.set("radial-star51.101",exports["radial-star"]);
extNs.set("radial-star",exports["radial-star"]);
modrec.prefix[38]=exports["radial-star"];
ns.set("rectangle36.71",exports["rectangle"]);
extNs.set("rectangle",exports["rectangle"]);
modrec.prefix[39]=exports["rectangle"];
ns.set("regular-polygon38.75",exports["regular-polygon"]);
extNs.set("regular-polygon",exports["regular-polygon"]);
modrec.prefix[40]=exports["regular-polygon"];
ns.set("rhombus53.105",exports["rhombus"]);
extNs.set("rhombus",exports["rhombus"]);
modrec.prefix[41]=exports["rhombus"];
ns.set("right-triangle48.95",exports["right-triangle"]);
extNs.set("right-triangle",exports["right-triangle"]);
modrec.prefix[42]=exports["right-triangle"];
ns.set("rotate24.47",exports["rotate"]);
extNs.set("rotate",exports["rotate"]);
modrec.prefix[43]=exports["rotate"];
ns.set("scale25.49",exports["scale"]);
extNs.set("scale",exports["scale"]);
modrec.prefix[44]=exports["scale"];
ns.set("scale/xy26.51",exports["scale/xy"]);
extNs.set("scale/xy",exports["scale/xy"]);
modrec.prefix[45]=exports["scale/xy"];
ns.set("scene+line33.65",exports["scene+line"]);
extNs.set("scene+line",exports["scene+line"]);
modrec.prefix[46]=exports["scene+line"];
ns.set("side-count?65.129",exports["side-count?"]);
extNs.set("side-count?",exports["side-count?"]);
modrec.prefix[47]=exports["side-count?"];
ns.set("square35.69",exports["square"]);
extNs.set("square",exports["square"]);
modrec.prefix[48]=exports["square"];
ns.set("star50.99",exports["star"]);
extNs.set("star",exports["star"]);
modrec.prefix[49]=exports["star"];
ns.set("star-polygon52.103",exports["star-polygon"]);
extNs.set("star-polygon",exports["star-polygon"]);
modrec.prefix[50]=exports["star-polygon"];
ns.set("step-count?66.131",exports["step-count?"]);
extNs.set("step-count?",exports["step-count?"]);
modrec.prefix[51]=exports["step-count?"];
ns.set("text1.1",exports["text"]);
extNs.set("text",exports["text"]);
modrec.prefix[52]=exports["text"];
ns.set("text/font2.3",exports["text/font"]);
extNs.set("text/font",exports["text/font"]);
modrec.prefix[53]=exports["text/font"];
ns.set("triangle40.79",exports["triangle"]);
extNs.set("triangle",exports["triangle"]);
modrec.prefix[54]=exports["triangle"];
ns.set("triangle/aas45.89",exports["triangle/aas"]);
extNs.set("triangle/aas",exports["triangle/aas"]);
modrec.prefix[55]=exports["triangle/aas"];
ns.set("triangle/asa46.91",exports["triangle/asa"]);
extNs.set("triangle/asa",exports["triangle/asa"]);
modrec.prefix[56]=exports["triangle/asa"];
ns.set("triangle/ass43.85",exports["triangle/ass"]);
extNs.set("triangle/ass",exports["triangle/ass"]);
modrec.prefix[57]=exports["triangle/ass"];
ns.set("triangle/saa47.93",exports["triangle/saa"]);
extNs.set("triangle/saa",exports["triangle/saa"]);
modrec.prefix[58]=exports["triangle/saa"];
ns.set("triangle/sas41.81",exports["triangle/sas"]);
extNs.set("triangle/sas",exports["triangle/sas"]);
modrec.prefix[59]=exports["triangle/sas"];
ns.set("triangle/ssa44.87",exports["triangle/ssa"]);
extNs.set("triangle/ssa",exports["triangle/ssa"]);
modrec.prefix[60]=exports["triangle/ssa"];
ns.set("triangle/sss42.83",exports["triangle/sss"]);
extNs.set("triangle/sss",exports["triangle/sss"]);
modrec.prefix[61]=exports["triangle/sss"];
ns.set("underlay12.23",exports["underlay"]);
extNs.set("underlay",exports["underlay"]);
modrec.prefix[62]=exports["underlay"];
ns.set("underlay/align15.29",exports["underlay/align"]);
extNs.set("underlay/align",exports["underlay/align"]);
modrec.prefix[63]=exports["underlay/align"];
ns.set("underlay/offset13.25",exports["underlay/offset"]);
extNs.set("underlay/offset",exports["underlay/offset"]);
modrec.prefix[64]=exports["underlay/offset"];
ns.set("underlay/xy14.27",exports["underlay/xy"]);
extNs.set("underlay/xy",exports["underlay/xy"]);
modrec.prefix[65]=exports["underlay/xy"];
ns.set("video/url6.11",exports["video/url"]);
extNs.set("video/url",exports["video/url"]);
modrec.prefix[66]=exports["video/url"];
ns.set("x-place?62.123",exports["x-place?"]);
extNs.set("x-place?",exports["x-place?"]);
modrec.prefix[67]=exports["x-place?"];
ns.set("y-place?63.125",exports["y-place?"]);
extNs.set("y-place?",exports["y-place?"]);
modrec.prefix[68]=exports["y-place?"];

             modrec.privateExports = exports;
             return M.c.pop().label(M); };
        plt.runtime.PAUSE(function(restart) {
             var modName = "whalesong/image/private/color.rkt";
             plt.runtime.currentModuleLoader(M,
                                             modName,
                                             function() {
                                                restart(function(M) {
                                                    M.modules[modName] = M.installedModules[modName]();
                                                    if (! M.modules[modName].isInvoked) {
                                                        M.modules[modName].internalInvoke(M,
                                                                                     afterName2258,
                                                                                      M.params.currentErrorHandler);
                                                    } else {
                                                        afterName2258();
                                                    }
                                                })
                                             },
                                             function() {
                                                alert('Could not load ' + modName);
                                             })
       });     
        });
   }
 }(plt.runtime.currentMachine));
// ** Visiting <ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>
((function(M, success, fail, params) {
"use strict";
var param;
var RT = plt.runtime;
var _5210=function(M){if(--M.cbt<0){throw _5210;}
M.c.push(new RT.CallFrame(_5212,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3766,8,[M.e[M.e.length-1]],"normalise-inputs");
M.e[M.e.length-1][61]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5208=function(M){if(--M.cbt<0){throw _5208;}
M.c.push(new RT.CallFrame(_5210,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3765,6,[M.e[M.e.length-1]],"check-ranges");
M.e[M.e.length-1][58]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5206=function(M){if(--M.cbt<0){throw _5206;}
M.c.push(new RT.CallFrame(_5208,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=M.primitives["error"];
M.e[M.e.length-1][57]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5204=function(M){if(--M.cbt<0){throw _5204;}
M.c.push(new RT.CallFrame(_5206,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=M.primitives["error"];
M.e[M.e.length-1][56]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5202=function(M){if(--M.cbt<0){throw _5202;}
M.c.push(new RT.CallFrame(_5204,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=M.primitives["error"];
M.e[M.e.length-1][55]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5200=function(M){if(--M.cbt<0){throw _5200;}
M.c.push(new RT.CallFrame(_5202,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3764,1,[M.e[M.e.length-1]],":stream-gen");
M.e[M.e.length-1][30]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5198=function(M){if(--M.cbt<0){throw _5198;}
M.c.push(new RT.CallFrame(_5200,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3762,1,[M.e[M.e.length-1]],"in-stream");
M.e[M.e.length-1][54]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5196=function(M){if(--M.cbt<0){throw _5196;}
M.c.push(new RT.CallFrame(_5198,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_3761_c;
M.e[M.e.length-1][25]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5194=function(M){if(--M.cbt<0){throw _5194;}
M.c.push(new RT.CallFrame(_5196,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3760,1,[M.e[M.e.length-1]],"in-list");
M.e[M.e.length-1][53]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5192=function(M){if(--M.cbt<0){throw _5192;}
M.c.push(new RT.CallFrame(_5194,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3759,2,[M.e[M.e.length-1]],"list-stream-ref");
M.e[M.e.length-1][52]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5189=RT.si_context_expected(6);

var _5186=RT.si_context_expected(5);

var _5182=function(M){if(--M.cbt<0){throw _5182;}
M.c.push(new RT.CallFrame(_5192,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-1][46];
M.e[M.e.length-1][51]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5180=function(M){if(--M.cbt<0){throw _5180;}
M.c.push(new RT.CallFrame(_5182,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym3466;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=3;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.NULL)));
M.e[M.e.length-10]=false;
M.v=sym3466;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5186,M.p));
return((M.p).label)(M);};

var _5178=function(M){if(--M.cbt<0){throw _5178;}
M.c.push(new RT.CallFrame(_5180,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3757,0,[M.e[M.e.length-3]],"...ong/lang/for.rkt:570:4");
M.e[M.e.length-2]=new RT.Closure(_3758,1,[M.e[M.e.length-3]],"...ong/lang/for.rkt:571:4");
M.v=new RT.Closure(_3756,RT.makePair(0,RT.makePair(1,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"in-naturals");
M.e.length-=2;
M.e[M.e.length-1][42]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5176=function(M){if(--M.cbt<0){throw _5176;}
M.c.push(new RT.CallFrame(_5178,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3754,1,[M.e[M.e.length-1]],":integer-gen");
M.e[M.e.length-1][24]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5174=function(M){if(--M.cbt<0){throw _5174;}
M.c.push(new RT.CallFrame(_5176,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3752,3,[M.e[M.e.length-1]],":range-gen");
M.e[M.e.length-1][31]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5172=function(M){if(--M.cbt<0){throw _5172;}
M.c.push(new RT.CallFrame(_5174,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3746,1,[M.e[M.e.length-4]],"...ong/lang/for.rkt:549:4");
M.e[M.e.length-2]=new RT.Closure(_3747,2,[M.e[M.e.length-4]],"...ong/lang/for.rkt:550:4");
M.e[M.e.length-3]=new RT.Closure(_3748,3,[M.e[M.e.length-4]],"...ong/lang/for.rkt:551:4");
M.v=new RT.Closure(_3745,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.NULL))),[M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"in-range");
M.e.length-=3;
M.e[M.e.length-1][40]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5169=RT.si_context_expected(6);

var _5166=RT.si_context_expected(5);

var _5162=function(M){if(--M.cbt<0){throw _5162;}
M.c.push(new RT.CallFrame(_5172,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
//"Constant toplevel ref: ?"

M.v=M.e[M.e.length-1][35];
M.e[M.e.length-1][39]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5160=function(M){if(--M.cbt<0){throw _5160;}
M.c.push(new RT.CallFrame(_5162,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-11]=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym3467;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=3;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=RT.NULL;
M.a=0;
M.v=M.primitives["current-inspector"]._i(M);
M.e[M.e.length-7]=M.v;
M.e[M.e.length-8]=false;
M.e[M.e.length-9]=RT.makePair(0,RT.makePair(1,RT.makePair(2,RT.NULL)));
M.e[M.e.length-10]=false;
M.v=sym3467;
M.p=M.e[M.e.length-11];
M.e[M.e.length-11]=M.v;
M.a=11;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5166,M.p));
return((M.p).label)(M);};

var _5158=function(M){if(--M.cbt<0){throw _5158;}
M.c.push(new RT.CallFrame(_5160,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3744,2,[M.e[M.e.length-1]],"make-sequence");
M.e[M.e.length-1][23]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5156=function(M){if(--M.cbt<0){throw _5156;}
M.c.push(new RT.CallFrame(_5158,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3743,1,[M.e[M.e.length-1]],"sequence?");
M.e[M.e.length-1][18]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5154=function(M){if(--M.cbt<0){throw _5154;}
M.c.push(new RT.CallFrame(_5156,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3742,1,[M.e[M.e.length-1]],"stream-rest");
M.e[M.e.length-1][17]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5152=function(M){if(--M.cbt<0){throw _5152;}
M.c.push(new RT.CallFrame(_5154,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3741,1,[M.e[M.e.length-1]],"unsafe-stream-rest");
M.e[M.e.length-1][15]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5150=function(M){if(--M.cbt<0){throw _5150;}
M.c.push(new RT.CallFrame(_5152,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3740,1,[M.e[M.e.length-1]],"stream-first");
M.e[M.e.length-1][14]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5148=function(M){if(--M.cbt<0){throw _5148;}
M.c.push(new RT.CallFrame(_5150,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3739,1,[M.e[M.e.length-1]],"unsafe-stream-first");
M.e[M.e.length-1][13]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5146=function(M){if(--M.cbt<0){throw _5146;}
M.c.push(new RT.CallFrame(_5148,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3738,1,[M.e[M.e.length-1]],"stream-empty?");
M.e[M.e.length-1][11]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5144=function(M){if(--M.cbt<0){throw _5144;}
M.c.push(new RT.CallFrame(_5146,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3737,1,[M.e[M.e.length-1]],"unsafe-stream-not-empty?");
M.e[M.e.length-1][9]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5142=function(M){if(--M.cbt<0){throw _5142;}
M.c.push(new RT.CallFrame(_5144,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=_3736_c;
M.e[M.e.length-1][8]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5137=RT.si_context_expected(5);

var _5135=function(M){if(--M.cbt<0){throw _5135;}
M.c.push(new RT.CallFrame(_5142,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=M.primitives["list-ref"];
M.e[M.e.length-1][6]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3884=function(M){if(--M.cbt<0){throw _3884;}
};

var _5126=function(M){if(--M.cbt<0){throw _5126;}
M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5123=function(M){if(--M.cbt<0){throw _5123;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_5126,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65432,1563,2,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][94];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-9];
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5119=function(M){if(--M.cbt<0){throw _5119;}
M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5116=function(M){if(--M.cbt<0){throw _5116;}
M.e[M.e.length-1]=M.v;
M.a=1;
M.v=M.primitives["make-vector"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5114=function(M){if(--M.cbt<0){throw _5114;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_5119,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65320,1558,2,32]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][94];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5111=function(M){if(--M.cbt<0){throw _5111;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.c.push(new RT.CallFrame(_5114,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65295,1557,18,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_5116,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65308,1557,31,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedMul(M, 2,M.e[M.e.length-3]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5100=function(M){if(--M.cbt<0){throw _5100;}
M.e[M.e.length-1]=M.v;
return(_5098)(M);};

var _5094=function(M){if(--M.cbt<0){throw _5094;}
M.p=M.e[M.e.length-5];
M.e[M.e.length-5]=M.v;
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5092=function(M){if(--M.cbt<0){throw _5092;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_5094,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65205,1553,20,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-11],1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5090=function(M){if(--M.cbt<0){throw _5090;}
M.e[M.e.length-3]=M.v;
M.v=RT.checkedVectorSet(M, M.e[M.e.length-1],M.e[M.e.length-2],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5088=function(M){if(--M.cbt<0){throw _5088;}
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65191,1553,6,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-5]=M.e[M.e.length-6][109];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_5092,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65197,1553,12,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-10],1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5086=function(M){if(--M.cbt<0){throw _5086;}
if(M.v===false){return(_5083)(M);}else{M.c.push(new RT.CallFrame(_5088,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65145,1552,6,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_5090,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65165,1552,26,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedVectorRef(M, M.e[M.e.length-7],M.e[M.e.length-8]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _5076=function(M){if(--M.cbt<0){throw _5076;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5072=function(M){if(--M.cbt<0){throw _5072;}
return(_5070)(M);};

var _5058=function(M){if(--M.cbt<0){throw _5058;}
return(_5056)(M);};

var _5045=function(M){if(--M.cbt<0){throw _5045;}
M.a=1;
return(_5046)(M);};

var _5037=function(M){if(--M.cbt<0){throw _5037;}
return(_5035)(M);};

var _5023=RT.si_context_expected(6);

var _5019=function(M){if(--M.cbt<0){throw _5019;}
return(_5013)(M);};

var _5015=function(M){if(--M.cbt<0){throw _5015;}
if(M.v===false){return(_5012)(M);}else{M.v=RT.VOID;
return(_5013)(M);}};

var _5003=function(M){if(--M.cbt<0){throw _5003;}
M.e[M.e.length-6][0]=M.v;
M.v=RT.VOID;
M.v=M.e[M.e.length-6];
M.e[M.e.length-4][0]=M.e[M.e.length-2][0];
M.v=RT.VOID;
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",48744,1214,57,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-4][0];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=9;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4999=function(M){if(--M.cbt<0){throw _4999;}
return(_4997)(M);};

var _4983=function(M){if(--M.cbt<0){throw _4983;}
return(_4981)(M);};

var _4972=function(M){if(--M.cbt<0){throw _4972;}
M.a=1;
return(_4973)(M);};

var _4964=function(M){if(--M.cbt<0){throw _4964;}
return(_4962)(M);};

var _4954=function(M){if(--M.cbt<0){throw _4954;}
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47531,1193,41,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][0];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4948=function(M){if(--M.cbt<0){throw _4948;}
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47452,1191,41,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4928=RT.si_context_expected(6);

var _4924=function(M){if(--M.cbt<0){throw _4924;}
return(_4918)(M);};

var _4920=function(M){if(--M.cbt<0){throw _4920;}
if(M.v===false){return(_4917)(M);}else{M.v=RT.VOID;
return(_4918)(M);}};

var _4914=function(M){if(--M.cbt<0){throw _4914;}
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=false;
M.e[M.e.length-5]=M.e[M.e.length-7];
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4910=function(M){if(--M.cbt<0){throw _4910;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4906=function(M){if(--M.cbt<0){throw _4906;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4891=function(M){if(--M.cbt<0){throw _4891;}
M.e[M.e.length-2]=M.v;
M.v=M.primitives["equal?"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4889=function(M){if(--M.cbt<0){throw _4889;}
if(M.v===false){return(_4886)(M);}else{M.v=new RT.Closure(_3854,1,[M.e[M.e.length-3],M.e[M.e.length-5]],"stop?");
M.a=1;
if(M.a===0){return(_4892)(M);}else{M.e.push(M.v);
return(_4892)(M);}}};

var _4883=function(M){if(--M.cbt<0){throw _4883;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4881=function(M){if(--M.cbt<0){throw _4881;}
if(M.v===false){return(_4878)(M);}else{M.v=new RT.Closure(_3853,1,[M.e[M.e.length-5]],"stop?");
M.a=1;
if(M.a===0){return(_4884)(M);}else{M.e.push(M.v);
return(_4884)(M);}}};

var _4866=function(M){if(--M.cbt<0){throw _4866;}
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=false;
M.e[M.e.length-5]=false;
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4844=function(M){if(--M.cbt<0){throw _4844;}
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4836=function(M){if(--M.cbt<0){throw _4836;}
if(M.v===false){return(_4833)(M);}else{M.v=new RT.Closure(_3845,(RT.makeArityAtLeast(1)),[M.e[M.e.length-26],M.e[M.e.length-12]],"...ong/lang/for.rkt:1096:17");
M.a=1;
if(M.a===0){return(_4839)(M);}else{M.e.push(M.v);
return(_4839)(M);}}};

var _4828=function(M){if(--M.cbt<0){throw _4828;}
if(M.v===false){return(_4825)(M);}else{M.v=new RT.Closure(_3844,(RT.makeArityAtLeast(0)),[M.e[M.e.length-26],M.e[M.e.length-11]],"...ong/lang/for.rkt:1091:17");
M.a=1;
if(M.a===0){return(_4831)(M);}else{M.e.push(M.v);
return(_4831)(M);}}};

var _4820=function(M){if(--M.cbt<0){throw _4820;}
if(M.v===false){return(_4817)(M);}else{M.v=new RT.Closure(_3843,1,[M.e[M.e.length-26],M.e[M.e.length-10]],"...ong/lang/for.rkt:1086:17");
M.a=1;
if(M.a===0){return(_4823)(M);}else{M.e.push(M.v);
return(_4823)(M);}}};

var _4810=function(M){if(--M.cbt<0){throw _4810;}
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4808=function(M){if(--M.cbt<0){throw _4808;}
M.e[M.e.length-5]=M.v;
M.c.push(new RT.CallFrame(_4810,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-18]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4806=function(M){if(--M.cbt<0){throw _4806;}
M.e[M.e.length-4]=M.v;
M.c.push(new RT.CallFrame(_4808,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-17]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4804=function(M){if(--M.cbt<0){throw _4804;}
M.e[M.e.length-3]=M.v;
M.c.push(new RT.CallFrame(_4806,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-16]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4802=function(M){if(--M.cbt<0){throw _4802;}
M.e[M.e.length-2]=M.v;
M.c.push(new RT.CallFrame(_4804,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-15]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4800=function(M){if(--M.cbt<0){throw _4800;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_4802,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-14]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4797=RT.si_context_expected(6);

var _4792=RT.si_context_expected(6);

var _4788=function(M){if(--M.cbt<0){throw _4788;}
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-26][103];
M.e[M.e.length-1]=M.e[M.e.length-19];
M.e[M.e.length-2]=M.e[M.e.length-20];
M.e[M.e.length-3]=M.e[M.e.length-22];
M.e[M.e.length-4]=M.e[M.e.length-23];
M.e[M.e.length-5]=M.e[M.e.length-24];
M.e[M.e.length-6]=RT.NULL;
M.e[M.e.length-7]=RT.NULL;
M.e[M.e.length-8]=RT.NULL;
M.e[M.e.length-9]=RT.NULL;
M.e[M.e.length-10]=RT.NULL;
M.e[M.e.length-11]=RT.NULL;
M.e[M.e.length-12]=M.e[M.e.length-21];
M.a=12;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4792,M.p));
return((M.p).label)(M);};

var _4783=RT.si_context_expected(6);

var _4773=function(M){if(--M.cbt<0){throw _4773;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedNumEquals(M, 1,M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4771=function(M){if(--M.cbt<0){throw _4771;}
if(M.v===false){return(_4768)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42439,1071,6,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4765=function(M){if(--M.cbt<0){throw _4765;}
M.c.push(new RT.CallFrame(_4771,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42408,1070,6,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4773,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42413,1070,11,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4737=function(M){if(--M.cbt<0){throw _4737;}
M.p=M.e[M.e.length-12];
M.e[M.e.length-12]=M.v;
M.a=12;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-38,26);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4733=function(M){if(--M.cbt<0){throw _4733;}
return(_4731)(M);};

var _4718=RT.si_context_expected(6);

var _4712=function(M){if(--M.cbt<0){throw _4712;}
return(_4710)(M);};

var _4703=function(M){if(--M.cbt<0){throw _4703;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-6];
if(M.v===false){return(_4709)(M);}else{M.c.push(new RT.CallFrame(_4712,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",13549,329,54,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4699=function(M){if(--M.cbt<0){throw _4699;}
return(_4697)(M);};

var _4689=function(M){if(--M.cbt<0){throw _4689;}
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42291,1066,2,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][74];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=true;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4679=function(M){if(--M.cbt<0){throw _4679;}
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_4684)(M);}else{M.e.push(void(0));
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===RT.NULL);
M.e.pop();
return(_4685)(M);}};

var _4675=function(M){if(--M.cbt<0){throw _4675;}
if(M.v===false){return(_4672)(M);}else{M.v=RT.VOID;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4665=function(M){if(--M.cbt<0){throw _4665;}
M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4661=function(M){if(--M.cbt<0){throw _4661;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4659=function(M){if(--M.cbt<0){throw _4659;}
if(M.v===false){return(_4656)(M);}else{M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41703,1047,19,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-6][101];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.c.push(new RT.CallFrame(_4665,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41716,1047,32,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["cddr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4649=function(M){if(--M.cbt<0){throw _4649;}
M.e[M.e.length-3]=M.v;
M.e[M.e.length-4]=M.primitives["values"];
M.e[M.e.length-5]=M.primitives["void"];
M.v=M.primitives["void"];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4641=function(M){if(--M.cbt<0){throw _4641;}
M.p=M.v;
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4631=function(M){if(--M.cbt<0){throw _4631;}
if(M.v===false){return(_4628)(M);}else{M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41368,1039,22,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["list*"]._i(M);
M.e.length-=10;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4624=RT.si_context_expected(2);

var _4597=function(M){if(--M.cbt<0){throw _4597;}
M.a=1;
return(_4598)(M);};

var _4578=RT.si_context_expected(6);

var _4570=function(M){if(--M.cbt<0){throw _4570;}
return(_4564)(M);};

var _4566=function(M){if(--M.cbt<0){throw _4566;}
if(M.v===false){return(_4563)(M);}else{M.v=RT.VOID;
return(_4564)(M);}};

var _4553=function(M){if(--M.cbt<0){throw _4553;}
M.a=1;
return(_4554)(M);};

var _4534=RT.si_context_expected(6);

var _4526=function(M){if(--M.cbt<0){throw _4526;}
return(_4520)(M);};

var _4522=function(M){if(--M.cbt<0){throw _4522;}
if(M.v===false){return(_4519)(M);}else{M.v=RT.VOID;
return(_4520)(M);}};

var _4504=function(M){if(--M.cbt<0){throw _4504;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4502=function(M){if(--M.cbt<0){throw _4502;}
M.e[M.e.length-2]=M.v;
M.v=RT.makePair(M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4498=function(M){if(--M.cbt<0){throw _4498;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4496=function(M){if(--M.cbt<0){throw _4496;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_4502,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38162,976,73,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-1]=M.v;
M.v=RT.checkedAdd1(M, M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4490=function(M){if(--M.cbt<0){throw _4490;}
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4488=function(M){if(--M.cbt<0){throw _4488;}
M.e[M.e.length-1]=M.v;
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4465=RT.si_context_expected(6);

var _4457=function(M){if(--M.cbt<0){throw _4457;}
return(_4451)(M);};

var _4453=function(M){if(--M.cbt<0){throw _4453;}
if(M.v===false){return(_4450)(M);}else{M.v=RT.VOID;
return(_4451)(M);}};

var _4447=function(M){if(--M.cbt<0){throw _4447;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4443=function(M){if(--M.cbt<0){throw _4443;}
return(_4441)(M);};

var _4435=function(M){if(--M.cbt<0){throw _4435;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4431=function(M){if(--M.cbt<0){throw _4431;}
return(_4429)(M);};

var _4416=RT.si_context_expected(6);

var _4408=function(M){if(--M.cbt<0){throw _4408;}
return(_4400)(M);};

var _4406=function(M){if(--M.cbt<0){throw _4406;}
return(_4402)(M);};

var _4404=function(M){if(--M.cbt<0){throw _4404;}
if(M.v===false){return(_4401)(M);}else{M.c.push(new RT.CallFrame(_4406,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36834,954,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4398=function(M){if(--M.cbt<0){throw _4398;}
return(_4392)(M);};

var _4394=function(M){if(--M.cbt<0){throw _4394;}
if(M.v===false){return(_4391)(M);}else{M.v=RT.VOID;
return(_4392)(M);}};

var _4388=function(M){if(--M.cbt<0){throw _4388;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4384=function(M){if(--M.cbt<0){throw _4384;}
return(_4382)(M);};

var _4376=function(M){if(--M.cbt<0){throw _4376;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4372=function(M){if(--M.cbt<0){throw _4372;}
return(_4370)(M);};

var _4357=RT.si_context_expected(6);

var _4349=function(M){if(--M.cbt<0){throw _4349;}
return(_4341)(M);};

var _4347=function(M){if(--M.cbt<0){throw _4347;}
return(_4343)(M);};

var _4345=function(M){if(--M.cbt<0){throw _4345;}
if(M.v===false){return(_4342)(M);}else{M.c.push(new RT.CallFrame(_4347,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35829,935,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=1;
M.v=M.primitives["procedure-arity-includes?"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4339=function(M){if(--M.cbt<0){throw _4339;}
return(_4333)(M);};

var _4335=function(M){if(--M.cbt<0){throw _4335;}
if(M.v===false){return(_4332)(M);}else{M.v=RT.VOID;
return(_4333)(M);}};

var _4322=RT.si_context_expected(4);

var _4302=function(M){if(--M.cbt<0){throw _4302;}
if(M.v===false){return(_4299)(M);}else{M.v=new RT.Closure(_3781,1,[M.e[M.e.length-7],M.e[M.e.length-10]],"...ong/lang/for.rkt:794:12");
M.a=1;
if(M.a===0){return(_4303)(M);}else{M.e.push(M.v);
return(_4303)(M);}}};

var _4298=function(M){if(--M.cbt<0){throw _4298;}
if(M.v===false){return(_4295)(M);}else{M.e[M.e.length-2]=M.primitives["add1"];
return(_4296)(M);}};

var _4283=RT.si_context_expected(4);

var _4263=function(M){if(--M.cbt<0){throw _4263;}
if(M.v===false){return(_4260)(M);}else{M.v=new RT.Closure(_3770,1,[M.e[M.e.length-7],M.e[M.e.length-10]],"...ong/lang/for.rkt:794:12");
M.a=1;
if(M.a===0){return(_4264)(M);}else{M.e.push(M.v);
return(_4264)(M);}}};

var _4259=function(M){if(--M.cbt<0){throw _4259;}
if(M.v===false){return(_4256)(M);}else{M.e[M.e.length-2]=M.primitives["add1"];
return(_4257)(M);}};

var _4249=function(M){if(--M.cbt<0){throw _4249;}
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.e[M.e.length-4]=M.e[M.e.length-15];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4241=function(M){if(--M.cbt<0){throw _4241;}
M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.v=M.e[M.e.length-10];
if(M.v===false){return(_4245)(M);}else{M.e[M.e.length-1]=M.e[M.e.length-10];
return(_4246)(M);}};

var _4239=function(M){if(--M.cbt<0){throw _4239;}
return(_4233)(M);};

var _4235=function(M){if(--M.cbt<0){throw _4235;}
if(M.v===false){return(_4232)(M);}else{M.v=M.e[M.e.length-3];
M.v=RT.VOID;
return(_4233)(M);}};

var _4231=function(M){if(--M.cbt<0){throw _4231;}
if(M.v===false){return(_4228)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28639,745,4,262]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]="starting index more then stopping index, but given a positive step";
M.e[M.e.length-3]="starting index";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]="stopping index";
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]="step";
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
M.v=M.primitives["error"]._i(M);
M.e.length-=15;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4227=function(M){if(--M.cbt<0){throw _4227;}
if(M.v===false){return(_4224)(M);}else{M.c.push(new RT.CallFrame(_4231,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28623,744,28,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-6],0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4223=function(M){if(--M.cbt<0){throw _4223;}
return(_4215)(M);};

var _4221=function(M){if(--M.cbt<0){throw _4221;}
if(M.v===false){return(_4218)(M);}else{M.c.push(new RT.CallFrame(_4223,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28331,739,4,262]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]="starting index less then stopping index, but given a negative step";
M.e[M.e.length-3]="starting index";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]="stopping index";
M.e[M.e.length-6]=M.e[M.e.length-13];
M.e[M.e.length-7]="step";
M.e[M.e.length-8]=M.e[M.e.length-14];
M.a=8;
M.v=M.primitives["error"]._i(M);
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4217=function(M){if(--M.cbt<0){throw _4217;}
if(M.v===false){return(_4214)(M);}else{M.c.push(new RT.CallFrame(_4221,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28315,738,28,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-6],0,"<"),0)));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4213=function(M){if(--M.cbt<0){throw _4213;}
return(_4203)(M);};

var _4211=function(M){if(--M.cbt<0){throw _4211;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4209=function(M){if(--M.cbt<0){throw _4209;}
return(_4205)(M);};

var _4207=function(M){if(--M.cbt<0){throw _4207;}
if(M.v===false){return(_4204)(M);}else{M.c.push(new RT.CallFrame(_4209,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28191,736,37,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4211,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28196,736,42,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedIsZero(M, M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4201=function(M){if(--M.cbt<0){throw _4201;}
return(_4189)(M);};

var _4199=function(M){if(--M.cbt<0){throw _4199;}
return(_4191)(M);};

var _4197=function(M){if(--M.cbt<0){throw _4197;}
if(M.v===false){return(_4194)(M);}else{M.c.push(new RT.CallFrame(_4199,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28073,734,50,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"<="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"<="))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4193=function(M){if(--M.cbt<0){throw _4193;}
if(M.v===false){return(_4190)(M);}else{M.c.push(new RT.CallFrame(_4197,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28060,734,37,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(-1,RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"<="))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4187=function(M){if(--M.cbt<0){throw _4187;}
return(_4179)(M);};

var _4185=function(M){if(--M.cbt<0){throw _4185;}
return(_4181)(M);};

var _4183=function(M){if(--M.cbt<0){throw _4183;}
if(M.v===false){return(_4180)(M);}else{M.c.push(new RT.CallFrame(_4185,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27941,732,50,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"<="),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-7],1,"<="))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4169=function(M){if(--M.cbt<0){throw _4169;}
return(_4163)(M);};

var _4165=function(M){if(--M.cbt<0){throw _4165;}
if(M.v===false){return(_4162)(M);}else{M.v=RT.VOID;
return(_4163)(M);}};

var _4157=function(M){if(--M.cbt<0){throw _4157;}
return(_4155)(M);};

var _4151=function(M){if(--M.cbt<0){throw _4151;}
if(M.v===false){return(_4148)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22705,586,17,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][50];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4145=function(M){if(--M.cbt<0){throw _4145;}
if(M.v===false){return(_4142)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22664,585,17,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][49];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4139=function(M){if(--M.cbt<0){throw _4139;}
if(M.v===false){return(_4136)(M);}else{M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22622,584,17,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][48];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4133=function(M){if(--M.cbt<0){throw _4133;}
return(_4121)(M);};

var _4131=function(M){if(--M.cbt<0){throw _4131;}
return(_4123)(M);};

var _4129=function(M){if(--M.cbt<0){throw _4129;}
if(M.v===false){return(_4126)(M);}else{M.c.push(new RT.CallFrame(_4131,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22271,574,18,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],0,">="),0)));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4125=function(M){if(--M.cbt<0){throw _4125;}
if(M.v===false){return(_4122)(M);}else{M.c.push(new RT.CallFrame(_4129,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22242,573,18,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["exact?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4101=function(M){if(--M.cbt<0){throw _4101;}
if(M.v===false){return(_4098)(M);}else{M.v=new RT.Closure(_3750,1,[M.e[M.e.length-5],M.e[M.e.length-7]],"cont?");
M.a=1;
if(M.a===0){return(_4102)(M);}else{M.e.push(M.v);
return(_4102)(M);}}};

var _4096=function(M){if(--M.cbt<0){throw _4096;}
return(_4092)(M);};

var _4094=function(M){if(--M.cbt<0){throw _4094;}
if(M.v===false){return(_4091)(M);}else{M.v=RT.VOID;
return(_4092)(M);}};

var _4090=function(M){if(--M.cbt<0){throw _4090;}
return(_4086)(M);};

var _4088=function(M){if(--M.cbt<0){throw _4088;}
if(M.v===false){return(_4085)(M);}else{M.v=RT.VOID;
return(_4086)(M);}};

var _4084=function(M){if(--M.cbt<0){throw _4084;}
return(_4080)(M);};

var _4082=function(M){if(--M.cbt<0){throw _4082;}
if(M.v===false){return(_4079)(M);}else{M.v=RT.VOID;
return(_4080)(M);}};

var _4071=function(M){if(--M.cbt<0){throw _4071;}
M.e[M.e.length-2]=M.v;
return(_4063)(M);};

var _4067=function(M){if(--M.cbt<0){throw _4067;}
M.e[M.e.length-1]=M.v;
M.v=RT.checkedNumEquals(M, 1,M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4065=function(M){if(--M.cbt<0){throw _4065;}
if(M.v===false){return(_4062)(M);}else{M.c.push(new RT.CallFrame(_4071,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19765,504,24,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-7]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4061=function(M){if(--M.cbt<0){throw _4061;}
M.e[M.e.length-2]=M.v;
M.a=2;
M.v=M.primitives["error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4057=function(M){if(--M.cbt<0){throw _4057;}
if(M.v===false){return(_4054)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19567,500,17,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][31];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4049=function(M){if(--M.cbt<0){throw _4049;}
if(M.v===false){return(_4046)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19533,499,17,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][30];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4043=function(M){if(--M.cbt<0){throw _4043;}
M.e[M.e.length-3]=M.v;
M.v=1;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4041=function(M){if(--M.cbt<0){throw _4041;}
if(M.v===false){return(_4038)(M);}else{M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19226,493,17,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][28];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=0;
M.c.push(new RT.CallFrame(_4043,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19243,493,34,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["string-length"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4035=function(M){if(--M.cbt<0){throw _4035;}
M.e[M.e.length-3]=M.v;
M.v=1;
M.p=M.e[M.e.length-4];
M.e[M.e.length-4]=M.v;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4033=function(M){if(--M.cbt<0){throw _4033;}
if(M.v===false){return(_4030)(M);}else{M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19044,490,17,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-5][26];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=0;
M.c.push(new RT.CallFrame(_4035,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19061,490,34,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["vector-length"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4021=function(M){if(--M.cbt<0){throw _4021;}
M.p=M.v;
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4017=function(M){if(--M.cbt<0){throw _4017;}
if(M.v===false){return(_4014)(M);}else{M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18938,487,22,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.CallFrame(_4021,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18939,487,23,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
if (M.e[M.e.length-3][3]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-3].names[3]); }
M.p=M.e[M.e.length-3][3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=0;
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4011=function(M){if(--M.cbt<0){throw _4011;}
if(M.v===false){return(_4008)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18898,486,36,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][24];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4004=function(M){if(--M.cbt<0){throw _4004;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4006)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=8;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3999=function(M){if(--M.cbt<0){throw _3999;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4001)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3994=function(M){if(--M.cbt<0){throw _3994;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3996)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3987=function(M){if(--M.cbt<0){throw _3987;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3991)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3980=function(M){if(--M.cbt<0){throw _3980;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3984)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3975=function(M){if(--M.cbt<0){throw _3975;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3977)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3969=function(M){if(--M.cbt<0){throw _3969;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3967=function(M){if(--M.cbt<0){throw _3967;}
return(_3961)(M);};

var _3963=function(M){if(--M.cbt<0){throw _3963;}
if(M.v===false){return(_3960)(M);}else{M.c.push(new RT.CallFrame(_3967,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18268,461,11,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3969,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18273,461,16,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][11];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3957=function(M){if(--M.cbt<0){throw _3957;}
return(_3951)(M);};

var _3953=function(M){if(--M.cbt<0){throw _3953;}
if(M.v===false){return(_3950)(M);}else{M.v=RT.VOID;
return(_3951)(M);}};

var _3946=function(M){if(--M.cbt<0){throw _3946;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=2;
M.v=RT.checkedVectorRef(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3944=function(M){if(--M.cbt<0){throw _3944;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3942=function(M){if(--M.cbt<0){throw _3942;}
M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_3953,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18005,453,24,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][8];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3934=function(M){if(--M.cbt<0){throw _3934;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3932=function(M){if(--M.cbt<0){throw _3932;}
return(_3926)(M);};

var _3928=function(M){if(--M.cbt<0){throw _3928;}
if(M.v===false){return(_3925)(M);}else{M.c.push(new RT.CallFrame(_3932,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17679,444,11,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3934,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17684,444,16,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][11];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3920=function(M){if(--M.cbt<0){throw _3920;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=1;
M.v=RT.checkedVectorRef(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3918=function(M){if(--M.cbt<0){throw _3918;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-3];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3912=function(M){if(--M.cbt<0){throw _3912;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedVectorRef(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3910=function(M){if(--M.cbt<0){throw _3910;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-4];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3904=function(M){if(--M.cbt<0){throw _3904;}
if(M.v===false){return(_3901)(M);}else{M.v=RT.isPair(M.e[M.e.length-3]);
if(M.v===false){return(_3907)(M);}else{M.v=false;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}}};

var _3895=function(M){if(--M.cbt<0){throw _3895;}
M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=0;
M.v=RT.checkedVectorRef(M, M.e[M.e.length-1],M.e[M.e.length-2]);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3893=function(M){if(--M.cbt<0){throw _3893;}
M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3891=function(M){if(--M.cbt<0){throw _3891;}
M.e[M.e.length-1]=M.v;
M.v=(M.e[M.e.length-1]===false);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5280=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5277=function(M){if(--M.cbt<0){throw _5277;}
M.e.length-=(M.a-1);
return(_5278)(M);};

var _5275=function(M){if(--M.cbt<0){throw _5275;}
M.e.length-=(M.a-1);
return(_5276)(M);};

var _5273=function(M){if(--M.cbt<0){throw _5273;}
M.e.length-=(M.a-1);
return(_5274)(M);};

var _5271=function(M){if(--M.cbt<0){throw _5271;}
M.e.length-=(M.a-1);
return(_5272)(M);};

var _5269=function(M){if(--M.cbt<0){throw _5269;}
M.e.length-=(M.a-1);
return(_5270)(M);};

var _5267=function(M){if(--M.cbt<0){throw _5267;}
M.e.length-=(M.a-1);
return(_5268)(M);};

var _5265=function(M){if(--M.cbt<0){throw _5265;}
M.e.length-=(M.a-1);
return(_5266)(M);};

var _5263=function(M){if(--M.cbt<0){throw _5263;}
M.e.length-=(M.a-1);
return(_5264)(M);};

var _5261=function(M){if(--M.cbt<0){throw _5261;}
M.e.length-=(M.a-1);
return(_5262)(M);};

var _5259=function(M){if(--M.cbt<0){throw _5259;}
M.e.length-=(M.a-1);
return(_5260)(M);};

var _5257=function(M){if(--M.cbt<0){throw _5257;}
M.e.length-=(M.a-1);
return(_5258)(M);};

var _5255=function(M){if(--M.cbt<0){throw _5255;}
M.e.length-=(M.a-1);
return(_5256)(M);};

var _5253=function(M){if(--M.cbt<0){throw _5253;}
M.e.length-=(M.a-1);
return(_5254)(M);};

var _5251=function(M){if(--M.cbt<0){throw _5251;}
M.e.length-=(M.a-1);
return(_5252)(M);};

var _5249=function(M){if(--M.cbt<0){throw _5249;}
M.e.length-=(M.a-1);
return(_5250)(M);};

var _5247=function(M){if(--M.cbt<0){throw _5247;}
M.e.length-=(M.a-1);
return(_5248)(M);};

var _5245=function(M){if(--M.cbt<0){throw _5245;}
M.e.length-=(M.a-1);
return(_5246)(M);};

var _5243=function(M){if(--M.cbt<0){throw _5243;}
M.e.length-=(M.a-1);
return(_5244)(M);};

var _5241=function(M){if(--M.cbt<0){throw _5241;}
M.e.length-=(M.a-1);
return(_5242)(M);};

var _5239=function(M){if(--M.cbt<0){throw _5239;}
M.e.length-=(M.a-1);
return(_5240)(M);};

var _5237=function(M){if(--M.cbt<0){throw _5237;}
M.e.length-=(M.a-1);
return(_5238)(M);};

var _5235=function(M){if(--M.cbt<0){throw _5235;}
M.e.length-=(M.a-1);
return(_5236)(M);};

var _5233=function(M){if(--M.cbt<0){throw _5233;}
M.e.length-=(M.a-1);
return(_5234)(M);};

var _5231=function(M){if(--M.cbt<0){throw _5231;}
M.e.length-=(M.a-1);
return(_5232)(M);};

var _5229=function(M){if(--M.cbt<0){throw _5229;}
M.e.length-=(M.a-1);
return(_5230)(M);};

var _5227=function(M){if(--M.cbt<0){throw _5227;}
M.e.length-=(M.a-1);
return(_5228)(M);};

var _5225=function(M){if(--M.cbt<0){throw _5225;}
M.e.length-=(M.a-1);
return(_5226)(M);};

var _5223=function(M){if(--M.cbt<0){throw _5223;}
M.e.length-=(M.a-1);
return(_5224)(M);};

var _5221=function(M){if(--M.cbt<0){throw _5221;}
M.e.length-=(M.a-1);
return(_5222)(M);};

var _5219=function(M){if(--M.cbt<0){throw _5219;}
M.e.length-=(M.a-1);
return(_5220)(M);};

var _5217=function(M){if(--M.cbt<0){throw _5217;}
M.e.length-=(M.a-1);
return(_5218)(M);};

var _5215=function(M){if(--M.cbt<0){throw _5215;}
M.e.length-=(M.a-1);
return(_5216)(M);};

var _5213=function(M){if(--M.cbt<0){throw _5213;}
M.e.length-=(M.a-1);
return(_5214)(M);};

var _5211=function(M){if(--M.cbt<0){throw _5211;}
M.e.length-=(M.a-1);
return(_5212)(M);};

var _5209=function(M){if(--M.cbt<0){throw _5209;}
M.e.length-=(M.a-1);
return(_5210)(M);};

var _5207=function(M){if(--M.cbt<0){throw _5207;}
M.e.length-=(M.a-1);
return(_5208)(M);};

var _5205=function(M){if(--M.cbt<0){throw _5205;}
M.e.length-=(M.a-1);
return(_5206)(M);};

var _5203=function(M){if(--M.cbt<0){throw _5203;}
M.e.length-=(M.a-1);
return(_5204)(M);};

var _5201=function(M){if(--M.cbt<0){throw _5201;}
M.e.length-=(M.a-1);
return(_5202)(M);};

var _5199=function(M){if(--M.cbt<0){throw _5199;}
M.e.length-=(M.a-1);
return(_5200)(M);};

var _5197=function(M){if(--M.cbt<0){throw _5197;}
M.e.length-=(M.a-1);
return(_5198)(M);};

var _5195=function(M){if(--M.cbt<0){throw _5195;}
M.e.length-=(M.a-1);
return(_5196)(M);};

var _5193=function(M){if(--M.cbt<0){throw _5193;}
M.e.length-=(M.a-1);
return(_5194)(M);};

var _5191=function(M){if(--M.cbt<0){throw _5191;}
M.e.length-=(M.a-1);
return(_5192)(M);};

var _5188=function(M){if(--M.cbt<0){throw _5188;}
if((M.a-6)===0){return(_5184)(M);}else{RT.si_context_expected(6)(M);
}};

var _5187=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym3468;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym3469;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym3470;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5189,M.p));
return((M.p).label)(M);};

var _5185=function(M){if(--M.cbt<0){throw _5185;}
if((M.a-5)===0){return(_5187)(M);}else{RT.si_context_expected(5)(M);
}};

var _5181=function(M){if(--M.cbt<0){throw _5181;}
M.e.length-=(M.a-1);
return(_5182)(M);};

var _5179=function(M){if(--M.cbt<0){throw _5179;}
M.e.length-=(M.a-1);
return(_5180)(M);};

var _5177=function(M){if(--M.cbt<0){throw _5177;}
M.e.length-=(M.a-1);
return(_5178)(M);};

var _5175=function(M){if(--M.cbt<0){throw _5175;}
M.e.length-=(M.a-1);
return(_5176)(M);};

var _5173=function(M){if(--M.cbt<0){throw _5173;}
M.e.length-=(M.a-1);
return(_5174)(M);};

var _5171=function(M){if(--M.cbt<0){throw _5171;}
M.e.length-=(M.a-1);
return(_5172)(M);};

var _5168=function(M){if(--M.cbt<0){throw _5168;}
if((M.a-6)===0){return(_5164)(M);}else{RT.si_context_expected(6)(M);
}};

var _5167=function(M){M.e[M.e.length-5]=M.v;
M.e[M.e.length-6]=M.e[M.e.length-1];
M.e[M.e.length-7]=M.e[M.e.length-2];
M.e[M.e.length-8]=M.e[M.e.length-3];
M.e[M.e.length-9]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=sym3471;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-4]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=1;
M.e[M.e.length-3]=sym3472;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.e[M.e.length-5]=M.v;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=2;
M.e[M.e.length-3]=sym3473;
M.a=3;
M.v=M.primitives["make-struct-field-accessor"]._i(M);
M.e.length-=3;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5169,M.p));
return((M.p).label)(M);};

var _5165=function(M){if(--M.cbt<0){throw _5165;}
if((M.a-5)===0){return(_5167)(M);}else{RT.si_context_expected(5)(M);
}};

var _5161=function(M){if(--M.cbt<0){throw _5161;}
M.e.length-=(M.a-1);
return(_5162)(M);};

var _5159=function(M){if(--M.cbt<0){throw _5159;}
M.e.length-=(M.a-1);
return(_5160)(M);};

var _5157=function(M){if(--M.cbt<0){throw _5157;}
M.e.length-=(M.a-1);
return(_5158)(M);};

var _5155=function(M){if(--M.cbt<0){throw _5155;}
M.e.length-=(M.a-1);
return(_5156)(M);};

var _5153=function(M){if(--M.cbt<0){throw _5153;}
M.e.length-=(M.a-1);
return(_5154)(M);};

var _5151=function(M){if(--M.cbt<0){throw _5151;}
M.e.length-=(M.a-1);
return(_5152)(M);};

var _5149=function(M){if(--M.cbt<0){throw _5149;}
M.e.length-=(M.a-1);
return(_5150)(M);};

var _5147=function(M){if(--M.cbt<0){throw _5147;}
M.e.length-=(M.a-1);
return(_5148)(M);};

var _5145=function(M){if(--M.cbt<0){throw _5145;}
M.e.length-=(M.a-1);
return(_5146)(M);};

var _5143=function(M){if(--M.cbt<0){throw _5143;}
M.e.length-=(M.a-1);
return(_5144)(M);};

var _5141=function(M){if(--M.cbt<0){throw _5141;}
M.e.length-=(M.a-1);
return(_5142)(M);};

var _5138=function(M){M.e[M.e.length-5][0]=M.v;
M.e[M.e.length-5][1]=M.e[M.e.length-1];
M.e[M.e.length-5][2]=M.e[M.e.length-2];
M.e[M.e.length-5][3]=M.e[M.e.length-3];
M.e[M.e.length-5][4]=M.e[M.e.length-4];
M.e.length-=4;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5136=function(M){if(--M.cbt<0){throw _5136;}
if((M.a-5)===0){return(_5138)(M);}else{RT.si_context_expected(5)(M);
}};

var _5134=function(M){if(--M.cbt<0){throw _5134;}
M.e.length-=(M.a-1);
return(_5135)(M);};

var _5132=function(M){if(--M.cbt<0){throw _5132;}
M.e.length-=(M.a-1);
return(_5133)(M);};

var _5133=function(M){if(--M.cbt<0){throw _5133;}
M.e.push([M.params.currentNamespace.get("struct:do-sequence")||M.primitives["struct:do-sequence"],M.params.currentNamespace.get("make-do-sequence")||M.primitives["make-do-sequence"],M.params.currentNamespace.get("do-sequence?")||M.primitives["do-sequence?"],M.params.currentNamespace.get("do-sequence-ref")||M.primitives["do-sequence-ref"],M.params.currentNamespace.get("do-sequence-set!")||M.primitives["do-sequence-set!"],[M.modules["whalesong/lang/private/traced-app.rkt"].prefix,M.modules["whalesong/lang/private/traced-app.rkt"].getPrefixOffset("traced-app-key"),{moduleName:"whalesong/lang/private/traced-app.rkt",name:"traced-app-key"}],M.params.currentNamespace.get("stream-ref")||M.primitives["stream-ref"],M.primitives["list-ref"],M.params.currentNamespace.get("stream?")||M.primitives["stream?"],M.params.currentNamespace.get("unsafe-stream-not-empty?")||M.primitives["unsafe-stream-not-empty?"],M.primitives["vector-ref"],M.params.currentNamespace.get("stream-empty?")||M.primitives["stream-empty?"],M.primitives["error"],M.params.currentNamespace.get("unsafe-stream-first")||M.primitives["unsafe-stream-first"],M.params.currentNamespace.get("stream-first")||M.primitives["stream-first"],M.params.currentNamespace.get("unsafe-stream-rest")||M.primitives["unsafe-stream-rest"],M.primitives["raise-mismatch-error"],M.params.currentNamespace.get("stream-rest")||M.primitives["stream-rest"],M.params.currentNamespace.get("sequence?")||M.primitives["sequence?"],M.primitives["exact-nonnegative-integer?"],M.primitives["vector?"],M.primitives["string?"],M.params.currentNamespace.get("range?")||M.primitives["range?"],M.params.currentNamespace.get("make-sequence")||M.primitives["make-sequence"],M.params.currentNamespace.get(":integer-gen")||M.primitives[":integer-gen"],M.params.currentNamespace.get(":list-gen")||M.primitives[":list-gen"],M.params.currentNamespace.get(":vector-gen")||M.primitives[":vector-gen"],M.primitives["vector-length"],M.params.currentNamespace.get(":string-gen")||M.primitives[":string-gen"],M.primitives["string-length"],M.params.currentNamespace.get(":stream-gen")||M.primitives[":stream-gen"],M.params.currentNamespace.get(":range-gen")||M.primitives[":range-gen"],M.primitives["format"],M.primitives["length"],M.params.currentNamespace.get("struct:range")||M.primitives["struct:range"],M.params.currentNamespace.get("range1.1")||M.primitives["range1.1"],M.params.currentNamespace.get("range-start")||M.primitives["range-start"],M.params.currentNamespace.get("range-inc")||M.primitives["range-inc"],M.params.currentNamespace.get("range-cont?")||M.primitives["range-cont?"],M.params.currentNamespace.get("make-range")||M.primitives["make-range"],M.params.currentNamespace.get("in-range")||M.primitives["in-range"],M.primitives["real?"],M.params.currentNamespace.get("in-naturals")||M.primitives["in-naturals"],M.primitives["integer?"],M.primitives["exact?"],M.params.currentNamespace.get("struct:list-stream")||M.primitives["struct:list-stream"],M.params.currentNamespace.get("list-stream2.2")||M.primitives["list-stream2.2"],M.params.currentNamespace.get("list-stream?")||M.primitives["list-stream?"],M.params.currentNamespace.get("list-stream-empty?")||M.primitives["list-stream-empty?"],M.params.currentNamespace.get("list-stream-first")||M.primitives["list-stream-first"],M.params.currentNamespace.get("list-stream-rest")||M.primitives["list-stream-rest"],M.params.currentNamespace.get("make-list-stream")||M.primitives["make-list-stream"],M.params.currentNamespace.get("list-stream-ref")||M.primitives["list-stream-ref"],M.params.currentNamespace.get("in-list")||M.primitives["in-list"],M.params.currentNamespace.get("in-stream")||M.primitives["in-stream"],M.params.currentNamespace.get("raise-range-error")||M.primitives["raise-range-error"],M.params.currentNamespace.get("raise-argument-error")||M.primitives["raise-argument-error"],M.params.currentNamespace.get("raise-arguments-error")||M.primitives["raise-arguments-error"],M.params.currentNamespace.get("check-ranges")||M.primitives["check-ranges"],M.primitives["exact-integer?"],M.primitives["zero?"],M.params.currentNamespace.get("normalise-inputs")||M.primitives["normalise-inputs"],M.params.currentNamespace.get("in-vector")||M.primitives["in-vector"],M.primitives["string-ref"],M.params.currentNamespace.get("in-string")||M.primitives["in-string"],M.params.currentNamespace.get("stop-before")||M.primitives["stop-before"],M.primitives["procedure?"],M.primitives["procedure-arity-includes?"],M.params.currentNamespace.get("stop-after")||M.primitives["stop-after"],M.params.currentNamespace.get("in-indexed")||M.primitives["in-indexed"],M.params.currentNamespace.get("in-value")||M.primitives["in-value"],M.primitives["void"],M.params.currentNamespace.get("in-values-sequence")||M.primitives["in-values-sequence"],M.params.currentNamespace.get("in-values*-sequence")||M.primitives["in-values*-sequence"],M.params.currentNamespace.get("append-sequences")||M.primitives["append-sequences"],M.params.currentNamespace.get("sequence-generate")||M.primitives["sequence-generate"],M.primitives["list*"],M.primitives["cadr"],M.primitives["cddr"],M.params.currentNamespace.get("check-sequences")||M.primitives["check-sequences"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("for-each2"),{moduleName:"whalesong/lang/private/map.rkt",name:"for-each2"}],M.params.currentNamespace.get("in-sequences")||M.primitives["in-sequences"],M.params.currentNamespace.get("in-cycle")||M.primitives["in-cycle"],M.params.currentNamespace.get("in-parallel")||M.primitives["in-parallel"],M.primitives["reverse"],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("map2"),{moduleName:"whalesong/lang/private/map.rkt",name:"map2"}],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("ormap2"),{moduleName:"whalesong/lang/private/map.rkt",name:"ormap2"}],[M.modules["whalesong/lang/private/map.rkt"].prefix,M.modules["whalesong/lang/private/map.rkt"].getPrefixOffset("andmap2"),{moduleName:"whalesong/lang/private/map.rkt",name:"andmap2"}],M.params.currentNamespace.get("in-producer")||M.primitives["in-producer"],M.primitives["equal?"],M.primitives["procedure-arity"],M.params.currentNamespace.get("no-more")||M.primitives["no-more"],M.primitives["unique-undefined-value"],M.params.currentNamespace.get("sequence-generate*")||M.primitives["sequence-generate*"],M.params.currentNamespace.get("vector-copy!")||M.primitives["vector-copy!"],M.primitives["vector-set!"],M.params.currentNamespace.get("grow-vector")||M.primitives["grow-vector"],M.primitives["make-vector"],M.params.currentNamespace.get("shrink-vector")||M.primitives["shrink-vector"],[M.modules["whalesong/lang/check-expect/check-expect.rkt"].prefix,M.modules["whalesong/lang/check-expect/check-expect.rkt"].getPrefixOffset("run-tests"),{moduleName:"whalesong/lang/check-expect/check-expect.rkt",name:"run-tests"}],[M.modules["collects/racket/private/modbeg.rkt"].prefix,M.modules["collects/racket/private/modbeg.rkt"].getPrefixOffset("print-values"),{moduleName:"collects/racket/private/modbeg.rkt",name:"print-values"}],false,false,false,false,false,false,false,false,false,false]);M.e[M.e.length-1].names=["struct:do-sequence","make-do-sequence","do-sequence?","do-sequence-ref","do-sequence-set!","traced-app-key","stream-ref","list-ref","stream?","unsafe-stream-not-empty?","vector-ref","stream-empty?","error","unsafe-stream-first","stream-first","unsafe-stream-rest","raise-mismatch-error","stream-rest","sequence?","exact-nonnegative-integer?","vector?","string?","range?","make-sequence",":integer-gen",":list-gen",":vector-gen","vector-length",":string-gen","string-length",":stream-gen",":range-gen","format","length","struct:range","range1.1","range-start","range-inc","range-cont?","make-range","in-range","real?","in-naturals","integer?","exact?","struct:list-stream","list-stream2.2","list-stream?","list-stream-empty?","list-stream-first","list-stream-rest","make-list-stream","list-stream-ref","in-list","in-stream","raise-range-error","raise-argument-error","raise-arguments-error","check-ranges","exact-integer?","zero?","normalise-inputs","in-vector","string-ref","in-string","stop-before","procedure?","procedure-arity-includes?","stop-after","in-indexed","in-value","void","in-values-sequence","in-values*-sequence","append-sequences","sequence-generate","list*","cadr","cddr","check-sequences","for-each2","in-sequences","in-cycle","in-parallel","reverse","map2","ormap2","andmap2","in-producer","equal?","procedure-arity","no-more","unique-undefined-value","sequence-generate*","vector-copy!","vector-set!","grow-vector","make-vector","shrink-vector","run-tests","print-values",false,false,false,false,false,false,false,false,false,false];
M.modules["whalesong/lang/for.rkt"].prefix=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_5135,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.CallFrame(_5137,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",14570,355,2,38]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["make-struct-type"];
M.e[M.e.length-1]=sym3474;
M.e[M.e.length-2]=false;
M.e[M.e.length-3]=1;
M.e[M.e.length-4]=0;
M.e[M.e.length-5]=false;
M.a=5;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5131=function(M){if(M.modules["whalesong/lang/whalesong.rkt"].isInvoked!==false){return(_5133)(M);}else{M.c.push(new RT.CallFrame(_5133,M.p));
return(M.modules["whalesong/lang/whalesong.rkt"].label)(M);}};

var _5129=function(M){M.v=M.v;
M.e.splice(M.e.length-((M.a-1)+1),1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5130=function(M){M.modules["whalesong/lang/for.rkt"].isInvoked=true;
if((M.installedModules["whalesong/lang/whalesong.rkt"]!==void(0)&&M.modules["whalesong/lang/whalesong.rkt"]!==undefined)!==false){return(_5131)(M);}else{RT.PAUSE(
                  function(restart){
                      var modname = "whalesong/lang/whalesong.rkt";
                      RT.currentModuleLoader(M,modname,
                                             function(){
                                                 M.modules[modname] = M.installedModules[modname]();
                                                 restart(_5131);
                                             },
                                             function(){
                                                 RT.raiseModuleLoadingError(M,modname); 
                                             });
                  });
return(_5131)(M);}};

var _3883=function(M){if(--M.cbt<0){throw _3883;}
M.e.length-=(M.a-1);
return(_3884)(M);};

var _5125=function(M){if(--M.cbt<0){throw _5125;}
M.e.length-=(M.a-1);
return(_5126)(M);};


var _3881=function(M){if(--M.cbt<0){throw _3881;}

//"lambda body for #(struct:LamPositionalName shrink-vector whalesong/lang/for.rkt 1561 0 65365 110)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_5123,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65413,1562,18,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.a=1;
M.v=M.primitives["make-vector"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5118=function(M){if(--M.cbt<0){throw _5118;}
M.e.length-=(M.a-1);
return(_5119)(M);};




var _3880=function(M){if(--M.cbt<0){throw _3880;}

//"lambda body for #(struct:LamPositionalName grow-vector whalesong/lang/for.rkt 1555 0 65218 145)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_5111,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65256,1556,12,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["vector-length"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3879=function(M){if(--M.cbt<0){throw _3879;}

//"lambda body for unknown"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][110];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-12];
M.e[M.e.length-6]=true;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-12,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5104=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3878)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3879)(M);}};

var _3877=function(M){if(--M.cbt<0){throw _3877;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_5104)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3878)(M);}};


var _5098=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][109];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-9];
M.a=5;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5097=function(M){M.v=M.e[M.e.length-7];
M.c.push(new RT.CallFrame(_5100,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65050,1549,61,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["vector-length"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3876=function(M){if(--M.cbt<0){throw _3876;}

//"lambda body for #(struct:LamPositionalName vector-copy!9 whalesong/lang/for.rkt 1549 0 64989 227)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.v=M.e[M.e.length-8];
if(M.v===false){return(_5097)(M);}else{M.e[M.e.length-1]=M.e[M.e.length-7];
return(_5098)(M);}};




var _5087=function(M){if(--M.cbt<0){throw _5087;}
M.e.length-=(M.a-1);
return(_5088)(M);};

var _5083=function(M){M.v=RT.VOID;
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3875=function(M){if(--M.cbt<0){throw _3875;}

//"lambda body for #(struct:LamPositionalName loop whalesong/lang/for.rkt 1550 2 65074 141)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_5086,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",65125,1551,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-2],1,"<"))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _5067=function(M){M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=false;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-8][91];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5070=function(M){if(M.v===false){return(_5067)(M);}else{M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50694,1254,41,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3][0]);
M.c.push(new RT.CallFrame(_5076,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50701,1254,48,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-6];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _5069=function(M){M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-1];
M.v=true;
return(_5070)(M);};

var _5062=function(M){M.v=M.v;
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5061=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_5062)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_5062)(M);}};

var _3874=function(M){if(--M.cbt<0){throw _3874;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1250:35 whalesong/lang/for.rkt 1250 35 50464 315)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5]);
M.v=M.e[M.e.length-5];
if(M.v===false){return(_5069)(M);}else{M.c.push(new RT.CallFrame(_5072,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50576,1252,45,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _5053=function(M){M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=false;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-8][91];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5056=function(M){if(M.v===false){return(_5053)(M);}else{M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.v=new RT.Closure(_3874,0,[M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-9]],"...ong/lang/for.rkt:1250:35");
M.a=1;
if(M.a===0){return(_5061)(M);}else{M.e.push(M.v);
return(_5061)(M);}}};


var _5055=function(M){M.v=M.e[M.e.length-4];
M.v=true;
return(_5056)(M);};

var _5041=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+8),8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5043=function(M){M.c[M.c.length-1].pendingApplyValuesProc=M.v;
M.c.push(new RT.CallFrame(_5045,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50271,1246,32,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5042=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_5043)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_5043)(M);}};

var _3873=function(M){if(--M.cbt<0){throw _3873;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1247:21 whalesong/lang/for.rkt 1247 21 50308 521)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5]);
M.v=M.e[M.e.length-4];
if(M.v===false){return(_5055)(M);}else{M.c.push(new RT.CallFrame(_5058,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50362,1248,41,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _5032=function(M){M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1];
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=false;
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-9][91];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5035=function(M){if(M.v===false){return(_5032)(M);}else{M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50221,1245,20,609]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=new RT.Closure(_3873,(RT.makeArityAtLeast(0)),[M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-3],M.e[M.e.length-1],M.e[M.e.length-8]],"...ong/lang/for.rkt:1247:21");
M.a=1;
if(M.a===0){return(_5042)(M);}else{M.e.push(M.v);
return(_5042)(M);}}};


var _5034=function(M){M.v=M.e[M.e.length-4];
M.v=true;
return(_5035)(M);};

var _5029=function(M){M.e[M.e.length-1][0]=M.v;
M.v=RT.VOID;
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50881,1258,6,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2][0];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5028=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_5029)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_5029)(M);}};

var _3872=function(M){if(--M.cbt<0){throw _3872;}

//"lambda body for #(struct:LamPositionalName next! whalesong/lang/for.rkt 1243 14 50133 739)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5],M.p.closedVals[6]);
M.v=M.e[M.e.length-4];
if(M.v===false){return(_5034)(M);}else{M.c.push(new RT.CallFrame(_5037,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50181,1244,34,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _5024=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0));
M.e[M.e.length-1]=M.primitives["unique-undefined-value"];
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.v=new RT.Closure(_3872,1,[M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"next!");
M.a=1;
if(M.a===0){return(_5028)(M);}else{M.e.push(M.v);
return(_5028)(M);}};

var _5022=function(M){if(--M.cbt<0){throw _5022;}
if((M.a-6)===0){return(_5024)(M);}else{RT.si_context_expected(6)(M);
}};

var _5018=function(M){if(--M.cbt<0){throw _5018;}
M.e.length-=(M.a-1);
return(_5013)(M);};

var _5013=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_5023,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",50076,1241,16,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _5012=function(M){M.c.push(new RT.CallFrame(_5019,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49930,1239,4,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3475;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3871=function(M){if(--M.cbt<0){throw _3871;}

//"lambda body for #(struct:LamPositionalName sequence-generate* whalesong/lang/for.rkt 1237 0 49871 1025)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_5015,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49912,1238,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3866=function(M){if(--M.cbt<0){throw _3866;}

//"lambda body for #(struct:LamPositionalName more? whalesong/lang/for.rkt 1216 69 48888 14)"

M.v=false;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4994=function(M){M.e[M.e.length-3][0]=_3866_c;
M.v=RT.VOID;
//"Constant toplevel ref: ?"

M.e[M.e.length-5][0]=M.e[M.e.length-9][91];
M.v=RT.VOID;
M.v=RT.VOID;
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4997=function(M){if(M.v===false){return(_4994)(M);}else{M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-3];
M.c.push(new RT.CallFrame(_5003,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",48582,1212,67,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-8];
M.e[M.e.length-1]=M.e[M.e.length-7][0];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4996=function(M){M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-1];
M.v=true;
return(_4997)(M);};

var _4991=function(M){M.e[M.e.length-6][0]=M.v;
M.v=RT.VOID;
M.v=M.e[M.e.length-6];
M.e[M.e.length-5][0]=M.e[M.e.length-2][0];
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e[M.e.length-7][0]=M.e[M.e.length-3][0];
M.v=RT.VOID;
M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-11][5][0][M.e[M.e.length-11][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49160,1220,43,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-13,11);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4990=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4991)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4991)(M);}};

var _3865=function(M){if(--M.cbt<0){throw _3865;}

//"lambda body for #(struct:LamPositionalName prep-val! whalesong/lang/for.rkt 1207 49 48222 761)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5],M.p.closedVals[6],M.p.closedVals[7],M.p.closedVals[8]);
M.v=M.e[M.e.length-8];
if(M.v===false){return(_4996)(M);}else{M.c.push(new RT.CallFrame(_4999,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",48362,1209,59,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-9][0];
M.e[M.e.length-3]=M.e[M.e.length-4];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3867=function(M){if(--M.cbt<0){throw _3867;}

//"lambda body for #(struct:LamPositionalName more? whalesong/lang/for.rkt 1224 45 49372 14)"

M.v=false;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4987=function(M){M.e[M.e.length-6][0]=M.v;
M.v=RT.VOID;
M.v=M.e[M.e.length-6];
M.e[M.e.length-5][0]=M.primitives["void"];
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-11][5][0][M.e[M.e.length-11][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49268,1222,33,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,12);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4986=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4987)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4987)(M);}};

var _3864=function(M){if(--M.cbt<0){throw _3864;}

//"lambda body for #(struct:LamPositionalName next whalesong/lang/for.rkt 1204 39 48046 1132)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5],M.p.closedVals[6],M.p.closedVals[7],M.p.closedVals[8],M.p.closedVals[9],M.p.closedVals[10]);
M.v=new RT.Closure(_3865,0,[M.e[M.e.length-11],M.e[M.e.length-10],M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-1]],"prep-val!");
M.a=1;
if(M.a===0){return(_4990)(M);}else{M.e.push(M.v);
return(_4990)(M);}};

var _3863=function(M){if(--M.cbt<0){throw _3863;}

//"lambda body for #(struct:LamPositionalName more? whalesong/lang/for.rkt 1202 45 47947 14)"

M.v=true;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4978=function(M){M.e[M.e.length-4][0]=_3867_c;
M.v=RT.VOID;
//"Constant toplevel ref: ?"

M.e[M.e.length-6][0]=M.e[M.e.length-11][91];
M.v=RT.VOID;
M.v=RT.VOID;
M.e.length-=12;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4981=function(M){if(M.v===false){return(_4978)(M);}else{M.e[M.e.length-4][0]=_3863_c;
M.v=RT.VOID;
M.v=new RT.Closure(_3864,0,[M.e[M.e.length-11],M.e[M.e.length-10],M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1],M.e[M.e.length-12]],"next");
M.a=1;
if(M.a===0){return(_4986)(M);}else{M.e.push(M.v);
return(_4986)(M);}}};


var _4980=function(M){M.v=M.e[M.e.length-9];
M.v=true;
return(_4981)(M);};

var _3868=function(M){if(--M.cbt<0){throw _3868;}

//"lambda body for #(struct:LamPositionalName more? whalesong/lang/for.rkt 1227 38 49514 14)"

M.v=false;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4968=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+13),13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4970=function(M){M.c[M.c.length-1].pendingApplyValuesProc=M.v;
M.c.push(new RT.CallFrame(_4972,M.p));
M.v=M.e[M.e.length-13][5][0][M.e[M.e.length-13][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47738,1198,36,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-9];
M.e[M.e.length-1]=M.e[M.e.length-8][0];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4969=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-6];
M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4970)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4970)(M);}};

var _3862=function(M){if(--M.cbt<0){throw _3862;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1199:25 whalesong/lang/for.rkt 1199 25 47779 1664)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5],M.p.closedVals[6],M.p.closedVals[7],M.p.closedVals[8],M.p.closedVals[9],M.p.closedVals[10]);
M.v=M.e[M.e.length-9];
if(M.v===false){return(_4980)(M);}else{M.c.push(new RT.CallFrame(_4983,M.p));
M.v=M.e[M.e.length-11][5][0][M.e[M.e.length-11][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47837,1200,45,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-11];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4959=function(M){M.e[M.e.length-4][0]=_3868_c;
M.v=RT.VOID;
//"Constant toplevel ref: ?"

M.e[M.e.length-6][0]=M.e[M.e.length-13][91];
M.v=RT.VOID;
M.v=RT.VOID;
M.e.length-=13;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4962=function(M){if(M.v===false){return(_4959)(M);}else{M.v=M.e[M.e.length-13][5][0][M.e[M.e.length-13][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47684,1197,24,1760]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.v=new RT.Closure(_3862,(RT.makeArityAtLeast(0)),[M.e[M.e.length-13],M.e[M.e.length-12],M.e[M.e.length-11],M.e[M.e.length-9],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"...ong/lang/for.rkt:1199:25");
M.a=1;
if(M.a===0){return(_4969)(M);}else{M.e.push(M.v);
return(_4969)(M);}}};


var _4961=function(M){M.v=M.e[M.e.length-10];
M.v=true;
return(_4962)(M);};

var _4953=function(M){if(--M.cbt<0){throw _4953;}
M.e.length-=(M.a-1);
return(_4954)(M);};

var _4947=function(M){if(--M.cbt<0){throw _4947;}
M.e.length-=(M.a-1);
return(_4948)(M);};

var _4943=function(M){M.e[M.e.length-1]=M.v;
M.e.push(void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-3];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-19,17);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4942=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4943)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4943)(M);}};

var _3870=function(M){if(--M.cbt<0){throw _3870;}

//"lambda body for #(struct:LamPositionalName sequence-next whalesong/lang/for.rkt 1233 31 49773 18)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49784,1233,42,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4940=function(M){M.e[M.e.length-1]=M.v;
M.e.push(void(0));
M.v=new RT.Closure(_3870,0,[M.e[M.e.length-16],M.e[M.e.length-8]],"sequence-next");
M.a=1;
if(M.a===0){return(_4942)(M);}else{M.e.push(M.v);
return(_4942)(M);}};

var _4939=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4940)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4940)(M);}};

var _3869=function(M){if(--M.cbt<0){throw _3869;}

//"lambda body for #(struct:LamPositionalName sequence-more? whalesong/lang/for.rkt 1232 32 49721 19)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",49732,1232,43,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=2;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4938=function(M){M.e[M.e.length-3][0]=M.v;
M.v=RT.VOID;
M.e[M.e.length-4][0]=M.e[M.e.length-1][0];
M.v=RT.VOID;
M.e[M.e.length-5][0]=M.e[M.e.length-3][0];
M.v=RT.VOID;
M.v=M.e[M.e.length-5];
M.e[M.e.length-6][0]=M.e[M.e.length-2][0];
M.v=RT.VOID;
M.e.push(void(0));
M.v=new RT.Closure(_3869,0,[M.e[M.e.length-15],M.e[M.e.length-5]],"sequence-more?");
M.a=1;
if(M.a===0){return(_4939)(M);}else{M.e.push(M.v);
return(_4939)(M);}};

var _4937=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-8];
M.v=M.e[M.e.length-9];
M.v=M.e[M.e.length-11];
M.v=M.e[M.e.length-12];
M.v=M.e[M.e.length-13];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4938)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4938)(M);}};

var _3861=function(M){if(--M.cbt<0){throw _3861;}

//"lambda body for #(struct:LamPositionalName init-prep-val! whalesong/lang/for.rkt 1195 18 47591 1987)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4],M.p.closedVals[5],M.p.closedVals[6],M.p.closedVals[7],M.p.closedVals[8],M.p.closedVals[9],M.p.closedVals[10],M.p.closedVals[11],M.p.closedVals[12]);
M.v=M.e[M.e.length-10];
if(M.v===false){return(_4961)(M);}else{M.c.push(new RT.CallFrame(_4964,M.p));
M.v=M.e[M.e.length-13][5][0][M.e[M.e.length-13][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47640,1196,38,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-11];
M.e[M.e.length-1]=M.e[M.e.length-8][0];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3860=function(M){if(--M.cbt<0){throw _3860;}

//"lambda body for #(struct:LamPositionalName init-next whalesong/lang/for.rkt 1193 18 47508 30)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.c.push(new RT.CallFrame(_4954,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47519,1193,29,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1][0];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3859=function(M){if(--M.cbt<0){throw _3859;}

//"lambda body for #(struct:LamPositionalName init-more? whalesong/lang/for.rkt 1191 18 47429 31)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.c.push(new RT.CallFrame(_4948,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47440,1191,29,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-2][0];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4929=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(M.e[M.e.length-3]);
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-2]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-3]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.e[M.e.length-3]=[M.e[M.e.length-3]];
M.e[M.e.length-1][0]=false;
M.v=RT.VOID;
M.e[M.e.length-2][0]=false;
M.v=RT.VOID;
M.e[M.e.length-3][0]=false;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-2]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-3]=M.primitives["unique-undefined-value"];
M.v=RT.VOID;
M.e[M.e.length-1]=[M.e[M.e.length-1]];
M.e[M.e.length-2]=[M.e[M.e.length-2]];
M.e[M.e.length-3]=[M.e[M.e.length-3]];
M.e[M.e.length-1][0]=new RT.Closure(_3859,0,[M.e[M.e.length-14],M.e[M.e.length-5],M.e[M.e.length-4]],"init-more?");
M.v=RT.VOID;
M.e[M.e.length-2][0]=new RT.Closure(_3860,0,[M.e[M.e.length-14],M.e[M.e.length-6],M.e[M.e.length-5]],"init-next");
M.v=RT.VOID;
M.v=new RT.Closure(_3861,0,[M.e[M.e.length-14],M.e[M.e.length-13],M.e[M.e.length-12],M.e[M.e.length-11],M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7],M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"init-prep-val!");
M.a=1;
if(M.a===0){return(_4937)(M);}else{M.e.push(M.v);
return(_4937)(M);}};

var _4927=function(M){if(--M.cbt<0){throw _4927;}
if((M.a-6)===0){return(_4929)(M);}else{RT.si_context_expected(6)(M);
}};

var _4923=function(M){if(--M.cbt<0){throw _4923;}
M.e.length-=(M.a-1);
return(_4918)(M);};

var _4918=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4928,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47255,1185,16,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-10];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4917=function(M){M.c.push(new RT.CallFrame(_4924,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47110,1183,4,55]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3476;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3858=function(M){if(--M.cbt<0){throw _3858;}

//"lambda body for #(struct:LamPositionalName sequence-generate whalesong/lang/for.rkt 1181 0 47052 2817)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4920,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",47092,1182,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3857=function(M){if(--M.cbt<0){throw _3857;}

//"lambda body for #(struct:LamPositionalName no-more whalesong/lang/for.rkt 1176 0 46873 177)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",46893,1177,2,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push("sequence has no more values");
M.a=1;
M.v=M.primitives["error"]._i(M);
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};




var _4898=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,6);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4897=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4898)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4898)(M);}};

var _3856=function(M){if(--M.cbt<0){throw _3856;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1120:6 whalesong/lang/for.rkt 1120 6 44669 61)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44688,1121,8,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.primitives["void"];
M.c.push(new RT.CallFrame(_4914,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44710,1121,30,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4895=function(M){M.e[M.e.length-1]=M.v;
return(_4879)(M);};

var _4894=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4895)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4895)(M);}};

var _3855=function(M){if(--M.cbt<0){throw _3855;}

//"lambda body for #(struct:LamPositionalName stop? whalesong/lang/for.rkt 1118 14 44603 33)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44614,1118,25,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4910,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44619,1118,30,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4893=function(M){M.e[M.e.length-1]=M.v;
return(_4879)(M);};

var _4892=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4893)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4893)(M);}};

var _3854=function(M){if(--M.cbt<0){throw _3854;}

//"lambda body for #(struct:LamPositionalName stop? whalesong/lang/for.rkt 1116 14 44541 27)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44553,1116,26,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4906,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44558,1116,31,8]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4886=function(M){M.v=new RT.Closure(_3855,(RT.makeArityAtLeast(0)),[M.e[M.e.length-3],M.e[M.e.length-5]],"stop?");
M.a=1;
if(M.a===0){return(_4894)(M);}else{M.e.push(M.v);
return(_4894)(M);}};



var _4885=function(M){M.e[M.e.length-1]=M.v;
return(_4879)(M);};

var _4884=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4885)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4885)(M);}};

var _3853=function(M){if(--M.cbt<0){throw _3853;}

//"lambda body for #(struct:LamPositionalName stop? whalesong/lang/for.rkt 1114 14 44446 31)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=(M.e[M.e.length-3]===M.e[M.e.length-2]);
M.v=(M.e[M.e.length-1]===false);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4878=function(M){M.c.push(new RT.CallFrame(_4889,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44493,1115,14,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=1;
M.c.push(new RT.CallFrame(_4891,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44503,1115,24,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["procedure-arity"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _4876=function(M){M.e[M.e.length-1]=M.v;
return(_4872)(M);};

var _4875=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4876)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4876)(M);}};

var _3852=function(M){if(--M.cbt<0){throw _3852;}

//"lambda body for #(struct:LamPositionalName produce! whalesong/lang/for.rkt 1111 11 44338 34)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44350,1111,23,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4872=function(M){M.e.push(void(0));
M.c.push(new RT.CallFrame(_4881,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44408,1113,14,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4883,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44413,1113,19,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4874=function(M){M.e[M.e.length-1]=M.v;
return(_4872)(M);};

var _4873=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4874)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4874)(M);}};

var _3851=function(M){if(--M.cbt<0){throw _3851;}

//"lambda body for #(struct:LamPositionalName produce! whalesong/lang/for.rkt 1110 11 44303 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44315,1110,23,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4871=function(M){M.v=new RT.Closure(_3852,1,[M.e[M.e.length-2],M.e[M.e.length-5],M.e[M.e.length-3]],"produce!");
M.a=1;
if(M.a===0){return(_4875)(M);}else{M.e.push(M.v);
return(_4875)(M);}};


var _4864=function(M){M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.primitives["void"];
M.c.push(new RT.CallFrame(_4866,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44198,1106,64,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4863=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4864)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4864)(M);}};

var _3849=function(M){if(--M.cbt<0){throw _3849;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1106:42 whalesong/lang/for.rkt 1106 42 44176 16)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44181,1106,47,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
M.e.length-=3;
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4860=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4859=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4860)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4860)(M);}};

var _3848=function(M){if(--M.cbt<0){throw _3848;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1106:23 whalesong/lang/for.rkt 1106 23 44157 58)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44168,1106,34,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3849,(RT.makeArityAtLeast(0)),[M.e[M.e.length-8],M.e[M.e.length-7]],"...ong/lang/for.rkt:1106:42");
M.a=1;
if(M.a===0){return(_4863)(M);}else{M.e.push(M.v);
return(_4863)(M);}};

var _3850=function(M){if(--M.cbt<0){throw _3850;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1107:4 whalesong/lang/for.rkt 1107 4 44222 510)"

M.unspliceRestFromStack(2,(M.a-2));
M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.v=(M.e[M.e.length-5]===RT.NULL);
if(M.v===false){return(_4871)(M);}else{M.v=M.e[M.e.length-5];
M.v=new RT.Closure(_3851,1,[M.e[M.e.length-2],M.e[M.e.length-3]],"produce!");
M.a=1;
if(M.a===0){return(_4873)(M);}else{M.e.push(M.v);
return(_4873)(M);}}};

var _4857=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3847)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3850)(M);}};

var _3846=function(M){if(--M.cbt<0){throw _3846;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4857)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3847)(M);}};


var _4834=function(M){M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-26,20);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4840=function(M){M.v=M.v;
return(_4834)(M);};

var _4839=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4840)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4840)(M);}};

var _3845=function(M){if(--M.cbt<0){throw _3845;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1096:17 whalesong/lang/for.rkt 1096 17 43722 319)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43745,1096,40,295]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
M.p=M.e[M.e.length-6][87][0][M.e[M.e.length-6][87][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-6][108];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4833=function(M){M.v=M.e[M.e.length-12];
M.v=false;
return(_4834)(M);};


var _4826=function(M){M.c.push(new RT.CallFrame(_4836,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43678,1095,17,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-28][86][0][M.e[M.e.length-28][86][1]];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4832=function(M){M.e[M.e.length-5]=M.v;
return(_4826)(M);};

var _4831=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-11];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4832)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4832)(M);}};

var _3844=function(M){if(--M.cbt<0){throw _3844;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1091:17 whalesong/lang/for.rkt 1091 17 43446 213)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43459,1091,30,199]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-5][87][0][M.e[M.e.length-5][87][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][107];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4825=function(M){M.v=M.e[M.e.length-11];
M.e[M.e.length-5]=false;
return(_4826)(M);};


var _4818=function(M){M.c.push(new RT.CallFrame(_4828,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43403,1090,17,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-28][86][0][M.e[M.e.length-28][86][1]];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-13];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4824=function(M){M.e[M.e.length-4]=M.v;
return(_4818)(M);};

var _4823=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4824)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4824)(M);}};

var _3843=function(M){if(--M.cbt<0){throw _3843;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1086:17 whalesong/lang/for.rkt 1086 17 43158 226)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43174,1086,33,209]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-5][87][0][M.e[M.e.length-5][87][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][106];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4817=function(M){M.v=M.e[M.e.length-10];
M.e[M.e.length-4]=false;
return(_4818)(M);};


var _4816=function(M){M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_4820,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43115,1085,17,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-28][86][0][M.e[M.e.length-28][86][1]];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.e[M.e.length-12];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4815=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4816)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4816)(M);}};

var _3842=function(M){if(--M.cbt<0){throw _3842;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1081:12 whalesong/lang/for.rkt 1081 12 42936 143)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42952,1081,28,126]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-5][85][0][M.e[M.e.length-5][85][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][105];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4814=function(M){M.e[M.e.length-1]=M.v;
M.v=new RT.Closure(_3842,1,[M.e[M.e.length-26],M.e[M.e.length-8]],"...ong/lang/for.rkt:1081:12");
M.a=1;
if(M.a===0){return(_4815)(M);}else{M.e.push(M.v);
return(_4815)(M);}};

var _4813=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4814)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4814)(M);}};

var _3841=function(M){if(--M.cbt<0){throw _3841;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1078:12 whalesong/lang/for.rkt 1078 12 42737 186)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42753,1078,28,169]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["apply"];
M.e[M.e.length-1]=M.primitives["values"];
M.c.push(new RT.CallFrame(_4844,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42767,1078,42,154]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.e[M.e.length-7][85][0][M.e[M.e.length-7][85][1]];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][104];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4798=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.v=M.e[M.e.length-20][5][0][M.e[M.e.length-20][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42717,1077,11,1326]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3841,1,[M.e[M.e.length-26],M.e[M.e.length-7]],"...ong/lang/for.rkt:1078:12");
M.a=1;
if(M.a===0){return(_4813)(M);}else{M.e.push(M.v);
return(_4813)(M);}};







var _4796=function(M){if(--M.cbt<0){throw _4796;}
if((M.a-6)===0){return(_4798)(M);}else{RT.si_context_expected(6)(M);
}};

var _4793=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4797,M.p));
M.v=M.e[M.e.length-20][5][0][M.e[M.e.length-20][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70137,1663,13,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.c.push(new RT.CallFrame(_4800,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",70146,1663,22,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-13]);
M.v=M.primitives["reverse"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4791=function(M){if(--M.cbt<0){throw _4791;}
if((M.a-6)===0){return(_4793)(M);}else{RT.si_context_expected(6)(M);
}};

var _4787=function(M){if(--M.cbt<0){throw _4787;}
M.e.length-=(M.a-1);
return(_4788)(M);};

var _4784=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_4788,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",13055,320,19,6]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.a=0;
M.v=M.primitives["void"]._i(M);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4782=function(M){if(--M.cbt<0){throw _4782;}
if((M.a-6)===0){return(_4784)(M);}else{RT.si_context_expected(6)(M);
}};

var _4777=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4776=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4777)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4777)(M);}};

var _3840=function(M){if(--M.cbt<0){throw _3840;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1073:7 whalesong/lang/for.rkt 1073 7 42486 1559)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4783,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42645,1075,63,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][23];
M.e[M.e.length-1]=RT.makePair(sym3477,RT.NULL);
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4768=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42461,1072,6,1585]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3840,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:1073:7");
M.a=1;
if(M.a===0){return(_4776)(M);}else{M.e.push(M.v);
return(_4776)(M);}};



var _4764=function(M){if(--M.cbt<0){throw _4764;}
M.e.length-=(M.a-1);
return(_4765)(M);};

var _3839=function(M){if(--M.cbt<0){throw _3839;}

//"lambda body for #(struct:LamPositionalName in-parallel whalesong/lang/for.rkt 1068 0 42325 1723)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4765,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42361,1069,2,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][79];
M.e[M.e.length-1]=sym3478;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4760=function(M){M.v=true;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3838=function(M){if(--M.cbt<0){throw _3838;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1096:48 whalesong/lang/for.rkt 1096 48 43753 119)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-2];
if(M.v===false){return(_4760)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43847,1097,65,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4756=function(M){M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3837=function(M){if(--M.cbt<0){throw _3837;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1091:38 whalesong/lang/for.rkt 1091 38 43467 98)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-2];
if(M.v===false){return(_4756)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43545,1092,54,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4752=function(M){M.v=true;
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3836=function(M){if(--M.cbt<0){throw _3836;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1086:41 whalesong/lang/for.rkt 1086 41 43182 101)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-2];
if(M.v===false){return(_4752)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",43263,1087,57,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3835=function(M){if(--M.cbt<0){throw _3835;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1081:33 whalesong/lang/for.rkt 1081 33 42957 38)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42980,1081,56,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3834=function(M){if(--M.cbt<0){throw _3834;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1078:47 whalesong/lang/for.rkt 1078 47 42772 38)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42795,1078,70,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4728=function(M){M.v=M.e[M.e.length-26];
M.v=M.e[M.e.length-19];
M.v=M.e[M.e.length-18];
M.v=M.e[M.e.length-17];
M.v=M.e[M.e.length-16];
M.v=M.e[M.e.length-15];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-12];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-9];
M.e[M.e.length-5]=M.e[M.e.length-8];
M.e[M.e.length-6]=M.e[M.e.length-7];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-32,26);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4731=function(M){if(M.v===false){return(_4728)(M);}else{M.v=M.e[M.e.length-14][5][0][M.e[M.e.length-14][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",52853,1302,33,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-12]=M.e[M.e.length-26][103];
M.e[M.e.length-1]=M.e[M.e.length-27];
M.e[M.e.length-2]=M.e[M.e.length-28];
M.e[M.e.length-3]=M.e[M.e.length-29];
M.e[M.e.length-4]=M.e[M.e.length-30];
M.e[M.e.length-5]=M.e[M.e.length-31];
M.e[M.e.length-6]=M.e[M.e.length-18];
M.e[M.e.length-7]=M.e[M.e.length-17];
M.e[M.e.length-8]=M.e[M.e.length-16];
M.e[M.e.length-9]=M.e[M.e.length-15];
M.e[M.e.length-10]=M.e[M.e.length-14];
M.e[M.e.length-11]=M.e[M.e.length-13];
M.c.push(new RT.CallFrame(_4737,M.p));
M.v=M.e[M.e.length-26][5][0][M.e[M.e.length-26][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",13892,335,41,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-29];
M.e[M.e.length-1]=M.e[M.e.length-39];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4730=function(M){M.v=M.e[M.e.length-13];
M.v=true;
return(_4731)(M);};

var _4719=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-2],M.e[M.e.length-15]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-4],M.e[M.e.length-17]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-6],M.e[M.e.length-19]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-8],M.e[M.e.length-21]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-10],M.e[M.e.length-23]);
M.e.push(void(0));
M.e[M.e.length-1]=RT.makePair(M.e[M.e.length-12],M.e[M.e.length-25]);
M.v=M.e[M.e.length-19];
if(M.v===false){return(_4730)(M);}else{M.c.push(new RT.CallFrame(_4733,M.p));
M.v=M.e[M.e.length-14][5][0][M.e[M.e.length-14][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",13725,332,54,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-21];
M.e[M.e.length-1]=M.e[M.e.length-28];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4717=function(M){if(--M.cbt<0){throw _4717;}
if((M.a-6)===0){return(_4719)(M);}else{RT.si_context_expected(6)(M);
}};

var _4707=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.e[M.e.length-2]=M.e[M.e.length-15];
M.e[M.e.length-3]=M.e[M.e.length-16];
M.e[M.e.length-4]=M.e[M.e.length-17];
M.e[M.e.length-5]=M.e[M.e.length-18];
M.e[M.e.length-6]=M.e[M.e.length-19];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-20,14);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4710=function(M){if(M.v===false){return(_4707)(M);}else{M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4718,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42682,1076,25,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4709=function(M){M.v=true;
return(_4710)(M);};


var _4694=function(M){M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-13];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-16];
M.e[M.e.length-5]=M.e[M.e.length-17];
M.e[M.e.length-6]=M.e[M.e.length-18];
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-19,13);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4697=function(M){if(M.v===false){return(_4694)(M);}else{M.e.push(void(0));
M.c.push(new RT.CallFrame(_4703,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42645,1075,63,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-15];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4696=function(M){M.v=true;
return(_4697)(M);};

var _3833=function(M){if(--M.cbt<0){throw _3833;}

//"lambda body for #(struct:LamPositionalName for-loop whalesong/lang/for.rkt 1075 23 42605 98)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-4];
if(M.v===false){return(_4696)(M);}else{M.c.push(new RT.CallFrame(_4699,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",13186,323,54,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-14];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4688=function(M){if(--M.cbt<0){throw _4688;}
M.e.length-=(M.a-1);
return(_4689)(M);};

var _3832=function(M){if(--M.cbt<0){throw _3832;}

//"lambda body for #(struct:LamPositionalName in-cycle whalesong/lang/for.rkt 1064 0 42218 105)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4689,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42251,1065,2,37]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][79];
M.e[M.e.length-1]=sym3479;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4682=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42184,1063,6,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][74];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=false;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4685=function(M){if(M.v===false){return(_4682)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4684=function(M){M.v=false;
return(_4685)(M);};

var _4678=function(M){if(--M.cbt<0){throw _4678;}
M.e.length-=(M.a-1);
return(_4679)(M);};

var _3831=function(M){if(--M.cbt<0){throw _3831;}

//"lambda body for #(struct:LamPositionalName in-sequences whalesong/lang/for.rkt 1059 0 42023 194)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4679,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",42060,1060,2,41]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][79];
M.e[M.e.length-1]=sym3480;
M.e[M.e.length-2]=M.e[M.e.length-4];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4672=function(M){M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41955,1056,36,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4669=function(M){M.e[M.e.length-1]=M.v;
M.v=M.e[M.e.length-5];
M.p=M.e[M.e.length-2];
M.e[M.e.length-2]=M.v;
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4668=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4669)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4669)(M);}};

var _3830=function(M){if(--M.cbt<0){throw _3830;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1055:12 whalesong/lang/for.rkt 1055 12 41907 90)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.c.push(new RT.CallFrame(_4675,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41941,1056,22,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][18];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3829=function(M){if(--M.cbt<0){throw _3829;}

//"lambda body for #(struct:LamPositionalName check-sequences whalesong/lang/for.rkt 1054 0 41855 166)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41897,1055,2,123]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.e[M.e.length-3][80][0][M.e[M.e.length-3][80][1]];
M.v=new RT.Closure(_3830,1,[M.e[M.e.length-3],M.e[M.e.length-4]],"...ong/lang/for.rkt:1055:12");
M.a=1;
if(M.a===0){return(_4668)(M);}else{M.e.push(M.v);
return(_4668)(M);}};


var _4656=function(M){M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};



var _4654=function(M){M.v=M.e[M.e.length-4];
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3828=function(M){if(--M.cbt<0){throw _3828;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1045:13 whalesong/lang/for.rkt 1045 13 41609 147)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4654)(M);}else{M.c.push(new RT.CallFrame(_4659,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41663,1046,38,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4661,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41668,1046,43,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.v;
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4645=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4644=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4645)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4645)(M);}};

var _3827=function(M){if(--M.cbt<0){throw _3827;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1042:3 whalesong/lang/for.rkt 1042 3 41483 368)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41556,1044,5,294]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-9][102];
M.e[M.e.length-2]=new RT.Closure(_3828,1,[M.e[M.e.length-9],M.e[M.e.length-8],M.e[M.e.length-7]],"...ong/lang/for.rkt:1045:13");
M.c.push(new RT.CallFrame(_4649,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41770,1049,13,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-12][101];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-11];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3826=function(M){if(--M.cbt<0){throw _3826;}

//"lambda body for #(struct:LamPositionalName append-sequences whalesong/lang/for.rkt 1034 0 41143 710)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41462,1041,2,390]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3827,0,[M.e[M.e.length-2],M.e[M.e.length-4],M.e[M.e.length-3]],"...ong/lang/for.rkt:1042:3");
M.a=1;
if(M.a===0){return(_4644)(M);}else{M.e.push(M.v);
return(_4644)(M);}};


var _3825=function(M){if(--M.cbt<0){throw _3825;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1044:13 whalesong/lang/for.rkt 1044 13 41564 31)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41580,1044,29,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.CallFrame(_4641,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41581,1044,30,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["cadr"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4636=function(M){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4628=function(M){M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41391,1039,45,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][101];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,7);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};


var _4625=function(M){M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=M.e[M.e.length-1];
M.e.pop();
M.v=RT.VOID;
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.pop();
M.e[M.e.length-3]=M.v;
M.v=RT.VOID;
M.c.push(new RT.CallFrame(_4631,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41360,1039,14,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.p=M.e[M.e.length-1];
M.a=0;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4623=function(M){if(--M.cbt<0){throw _4623;}
if((M.a-2)===0){return(_4625)(M);}else{RT.si_context_expected(2)(M);
}};

var _4619=function(M){M.v=M.e[M.e.length-3];
if(M.v===false){return(_4636)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41433,1040,21,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][101];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _3824=function(M){if(--M.cbt<0){throw _3824;}

//"lambda body for #(struct:LamPositionalName seqs->m+g+r whalesong/lang/for.rkt 1035 2 41190 269)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-4]);
if(M.v===false){return(_4619)(M);}else{M.e.push(void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4624,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41272,1037,34,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-5][75];
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.pop();
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4613=function(M){M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",41067,1030,43,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4607=function(M){M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40773,1025,43,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4605=function(M){M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4603=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3820)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3821)(M);}};

var _4595=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3819=function(M){if(--M.cbt<0){throw _3819;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4603)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3820)(M);}};

var _3821=function(M){if(--M.cbt<0){throw _3821;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1017:66 whalesong/lang/for.rkt 1017 66 40378 7)"

M.unspliceRestFromStack(0,M.a);
M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4589=function(M){M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4591=function(M){M.v=M.v;
return(_4589)(M);};

var _4590=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4591)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4591)(M);}};

var _3823=function(M){if(--M.cbt<0){throw _3823;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1027:37 whalesong/lang/for.rkt 1027 37 40878 212)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=RT.isList(M.e[M.e.length-4]);
if(M.v===false){return(_4613)(M);}else{M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40996,1029,43,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4588=function(M){M.v=M.e[M.e.length-12];
M.v=false;
return(_4589)(M);};

var _4585=function(M){M.v=M.e[M.e.length-12];
if(M.v===false){return(_4588)(M);}else{M.v=new RT.Closure(_3823,2,[M.e[M.e.length-14],M.e[M.e.length-12]],"...ong/lang/for.rkt:1027:37");
M.a=1;
if(M.a===0){return(_4590)(M);}else{M.e.push(M.v);
return(_4590)(M);}}};

var _4587=function(M){M.e[M.e.length-5]=M.v;
return(_4585)(M);};

var _4586=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-11];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4587)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4587)(M);}};

var _3822=function(M){if(--M.cbt<0){throw _3822;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1022:37 whalesong/lang/for.rkt 1022 37 40593 198)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_4607)(M);}else{M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40707,1024,43,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};

var _4584=function(M){M.v=M.e[M.e.length-11];
M.e[M.e.length-5]=false;
return(_4585)(M);};

var _4583=function(M){M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-11];
if(M.v===false){return(_4584)(M);}else{M.v=new RT.Closure(_3822,1,[M.e[M.e.length-14],M.e[M.e.length-11]],"...ong/lang/for.rkt:1022:37");
M.a=1;
if(M.a===0){return(_4586)(M);}else{M.e.push(M.v);
return(_4586)(M);}}};

var _4582=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4583)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4583)(M);}};

var _3818=function(M){if(--M.cbt<0){throw _3818;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1014:32 whalesong/lang/for.rkt 1014 32 40078 310)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40092,1014,46,295]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.e.push(void(0),void(0));
M.e[M.e.length-1]=_3820_c;
M.e[M.e.length-2]=_3821_c;
M.c[M.c.length-1].pendingApplyValuesProc=new RT.Closure(_3819,RT.makePair(1,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"...ong/lang/for.rkt:1015:64");
M.e.length-=2;
M.c.push(new RT.CallFrame(_4597,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40121,1014,75,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4579=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3818,1,[M.e[M.e.length-14],M.e[M.e.length-7]],"...ong/lang/for.rkt:1014:32");
M.a=1;
if(M.a===0){return(_4582)(M);}else{M.e.push(M.v);
return(_4582)(M);}};

var _4577=function(M){if(--M.cbt<0){throw _4577;}
if((M.a-6)===0){return(_4579)(M);}else{RT.si_context_expected(6)(M);
}};

var _4572=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4571=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4572)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4572)(M);}};

var _3817=function(M){if(--M.cbt<0){throw _3817;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1011:20 whalesong/lang/for.rkt 1011 20 39884 1210)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4578,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",40023,1013,36,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4569=function(M){if(--M.cbt<0){throw _4569;}
M.e.length-=(M.a-1);
return(_4564)(M);};

var _4564=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39866,1011,2,1229]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3817,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:1011:20");
M.a=1;
if(M.a===0){return(_4571)(M);}else{M.e.push(M.v);
return(_4571)(M);}};

var _4563=function(M){M.c.push(new RT.CallFrame(_4570,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39806,1010,24,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3481;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3816=function(M){if(--M.cbt<0){throw _3816;}

//"lambda body for #(struct:LamPositionalName in-values*-sequence whalesong/lang/for.rkt 1009 0 39750 1346)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4566,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39792,1010,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4551=function(M){M.p=M.c[M.c.length-1].pendingApplyValuesProc;
M.c.pop();
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-(M.a+3),3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4545=function(M){M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4547=function(M){M.v=M.v;
return(_4545)(M);};

var _4546=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4547)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4547)(M);}};

var _3815=function(M){if(--M.cbt<0){throw _3815;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1007:37 whalesong/lang/for.rkt 1007 37 39695 47)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39714,1007,56,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4544=function(M){M.v=M.e[M.e.length-12];
M.v=false;
return(_4545)(M);};

var _4541=function(M){M.v=M.e[M.e.length-12];
if(M.v===false){return(_4544)(M);}else{M.v=new RT.Closure(_3815,2,[M.e[M.e.length-14],M.e[M.e.length-12]],"...ong/lang/for.rkt:1007:37");
M.a=1;
if(M.a===0){return(_4546)(M);}else{M.e.push(M.v);
return(_4546)(M);}}};

var _4543=function(M){M.e[M.e.length-5]=M.v;
return(_4541)(M);};

var _4542=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-11];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4543)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4543)(M);}};

var _3814=function(M){if(--M.cbt<0){throw _3814;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1005:37 whalesong/lang/for.rkt 1005 37 39570 38)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39585,1005,52,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4540=function(M){M.v=M.e[M.e.length-11];
M.e[M.e.length-5]=false;
return(_4541)(M);};

var _4539=function(M){M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.v=M.e[M.e.length-11];
if(M.v===false){return(_4540)(M);}else{M.v=new RT.Closure(_3814,1,[M.e[M.e.length-14],M.e[M.e.length-11]],"...ong/lang/for.rkt:1005:37");
M.a=1;
if(M.a===0){return(_4542)(M);}else{M.e.push(M.v);
return(_4542)(M);}}};

var _4538=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4539)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4539)(M);}};

var _3813=function(M){if(--M.cbt<0){throw _3813;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:999:32 whalesong/lang/for.rkt 999 32 39236 129)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39250,999,46,114]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.primitives["list"];
M.c.push(new RT.CallFrame(_4553,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39279,999,75,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4535=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3813,1,[M.e[M.e.length-14],M.e[M.e.length-7]],"...ong/lang/for.rkt:999:32");
M.a=1;
if(M.a===0){return(_4538)(M);}else{M.e.push(M.v);
return(_4538)(M);}};

var _4533=function(M){if(--M.cbt<0){throw _4533;}
if((M.a-6)===0){return(_4535)(M);}else{RT.si_context_expected(6)(M);
}};

var _4528=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4527=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4528)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4528)(M);}};

var _3812=function(M){if(--M.cbt<0){throw _3812;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:996:20 whalesong/lang/for.rkt 996 20 39042 704)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4534,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39181,998,36,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4525=function(M){if(--M.cbt<0){throw _4525;}
M.e.length-=(M.a-1);
return(_4520)(M);};

var _4520=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",39024,996,2,723]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3812,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:996:20");
M.a=1;
if(M.a===0){return(_4527)(M);}else{M.e.push(M.v);
return(_4527)(M);}};

var _4519=function(M){M.c.push(new RT.CallFrame(_4526,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38964,995,24,56]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3481;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3811=function(M){if(--M.cbt<0){throw _3811;}

//"lambda body for #(struct:LamPositionalName in-values-sequence whalesong/lang/for.rkt 994 0 38909 839)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4522,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38950,995,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3810=function(M){if(--M.cbt<0){throw _3810;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:990:30 whalesong/lang/for.rkt 990 30 38815 18)"

M.v=M.e[M.e.length-1];
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3809=function(M){if(--M.cbt<0){throw _3809;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:988:30 whalesong/lang/for.rkt 988 30 38734 17)"

M.v=false;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4516=function(M){M.e[M.e.length-1]=M.v;
M.e[M.e.length-2]=_3809_c;
M.e[M.e.length-3]=true;
M.e[M.e.length-4]=_3810_c;
M.e[M.e.length-5]=M.primitives["void"];
M.v=M.primitives["void"];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4515=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4516)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4516)(M);}};

var _3808=function(M){if(--M.cbt<0){throw _3808;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:987:30 whalesong/lang/for.rkt 987 30 38687 16)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1];
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4512=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4511=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4512)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4512)(M);}};

var _3807=function(M){if(--M.cbt<0){throw _3807;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:986:20 whalesong/lang/for.rkt 986 20 38646 259)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3808,1,[M.e[M.e.length-7]],"...ong/lang/for.rkt:987:30");
M.a=1;
if(M.a===0){return(_4515)(M);}else{M.e.push(M.v);
return(_4515)(M);}};

var _3806=function(M){if(--M.cbt<0){throw _3806;}

//"lambda body for #(struct:LamPositionalName in-value whalesong/lang/for.rkt 985 0 38605 302)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38628,986,2,278]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3807,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:986:20");
M.a=1;
if(M.a===0){return(_4511)(M);}else{M.e.push(M.v);
return(_4511)(M);}};







var _4482=function(M){M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-14,8);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4484=function(M){M.v=M.v;
return(_4482)(M);};

var _4483=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4484)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4484)(M);}};

var _3805=function(M){if(--M.cbt<0){throw _3805;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:983:37 whalesong/lang/for.rkt 983 37 38554 43)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-5];
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38576,983,59,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4481=function(M){M.v=M.e[M.e.length-12];
M.v=false;
return(_4482)(M);};

var _4478=function(M){M.v=M.e[M.e.length-12];
if(M.v===false){return(_4481)(M);}else{M.v=new RT.Closure(_3805,3,[M.e[M.e.length-14],M.e[M.e.length-12]],"...ong/lang/for.rkt:983:37");
M.a=1;
if(M.a===0){return(_4483)(M);}else{M.e.push(M.v);
return(_4483)(M);}}};

var _4480=function(M){M.e[M.e.length-5]=M.v;
return(_4478)(M);};

var _4479=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-11];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4480)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4480)(M);}};

var _3804=function(M){if(--M.cbt<0){throw _3804;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:981:37 whalesong/lang/for.rkt 981 37 38433 34)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38451,981,55,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4477=function(M){M.v=M.e[M.e.length-11];
M.e[M.e.length-5]=false;
return(_4478)(M);};

var _4474=function(M){M.v=M.e[M.e.length-11];
if(M.v===false){return(_4477)(M);}else{M.v=new RT.Closure(_3804,2,[M.e[M.e.length-14],M.e[M.e.length-11]],"...ong/lang/for.rkt:981:37");
M.a=1;
if(M.a===0){return(_4479)(M);}else{M.e.push(M.v);
return(_4479)(M);}}};

var _4476=function(M){M.e[M.e.length-4]=M.v;
return(_4474)(M);};

var _4475=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4476)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4476)(M);}};

var _3803=function(M){if(--M.cbt<0){throw _3803;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:979:37 whalesong/lang/for.rkt 979 37 38311 36)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38325,979,51,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-1]);
M.c.push(new RT.CallFrame(_4504,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38336,979,62,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-4]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4473=function(M){M.v=M.e[M.e.length-10];
M.e[M.e.length-4]=false;
return(_4474)(M);};

var _4472=function(M){M.e[M.e.length-2]=M.v;
M.e[M.e.length-3]=RT.makePair(M.e[M.e.length-9],0);
M.v=M.e[M.e.length-10];
if(M.v===false){return(_4473)(M);}else{M.v=new RT.Closure(_3803,1,[M.e[M.e.length-14],M.e[M.e.length-10]],"...ong/lang/for.rkt:979:37");
M.a=1;
if(M.a===0){return(_4475)(M);}else{M.e.push(M.v);
return(_4475)(M);}}};

var _4471=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4472)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4472)(M);}};

var _3802=function(M){if(--M.cbt<0){throw _3802;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:976:32 whalesong/lang/for.rkt 976 32 38121 59)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38135,976,46,44]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_4496,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38141,976,52,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.c.push(new RT.CallFrame(_4498,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38151,976,62,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4470=function(M){M.e[M.e.length-1]=M.v;
M.v=new RT.Closure(_3802,1,[M.e[M.e.length-14],M.e[M.e.length-8]],"...ong/lang/for.rkt:976:32");
M.a=1;
if(M.a===0){return(_4471)(M);}else{M.e.push(M.v);
return(_4471)(M);}};

var _4469=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4470)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4470)(M);}};

var _3801=function(M){if(--M.cbt<0){throw _3801;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:975:32 whalesong/lang/for.rkt 975 32 38034 54)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38048,975,46,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-2]=M.primitives["values"];
M.c.push(new RT.CallFrame(_4488,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38056,975,54,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.c.push(new RT.CallFrame(_4490,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",38066,975,64,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedCar(M, M.e[M.e.length-6]);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4466=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3801,1,[M.e[M.e.length-14],M.e[M.e.length-7]],"...ong/lang/for.rkt:975:32");
M.a=1;
if(M.a===0){return(_4469)(M);}else{M.e.push(M.v);
return(_4469)(M);}};

var _4464=function(M){if(--M.cbt<0){throw _4464;}
if((M.a-6)===0){return(_4466)(M);}else{RT.si_context_expected(6)(M);
}};

var _4459=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4458=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4459)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4459)(M);}};

var _3800=function(M){if(--M.cbt<0){throw _3800;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:972:20 whalesong/lang/for.rkt 972 20 37840 761)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4465,M.p));
M.v=M.e[M.e.length-8][5][0][M.e[M.e.length-8][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37979,974,36,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-10][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4456=function(M){if(--M.cbt<0){throw _4456;}
M.e.length-=(M.a-1);
return(_4451)(M);};

var _4451=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37822,972,2,780]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3800,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:972:20");
M.a=1;
if(M.a===0){return(_4458)(M);}else{M.e.push(M.v);
return(_4458)(M);}};

var _4450=function(M){M.c.push(new RT.CallFrame(_4457,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37770,971,24,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3482;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3799=function(M){if(--M.cbt<0){throw _3799;}

//"lambda body for #(struct:LamPositionalName in-indexed whalesong/lang/for.rkt 970 0 37723 880)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4453,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37756,971,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _4438=function(M){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4441=function(M){if(M.v===false){return(_4438)(M);}else{M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37690,968,53,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4447,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37695,968,58,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4440=function(M){M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-1];
M.v=true;
return(_4441)(M);};


var _4426=function(M){M.v=false;
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4429=function(M){if(M.v===false){return(_4426)(M);}else{M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37518,966,50,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4435,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37523,966,55,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4428=function(M){M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-1];
M.v=true;
return(_4429)(M);};

var _4424=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3797)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3798)(M);}};

var _4421=function(M){M.v=M.v;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4420=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-14];
M.v=M.e[M.e.length-12];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4421)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4421)(M);}};

var _3796=function(M){if(--M.cbt<0){throw _3796;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4424)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3797)(M);}};

var _3798=function(M){if(--M.cbt<0){throw _3798;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:967:34 whalesong/lang/for.rkt 967 34 37571 144)"

M.unspliceRestFromStack(1,(M.a-1));
M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4440)(M);}else{M.c.push(new RT.CallFrame(_4443,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37605,967,68,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4417=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e[M.e.length-5]=M.e[M.e.length-11];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3797,2,[M.e[M.e.length-17],M.e[M.e.length-16],M.e[M.e.length-14]],"...ong/lang/for.rkt:965:34");
M.e[M.e.length-2]=new RT.Closure(_3798,(RT.makeArityAtLeast(1)),[M.e[M.e.length-17],M.e[M.e.length-16],M.e[M.e.length-14]],"...ong/lang/for.rkt:967:34");
M.v=new RT.Closure(_3796,RT.makePair(2,RT.makePair((RT.makeArityAtLeast(1)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"...ong/lang/for.rkt:964:32");
M.e.length-=2;
M.a=1;
if(M.a===0){return(_4420)(M);}else{M.e.push(M.v);
return(_4420)(M);}};

var _4415=function(M){if(--M.cbt<0){throw _4415;}
if((M.a-6)===0){return(_4417)(M);}else{RT.si_context_expected(6)(M);
}};

var _4410=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4409=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4410)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4410)(M);}};

var _3795=function(M){if(--M.cbt<0){throw _3795;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:956:20 whalesong/lang/for.rkt 956 20 36968 751)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4416,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37107,958,36,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4407=function(M){if(--M.cbt<0){throw _4407;}
M.e.length-=(M.a-1);
return(_4400)(M);};

var _4400=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36950,956,2,770]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3795,0,[M.e[M.e.length-2],M.e[M.e.length-4],M.e[M.e.length-3]],"...ong/lang/for.rkt:956:20");
M.a=1;
if(M.a===0){return(_4409)(M);}else{M.e.push(M.v);
return(_4409)(M);}};

var _4399=function(M){M.c.push(new RT.CallFrame(_4408,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36874,955,4,72]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3483;
M.e[M.e.length-2]="(procedure-arity-includes/c 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4402=function(M){if(M.v===false){return(_4399)(M);}else{M.v=RT.VOID;
return(_4400)(M);}};


var _4401=function(M){M.v=false;
return(_4402)(M);};


var _4397=function(M){if(--M.cbt<0){throw _4397;}
M.e.length-=(M.a-1);
return(_4392)(M);};

var _4392=function(M){M.c.push(new RT.CallFrame(_4404,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36801,953,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4391=function(M){M.c.push(new RT.CallFrame(_4398,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36736,952,24,48]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3483;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3794=function(M){if(--M.cbt<0){throw _3794;}

//"lambda body for #(struct:LamPositionalName stop-after whalesong/lang/for.rkt 951 0 36684 1037)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4394,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36722,952,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _4379=function(M){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4382=function(M){if(M.v===false){return(_4379)(M);}else{M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36608,948,45,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4388,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36613,948,50,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4381=function(M){M.v=M.e[M.e.length-1];
M.v=true;
return(_4382)(M);};


var _4367=function(M){M.v=false;
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4370=function(M){if(M.v===false){return(_4367)(M);}else{M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36458,946,46,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4376,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36463,946,51,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-4];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};


var _4369=function(M){M.v=M.e[M.e.length-1];
M.v=true;
return(_4370)(M);};

var _4365=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3792)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3793)(M);}};

var _4362=function(M){M.e[M.e.length-5]=M.v;
M.v=M.e[M.e.length-12];
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-15,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4361=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-14];
M.v=M.e[M.e.length-11];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4362)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4362)(M);}};

var _3791=function(M){if(--M.cbt<0){throw _3791;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4365)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3792)(M);}};

var _3793=function(M){if(--M.cbt<0){throw _3793;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:947:34 whalesong/lang/for.rkt 947 34 36511 122)"

M.unspliceRestFromStack(0,M.a);
M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4381)(M);}else{M.c.push(new RT.CallFrame(_4384,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36536,947,59,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.primitives["apply"];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _4358=function(M){M.e[M.e.length-6]=M.v;
M.e[M.e.length-7]=M.e[M.e.length-1];
M.e[M.e.length-8]=M.e[M.e.length-2];
M.e[M.e.length-9]=M.e[M.e.length-3];
M.e[M.e.length-10]=M.e[M.e.length-4];
M.e[M.e.length-11]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.e[M.e.length-2]=M.e[M.e.length-8];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.e[M.e.length-4]=M.e[M.e.length-10];
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3792,1,[M.e[M.e.length-17],M.e[M.e.length-16],M.e[M.e.length-13]],"...ong/lang/for.rkt:945:34");
M.e[M.e.length-2]=new RT.Closure(_3793,(RT.makeArityAtLeast(0)),[M.e[M.e.length-17],M.e[M.e.length-16],M.e[M.e.length-13]],"...ong/lang/for.rkt:947:34");
M.v=new RT.Closure(_3791,RT.makePair(1,RT.makePair((RT.makeArityAtLeast(0)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"...ong/lang/for.rkt:944:32");
M.e.length-=2;
M.a=1;
if(M.a===0){return(_4361)(M);}else{M.e.push(M.v);
return(_4361)(M);}};

var _4356=function(M){if(--M.cbt<0){throw _4356;}
if((M.a-6)===0){return(_4358)(M);}else{RT.si_context_expected(6)(M);
}};

var _4351=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4350=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4351)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4351)(M);}};

var _3790=function(M){if(--M.cbt<0){throw _3790;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:937:20 whalesong/lang/for.rkt 937 20 35964 716)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4357,M.p));
M.v=M.e[M.e.length-9][5][0][M.e[M.e.length-9][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36103,939,36,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-11][23];
M.e[M.e.length-1]=false;
M.e[M.e.length-2]=M.e[M.e.length-9];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4348=function(M){if(--M.cbt<0){throw _4348;}
M.e.length-=(M.a-1);
return(_4341)(M);};

var _4341=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35946,937,2,735]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3790,0,[M.e[M.e.length-2],M.e[M.e.length-4],M.e[M.e.length-3]],"...ong/lang/for.rkt:937:20");
M.a=1;
if(M.a===0){return(_4350)(M);}else{M.e.push(M.v);
return(_4350)(M);}};

var _4340=function(M){M.c.push(new RT.CallFrame(_4349,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35869,936,4,73]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3484;
M.e[M.e.length-2]="(procedure-arity-includes/c 1)";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4343=function(M){if(M.v===false){return(_4340)(M);}else{M.v=RT.VOID;
return(_4341)(M);}};


var _4342=function(M){M.v=false;
return(_4343)(M);};


var _4338=function(M){if(--M.cbt<0){throw _4338;}
M.e.length-=(M.a-1);
return(_4333)(M);};

var _4333=function(M){M.c.push(new RT.CallFrame(_4345,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35796,934,15,17]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["procedure?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4332=function(M){M.c.push(new RT.CallFrame(_4339,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35730,933,24,49]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3484;
M.e[M.e.length-2]="sequence?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3789=function(M){if(--M.cbt<0){throw _3789;}

//"lambda body for #(struct:LamPositionalName stop-before whalesong/lang/for.rkt 932 0 35677 1005)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4335,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",35716,933,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][18];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4327=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4326=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4327)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4327)(M);}};

var _3788=function(M){if(--M.cbt<0){throw _3788;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:778:30 whalesong/lang/for.rkt 778 30 30165 46)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4]);
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30176,778,41,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][28];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4323=function(M){M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-1];
M.e[M.e.length-6]=M.e[M.e.length-2];
M.e[M.e.length-7]=M.e[M.e.length-3];
M.e.length-=3;
M.v=RT.VOID;
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30147,778,12,65]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-6][1];
M.v=new RT.Closure(_3788,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"...ong/lang/for.rkt:778:30");
M.a=1;
if(M.a===0){return(_4326)(M);}else{M.e.push(M.v);
return(_4326)(M);}};

var _4321=function(M){if(--M.cbt<0){throw _4321;}
if((M.a-4)===0){return(_4323)(M);}else{RT.si_context_expected(4)(M);
}};

var _3787=function(M){if(--M.cbt<0){throw _3787;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:774:9 whalesong/lang/for.rkt 774 9 29907 307)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4322,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29996,776,24,136]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][61];
M.e[M.e.length-1]=sym3485;
M.e[M.e.length-2]="string";
M.e[M.e.length-3]=M.primitives["string?"];
M.e[M.e.length-4]=M.primitives["string-length"];
M.e[M.e.length-5]=M.e[M.e.length-14];
M.e[M.e.length-6]=M.e[M.e.length-15];
M.e[M.e.length-7]=M.e[M.e.length-16];
M.e[M.e.length-8]=M.e[M.e.length-17];
M.a=8;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3786=function(M){if(--M.cbt<0){throw _3786;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:773:9 whalesong/lang/for.rkt 773 9 29849 48)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29865,773,25,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4311=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_3784)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_3787)(M);}};

var _3785=function(M){if(--M.cbt<0){throw _3785;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:772:9 whalesong/lang/for.rkt 772 9 29798 41)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29809,772,20,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4310=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_4311)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3786)(M);}};

var _4309=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4310)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3785)(M);}};

var _3783=function(M){if(--M.cbt<0){throw _3783;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4309)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3784)(M);}};

var _4306=function(M){M.e[M.e.length-4]=M.v;
return(_4300)(M);};

var _4305=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4306)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4306)(M);}};

var _3782=function(M){if(--M.cbt<0){throw _3782;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:795:12 whalesong/lang/for.rkt 795 12 30743 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30755,795,24,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4300=function(M){M.e[M.e.length-5]=false;
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4304=function(M){M.e[M.e.length-4]=M.v;
return(_4300)(M);};

var _4303=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4304)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4304)(M);}};

var _3781=function(M){if(--M.cbt<0){throw _3781;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:794:12 whalesong/lang/for.rkt 794 12 30707 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30719,794,24,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"<"))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4299=function(M){M.v=new RT.Closure(_3782,1,[M.e[M.e.length-7],M.e[M.e.length-10]],"...ong/lang/for.rkt:795:12");
M.a=1;
if(M.a===0){return(_4305)(M);}else{M.e.push(M.v);
return(_4305)(M);}};


var _3780=function(M){if(--M.cbt<0){throw _3780;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:789:28 whalesong/lang/for.rkt 789 28 30589 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30601,789,40,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4296=function(M){M.e[M.e.length-3]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_4302,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30684,793,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-11],0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4295=function(M){M.e[M.e.length-2]=new RT.Closure(_3780,1,[M.e[M.e.length-7],M.e[M.e.length-11]],"...ong/lang/for.rkt:789:28");
return(_4296)(M);};


var _4294=function(M){M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_4298,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30573,789,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-11],1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4293=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4294)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4294)(M);}};

var _3779=function(M){if(--M.cbt<0){throw _3779;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:786:8 whalesong/lang/for.rkt 786 8 30440 32)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30452,786,20,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-3];
M.e[M.e.length-2]=M.e[M.e.length-5];
M.v=M.primitives["string-ref"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3778=function(M){if(--M.cbt<0){throw _3778;}

//"lambda body for #(struct:LamPositionalName :string-gen whalesong/lang/for.rkt 897 0 34594 48)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30400,784,7,390]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3779,1,[M.e[M.e.length-7],M.e[M.e.length-8]],"...ong/lang/for.rkt:786:8");
M.a=1;
if(M.a===0){return(_4293)(M);}else{M.e.push(M.v);
return(_4293)(M);}};

var _4288=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,9);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4287=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-3];
M.v=M.e[M.e.length-4];
M.v=M.e[M.e.length-5];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4288)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4288)(M);}};

var _3777=function(M){if(--M.cbt<0){throw _3777;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:778:30 whalesong/lang/for.rkt 778 30 30165 46)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2],M.p.closedVals[3],M.p.closedVals[4]);
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30176,778,41,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][26];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.e[M.e.length-8];
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-9,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4284=function(M){M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=M.e[M.e.length-1];
M.e[M.e.length-6]=M.e[M.e.length-2];
M.e[M.e.length-7]=M.e[M.e.length-3];
M.e.length-=3;
M.v=RT.VOID;
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30147,778,12,65]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-6][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-6].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-6][1];
M.v=new RT.Closure(_3777,0,[M.e[M.e.length-6],M.e[M.e.length-5],M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"...ong/lang/for.rkt:778:30");
M.a=1;
if(M.a===0){return(_4287)(M);}else{M.e.push(M.v);
return(_4287)(M);}};

var _4282=function(M){if(--M.cbt<0){throw _4282;}
if((M.a-4)===0){return(_4284)(M);}else{RT.si_context_expected(4)(M);
}};

var _3776=function(M){if(--M.cbt<0){throw _3776;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:774:9 whalesong/lang/for.rkt 774 9 29907 307)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0));
M.c.push(new RT.CallFrame(_4283,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29996,776,24,136]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-13][61];
M.e[M.e.length-1]=sym3486;
M.e[M.e.length-2]="vector";
M.e[M.e.length-3]=M.primitives["vector?"];
M.e[M.e.length-4]=M.primitives["vector-length"];
M.e[M.e.length-5]=M.e[M.e.length-14];
M.e[M.e.length-6]=M.e[M.e.length-15];
M.e[M.e.length-7]=M.e[M.e.length-16];
M.e[M.e.length-8]=M.e[M.e.length-17];
M.a=8;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3775=function(M){if(--M.cbt<0){throw _3775;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:773:9 whalesong/lang/for.rkt 773 9 29849 48)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29865,773,25,31]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4272=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 4]).racketArity,M.a)){return(_3773)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 4];
return(_3776)(M);}};

var _3774=function(M){if(--M.cbt<0){throw _3774;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:772:9 whalesong/lang/for.rkt 772 9 29798 41)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29809,772,20,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4271=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_4272)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3775)(M);}};

var _4270=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4271)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3774)(M);}};

var _3772=function(M){if(--M.cbt<0){throw _3772;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4270)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3773)(M);}};

var _4267=function(M){M.e[M.e.length-4]=M.v;
return(_4261)(M);};

var _4266=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4267)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4267)(M);}};

var _3771=function(M){if(--M.cbt<0){throw _3771;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:795:12 whalesong/lang/for.rkt 795 12 30743 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30755,795,24,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4261=function(M){M.e[M.e.length-5]=false;
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4265=function(M){M.e[M.e.length-4]=M.v;
return(_4261)(M);};

var _4264=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-10];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4265)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4265)(M);}};

var _3770=function(M){if(--M.cbt<0){throw _3770;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:794:12 whalesong/lang/for.rkt 794 12 30707 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30719,794,24,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"<"))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4260=function(M){M.v=new RT.Closure(_3771,1,[M.e[M.e.length-7],M.e[M.e.length-10]],"...ong/lang/for.rkt:795:12");
M.a=1;
if(M.a===0){return(_4266)(M);}else{M.e.push(M.v);
return(_4266)(M);}};


var _3769=function(M){if(--M.cbt<0){throw _3769;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:789:28 whalesong/lang/for.rkt 789 28 30589 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30601,789,40,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4257=function(M){M.e[M.e.length-3]=M.e[M.e.length-9];
M.c.push(new RT.CallFrame(_4263,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30684,793,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-11],0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4256=function(M){M.e[M.e.length-2]=new RT.Closure(_3769,1,[M.e[M.e.length-7],M.e[M.e.length-11]],"...ong/lang/for.rkt:789:28");
return(_4257)(M);};


var _4255=function(M){M.e[M.e.length-1]=M.v;
M.c.push(new RT.CallFrame(_4259,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30573,789,12,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-11],1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4254=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4255)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4255)(M);}};

var _3768=function(M){if(--M.cbt<0){throw _3768;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:786:8 whalesong/lang/for.rkt 786 8 30440 32)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30452,786,20,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedVectorRef(M, M.e[M.e.length-1],M.e[M.e.length-3]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3767=function(M){if(--M.cbt<0){throw _3767;}

//"lambda body for #(struct:LamPositionalName :vector-gen whalesong/lang/for.rkt 883 0 34191 48)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",30400,784,7,390]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.v=new RT.Closure(_3768,1,[M.e[M.e.length-7],M.e[M.e.length-8]],"...ong/lang/for.rkt:786:8");
M.a=1;
if(M.a===0){return(_4254)(M);}else{M.e.push(M.v);
return(_4254)(M);}};

var _4248=function(M){if(--M.cbt<0){throw _4248;}
M.e.length-=(M.a-1);
return(_4249)(M);};

var _4246=function(M){M.c.push(new RT.CallFrame(_4249,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29455,762,4,43]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-9][58];
M.e[M.e.length-1]=M.e[M.e.length-10];
M.e[M.e.length-2]=M.e[M.e.length-14];
M.e[M.e.length-3]=M.e[M.e.length-15];
M.e[M.e.length-4]=M.e[M.e.length-7];
M.e[M.e.length-5]=M.e[M.e.length-17];
M.e[M.e.length-6]=M.e[M.e.length-8];
M.a=6;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4245=function(M){M.v=M.e[M.e.length-10];
M.e[M.e.length-1]=M.e[M.e.length-2];
return(_4246)(M);};


var _4238=function(M){if(--M.cbt<0){throw _4238;}
M.e.length-=(M.a-1);
return(_4233)(M);};

var _4233=function(M){M.e.push(void(0));
M.c.push(new RT.CallFrame(_4241,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29393,760,14,19]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-7];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4232=function(M){M.c.push(new RT.CallFrame(_4239,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29337,759,4,40]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3766=function(M){if(--M.cbt<0){throw _3766;}

//"lambda body for #(struct:LamPositionalName normalise-inputs whalesong/lang/for.rkt 756 0 29200 334)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4235,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29319,758,10,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-5];
M.e[M.e.length-1]=M.e[M.e.length-7];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _4228=function(M){M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4224=function(M){M.v=RT.VOID;
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4215=function(M){M.c.push(new RT.CallFrame(_4227,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28608,744,13,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],1,"<"))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4222=function(M){if(--M.cbt<0){throw _4222;}
M.e.length-=(M.a-1);
return(_4215)(M);};

var _4218=function(M){M.v=RT.VOID;
return(_4215)(M);};


var _4214=function(M){M.v=RT.VOID;
return(_4215)(M);};


var _4212=function(M){if(--M.cbt<0){throw _4212;}
M.e.length-=(M.a-1);
return(_4203)(M);};

var _4203=function(M){M.c.push(new RT.CallFrame(_4217,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28300,738,13,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-4],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-5],1,"<"))));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4202=function(M){M.c.push(new RT.CallFrame(_4213,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28215,737,4,70]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]="(and/c exact-integer? (not/c zero?))";
M.e[M.e.length-3]=M.e[M.e.length-9];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4205=function(M){if(M.v===false){return(_4202)(M);}else{M.v=RT.VOID;
return(_4203)(M);}};



var _4204=function(M){M.v=false;
return(_4205)(M);};


var _4200=function(M){if(--M.cbt<0){throw _4200;}
M.e.length-=(M.a-1);
return(_4189)(M);};

var _4189=function(M){M.c.push(new RT.CallFrame(_4207,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28169,736,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["exact-integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4188=function(M){M.c.push(new RT.CallFrame(_4201,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28092,735,4,60]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="vector";
M.e[M.e.length-3]="stopping ";
M.e[M.e.length-4]=M.e[M.e.length-12];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=-1;
M.e[M.e.length-7]=M.e[M.e.length-14];
M.a=7;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4191=function(M){if(M.v===false){return(_4188)(M);}else{M.v=M.e[M.e.length-7];
M.v=M.e[M.e.length-3];
M.v=RT.VOID;
return(_4189)(M);}};


var _4194=function(M){M.v=false;
return(_4191)(M);};


var _4190=function(M){M.v=false;
return(_4191)(M);};


var _4186=function(M){if(--M.cbt<0){throw _4186;}
M.e.length-=(M.a-1);
return(_4179)(M);};

var _4179=function(M){M.c.push(new RT.CallFrame(_4193,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",28038,734,15,21]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.v=M.primitives["exact-integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4178=function(M){M.c.push(new RT.CallFrame(_4187,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27961,733,4,60]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=M.e[M.e.length-9];
M.e[M.e.length-2]="vector";
M.e[M.e.length-3]="starting ";
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=M.e[M.e.length-10];
M.e[M.e.length-6]=0;
M.e[M.e.length-7]=M.e[M.e.length-14];
M.a=7;
M.v=M.primitives["error"]._i(M);
M.e.length-=7;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4181=function(M){if(M.v===false){return(_4178)(M);}else{M.v=RT.VOID;
return(_4179)(M);}};


var _4180=function(M){M.v=false;
return(_4181)(M);};


var _3765=function(M){if(--M.cbt<0){throw _3765;}

//"lambda body for #(struct:LamPositionalName check-ranges whalesong/lang/for.rkt 731 0 27840 1063)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4183,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27906,732,15,34]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3764=function(M){if(--M.cbt<0){throw _3764;}

//"lambda body for #(struct:LamPositionalName :stream-gen whalesong/lang/for.rkt 718 0 27312 107)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
//"Constant toplevel ref: ?"

M.e[M.e.length-1]=M.e[M.e.length-7][13];
//"Constant toplevel ref: ?"

M.e[M.e.length-2]=M.e[M.e.length-7][15];
M.e[M.e.length-3]=M.e[M.e.length-8];
//"Constant toplevel ref: ?"

M.e[M.e.length-4]=M.e[M.e.length-7][9];
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=false;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4171=function(M){M.v=M.v;
M.p=M.e[M.e.length-1];
M.e[M.e.length-1]=M.v;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4170=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-3];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4171)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4171)(M);}};

var _3763=function(M){if(--M.cbt<0){throw _3763;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:716:20 whalesong/lang/for.rkt 716 20 27281 27)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27292,716,31,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][30];
M.e[M.e.length-1]=M.e[M.e.length-2];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4168=function(M){if(--M.cbt<0){throw _4168;}
M.e.length-=(M.a-1);
return(_4163)(M);};

var _4163=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27263,716,2,46]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3763,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:716:20");
M.a=1;
if(M.a===0){return(_4170)(M);}else{M.e.push(M.v);
return(_4170)(M);}};

var _4162=function(M){M.c.push(new RT.CallFrame(_4169,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27229,715,22,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3487;
M.e[M.e.length-2]="stream?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3762=function(M){if(--M.cbt<0){throw _3762;}

//"lambda body for #(struct:LamPositionalName in-stream whalesong/lang/for.rkt 714 0 27185 125)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4165,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",27217,715,10,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3761=function(M){if(--M.cbt<0){throw _3761;}

//"lambda body for #(struct:LamPositionalName :list-gen whalesong/lang/for.rkt 615 0 23798 55)"

M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.p=M.primitives["values"];
M.e[M.e.length-1]=M.primitives["car"];
M.e[M.e.length-2]=M.primitives["cdr"];
M.e[M.e.length-3]=M.e[M.e.length-7];
M.e[M.e.length-4]=M.primitives["pair?"];
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=false;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-7,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4156=function(M){if(--M.cbt<0){throw _4156;}
M.e.length-=(M.a-1);
return(_4155)(M);};

var _4155=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",23775,613,2,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][46];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4154=function(M){M.c.push(new RT.CallFrame(_4157,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",23745,612,20,26]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3488;
M.e[M.e.length-2]="list?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3760=function(M){if(--M.cbt<0){throw _3760;}

//"lambda body for #(struct:LamPositionalName in-list whalesong/lang/for.rkt 611 0 23705 91)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isList(M.e[M.e.length-2]);
if(M.v===false){return(_4154)(M);}else{M.v=RT.VOID;
return(_4155)(M);}};

var _4148=function(M){M.v=M.e[M.e.length-2];
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22742,587,14,24]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(sym3489);
M.a=1;
M.v=M.primitives["error"]._i(M);
M.e.length-=4;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4142=function(M){M.c.push(new RT.CallFrame(_4151,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22697,586,9,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-3],2);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4136=function(M){M.c.push(new RT.CallFrame(_4145,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22656,585,9,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-3],1);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3759=function(M){if(--M.cbt<0){throw _3759;}

//"lambda body for #(struct:LamPositionalName list-stream-ref whalesong/lang/for.rkt 583 0 22574 195)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4139,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22614,584,9,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedNumEquals(M, M.e[M.e.length-3],0);
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4132=function(M){if(--M.cbt<0){throw _4132;}
M.e.length-=(M.a-1);
return(_4121)(M);};

var _4121=function(M){M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][35];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.primitives["add1"];
M.e[M.e.length-3]=false;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4120=function(M){M.c.push(new RT.CallFrame(_4133,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22292,575,7,109]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3490;
M.e[M.e.length-2]="exact-nonnegative-integer?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4123=function(M){if(M.v===false){return(_4120)(M);}else{M.v=RT.VOID;
return(_4121)(M);}};


var _4126=function(M){M.v=false;
return(_4123)(M);};


var _4122=function(M){M.v=false;
return(_4123)(M);};


var _3758=function(M){if(--M.cbt<0){throw _3758;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:571:4 whalesong/lang/for.rkt 571 4 22188 243)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4125,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22211,572,18,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4116=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_3757)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3758)(M);}};

var _3756=function(M){if(--M.cbt<0){throw _3756;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4116)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3757)(M);}};

var _4113=function(M){M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=false;
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4112=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-8];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4113)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4113)(M);}};

var _3755=function(M){if(--M.cbt<0){throw _3755;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:566:24 whalesong/lang/for.rkt 566 24 22090 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22102,566,36,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"<"))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3754=function(M){if(--M.cbt<0){throw _3754;}

//"lambda body for #(struct:LamPositionalName :integer-gen whalesong/lang/for.rkt 565 0 22041 81)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.primitives["add1"];
M.e[M.e.length-3]=0;
M.v=new RT.Closure(_3755,1,[M.e[M.e.length-7],M.e[M.e.length-8]],"...ong/lang/for.rkt:566:24");
M.a=1;
if(M.a===0){return(_4112)(M);}else{M.e.push(M.v);
return(_4112)(M);}};

var _4109=function(M){M.e[M.e.length-4]=M.v;
M.e[M.e.length-5]=false;
M.v=false;
M.p=M.e[M.e.length-6];
M.e[M.e.length-6]=M.v;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-10,4);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4108=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-9];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4109)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4109)(M);}};

var _3753=function(M){if(--M.cbt<0){throw _3753;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:563:24 whalesong/lang/for.rkt 563 24 22007 24)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22019,563,36,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"<"))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3752=function(M){if(--M.cbt<0){throw _3752;}

//"lambda body for #(struct:LamPositionalName :range-gen whalesong/lang/for.rkt 562 0 21953 86)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-4];
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
M.e[M.e.length-6]=M.primitives["values"];
M.e[M.e.length-1]=M.primitives["values"];
M.e[M.e.length-2]=M.primitives["add1"];
M.e[M.e.length-3]=M.e[M.e.length-8];
M.v=new RT.Closure(_3753,1,[M.e[M.e.length-7],M.e[M.e.length-9]],"...ong/lang/for.rkt:563:24");
M.a=1;
if(M.a===0){return(_4108)(M);}else{M.e.push(M.v);
return(_4108)(M);}};

var _4105=function(M){M.v=M.v;
return(_4099)(M);};

var _4104=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4105)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4105)(M);}};

var _3751=function(M){if(--M.cbt<0){throw _3751;}

//"lambda body for #(struct:LamPositionalName cont? whalesong/lang/for.rkt 557 23 21820 20)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21832,557,35,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedGreaterThan(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4099=function(M){M.p=M.e[M.e.length-3];
M.e[M.e.length-3]=M.v;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-8,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4103=function(M){M.v=M.v;
return(_4099)(M);};

var _4102=function(M){M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingBegin0Count=M.a;
M.unspliceRestFromStack(0,M.a);
M.c[M.c.length-1].pendingBegin0Values=M.e[M.e.length-1];
M.e.pop();
M.v=M.e[M.e.length-7];
M.e.push(M.c[M.c.length-1].pendingBegin0Values);
M.spliceListIntoStack(0);
M.a=M.c[M.c.length-1].pendingBegin0Count;
M.c.pop();
if(M.a===0){return(_4103)(M);}else{M.v=M.e[M.e.length-1];
M.e.pop();
return(_4103)(M);}};

var _3750=function(M){if(--M.cbt<0){throw _3750;}

//"lambda body for #(struct:LamPositionalName cont? whalesong/lang/for.rkt 556 23 21776 20)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21788,556,35,7]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.lessThan(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-3],0,"<"),RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-1],1,"<"))));
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4098=function(M){M.v=new RT.Closure(_3751,1,[M.e[M.e.length-5],M.e[M.e.length-7]],"cont?");
M.a=1;
if(M.a===0){return(_4104)(M);}else{M.e.push(M.v);
return(_4104)(M);}};


var _3749=function(M){if(--M.cbt<0){throw _3749;}

//"lambda body for #(struct:LamPositionalName inc whalesong/lang/for.rkt 558 17 21860 23)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1]);
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21872,558,29,10]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=RT.checkedAdd(M, M.e[M.e.length-3],M.e[M.e.length-1]);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4095=function(M){if(--M.cbt<0){throw _4095;}
M.e.length-=(M.a-1);
return(_4092)(M);};

var _4092=function(M){M.e.push(void(0));
M.e[M.e.length-1]=new RT.Closure(_3749,1,[M.e[M.e.length-2],M.e[M.e.length-5]],"inc");
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.e[M.e.length-3]=M.e[M.e.length-5][35];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-4];
M.c.push(new RT.CallFrame(_4101,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21737,555,23,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.v=((plt.baselib.numbers.greaterThanOrEqual(RT.testArgument(M,"number",RT.isNumber,M.e[M.e.length-8],0,">="),0)));
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4091=function(M){M.c.push(new RT.CallFrame(_4096,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21682,554,26,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3491;
M.e[M.e.length-2]="real?";
M.e[M.e.length-3]=M.e[M.e.length-7];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4089=function(M){if(--M.cbt<0){throw _4089;}
M.e.length-=(M.a-1);
return(_4086)(M);};

var _4086=function(M){M.c.push(new RT.CallFrame(_4094,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21669,554,13,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-4]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4085=function(M){M.c.push(new RT.CallFrame(_4090,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21627,553,23,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3491;
M.e[M.e.length-2]="real?";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4083=function(M){if(--M.cbt<0){throw _4083;}
M.e.length-=(M.a-1);
return(_4080)(M);};

var _4080=function(M){M.c.push(new RT.CallFrame(_4088,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21617,553,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4079=function(M){M.c.push(new RT.CallFrame(_4084,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21575,552,23,27]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3491;
M.e[M.e.length-2]="real?";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3748=function(M){if(--M.cbt<0){throw _3748;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:551:4 whalesong/lang/for.rkt 551 4 21540 409)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4082,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21565,552,13,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["real?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3747=function(M){if(--M.cbt<0){throw _3747;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:550:4 whalesong/lang/for.rkt 550 4 21511 24)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21518,550,11,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][40];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.e[M.e.length-2]=M.e[M.e.length-6];
M.e[M.e.length-3]=1;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _4073=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 3]).racketArity,M.a)){return(_3746)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 3];
return(_3748)(M);}};

var _4072=function(M){if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 2]).racketArity,M.a)){return(_4073)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 2];
return(_3747)(M);}};

var _3745=function(M){if(--M.cbt<0){throw _3745;}
if(!RT.isArityMatching(((M.p).closedVals[(M.p).closedVals.length - 1]).racketArity,M.a)){return(_4072)(M);}else{M.p=(M.p).closedVals[(M.p).closedVals.length - 1];
return(_3746)(M);}};

var _4063=function(M){M.e[M.e.length-3]=M.e[M.e.length-8];
M.a=3;
M.v=M.primitives["format"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4062=function(M){M.e[M.e.length-2]=M.e[M.e.length-7];
return(_4063)(M);};




var _4054=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19593,501,10,234]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=sym3492;
M.c.push(new RT.CallFrame(_4061,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19632,502,17,194]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]="for: expected a sequence for ~a, got something else: ~v";
M.c.push(new RT.CallFrame(_4065,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19722,503,24,18]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_4067,M.p));
M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19727,503,29,12]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.primitives["length"];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _4046=function(M){M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][22];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4057,M.p));
return((M.p).label)(M);};



var _4038=function(M){M.c.push(new RT.CallFrame(_4049,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19521,499,5,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][8];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _4030=function(M){M.c.push(new RT.CallFrame(_4041,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19214,493,5,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4026=function(M){M.c.push(new RT.CallFrame(_4033,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19032,490,5,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["vector?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4014=function(M){M.v=RT.isList(M.e[M.e.length-3]);
if(M.v===false){return(_4026)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",19012,489,15,13]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][25];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-4,3);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};


var _4008=function(M){M.c.push(new RT.CallFrame(_4017,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18921,487,5,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][2]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[2]); }
M.p=M.e[M.e.length-2][2];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3744=function(M){if(--M.cbt<0){throw _3744;}

//"lambda body for #(struct:LamPositionalName make-sequence whalesong/lang/for.rkt 484 0 18824 1305)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_4011,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18867,486,5,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _4006=function(M){M.v=M.e[M.e.length-7][5][0][M.e[M.e.length-7][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18748,480,6,9]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-8]);
M.v=M.primitives["hash?"]._i(M);
M.e.length-=9;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _4001=function(M){M.e.push(void(0));
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-8][22];
M.e[M.e.length-1]=M.e[M.e.length-9];
M.a=1;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_4004,M.p));
return((M.p).label)(M);};


var _3996=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3999,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18666,476,6,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.v=M.primitives["string?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3991=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3994,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18606,473,6,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.v=M.primitives["vector?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3984=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3987,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18569,471,6,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][8];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3977=function(M){M.v=M.e[M.e.length-1];
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3980,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18515,469,6,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][2]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[2]); }
M.p=M.e[M.e.length-4][2];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};


var _3743=function(M){if(--M.cbt<0){throw _3743;}

//"lambda body for #(struct:LamPositionalName sequence? whalesong/lang/for.rkt 467 0 18450 372)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3975,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18478,468,6,30]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-3]);
M.v=M.primitives["exact-nonnegative-integer?"]._i(M);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3958=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18328,463,6,118]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3493;
M.e[M.e.length-2]="(and/c stream? (not/c stream-empty?))";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3961=function(M){if(M.v===false){return(_3958)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18299,462,6,22]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][15];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _3960=function(M){M.v=false;
return(_3961)(M);};


var _3742=function(M){if(--M.cbt<0){throw _3742;}

//"lambda body for #(struct:LamPositionalName stream-rest whalesong/lang/for.rkt 459 0 18210 238)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_3963,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18245,460,11,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3956=function(M){if(--M.cbt<0){throw _3956;}
M.e.length-=(M.a-1);
return(_3951)(M);};

var _3951=function(M){M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3950=function(M){M.c.push(new RT.CallFrame(_3957,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",18035,454,18,150]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3494;
M.e[M.e.length-2]="result is not a stream: ";
M.e[M.e.length-3]=M.e[M.e.length-4];
M.v=M.primitives["raise-mismatch-error"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};





var _3939=function(M){M.e.push(void(0));
M.c.push(new RT.CallFrame(_3942,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17945,452,23,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3944,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17946,452,24,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_3946,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17958,452,36,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.p=M.primitives["list-ref"];
RT.raiseArityMismatchError(M,M.p,1);
RT.si_context_expected(1)(M);
};

var _3741=function(M){if(--M.cbt<0){throw _3741;}

//"lambda body for #(struct:LamPositionalName unsafe-stream-rest whalesong/lang/for.rkt 450 0 17863 345)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_3939)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["unsafe-cdr"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3923=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17740,446,6,119]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3495;
M.e[M.e.length-2]="(and/c stream? (not/c stream-empty?))";
M.e[M.e.length-3]=M.e[M.e.length-5];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=5;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3926=function(M){if(M.v===false){return(_3923)(M);}else{M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17710,445,6,23]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][13];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-3,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);}};



var _3925=function(M){M.v=false;
return(_3926)(M);};


var _3740=function(M){if(--M.cbt<0){throw _3740;}

//"lambda body for #(struct:LamPositionalName stream-first whalesong/lang/for.rkt 442 0 17620 241)"

M.e.push(M.p.closedVals[0]);
M.c.push(new RT.CallFrame(_3928,M.p));
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17656,443,11,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][8];
M.e[M.e.length-1]=M.e[M.e.length-3];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};



var _3915=function(M){M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17582,440,14,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3918,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17583,440,15,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_3920,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17595,440,27,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-5]);
M.p=M.primitives["list-ref"];
RT.raiseArityMismatchError(M,M.p,1);
RT.si_context_expected(1)(M);
};

var _3739=function(M){if(--M.cbt<0){throw _3739;}

//"lambda body for #(struct:LamPositionalName unsafe-stream-first whalesong/lang/for.rkt 438 0 17508 110)"

M.e.push(M.p.closedVals[0]);
M.v=RT.isPair(M.e[M.e.length-2]);
if(M.v===false){return(_3915)(M);}else{M.e.push(M.e[M.e.length-2]);
M.v=M.primitives["unsafe-car"]._i(M);
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};



var _3907=function(M){M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17360,433,14,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3910,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17361,433,15,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_3912,M.p));
M.v=M.e[M.e.length-5][5][0][M.e[M.e.length-5][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17373,433,27,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-6]);
M.p=M.primitives["list-ref"];
RT.raiseArityMismatchError(M,M.p,1);
RT.si_context_expected(1)(M);
};

var _3901=function(M){M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17405,434,10,98]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
M.e[M.e.length-1]=sym3496;
M.e[M.e.length-2]="stream?";
M.e[M.e.length-3]=M.e[M.e.length-6];
M.a=3;
M.v=M.primitives["error"]._i(M);
M.e.length-=6;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};


var _3899=function(M){M.v=M.e[M.e.length-1];
M.c.push(new RT.CallFrame(_3904,M.p));
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17293,430,10,11]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-3][8];
M.e[M.e.length-1]=M.e[M.e.length-4];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);};

var _3738=function(M){if(--M.cbt<0){throw _3738;}

//"lambda body for #(struct:LamPositionalName stream-empty? whalesong/lang/for.rkt 428 0 17241 265)"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0));
M.e[M.e.length-1]=(M.e[M.e.length-3]===RT.NULL);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3899)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};




var _3888=function(M){M.v=M.e[M.e.length-1];
M.v=M.e[M.e.length-2][5][0][M.e[M.e.length-2][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17197,426,10,39]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3891,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17202,426,15,33]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.c.push(new RT.CallFrame(_3893,M.p));
M.v=M.e[M.e.length-4][5][0][M.e[M.e.length-4][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17203,426,16,29]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.c.push(new RT.CallFrame(_3895,M.p));
M.v=M.e[M.e.length-6][5][0][M.e[M.e.length-6][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",17215,426,28,14]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(M.e[M.e.length-7]);
M.p=M.primitives["list-ref"];
RT.raiseArityMismatchError(M,M.p,1);
RT.si_context_expected(1)(M);
};

var _3885=function(M){M.e.push(void(0));
M.e[M.e.length-1]=RT.isPair(M.e[M.e.length-3]);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_3888)(M);}else{M.v=M.e[M.e.length-1];
M.e.length-=3;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3737=function(M){if(--M.cbt<0){throw _3737;}

//"lambda body for #(struct:LamPositionalName unsafe-stream-not-empty? whalesong/lang/for.rkt 422 0 17105 134)"

M.e.push(M.p.closedVals[0]);
M.v=(M.e[M.e.length-2]===RT.NULL);
if(M.v===false){return(_3885)(M);}else{M.v=false;
M.e.length-=2;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _3736=function(M){if(--M.cbt<0){throw _3736;}

//"lambda body for #(struct:LamPositionalName stream? whalesong/lang/for.rkt 417 0 17022 81)"

M.v=RT.isList(M.e[M.e.length-1]);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3882=function(M){M.c.push(new RT.CallFrame(_3884,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push([false]);M.e[M.e.length-1].names=[false];
M.installedModules["whalesong/lang/for.rkt"]=function(){return new RT.ModuleRecord("for",_5130);}
return(_5129)(M);};

var _5283=function(M){if(--M.cbt<0){throw _5283;}
if(M.a===0){return(_5280)(M);}else{M.e.push(M.v);
return(_5280)(M);}};

var _5184=function(M){M.e.splice(M.e.length-10,5);
M.e[M.e.length-6][45]=M.v;
M.e[M.e.length-6][46]=M.e[M.e.length-1];
M.e[M.e.length-6][47]=M.e[M.e.length-2];
M.e[M.e.length-6][48]=M.e[M.e.length-3];
M.e[M.e.length-6][49]=M.e[M.e.length-4];
M.e[M.e.length-6][50]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5164=function(M){M.e.splice(M.e.length-10,5);
M.e[M.e.length-6][34]=M.v;
M.e[M.e.length-6][35]=M.e[M.e.length-1];
M.e[M.e.length-6][22]=M.e[M.e.length-2];
M.e[M.e.length-6][36]=M.e[M.e.length-3];
M.e[M.e.length-6][37]=M.e[M.e.length-4];
M.e[M.e.length-6][38]=M.e[M.e.length-5];
M.e.length-=5;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _3878=function(M){if(--M.cbt<0){throw _3878;}

//"lambda body for unknown"

M.e.push(M.p.closedVals[0]);
M.e.push(void(0),void(0),void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-7][110];
M.e[M.e.length-1]=M.e[M.e.length-8];
M.e[M.e.length-2]=M.e[M.e.length-9];
M.e[M.e.length-3]=M.e[M.e.length-10];
M.e[M.e.length-4]=M.e[M.e.length-11];
M.e[M.e.length-5]=false;
M.e[M.e.length-6]=false;
M.a=6;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-11,5);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5046=function(M){if(--M.cbt<0){throw _5046;}
if(M.a===0){return(_5041)(M);}else{M.e.push(M.v);
return(_5041)(M);}};

var _4973=function(M){if(--M.cbt<0){throw _4973;}
if(M.a===0){return(_4968)(M);}else{M.e.push(M.v);
return(_4968)(M);}};

var _4879=function(M){M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44645,1119,5,86]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-4][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-4].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-4][1];
M.v=new RT.Closure(_3856,0,[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2]],"...ong/lang/for.rkt:1120:6");
M.a=1;
if(M.a===0){return(_4897)(M);}else{M.e.push(M.v);
return(_4897)(M);}};

var _3847=function(M){if(--M.cbt<0){throw _3847;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1104:4 whalesong/lang/for.rkt 1104 4 44089 128)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",44139,1106,5,77]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
if (M.e[M.e.length-2][1]===void(0)){ RT.raiseUnboundToplevelError(M,M.e[M.e.length-2].names[1]); }
M.e[M.e.length-1]=M.e[M.e.length-2][1];
M.v=new RT.Closure(_3848,0,[M.e[M.e.length-2],M.e[M.e.length-3]],"...ong/lang/for.rkt:1106:23");
M.a=1;
if(M.a===0){return(_4859)(M);}else{M.e.push(M.v);
return(_4859)(M);}};

var _3820=function(M){if(--M.cbt<0){throw _3820;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:1016:66 whalesong/lang/for.rkt 1016 66 40280 31)"

M.v=RT.isList(M.e[M.e.length-1]);
if(M.v===false){return(_4605)(M);}else{M.v=RT.makePair(M.e[M.e.length-1],RT.NULL);
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);}};

var _4598=function(M){if(--M.cbt<0){throw _4598;}
if(M.a===0){return(_4595)(M);}else{M.e.push(M.v);
return(_4595)(M);}};

var _4554=function(M){if(--M.cbt<0){throw _4554;}
if(M.a===0){return(_4551)(M);}else{M.e.push(M.v);
return(_4551)(M);}};

var _3797=function(M){if(--M.cbt<0){throw _3797;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:965:34 whalesong/lang/for.rkt 965 34 37412 124)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4428)(M);}else{M.c.push(new RT.CallFrame(_4431,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",37443,965,65,20]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0));
M.p=M.e[M.e.length-3];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=M.e[M.e.length-7];
M.a=2;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3792=function(M){if(--M.cbt<0){throw _3792;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:945:34 whalesong/lang/for.rkt 945 34 36366 110)"

M.e.push(M.p.closedVals[0],M.p.closedVals[1],M.p.closedVals[2]);
M.v=M.e[M.e.length-1];
if(M.v===false){return(_4369)(M);}else{M.c.push(new RT.CallFrame(_4372,M.p));
M.v=M.e[M.e.length-3][5][0][M.e[M.e.length-3][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",36392,945,60,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
M.p=M.e[M.e.length-2];
M.e[M.e.length-1]=M.e[M.e.length-5];
M.a=1;
RT.checkClosureAndArity(M);
return((M.p).label)(M);}};

var _3784=function(M){if(--M.cbt<0){throw _3784;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:771:9 whalesong/lang/for.rkt 771 9 29757 31)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29762,771,14,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][64];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3773=function(M){if(--M.cbt<0){throw _3773;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:771:9 whalesong/lang/for.rkt 771 9 29757 31)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",29762,771,14,25]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-5][62];
M.e[M.e.length-1]=M.e[M.e.length-6];
M.e[M.e.length-2]=0;
M.e[M.e.length-3]=false;
M.e[M.e.length-4]=1;
M.a=4;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-6,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3757=function(M){if(--M.cbt<0){throw _3757;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:570:4 whalesong/lang/for.rkt 570 4 22163 20)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",22167,570,8,15]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-2][42];
M.e[M.e.length-1]=0;
M.a=1;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-2,1);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _3746=function(M){if(--M.cbt<0){throw _3746;}

//"lambda body for #(struct:LamPositionalName ...ong/lang/for.rkt:549:4 whalesong/lang/for.rkt 549 4 21484 22)"

M.e.push(M.p.closedVals[0]);
M.v=M.e[M.e.length-1][5][0][M.e[M.e.length-1][5][1]];
M.c[M.c.length-1].pendingContinuationMarkKey=M.v;
M.v=RT.makeVector(["#<path:/usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>",21489,549,9,16]);
M.installContinuationMarkEntry(M.c[M.c.length-1].pendingContinuationMarkKey,M.v);
M.e.push(void(0),void(0),void(0));
//"Constant toplevel ref: ?"

M.p=M.e[M.e.length-4][40];
M.e[M.e.length-1]=0;
M.e[M.e.length-2]=M.e[M.e.length-5];
M.e[M.e.length-3]=1;
M.a=3;
RT.checkClosureAndArity(M);
M.e.splice(M.e.length-5,2);
M.c[M.c.length-1].p=M.p;
return((M.p).label)(M);};

var _5286=function(M){return(_3882)(M);};

var _5282=function(M){if(--M.cbt<0){throw _5282;}
M.a=1;
return(_5283)(M);};

var _5278=function(M){if(--M.cbt<0){throw _5278;}
M.v=M.v;
M.e.pop();
M.p=M.c[M.c.length-1].label;
M.c.pop();
(function (selfMod,ns,extNs,prefix) {ns.set("in-cycle", prefix[selfMod.getPrefixOffset("in-cycle")]);extNs.set("in-cycle", prefix[selfMod.getPrefixOffset("in-cycle")]);ns.set("in-parallel", prefix[selfMod.getPrefixOffset("in-parallel")]);extNs.set("in-parallel", prefix[selfMod.getPrefixOffset("in-parallel")]);ns.set("in-sequences", prefix[selfMod.getPrefixOffset("in-sequences")]);extNs.set("in-sequences", prefix[selfMod.getPrefixOffset("in-sequences")]);ns.set("in-values*-sequence", prefix[selfMod.getPrefixOffset("in-values*-sequence")]);extNs.set("in-values*-sequence", prefix[selfMod.getPrefixOffset("in-values*-sequence")]);ns.set("in-values-sequence", prefix[selfMod.getPrefixOffset("in-values-sequence")]);extNs.set("in-values-sequence", prefix[selfMod.getPrefixOffset("in-values-sequence")]);ns.set("make-do-sequence", prefix[selfMod.getPrefixOffset("make-do-sequence")]);extNs.set("make-do-sequence", prefix[selfMod.getPrefixOffset("make-do-sequence")]);ns.set("sequence-generate", prefix[selfMod.getPrefixOffset("sequence-generate")]);extNs.set("sequence-generate", prefix[selfMod.getPrefixOffset("sequence-generate")]);ns.set("sequence-generate*", prefix[selfMod.getPrefixOffset("sequence-generate*")]);extNs.set("sequence-generate*", prefix[selfMod.getPrefixOffset("sequence-generate*")]);ns.set("sequence?", prefix[selfMod.getPrefixOffset("sequence?")]);extNs.set("sequence?", prefix[selfMod.getPrefixOffset("sequence?")]);ns.set("stop-after", prefix[selfMod.getPrefixOffset("stop-after")]);extNs.set("stop-after", prefix[selfMod.getPrefixOffset("stop-after")]);ns.set("stop-before", prefix[selfMod.getPrefixOffset("stop-before")]);extNs.set("stop-before", prefix[selfMod.getPrefixOffset("stop-before")]);ns.set("stream-empty?", prefix[selfMod.getPrefixOffset("stream-empty?")]);extNs.set("stream-empty?", prefix[selfMod.getPrefixOffset("stream-empty?")]);ns.set("stream-first", prefix[selfMod.getPrefixOffset("stream-first")]);extNs.set("stream-first", prefix[selfMod.getPrefixOffset("stream-first")]);ns.set("stream-ref", prefix[selfMod.getPrefixOffset("stream-ref")]);extNs.set("stream-ref", prefix[selfMod.getPrefixOffset("stream-ref")]);ns.set("stream-rest", prefix[selfMod.getPrefixOffset("stream-rest")]);extNs.set("stream-rest", prefix[selfMod.getPrefixOffset("stream-rest")]);ns.set("stream?", prefix[selfMod.getPrefixOffset("stream?")]);extNs.set("stream?", prefix[selfMod.getPrefixOffset("stream?")]);}(M.modules["whalesong/lang/for.rkt"],M.modules["whalesong/lang/for.rkt"].getExports(),M.modules["whalesong/lang/for.rkt"].getExternalExports(),M.modules["whalesong/lang/for.rkt"].prefix));
return(M.p)(M);};

var _5276=function(M){if(--M.cbt<0){throw _5276;}
M.c.push(new RT.CallFrame(_5278,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.c.push(new RT.Frame());
M.c[M.c.length-1].pendingApplyValuesProc=M.e[M.e.length-1][100][0][M.e[M.e.length-1][100][1]];
M.p=M.e[M.e.length-1][99][0][M.e[M.e.length-1][99][1]];
M.a=0;
RT.checkClosureAndArity(M);
M.c.push(new RT.CallFrame(_5282,M.p));
return((M.p).label)(M);};

var _5274=function(M){if(--M.cbt<0){throw _5274;}
M.c.push(new RT.CallFrame(_5276,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3881,2,[M.e[M.e.length-1]],"shrink-vector");
M.e[M.e.length-1][98]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5272=function(M){if(--M.cbt<0){throw _5272;}
M.c.push(new RT.CallFrame(_5274,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3880,1,[M.e[M.e.length-1]],"grow-vector");
M.e[M.e.length-1][96]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5270=function(M){if(--M.cbt<0){throw _5270;}
M.c.push(new RT.CallFrame(_5272,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3878,4,[M.e[M.e.length-3]],"unknown");
M.e[M.e.length-2]=new RT.Closure(_3879,5,[M.e[M.e.length-3]],"unknown");
M.v=new RT.Closure(_3877,RT.makePair(4,RT.makePair(5,RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"vector-copy!");
M.e.length-=2;
M.e[M.e.length-1][94]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5268=function(M){if(--M.cbt<0){throw _5268;}
M.c.push(new RT.CallFrame(_5270,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3876,6,[M.e[M.e.length-1]],"vector-copy!9");
M.e[M.e.length-1][110]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5266=function(M){if(--M.cbt<0){throw _5266;}
M.c.push(new RT.CallFrame(_5268,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3875,5,[M.e[M.e.length-1]],"loop");
M.e[M.e.length-1][109]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5264=function(M){if(--M.cbt<0){throw _5264;}
M.c.push(new RT.CallFrame(_5266,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3871,1,[M.e[M.e.length-1]],"sequence-generate*");
M.e[M.e.length-1][93]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5262=function(M){if(--M.cbt<0){throw _5262;}
M.c.push(new RT.CallFrame(_5264,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3858,1,[M.e[M.e.length-1]],"sequence-generate");
M.e[M.e.length-1][75]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5260=function(M){if(--M.cbt<0){throw _5260;}
M.c.push(new RT.CallFrame(_5262,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3857,0,[M.e[M.e.length-1]],"no-more");
M.e[M.e.length-1][91]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5258=function(M){if(--M.cbt<0){throw _5258;}
M.c.push(new RT.CallFrame(_5260,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3847,1,[M.e[M.e.length-3]],"...ong/lang/for.rkt:1104:4");
M.e[M.e.length-2]=new RT.Closure(_3850,(RT.makeArityAtLeast(2)),[M.e[M.e.length-3]],"...ong/lang/for.rkt:1107:4");
M.v=new RT.Closure(_3846,RT.makePair(1,RT.makePair((RT.makeArityAtLeast(2)),RT.NULL)),[M.e[M.e.length-2],M.e[M.e.length-1]],"in-producer");
M.e.length-=2;
M.e[M.e.length-1][88]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5256=function(M){if(--M.cbt<0){throw _5256;}
M.c.push(new RT.CallFrame(_5258,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3839,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"in-parallel");
M.e[M.e.length-1][83]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5254=function(M){if(--M.cbt<0){throw _5254;}
M.c.push(new RT.CallFrame(_5256,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3838,3,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1096:48");
M.e[M.e.length-1][108]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5252=function(M){if(--M.cbt<0){throw _5252;}
M.c.push(new RT.CallFrame(_5254,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3837,2,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1091:38");
M.e[M.e.length-1][107]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5250=function(M){if(--M.cbt<0){throw _5250;}
M.c.push(new RT.CallFrame(_5252,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3836,2,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1086:41");
M.e[M.e.length-1][106]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5248=function(M){if(--M.cbt<0){throw _5248;}
M.c.push(new RT.CallFrame(_5250,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3835,2,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1081:33");
M.e[M.e.length-1][105]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5246=function(M){if(--M.cbt<0){throw _5246;}
M.c.push(new RT.CallFrame(_5248,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3834,2,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1078:47");
M.e[M.e.length-1][104]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5244=function(M){if(--M.cbt<0){throw _5244;}
M.c.push(new RT.CallFrame(_5246,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3833,12,[M.e[M.e.length-1]],"for-loop");
M.e[M.e.length-1][103]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5242=function(M){if(--M.cbt<0){throw _5242;}
M.c.push(new RT.CallFrame(_5244,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3832,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"in-cycle");
M.e[M.e.length-1][82]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5240=function(M){if(--M.cbt<0){throw _5240;}
M.c.push(new RT.CallFrame(_5242,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3831,(RT.makeArityAtLeast(0)),[M.e[M.e.length-1]],"in-sequences");
M.e[M.e.length-1][81]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5238=function(M){if(--M.cbt<0){throw _5238;}
M.c.push(new RT.CallFrame(_5240,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3829,2,[M.e[M.e.length-1]],"check-sequences");
M.e[M.e.length-1][79]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5236=function(M){if(--M.cbt<0){throw _5236;}
M.c.push(new RT.CallFrame(_5238,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3826,2,[M.e[M.e.length-1]],"append-sequences");
M.e[M.e.length-1][74]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5234=function(M){if(--M.cbt<0){throw _5234;}
M.c.push(new RT.CallFrame(_5236,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3825,1,[M.e[M.e.length-1]],"...ong/lang/for.rkt:1044:13");
M.e[M.e.length-1][102]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5232=function(M){if(--M.cbt<0){throw _5232;}
M.c.push(new RT.CallFrame(_5234,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3824,3,[M.e[M.e.length-1]],"seqs->m+g+r");
M.e[M.e.length-1][101]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5230=function(M){if(--M.cbt<0){throw _5230;}
M.c.push(new RT.CallFrame(_5232,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3816,1,[M.e[M.e.length-1]],"in-values*-sequence");
M.e[M.e.length-1][73]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5228=function(M){if(--M.cbt<0){throw _5228;}
M.c.push(new RT.CallFrame(_5230,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3811,1,[M.e[M.e.length-1]],"in-values-sequence");
M.e[M.e.length-1][72]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5226=function(M){if(--M.cbt<0){throw _5226;}
M.c.push(new RT.CallFrame(_5228,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3806,1,[M.e[M.e.length-1]],"in-value");
M.e[M.e.length-1][70]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5224=function(M){if(--M.cbt<0){throw _5224;}
M.c.push(new RT.CallFrame(_5226,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3799,1,[M.e[M.e.length-1]],"in-indexed");
M.e[M.e.length-1][69]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5222=function(M){if(--M.cbt<0){throw _5222;}
M.c.push(new RT.CallFrame(_5224,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3794,2,[M.e[M.e.length-1]],"stop-after");
M.e[M.e.length-1][68]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5220=function(M){if(--M.cbt<0){throw _5220;}
M.c.push(new RT.CallFrame(_5222,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3789,2,[M.e[M.e.length-1]],"stop-before");
M.e[M.e.length-1][65]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5218=function(M){if(--M.cbt<0){throw _5218;}
M.c.push(new RT.CallFrame(_5220,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3784,1,[M.e[M.e.length-5]],"...ong/lang/for.rkt:771:9");
M.e[M.e.length-2]=new RT.Closure(_3785,2,[M.e[M.e.length-5]],"...ong/lang/for.rkt:772:9");
M.e[M.e.length-3]=new RT.Closure(_3786,3,[M.e[M.e.length-5]],"...ong/lang/for.rkt:773:9");
M.e[M.e.length-4]=new RT.Closure(_3787,4,[M.e[M.e.length-5]],"...ong/lang/for.rkt:774:9");
M.v=new RT.Closure(_3783,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"in-string");
M.e.length-=4;
M.e[M.e.length-1][64]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5216=function(M){if(--M.cbt<0){throw _5216;}
M.c.push(new RT.CallFrame(_5218,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3778,4,[M.e[M.e.length-1]],":string-gen");
M.e[M.e.length-1][28]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5214=function(M){if(--M.cbt<0){throw _5214;}
M.c.push(new RT.CallFrame(_5216,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.e.push(void(0),void(0),void(0),void(0));
M.e[M.e.length-1]=new RT.Closure(_3773,1,[M.e[M.e.length-5]],"...ong/lang/for.rkt:771:9");
M.e[M.e.length-2]=new RT.Closure(_3774,2,[M.e[M.e.length-5]],"...ong/lang/for.rkt:772:9");
M.e[M.e.length-3]=new RT.Closure(_3775,3,[M.e[M.e.length-5]],"...ong/lang/for.rkt:773:9");
M.e[M.e.length-4]=new RT.Closure(_3776,4,[M.e[M.e.length-5]],"...ong/lang/for.rkt:774:9");
M.v=new RT.Closure(_3772,RT.makePair(1,RT.makePair(2,RT.makePair(3,RT.makePair(4,RT.NULL)))),[M.e[M.e.length-4],M.e[M.e.length-3],M.e[M.e.length-2],M.e[M.e.length-1]],"in-vector");
M.e.length-=4;
M.e[M.e.length-1][62]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

var _5212=function(M){if(--M.cbt<0){throw _5212;}
M.c.push(new RT.CallFrame(_5214,M.p)); M.addPrompt(RT.DEFAULT_CONTINUATION_PROMPT_TAG,false,M.e.length);
M.v=new RT.Closure(_3767,4,[M.e[M.e.length-1]],":vector-gen");
M.e[M.e.length-1][26]=M.v;
M.v=RT.VOID;
M.p=M.c[M.c.length-1].label;
M.c.pop();
return(M.p)(M);};

_3957.mvr=_3956;
_4084.mvr=_4083;
_4090.mvr=_4089;
_4096.mvr=_4095;
_4133.mvr=_4132;
_4157.mvr=_4156;
_4169.mvr=_4168;
_4187.mvr=_4186;
_4201.mvr=_4200;
_4213.mvr=_4212;
_4223.mvr=_4222;
_4239.mvr=_4238;
_4249.mvr=_4248;
_4283.mvr=_4282;
_4322.mvr=_4321;
_4339.mvr=_4338;
_4349.mvr=_4348;
_4357.mvr=_4356;
_4398.mvr=_4397;
_4408.mvr=_4407;
_4416.mvr=_4415;
_4457.mvr=_4456;
_4465.mvr=_4464;
_4526.mvr=_4525;
_4534.mvr=_4533;
_4553.mvr=_4554;
_4570.mvr=_4569;
_4578.mvr=_4577;
_4597.mvr=_4598;
_4624.mvr=_4623;
_4679.mvr=_4678;
_4689.mvr=_4688;
_4718.mvr=_4717;
_4765.mvr=_4764;
_4783.mvr=_4782;
_4788.mvr=_4787;
_4792.mvr=_4791;
_4797.mvr=_4796;
_4924.mvr=_4923;
_4928.mvr=_4927;
_4948.mvr=_4947;
_4954.mvr=_4953;
_4972.mvr=_4973;
_5019.mvr=_5018;
_5023.mvr=_5022;
_5045.mvr=_5046;
_5088.mvr=_5087;
_5119.mvr=_5118;
_5126.mvr=_5125;
_5133.mvr=_5132;
_5137.mvr=_5136;
_5135.mvr=_5134;
_5142.mvr=_5141;
_5144.mvr=_5143;
_5146.mvr=_5145;
_5148.mvr=_5147;
_5150.mvr=_5149;
_5152.mvr=_5151;
_5154.mvr=_5153;
_5156.mvr=_5155;
_5158.mvr=_5157;
_5160.mvr=_5159;
_5166.mvr=_5165;
_5169.mvr=_5168;
_5162.mvr=_5161;
_5172.mvr=_5171;
_5174.mvr=_5173;
_5176.mvr=_5175;
_5178.mvr=_5177;
_5180.mvr=_5179;
_5186.mvr=_5185;
_5189.mvr=_5188;
_5182.mvr=_5181;
_5192.mvr=_5191;
_5194.mvr=_5193;
_5196.mvr=_5195;
_5198.mvr=_5197;
_5200.mvr=_5199;
_5202.mvr=_5201;
_5204.mvr=_5203;
_5206.mvr=_5205;
_5208.mvr=_5207;
_5210.mvr=_5209;
_5212.mvr=_5211;
_5214.mvr=_5213;
_5216.mvr=_5215;
_5218.mvr=_5217;
_5220.mvr=_5219;
_5222.mvr=_5221;
_5224.mvr=_5223;
_5226.mvr=_5225;
_5228.mvr=_5227;
_5230.mvr=_5229;
_5232.mvr=_5231;
_5234.mvr=_5233;
_5236.mvr=_5235;
_5238.mvr=_5237;
_5240.mvr=_5239;
_5242.mvr=_5241;
_5244.mvr=_5243;
_5246.mvr=_5245;
_5248.mvr=_5247;
_5250.mvr=_5249;
_5252.mvr=_5251;
_5254.mvr=_5253;
_5256.mvr=_5255;
_5258.mvr=_5257;
_5260.mvr=_5259;
_5262.mvr=_5261;
_5264.mvr=_5263;
_5266.mvr=_5265;
_5268.mvr=_5267;
_5270.mvr=_5269;
_5272.mvr=_5271;
_5274.mvr=_5273;
_5276.mvr=_5275;
_5282.mvr=_5283;
_5278.mvr=_5277;
_3884.mvr=_3883;
var sym3486=RT.makeSymbol("in-vector");
var sym3485=RT.makeSymbol("in-string");
var sym3487=RT.makeSymbol("in-stream");
var sym3491=RT.makeSymbol("in-range");
var sym3479=RT.makeSymbol("in-cycle");
var sym3481=RT.makeSymbol("in-values-sequence");
var sym3473=RT.makeSymbol("cont?");
var sym3472=RT.makeSymbol("inc");
var sym3488=RT.makeSymbol("in-list");
var sym3490=RT.makeSymbol("in-naturals");
var sym3471=RT.makeSymbol("start");
var sym3482=RT.makeSymbol("in-indexed");
var sym3478=RT.makeSymbol("in-parallel");
var sym3494=RT.makeSymbol("stream-rest-guard");
var sym3469=RT.makeSymbol("first");
var sym3468=RT.makeSymbol("empty?");
var sym3470=RT.makeSymbol("rest");
var sym3474=RT.makeSymbol("sequence");
var sym3477=RT.makeSymbol("g");
var sym3493=RT.makeSymbol("stream-rest");
var sym3495=RT.makeSymbol("stream-first");
var sym3496=RT.makeSymbol("stream-empty?");
var sym3484=RT.makeSymbol("stop-before");
var sym3483=RT.makeSymbol("stop-after");
var sym3475=RT.makeSymbol("sequence-generate*");
var sym3476=RT.makeSymbol("sequence-generate");
var sym3492=RT.makeSymbol("make-sequence");
var sym3467=RT.makeSymbol("range");
var sym3466=RT.makeSymbol("list-stream");
var sym3489=RT.makeSymbol("list-stream-ref");
var sym3480=RT.makeSymbol("in-sequences");var _3867_c=new RT.Closure(_3867,0,void(0),"more?");
var _3863_c=new RT.Closure(_3863,0,void(0),"more?");
var _3761_c=new RT.Closure(_3761,1,void(0),":list-gen");
var _3736_c=new RT.Closure(_3736,1,void(0),"stream?");
var _3868_c=new RT.Closure(_3868,0,void(0),"more?");
var _3866_c=new RT.Closure(_3866,0,void(0),"more?");
var _3821_c=new RT.Closure(_3821,(RT.makeArityAtLeast(0)),void(0),"...ong/lang/for.rkt:1017:66");
var _3820_c=new RT.Closure(_3820,1,void(0),"...ong/lang/for.rkt:1016:66");
var _3810_c=new RT.Closure(_3810,1,void(0),"...ong/lang/for.rkt:990:30");
var _3809_c=new RT.Closure(_3809,1,void(0),"...ong/lang/for.rkt:988:30");M.params.currentErrorHandler = fail;
M.params.currentSuccessHandler = success;
for (param in params) {
    if (Object.hasOwnProperty.call(params, param)) {
        M.params[param] = params[param];
    }
}_5286(M); }))(plt.runtime.currentMachine,
                     function() {
                          if (window.console && window.console.log) {
                              window.console.log('loaded ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>");
                          }
                     },
                     function(M, err) {
                          if (window.console && window.console.log) {
                              window.console.log('error: unable to load ' + "<ModuleSource /usr/racket/share/pkgs/whalesong/whalesong/lang/for.rkt>");
                              if (err && err.stack) { console.log(err.stack); }
                         }
                     },
                     {});