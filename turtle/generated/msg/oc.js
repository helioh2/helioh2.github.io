// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "element";
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "Uèi";
BlocklyMsg["DUPLICATE_BLOCK"] = "Duplicar";
BlocklyMsg["ADD_COMMENT"] = "Apondre un comentari";
BlocklyMsg["REMOVE_COMMENT"] = "Suprimir un comentari";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicar lo comentari";
BlocklyMsg["EXTERNAL_INPUTS"] = "Entradas extèrnas";
BlocklyMsg["INLINE_INPUTS"] = "Entradas en linha";
BlocklyMsg["DELETE_BLOCK"] = "Suprimir lo blòt";
BlocklyMsg["DELETE_X_BLOCKS"] = "Suprimir %1 blòts";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Suprimir totes los %1 blòts ?";
BlocklyMsg["CLEAN_UP"] = "Netejar los blòts";
BlocklyMsg["COLLAPSE_BLOCK"] = "Redusir lo blòt";
BlocklyMsg["COLLAPSE_ALL"] = "Redusir los blòts";
BlocklyMsg["EXPAND_BLOCK"] = "Desvolopar lo blòt";
BlocklyMsg["EXPAND_ALL"] = "Desvolopar los blòts";
BlocklyMsg["DISABLE_BLOCK"] = "Desactivar lo blòt";
BlocklyMsg["ENABLE_BLOCK"] = "Activar lo blòt";
BlocklyMsg["HELP"] = "Ajuda";
BlocklyMsg["UNDO"] = "Anullar";
BlocklyMsg["REDO"] = "Refar";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Modificar la valor :";
BlocklyMsg["RENAME_VARIABLE"] = "Renomenar la variabla…";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Renomenar totas las variablas « %1 » a :";
BlocklyMsg["NEW_VARIABLE"] = "Crear una variabla...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Crear una variabla cadena…";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Crear una variabla nombre…";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Crear una variabla color…";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Novèl tipe de variabla :";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Nom de la novèla variabla :";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Existís ja una variabla nomenada \"%1\".";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Una variabla nommada '%1' existís ja per un autre tipe ; '%2'.";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Suprimir la variabla '%1'";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://oc.wikipedia.org/wiki/Color";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Causir una color dins la paleta.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "color aleatòria";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Causir una color a l'azard.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "coloriar amb";
BlocklyMsg["COLOUR_RGB_RED"] = "roge";
BlocklyMsg["COLOUR_RGB_GREEN"] = "verd";
BlocklyMsg["COLOUR_RGB_BLUE"] = "blau";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "mesclar";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "color 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "color 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "ratio";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://oc.wikipedia.org/wiki/For_loop";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repetir %1 còps";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "far";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir tant que";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir fins a";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "comptar amb %1 de %2 a %3 per %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "per cada element %1 dins la lista %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "quitar la bocla";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "passar a l’iteracion de bocla seguenta";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Sortir de la bocla englobanta.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "se";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "siquenon se";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "siquenon";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Apondre una condicion al blòt 'se'.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://fr.wikipedia.org/wiki/Inegalite_(mathematiques)";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Renviar verai se las doas entradas son egalas.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Renviar verai se las doas entradas son diferentas.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Renviar verai se las doas entradas son vertadièras.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "e";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "o";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "pas %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "verai";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "fals";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Renvia siá verai siá fals.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "nul";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Renvia nul.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "tèst";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "se verai";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "se fals";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://oc.wikipedia.org/wiki/Nombre";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Un nombre.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://oc.wikipedia.org/wiki/Aritmetica";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Renvia la soma dels dos nombres.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://fr.wikipedia.org/wiki/Racine_carree";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "raiç carrada";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Renvia la raiç carrada d’un nombre.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absolut";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Renvia la valor absoluda d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Renvia l’opausat d’un nombre";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Renvia lo logaritme natural d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Renvia lo logaritme decimal d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Renvia a la poténcia d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Renvia 10 a la poténcia d’un nombre.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Renvia lo sinus d’un angle en grases (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Renvia lo cosinus d’un angle en grases (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Renvia la tangenta d’un angle en grases (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Renvia l’arcsinus d’un nombre.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Renvia l’arccosinus d’un nombre.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Renvia l’arctangenta d’un nombre.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
BlocklyMsg["MATH_IS_EVEN"] = "es par";
BlocklyMsg["MATH_IS_ODD"] = "es impar";
BlocklyMsg["MATH_IS_PRIME"] = "es primièr";
BlocklyMsg["MATH_IS_WHOLE"] = "es entièr";
BlocklyMsg["MATH_IS_POSITIVE"] = "es positiu";
BlocklyMsg["MATH_IS_NEGATIVE"] = "es negatiu";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "es devesible per";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "incrementar %1 per %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "arredondir";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredondir al superior";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredondir a l’inferior";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "soma de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "minimum de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "maximum de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "mejana de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "majoritaris de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "escart-tipe de la lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "element aleatòri de lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "residú de %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrénher %1 entre %2 e %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fraccion aleatòria";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Una letra, un mot o una linha de tèxte.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "crear un tèxte amb";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "jónher";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "a %1 apondre lo tèxte %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "longor de %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 es void";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "dins lo tèxte %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "dins lo tèxte %1 %2";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "obténer la letra #";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "obténer la letra # dempuèi la fin";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "obténer la primièra letra";
BlocklyMsg["TEXT_CHARAT_LAST"] = "obténer la darrièra letra";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "obténer una letra a l'azard";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Renvia la letra a la posicion indicada.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "dins lo tèxte";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "fins a la letra #";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "fins a la darrièra letra";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "en MAJUSCULAS";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "en minusculas";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "en Majuscula Al Començament De Cada Mot";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "suprimir los espacis dels dos costats";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "afichar %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "nombre %1 sus %2";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "inversar %1";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "crear una lista voida";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "crear una lista amb";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Apondre un element a la lista.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "longitud de %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 es voida";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
BlocklyMsg["LISTS_INLIST"] = "dins la lista";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "obténer";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "obténer e suprimir";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "suprimit";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# dempuèi la fin";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "primièr";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "darrièr";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "aleatòri";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 es lo primièr element.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 es lo darrièr element.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Renvia l'element de la posicion especificada dins la lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Renvia lo primièr element dins una lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "metre";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "inserir en";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "coma";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "fins a #";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "fins a # dempuèi la fin";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "fins a la fin";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "triar %1 %2 %3";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "creissent";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descreissent";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alfabetic";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "amb lo separador";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "inversar %1";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Inversar la còpia d’una lista.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Crear 'fixar %1'";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "fixar %1 a %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Crear 'obténer %1'";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "a";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "far quicòm";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "amb :";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "amb :";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "retorn";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "autorizar los òrdres";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "nom de l’entrada :";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Crear '%1'";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "D'acòrdi";
BlocklyMsg["DIALOG_CANCEL"] = "Anullar";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "far";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "far";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "far";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "far";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "se";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "siquenon se";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "siquenon";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "element";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "element";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "element";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "element";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "dins la lista";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "dins la lista";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "dins la lista";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "dins la lista";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "a";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "far quicòm";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Blockly Games";
BlocklyGamesMsg["Games.puzzle"] = "Puzzle";
BlocklyGamesMsg["Games.maze"] = "Laberint";
BlocklyGamesMsg["Games.bird"] = "Bird";
BlocklyGamesMsg["Games.turtle"] = "Tortuga";
BlocklyGamesMsg["Games.movie"] = "Filme";
BlocklyGamesMsg["Games.music"] = "Musica";
BlocklyGamesMsg["Games.pondTutor"] = "Tutorial de Pond";
BlocklyGamesMsg["Games.pond"] = "Pond";
BlocklyGamesMsg["Games.linesOfCode1"] = "You solved this level with 1 line of JavaScript:";
BlocklyGamesMsg["Games.linesOfCode2"] = "You solved this level with %1 lines of JavaScript:";
BlocklyGamesMsg["Games.nextLevel"] = "Are you ready for level %1?";
BlocklyGamesMsg["Games.finalLevel"] = "Are you ready for the next challenge?";
BlocklyGamesMsg["Games.submitTitle"] = "Title:";
BlocklyGamesMsg["Games.linkTooltip"] = "Salva e liga als blòts.";
BlocklyGamesMsg["Games.runTooltip"] = "Run the program you wrote.";
BlocklyGamesMsg["Games.runProgram"] = "Executa lo programa";
BlocklyGamesMsg["Games.resetTooltip"] = "Stop the program and reset the level.";
BlocklyGamesMsg["Games.resetProgram"] = "Reïnicializar";
BlocklyGamesMsg["Games.help"] = "Ajuda";
BlocklyGamesMsg["Games.catLogic"] = "Logic";
BlocklyGamesMsg["Games.catLoops"] = "Boclas";
BlocklyGamesMsg["Games.catMath"] = "Math";
BlocklyGamesMsg["Games.catText"] = "Tèxte";
BlocklyGamesMsg["Games.catLists"] = "Listas";
BlocklyGamesMsg["Games.catColour"] = "Color";
BlocklyGamesMsg["Games.catVariables"] = "Variablas";
BlocklyGamesMsg["Games.catProcedures"] = "Foncions";
BlocklyGamesMsg["Games.httpRequestError"] = "I a agut un problèma amb la demanda.";
BlocklyGamesMsg["Games.linkAlert"] = "Partejatz vòstres blòts gràcia a aqueste ligam :\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "O planhèm, '%1' correspond pas a un fichièr Blockly salvament.";
BlocklyGamesMsg["Games.xmlError"] = "Impossible de cargar lo fichièr de salvament.  Benlèu qu'es estat creat amb una autra version de Blockly ?";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";
BlocklyGamesMsg["Games.listVariable"] = "lista";
BlocklyGamesMsg["Games.textVariable"] = "tèxte";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";
BlocklyGamesMsg["Games.blocks"] = "Blòts";
BlocklyGamesMsg["Games.congratulations"] = "Felicitacions !";
BlocklyGamesMsg["Games.helpAbort"] = "This level is extremely difficult. Would you like to skip it and go onto the next game? You can always come back later.";
BlocklyGamesMsg["Index.clear"] = "Delete all your solutions?";
BlocklyGamesMsg["Index.subTitle"] = "Games for tomorrow's programmers.";
BlocklyGamesMsg["Index.moreInfo"] = "Info for educators...";
BlocklyGamesMsg["Index.startOver"] = "Want to start over?";
BlocklyGamesMsg["Index.clearData"] = "Escafar las donadas";
BlocklyGamesMsg["Puzzle.animal1"] = "Guit";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Plumas";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Nıkıle";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://oc.wikipedia.org/wiki/Guit";
BlocklyGamesMsg["Puzzle.animal2"] = "Gat";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Mostachas";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Forradura";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://oc.wikipedia.org/wiki/Gat";
BlocklyGamesMsg["Puzzle.animal3"] = "Abelha";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Mèl";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Fisson";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://oc.wikipedia.org/wiki/Abelha";
BlocklyGamesMsg["Puzzle.animal4"] = "Cagaraula";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Clòsca";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Bava";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://oc.wikipedia.org/wiki/Cagaraula";
BlocklyGamesMsg["Puzzle.picture"] = "imatge :";
BlocklyGamesMsg["Puzzle.legs"] = "cambas :";
BlocklyGamesMsg["Puzzle.legsChoose"] = "causissètz...";
BlocklyGamesMsg["Puzzle.traits"] = "traits :";
BlocklyGamesMsg["Puzzle.error0"] = "Perfièit !  Totes los %1 blòts son corrèctes.";
BlocklyGamesMsg["Puzzle.error1"] = "Gaireben !  Un blòt es incorrècte.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 blòts son incorrèctes.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Lo blòt en susbrilhança es incorrècte.  Tornatz ensajar.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Verificatz las responsas";
BlocklyGamesMsg["Puzzle.helpText"] = "Per cada animal (en verd), estacar son imatge, causir son nombre de cambas, e far una pila de sos traits caracteristics.";
BlocklyGamesMsg["Maze.moveForward"] = "avança";
BlocklyGamesMsg["Maze.turnLeft"] = "vira a esquèrra";
BlocklyGamesMsg["Maze.turnRight"] = "vira a dreita";
BlocklyGamesMsg["Maze.doCode"] = "far";
BlocklyGamesMsg["Maze.elseCode"] = "siquenon";
BlocklyGamesMsg["Maze.helpIfElse"] = "Un blòt 'Se-Siquenon' executa una causa o una autra.";
BlocklyGamesMsg["Maze.pathAhead"] = "se camin davant";
BlocklyGamesMsg["Maze.pathLeft"] = "se camin cap a esquèrra";
BlocklyGamesMsg["Maze.pathRight"] = "se camin cap a dreita";
BlocklyGamesMsg["Maze.repeatUntil"] = "repetís fins a";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Fa avançar sénher Pegman en avant d'un espaci.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Fa virar sénher Pegman a esquèrra o a dreita de 90 grases.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Se i a un camin dins la direccion especificada, alara efectua aquelas accions.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Se i a un camin dins la direccion especificada, alara fasètz lo premièr blòt d'accions. Siquenon fasètz lo segond blòt d'accions.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Repetíse los blòts que son a l'interior fins a aténher la tòca.";
BlocklyGamesMsg["Maze.capacity0"] = "Te demòra %0 blòt.";
BlocklyGamesMsg["Maze.capacity1"] = "Te demòra %1 blòt.";
BlocklyGamesMsg["Maze.capacity2"] = "Te demòran %2 blòts.";
BlocklyGamesMsg["Maze.runTooltip"] = "Far far al jogaire çò que los blòts dison.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Replaçar lo jogaire al començament del laberint.";
BlocklyGamesMsg["Maze.helpStack"] = "Empilar dos blòts d'instruccions 'avança' per m'ajudar a aténher ma tòca.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Dins aqueste nivèl, avètz besonh d'empilar los blòts los uns en dessús dels autres dins la zòna de trabalh blanca.";
BlocklyGamesMsg["Maze.helpRun"] = "Run your program to see what happens.";
BlocklyGamesMsg["Maze.helpReset"] = "Your program didn't solve the maze. Press 'Reset' and try again.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Los ordenadors an pas gaire de memòria. Utilizatz solament dos blòts per aténher la tòca. Utilizatz lo blòt 'repetís' per executar un blòt mai d'un còp.";
BlocklyGamesMsg["Maze.helpCapacity"] = "You have used up all the blocks for this level. To create a new block, you first need to delete an existing block.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Podètz metre mai d’un blòt dins un blòt « repetir ».";
BlocklyGamesMsg["Maze.helpSkins"] = "Choose your favourite player from this menu.";
BlocklyGamesMsg["Maze.helpIf"] = "An 'if' block will do something only if the condition is true. Try turning left if there is a path to the left.";
BlocklyGamesMsg["Maze.helpMenu"] = "Click on %1 in the 'if' block to change its condition.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Can you solve this complicated maze? Try following the left-hand wall. Advanced programmers only!";
BlocklyGamesMsg["Bird.noWorm"] = "does not have worm";
BlocklyGamesMsg["Bird.heading"] = "heading";
BlocklyGamesMsg["Bird.noWormTooltip"] = "The condition when the bird has not gotten the worm.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Desplaça la tortuga en avant o en arrièr de la quantitat indicada.";
BlocklyGamesMsg["Turtle.moveForward"] = "avançar de";
BlocklyGamesMsg["Turtle.moveBackward"] = "recuolar de";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Far virar la tortuga a esquèrra o a dreita del nombre de grases indicat.";
BlocklyGamesMsg["Turtle.turnRight"] = "virar a dreita de";
BlocklyGamesMsg["Turtle.turnLeft"] = "virar a esquèrra de";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Modificar la grossor de l'estilò.";
BlocklyGamesMsg["Turtle.setWidth"] = "metre la grossor a";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Modificar la color de l'estilò.";
BlocklyGamesMsg["Turtle.setColour"] = "metre la color a";
BlocklyGamesMsg["Turtle.penTooltip"] = "Levar o pausar l'estilò, per arrestar o començar de dessenhar.";
BlocklyGamesMsg["Turtle.penUp"] = "levar l'estilò";
BlocklyGamesMsg["Turtle.penDown"] = "pausar l'estilò";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Rend la tortuga (cercle e flècha) visibla o pas.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "amagar la tortuga";
BlocklyGamesMsg["Turtle.showTurtle"] = "afichar la tortuga";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "Dessenha lo tèxte dins la direccion de la tortuga a son emplaçament.";
BlocklyGamesMsg["Turtle.print"] = "ecrire";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Definís la poliça utilizada pel blòt d’escritura.";
BlocklyGamesMsg["Turtle.font"] = "poliça";
BlocklyGamesMsg["Turtle.fontSize"] = "talha de la poliça";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "gras";
BlocklyGamesMsg["Turtle.fontItalic"] = "italica";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "Veire la galariá";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "Create a program that draws a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "Dessenha una estela jauna.";
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "x de despart";
BlocklyGamesMsg["Movie.y1"] = "y de despart";
BlocklyGamesMsg["Movie.x2"] = "x de fin";
BlocklyGamesMsg["Movie.y2"] = "y de fin";
BlocklyGamesMsg["Movie.radius"] = "rai";
BlocklyGamesMsg["Movie.width"] = "largor";
BlocklyGamesMsg["Movie.height"] = "nautor";
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "cercle";
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "rectangle";
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "linha";
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Movie.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Open the gallery of movies.";  // untranslated
BlocklyGamesMsg["Movie.galleryMsg"] = "Veire la galariá";
BlocklyGamesMsg["Movie.submitTooltip"] = "Publicar vòstra animacion sus Reddit.";
BlocklyGamesMsg["Movie.submitMsg"] = "Publicar sus la galariá";
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "jogar %1 nòta %2";
BlocklyGamesMsg["Music.restTooltip"] = "Espèra la durada especificada.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Waits for one whole note.";  // untranslated
BlocklyGamesMsg["Music.rest"] = "esperar %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "fixar l’instrument a %1";
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "when %1 clicked";  // untranslated
BlocklyGamesMsg["Music.pitchTooltip"] = "One note (C4 is 7).";  // untranslated
BlocklyGamesMsg["Music.firstPart"] = "primièra partida";
BlocklyGamesMsg["Music.piano"] = "piano";
BlocklyGamesMsg["Music.trumpet"] = "trompeta";
BlocklyGamesMsg["Music.banjo"] = "banjo";
BlocklyGamesMsg["Music.violin"] = "violon";
BlocklyGamesMsg["Music.guitar"] = "guitarra";
BlocklyGamesMsg["Music.flute"] = "flaüta";
BlocklyGamesMsg["Music.drum"] = "tambor";
BlocklyGamesMsg["Music.choir"] = "còr";
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Open the gallery of music.";  // untranslated
BlocklyGamesMsg["Music.galleryMsg"] = "Veire la galariá";
BlocklyGamesMsg["Music.submitTooltip"] = "Submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Compose the first four notes of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "Display the language documentation.";  // untranslated
BlocklyGamesMsg["Pond.documentation"] = "Documentacion";
BlocklyGamesMsg["Pond.playerName"] = "Jogaire";
BlocklyGamesMsg["Pond.targetName"] = "Cibla";
BlocklyGamesMsg["Pond.pendulumName"] = "Pendula";
BlocklyGamesMsg["Pond.scaredName"] = "Scared";  // untranslated
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Gallery";  // untranslated
