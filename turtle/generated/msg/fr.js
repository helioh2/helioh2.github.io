// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "élément";
BlocklyMsg["UNNAMED_KEY"] = "non nommé";
BlocklyMsg["TODAY"] = "Aujourd'hui";
BlocklyMsg["DUPLICATE_BLOCK"] = "Dupliquer";
BlocklyMsg["ADD_COMMENT"] = "Ajouter un commentaire";
BlocklyMsg["REMOVE_COMMENT"] = "Supprimer un commentaire";
BlocklyMsg["DUPLICATE_COMMENT"] = "Dupliquer le commentaire";
BlocklyMsg["EXTERNAL_INPUTS"] = "Entrées externes";
BlocklyMsg["INLINE_INPUTS"] = "Entrées en ligne";
BlocklyMsg["DELETE_BLOCK"] = "Supprimer le bloc";
BlocklyMsg["DELETE_X_BLOCKS"] = "Supprimer %1 blocs";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Supprimer ces %1 blocs ?";
BlocklyMsg["CLEAN_UP"] = "Nettoyer les blocs";
BlocklyMsg["COLLAPSE_BLOCK"] = "Réduire le bloc";
BlocklyMsg["COLLAPSE_ALL"] = "Réduire les blocs";
BlocklyMsg["EXPAND_BLOCK"] = "Développer le bloc";
BlocklyMsg["EXPAND_ALL"] = "Développer les blocs";
BlocklyMsg["DISABLE_BLOCK"] = "Désactiver le bloc";
BlocklyMsg["ENABLE_BLOCK"] = "Activer le bloc";
BlocklyMsg["HELP"] = "Aide";
BlocklyMsg["UNDO"] = "Annuler";
BlocklyMsg["REDO"] = "Refaire";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Modifier la valeur :";
BlocklyMsg["RENAME_VARIABLE"] = "Renommer la variable...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Renommer toutes les variables « %1 » en :";
BlocklyMsg["NEW_VARIABLE"] = "Créer une variable...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Créer une variable de chaîne...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Créer une variable numérique...";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Créer une variable de couleur...";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Nouveau type de variable :";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Nom de la nouvelle variable :";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Une variable nommée « %1 » existe déjà.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Une variable nommée « %1 » existe déjà pour un autre type : « %2 ».";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Supprimer %1 utilisations de la variable « %2 » ?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Impossible de supprimer la variable « %1 » parce qu’elle fait partie de la définition de la fonction « %2 »";
BlocklyMsg["DELETE_VARIABLE"] = "Supprimer la variable « %1 »";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://fr.wikipedia.org/wiki/Couleur";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Choisir une couleur dans la palette.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "couleur aléatoire";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Choisir une couleur au hasard.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "colorier en";
BlocklyMsg["COLOUR_RGB_RED"] = "rouge";
BlocklyMsg["COLOUR_RGB_GREEN"] = "vert";
BlocklyMsg["COLOUR_RGB_BLUE"] = "bleu";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Créer une couleur avec la quantité spécifiée de rouge, vert et bleu. Les valeurs doivent être comprises entre 0 et 100.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "mélanger";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "couleur 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "couleur 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "taux";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Mélange deux couleurs dans une proportion donnée (de 0.0 à 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://fr.wikipedia.org/wiki/Boucle_for";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "répéter %1 fois";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "faire";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Exécuter des instructions plusieurs fois.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://fr.wikipedia.org/wiki/Boucle_while";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "répéter tant que";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "répéter jusqu’à ce que";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Tant qu’une valeur est vraie, alors exécuter des instructions.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Tant qu’une valeur est fausse, alors exécuter des instructions.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://fr.wikipedia.org/wiki/Boucle_for";
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Faire prendre successivement à la variable « %1 » les valeurs entre deux nombres de début et de fin par incrément du pas spécifié et exécuter les instructions spécifiées.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "compter avec %1 de %2 à %3 par %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://fr.wikipedia.org/wiki/Structure_de_contrôle#Itérateurs";
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "pour chaque élément %1 dans la liste %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Pour chaque élément d’une liste, assigner la valeur de l’élément à la variable « %1 », puis exécuter des instructions.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://fr.wikipedia.org/wiki/Structure_de_contrôle#Commandes_de_sortie_de_boucle";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "quitter la boucle";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "passer à l’itération de boucle suivante";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Sortir de la boucle englobante.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Attention : ce bloc ne devrait être utilisé que dans une boucle.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://fr.wikipedia.org/wiki/Structure_de_contrôle#Alternatives";
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Si une valeur est vraie, alors exécuter certaines instructions.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Si une valeur est vraie, alors exécuter le premier bloc d’instructions. Sinon, exécuter le second bloc d’instructions.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Si la première valeur est vraie, alors exécuter le premier bloc d’instructions. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’instructions.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Si la première valeur est vraie, alors exécuter le premier bloc d’instructions. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’instruction. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’instruction.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "si";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "sinon si";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "sinon";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc conditionnel.";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Ajouter une condition au bloc conditionnel.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Ajouter une condition finale déclenchée dans tous les autres cas au bloc conditionnel.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://fr.wikipedia.org/wiki/In%C3%A9galit%C3%A9_(math%C3%A9matiques)";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Renvoyer vrai si les deux entrées sont égales.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Renvoyer vrai si les deux entrées sont différentes.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Renvoyer true si la première entrée est supérieure ou égale à la seconde.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://fr.wikipedia.org/wiki/Connecteur_logique";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Renvoyer vrai si les deux entrées sont vraies.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "et";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Renvoyer vrai si au moins une des entrées est vraie.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "ou";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://fr.wikipedia.org/wiki/Négation_logique";
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "non %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://fr.wikipedia.org/wiki/Principe_de_bivalence";
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "vrai";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "faux";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Renvoie soit vrai soit faux.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "nul";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Renvoie nul.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F%3A";
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "si vrai";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "si faux";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Vérifie la condition indiquée dans « test ». Si elle est vraie, renvoie la valeur « si vrai » ; sinon renvoie la valeur « si faux ».";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://fr.wikipedia.org/wiki/Nombre";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Un nombre.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "−";
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";
BlocklyMsg["MATH_TRIG_COS"] = "cos";
BlocklyMsg["MATH_TRIG_TAN"] = "tan";
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://fr.wikipedia.org/wiki/Arithm%C3%A9tique";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Renvoie la somme des deux nombres.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Renvoie la différence des deux nombres.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Renvoie le produit des deux nombres.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Renvoie le quotient des deux nombres.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Renvoie le premier nombre élevé à la puissance du second.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://fr.wikipedia.org/wiki/Racine_carr%C3%A9e";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "racine carrée";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Renvoie la racine carrée d’un nombre.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "valeur absolue";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Renvoie la valeur absolue d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Renvoie l’opposé d’un nombre";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Renvoie le logarithme naturel d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Renvoie le logarithme décimal d’un nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Renvoie e (la constante d’Euler) élevé à la puissance d’un nombre donné, c’est-à-dire l’exponentielle népérienne ou naturelle de ce nombre.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Renvoie 10 à la puissance d’un nombre.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://fr.wikipedia.org/wiki/Fonction_trigonom%C3%A9trique";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Renvoie le sinus d’un angle en degrés (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Renvoie la tangente d’un angle en degrés (pas en radians).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Renvoie l’arcsinus d’un nombre.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Renvoie l’arccosinus d’un nombre.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Renvoie l’arctangente d’un nombre.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://fr.wikipedia.org/wiki/Table_de_constantes_math%C3%A9matiques";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Renvoie une des constantes courantes : π (3,141...), e (2,718...), φ (nom d’or : ½(1+√5) = 1,618…), √2 (1,414...), √½ (0,707...), ou ∞ (infini).";
BlocklyMsg["MATH_IS_EVEN"] = "est pair";
BlocklyMsg["MATH_IS_ODD"] = "est impair";
BlocklyMsg["MATH_IS_PRIME"] = "est premier";
BlocklyMsg["MATH_IS_WHOLE"] = "est entier";
BlocklyMsg["MATH_IS_POSITIVE"] = "est positif";
BlocklyMsg["MATH_IS_NEGATIVE"] = "est négatif";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "est divisible par";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://fr.wikipedia.org/wiki/Idiome_de_programmation";
BlocklyMsg["MATH_CHANGE_TITLE"] = "incrémenter %1 de %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Ajouter un nombre à la variable « %1 ».";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://fr.wikipedia.org/wiki/Arrondi_(math%C3%A9matiques)";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Arrondir un nombre au-dessus ou au-dessous.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "arrondir";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arrondir par excès (à l’entier supérieur le plus proche)";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arrondir par défaut (à l’entier inférieur le plus proche)";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "https://fr.wikipedia.org/wiki/Fonction_d'agrégation";
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "somme de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Renvoyer la somme de tous les nombres dans la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "minimum de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Renvoyer le plus petit nombre dans la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "maximum de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Renvoyer le plus grand nombre dans la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "moyenne de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "médiane de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Renvoyer le nombre médian de la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "majoritaires de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Renvoyer une liste d’un ou plusieurs éléments les plus fréquents dans la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "écart type de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Renvoyer l’écart type de la liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "élément aléatoire de la liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Renvoyer un élément au hasard dans la liste.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://fr.wikipedia.org/wiki/Modulo_(op%C3%A9ration)";
BlocklyMsg["MATH_MODULO_TITLE"] = "reste de %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Renvoyer le reste de la division euclidienne des deux nombres.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "contraindre %1 entre %2 et %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Contraindre un nombre à rester entre les limites spécifiées (incluses).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://fr.wikipedia.org/wiki/G%C3%A9n%C3%A9rateur_de_nombres_al%C3%A9atoires";
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "entier aléatoire entre %1 et %2";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://fr.wikipedia.org/wiki/G%C3%A9n%C3%A9rateur_de_nombres_al%C3%A9atoires";
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fraction aléatoire";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Renvoyer une fraction aléatoire entre 0,0 (inclus) et 1,0 (exclus).";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://fr.wikipedia.org/wiki/Atan2";
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 de (x : %1 ; y : %2)";
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Renvoie l’arc-tangente du point (X, Y) en degrés entre -180 et 180.";
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://fr.wikipedia.org/wiki/Cha%C3%AEne_de_caract%C3%A8res";
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Une lettre, un mot ou une ligne de texte.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "créer un texte avec";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Créer un morceau de texte en joignant bout à bout un nombre quelconque d’éléments dans l’ordre indiqué.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "joindre";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Ajouter un élément au texte.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "ajouter le texte %2 à %1";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Ajouter du texte à la variable « %1 ».";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "longueur de %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Renvoie le nombre de lettres (chiffres, ponctuations, symboles et espaces compris) dans le texte fourni.";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 est vide";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Renvoie vrai si le texte fourni est vide.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie %1 si la chaîne n’est pas trouvée.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "%2 %3 dans le texte %1";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "trouver la première occurrence de la chaîne";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "trouver la dernière occurrence du texte";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "%2 dans le texte %1";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "obtenir la lettre nº";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "obtenir la lettre nº (depuis la fin)";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "obtenir la première lettre";
BlocklyMsg["TEXT_CHARAT_LAST"] = "obtenir la dernière lettre";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "obtenir une lettre au hasard";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Renvoie la lettre à la position indiquée.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Renvoie une partie indiquée du texte.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "dans le texte";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "obtenir la sous-chaîne depuis la lettre nº";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "obtenir la sous-chaîne depuis la lettre nº (depuis la fin)";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "obtenir la sous-chaîne depuis la première lettre";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "jusqu’à la lettre nº";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "jusqu’à la lettre nº (depuis la fin)";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "jusqu’à la dernière lettre";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Renvoyer une copie du texte dans une autre casse.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "en MAJUSCULES";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "en minuscules";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "en Capitale Initiale Pour Chaque Mot";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Renvoyer une copie du texte avec les espaces supprimés d’un ou des deux bouts.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "supprimer les espaces des deux côtés de";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "supprimer les espaces du côté gauche de";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "supprimer les espaces du côté droit de";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "afficher %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Afficher le texte, le nombre ou une autre valeur spécifiée.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "demander un texte avec un message";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "demander un nombre avec un message";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Demander un nombre à l’utilisateur.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Demander un texte à l’utilisateur.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "nombre %1 sur %2";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Compter combien de fois un texte donné apparaît dans un autre.";
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "remplacer %1 par %2 dans %3";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Remplacer toutes les occurrences d’un texte par un autre.";
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "renverser %1";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Renverse l’ordre des caractères dans le texte.";
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "créer une liste vide";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement de données";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Créer une liste avec un nombre quelconque d’éléments.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "créer une liste avec";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "liste";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Ajouter un élément à la liste.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
BlocklyMsg["LISTS_REPEAT_TITLE"] = "créer une liste avec l’élément %1 répété %2 fois";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "longueur de %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Renvoie la longueur d’une liste.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 est vide";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Renvoie vrai si la liste est vide.";
BlocklyMsg["LISTS_INLIST"] = "dans la liste";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "trouver la première occurrence de l’élément";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "trouver la dernière occurrence de l’élément";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie %1 si l’élément n’est pas trouvé.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "obtenir";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "obtenir et supprimer";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "retirer";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "nº";
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "nº depuis la fin";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "premier";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "dernier";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "au hasard";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 est le premier élément.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 est le dernier élément.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Renvoie l’élément à la position indiquée dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Renvoie le premier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Renvoie le dernier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Renvoie un élément au hasard dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Supprime et renvoie l’élément à la position indiquée dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Supprime et renvoie le premier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Supprime et renvoie le dernier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Supprime et renvoie un élément au hasard dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Supprime l’élément à la position indiquée dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Supprime le premier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Supprime le dernier élément dans une liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Supprime un élément au hasard dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "mettre";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "insérer en";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "comme";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Définit l’élément à la position indiquée dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Définit le premier élément dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Définit le dernier élément dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Définit un élément au hasard dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Insère l’élément à la position indiquée dans une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Insère l’élément au début d’une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Ajoute l’élément à la fin d’une liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Insère l’élément au hasard dans une liste.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "obtenir la sous-liste depuis le n°";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "obtenir la sous-liste depuis le nº depuis la fin";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "obtenir la sous-liste depuis le début";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "jusqu’au nº";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "jusqu’au n° depuis la fin";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "jusqu’à la fin";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Crée une copie de la partie spécifiée d’une liste.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "trier %1 %2 %3";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Trier une copie d’une liste.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "croissant";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "décroissant";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numérique";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabétique";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabétique, en ignorant la casse";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "créer une liste depuis le texte";
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "créer un texte depuis la liste";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "avec séparateur";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Couper un texte en une liste de textes, en coupant à chaque séparateur.";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Réunir une liste de textes en un seul, en les joignant par un séparateur.";
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "inverser %1";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Inverser la copie d’une liste.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Renvoie la valeur de cette variable.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Créer « définir %1 »";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "définir %1 à %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Définit cette variable pour qu’elle soit égale à la valeur de l’entrée.";
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Créer « obtenir %1 »";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "pour";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "faire quelque chose";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "avec :";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "avec :";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crée une fonction sans sortie.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Décrivez cette fonction...";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "retourner";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crée une fonction avec une sortie.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "autoriser les ordres";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Attention : cette fonction a des paramètres en doublon.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Exécuter la fonction « %1 » définie par l’utilisateur.";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://fr.wikipedia.org/wiki/Sous-programme";
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Exécuter la fonction « %1 » définie par l’utilisateur et utiliser son résultat.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entrées";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "nom de l’entrée :";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Ajouter une entrée à la fonction.";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Surligner la définition de la fonction";
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Créer « %1 »";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Attention : ce bloc ne peut être utilisé que dans une définition de fonction.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Expliquez quelque chose...";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Espace de travail de Blocky";
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Les blocs repliés contiennent des avertissements.";
BlocklyMsg["DIALOG_OK"] = "OK";
BlocklyMsg["DIALOG_CANCEL"] = "Annuler";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "faire";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "faire";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "faire";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "faire";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "si";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "sinon si";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "sinon";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "élément";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "élément";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "élément";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "élément";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "dans la liste";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "dans la liste";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "dans la liste";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "dans la liste";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "pour";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "faire quelque chose";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Décrivez cette fonction...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Jeux Blockly";
BlocklyGamesMsg["Games.puzzle"] = "Puzzle";
BlocklyGamesMsg["Games.maze"] = "Labyrinthe";
BlocklyGamesMsg["Games.bird"] = "Oiseau";
BlocklyGamesMsg["Games.turtle"] = "Tortue";
BlocklyGamesMsg["Games.movie"] = "Film";
BlocklyGamesMsg["Games.music"] = "Musique";
BlocklyGamesMsg["Games.pondTutor"] = "Tutoriel de Pond";
BlocklyGamesMsg["Games.pond"] = "Pond";
BlocklyGamesMsg["Games.linesOfCode1"] = "Vous avez résolu ce niveau avec 1 ligne de JavaScript :";
BlocklyGamesMsg["Games.linesOfCode2"] = "Vous avez résolu ce niveau avec %1 lignes de JavaScript :";
BlocklyGamesMsg["Games.nextLevel"] = "Êtes-vous prêt(e) pour le niveau %1 ?";
BlocklyGamesMsg["Games.finalLevel"] = "Êtes-vous prêt(e) pour le prochain défi ?";
BlocklyGamesMsg["Games.submitTitle"] = "Titre :";
BlocklyGamesMsg["Games.linkTooltip"] = "Enregistrer et lier aux blocs.";
BlocklyGamesMsg["Games.runTooltip"] = "Lancer le programme que vous avez écrit.";
BlocklyGamesMsg["Games.runProgram"] = "Exécuter le programme";
BlocklyGamesMsg["Games.resetTooltip"] = "Arrêter le programme et réinitialiser le niveau.";
BlocklyGamesMsg["Games.resetProgram"] = "Réinitialiser";
BlocklyGamesMsg["Games.help"] = "Aide";
BlocklyGamesMsg["Games.catLogic"] = "Logique";
BlocklyGamesMsg["Games.catLoops"] = "Boucles";
BlocklyGamesMsg["Games.catMath"] = "Mathématiques";
BlocklyGamesMsg["Games.catText"] = "Texte";
BlocklyGamesMsg["Games.catLists"] = "Listes";
BlocklyGamesMsg["Games.catColour"] = "Couleur";
BlocklyGamesMsg["Games.catVariables"] = "Variables";
BlocklyGamesMsg["Games.catProcedures"] = "Fonctions";
BlocklyGamesMsg["Games.httpRequestError"] = "Un problème est survenu avec la requête.";
BlocklyGamesMsg["Games.linkAlert"] = "Partagez vos blocs grâce à ce lien :\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Désolé, « %1 » ne correspond à aucun programme enregistré.";
BlocklyGamesMsg["Games.xmlError"] = "Impossible de charger votre fichier enregistré. Peut être a-t-il été créé avec une autre version de Blockly ?";
BlocklyGamesMsg["Games.submitted"] = "Merci pour ce programme ! Si notre équipe de singes savants l’aime, elle le publiera sur la galerie dans les deux jours.";
BlocklyGamesMsg["Games.listVariable"] = "liste";
BlocklyGamesMsg["Games.textVariable"] = "texte";
BlocklyGamesMsg["Games.breakLink"] = "Une fois que vous aurez commencé à modifier le JavaScript, vous ne pourrez pas revenir à la modification des blocs. Est-ce bon pour vous ?";
BlocklyGamesMsg["Games.blocks"] = "Blocs";
BlocklyGamesMsg["Games.congratulations"] = "Félicitations !";
BlocklyGamesMsg["Games.helpAbort"] = "Ce niveau est très difficile. Voulez-vous le sauter et passer au jeu suivant ? Vous pourrez toujours y revenir plus tard.";
BlocklyGamesMsg["Index.clear"] = "Supprimer toutes vos solutions ?";
BlocklyGamesMsg["Index.subTitle"] = "Jeux pour les programmeurs de demain.";
BlocklyGamesMsg["Index.moreInfo"] = "Informations pédagogiques...";
BlocklyGamesMsg["Index.startOver"] = "Voulez-vous tout recommencer ?";
BlocklyGamesMsg["Index.clearData"] = "Effacer les données";
BlocklyGamesMsg["Puzzle.animal1"] = "Canard";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Plumes";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Bec";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://fr.wikipedia.org/wiki/Canard";
BlocklyGamesMsg["Puzzle.animal2"] = "Chat";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Moustaches";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Fourrure";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://fr.wikipedia.org/wiki/Chat";
BlocklyGamesMsg["Puzzle.animal3"] = "Abeille";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Miel";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Dard";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://fr.wikipedia.org/wiki/Abeille";
BlocklyGamesMsg["Puzzle.animal4"] = "Escargot";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Coquille";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Bave";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://fr.wikipedia.org/wiki/Escargot";
BlocklyGamesMsg["Puzzle.picture"] = "image :";
BlocklyGamesMsg["Puzzle.legs"] = "pattes :";
BlocklyGamesMsg["Puzzle.legsChoose"] = "choisir...";
BlocklyGamesMsg["Puzzle.traits"] = "traits :";
BlocklyGamesMsg["Puzzle.error0"] = "Parfait !\nLes %1 blocs sont tous corrects.";
BlocklyGamesMsg["Puzzle.error1"] = "Presque ! Un bloc est incorrect.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 blocs sont incorrects.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Le bloc en surbrillance est incorrect.\nEssayez à nouveau.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Vérifier les réponses";
BlocklyGamesMsg["Puzzle.helpText"] = "Pour chaque animal (en vert), attacher son image, choisissez son nombre de pattes et faites une pile de ses traits caractéristiques.";
BlocklyGamesMsg["Maze.moveForward"] = "avancer";
BlocklyGamesMsg["Maze.turnLeft"] = "tourner à gauche";
BlocklyGamesMsg["Maze.turnRight"] = "tourner à droite";
BlocklyGamesMsg["Maze.doCode"] = "faire";
BlocklyGamesMsg["Maze.elseCode"] = "sinon";
BlocklyGamesMsg["Maze.helpIfElse"] = "Un bloc « si–sinon » permet d’exécuter une chose sinon autre chose.";
BlocklyGamesMsg["Maze.pathAhead"] = "si chemin devant";
BlocklyGamesMsg["Maze.pathLeft"] = "si chemin vers la gauche";
BlocklyGamesMsg["Maze.pathRight"] = "si chemin vers la droite";
BlocklyGamesMsg["Maze.repeatUntil"] = "répéter jusqu’à";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Avance le joueur d’une case.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Tourne le joueur à gauche ou à droite de 90 degrés.";
BlocklyGamesMsg["Maze.ifTooltip"] = "S’il y a un chemin dans la direction spécifiée, alors effectue ces actions.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "S’il y a un chemin dans la direction spécifiée, alors fais le premier bloc d’actions. Sinon fais le second bloc d’actions.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Répète les actions à l’intérieur du bloc jusqu’à atteindre le but final.";
BlocklyGamesMsg["Maze.capacity0"] = "Il vous reste %0 bloc.";
BlocklyGamesMsg["Maze.capacity1"] = "Il vous reste %1 bloc.";
BlocklyGamesMsg["Maze.capacity2"] = "Il vous reste %2 blocs.";
BlocklyGamesMsg["Maze.runTooltip"] = "Fait faire au joueur ce que disent les blocs.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Replace le joueur au début du labyrinthe.";
BlocklyGamesMsg["Maze.helpStack"] = "Empiler ensemble deux blocs d’instructions « avancer » pour m’aider à atteindre le but.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Dans ce niveau, vous aurez besoin d’empiler les blocs les uns au dessus des autres dans la zone blanche de travail.";
BlocklyGamesMsg["Maze.helpRun"] = "Exécute votre programme pour voir ce qui arrive.";
BlocklyGamesMsg["Maze.helpReset"] = "Votre programme n’a pas résolu le labyrinthe. Appuyez sur « Réinitialiser » et essayez à nouveau.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Utilise seulement deux blocs pour atteindre le but. Utilisez le bloc « répéter » pour exécuter un bloc plus d’une fois.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Vous avez utilisé tous les blocs pour ce niveau. Pour créer un nouveau bloc, vous devez d’abord supprimer un bloc existant.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Vous pouvez mettre plus d’un bloc dans un bloc « répéter ».";
BlocklyGamesMsg["Maze.helpSkins"] = "Choisissez votre joueur favori dans ce menu.";
BlocklyGamesMsg["Maze.helpIf"] = "Un bloc « si » va exécuter ce qu’il contient seulement si la condition est vraie. Essayez de tourner à gauche s’il y a un chemin vers la gauche.";
BlocklyGamesMsg["Maze.helpMenu"] = "Cliquez sur %1 dans le bloc « si » pour modifier sa condition.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Pouvez-vous résoudre ce labyrinthe plus difficile ? Essayez de suivre le mur du côté de votre main gauche. Pour les programmeurs avancés seulement !";
BlocklyGamesMsg["Bird.noWorm"] = "n’a pas de ver";
BlocklyGamesMsg["Bird.heading"] = "cap";
BlocklyGamesMsg["Bird.noWormTooltip"] = "L’état quand l’oiseau n’a pas atteint le ver.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Se déplacer dans la direction d’un angle donné : 0 est vers la droite, 90 est en face, 180 est vers la gauche, etc.";
BlocklyGamesMsg["Bird.positionTooltip"] = "« x » et « y » marquent la position de l’oiseau. Quand « x = 0 » l’oiseau est près du bord gauche, quand « x = 100 » il est près du bord droit. Quand « y = 0 » l’oiseau est en bas, quand « y = 100 » il est en haut.";
BlocklyGamesMsg["Bird.helpHeading"] = "Modifier l’angle du cap pour que l’oiseau attrape le ver et atterrisse dans son nid.";
BlocklyGamesMsg["Bird.helpHasWorm"] = "Utiliser ce bloc pour aller dans une direction si vous avez le ver, ou bien dans une autre si vous ne l’avez pas.";
BlocklyGamesMsg["Bird.helpX"] = "« x » est votre position horizontale. Utiliser ce bloc pour aller dans une direction si « x » est inférieur à un nombre, dans une autre direction sinon.";
BlocklyGamesMsg["Bird.helpElse"] = "Cliquer sur l’icône pour modifier le bloc « si ».";
BlocklyGamesMsg["Bird.helpElseIf"] = "Ce niveau nécessite à la fois un bloc « sinon si » et un bloc « sinon ».";
BlocklyGamesMsg["Bird.helpAnd"] = "Le bloc « et » est vrai seulement si ses deux entrées sont vraies.";
BlocklyGamesMsg["Bird.helpMutator"] = "Glissez un bloc « sinon » dans le bloc « si ».";
BlocklyGamesMsg["Turtle.moveTooltip"] = "Déplace la tortue en avant ou en arrière de la quantité indiquée.";
BlocklyGamesMsg["Turtle.moveForward"] = "avancer de";
BlocklyGamesMsg["Turtle.moveBackward"] = "reculer de";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Faire tourner la tortue à gauche ou à droite du nombre de degrés indiqué.";
BlocklyGamesMsg["Turtle.turnRight"] = "tourner à droite de";
BlocklyGamesMsg["Turtle.turnLeft"] = "tourner à gauche de";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Modifie l’épaisseur de tracé du crayon.";
BlocklyGamesMsg["Turtle.setWidth"] = "mettre l’épaisseur à";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Modifie la couleur du crayon.";
BlocklyGamesMsg["Turtle.setColour"] = "mettre la couleur à";
BlocklyGamesMsg["Turtle.penTooltip"] = "Lève ou pose le crayon, pour arrêter ou commencer à dessiner.";
BlocklyGamesMsg["Turtle.penUp"] = "lever le crayon";
BlocklyGamesMsg["Turtle.penDown"] = "poser le crayon";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Rend visible ou invisible la tortue (cercle et flèche).";
BlocklyGamesMsg["Turtle.hideTurtle"] = "cacher la tortue";
BlocklyGamesMsg["Turtle.showTurtle"] = "afficher la tortue";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://fr.wikipedia.org/wiki/Imprimerie";
BlocklyGamesMsg["Turtle.printTooltip"] = "Dessine le texte dans la direction de la tortue à son emplacement.";
BlocklyGamesMsg["Turtle.print"] = "écrire";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://fr.wikipedia.org/wiki/Police_d'%C3%A9criture";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Définit la police utilisée par le bloc d’écriture.";
BlocklyGamesMsg["Turtle.font"] = "police";
BlocklyGamesMsg["Turtle.fontSize"] = "taille de la police";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "gras";
BlocklyGamesMsg["Turtle.fontItalic"] = "italique";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Lancez votre programme jusqu’à ce qu’il s’arrête. Vous pourrez ensuite publier votre dessin dans la galerie.";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Ouvrir la galerie des dessins.";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Voir la galerie";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Publier votre dessin sur la galerie.";
BlocklyGamesMsg["Turtle.submitMsg"] = "Publier dans la galerie";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Votre solution fonctionne, mais vous pouvez faire mieux.";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Dessinez la forme avec seulement trois blocs.";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Dessinez l’étoile avec seulement quatre blocs.";
BlocklyGamesMsg["Turtle.helpText1"] = "Créez un programme qui dessine un carré.";
BlocklyGamesMsg["Turtle.helpText2"] = "Modifiez votre programme pour dessiner un pentagone plutôt qu’un carré.";
BlocklyGamesMsg["Turtle.helpText3a"] = "Voici un nouveau bloc qui vous permet de modifier la couleur :";
BlocklyGamesMsg["Turtle.helpText3b"] = "Dessinez une étoile jaune.";
BlocklyGamesMsg["Turtle.helpText4a"] = "Voici un nouveau bloc qui vous permet de lever votre crayon de la feuille quand vous vous déplacez :";
BlocklyGamesMsg["Turtle.helpText4b"] = "Dessinez une petite étoile jaune, puis une ligne par dessus.";
BlocklyGamesMsg["Turtle.helpText5"] = "Au lieu d’une seule étoile, pouvez-vous dessiner quatre étoiles arrangées en carré ?";
BlocklyGamesMsg["Turtle.helpText6"] = "Dessinez trois étoiles jaunes et une ligne blanche.";
BlocklyGamesMsg["Turtle.helpText7"] = "Dessinez les étoiles puis quatre lignes blanches.";
BlocklyGamesMsg["Turtle.helpText8"] = "Dessinez 360 lignes blanches qui ressemblent à une pleine lune.";
BlocklyGamesMsg["Turtle.helpText9"] = "Pouvez-vous ajouter un cercle noir afin que la lune devienne un croissant ?";
BlocklyGamesMsg["Turtle.helpText10"] = "Dessinez ce que vous voulez. Vous avez un grand nombre de blocs à explorer. Amusez-vous !";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Utilisez le bouton « Voir la galerie » pour voir ce que les autres personnes ont dessiné. Si vous dessinez quelque chose d’intéressant, utilisez le bouton « Publier dans la galerie » pour le publier.";
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choisir une catégorie pour voir les blocs.";
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "x de départ";
BlocklyGamesMsg["Movie.y1"] = "y de départ";
BlocklyGamesMsg["Movie.x2"] = "x de fin";
BlocklyGamesMsg["Movie.y2"] = "y de fin";
BlocklyGamesMsg["Movie.radius"] = "rayon";
BlocklyGamesMsg["Movie.width"] = "largeur";
BlocklyGamesMsg["Movie.height"] = "hauteur";
BlocklyGamesMsg["Movie.circleTooltip"] = "Dessine un cercle de rayon donné à l’endroit spécifié.";
BlocklyGamesMsg["Movie.circleDraw"] = "cercle";
BlocklyGamesMsg["Movie.rectTooltip"] = "Dessine un rectangle de largeur et de hauteur données à l’endroit spécifié.";
BlocklyGamesMsg["Movie.rectDraw"] = "rectangle";
BlocklyGamesMsg["Movie.lineTooltip"] = "Dessine une ligne d’épaisseur donnée d’un point à un autre.";
BlocklyGamesMsg["Movie.lineDraw"] = "ligne";
BlocklyGamesMsg["Movie.timeTooltip"] = "Renvoie la durée actuelle de l’animation (0–100).";
BlocklyGamesMsg["Movie.colourTooltip"] = "Change la couleur du crayon.";
BlocklyGamesMsg["Movie.setColour"] = "fixe la couleur à";
BlocklyGamesMsg["Movie.submitDisabled"] = "Votre animation ne bouge pas. Utilisez les blocs pour faire quelque chose d’intéressant. Vous pourrez ensuite publier votre animation dans la galerie.";
BlocklyGamesMsg["Movie.galleryTooltip"] = "Ouvrir la galerie des animations.";
BlocklyGamesMsg["Movie.galleryMsg"] = "Voir la galerie";
BlocklyGamesMsg["Movie.submitTooltip"] = "Publier votre animation sur la galerie.";
BlocklyGamesMsg["Movie.submitMsg"] = "Publier sur la galerie";
BlocklyGamesMsg["Movie.helpLayer"] = "Déplacez le cercle de fond tout en haut de votre programme. Il apparaîtra alors derrière la personne.";
BlocklyGamesMsg["Movie.helpText1"] = "Utilisez des formes simples pour dessiner cette personne.";
BlocklyGamesMsg["Movie.helpText2a"] = "Ce niveau est une animation. Vous voulez déplacer le bras de la personne à travers l’écran. Appuyez sur le bouton de lecture pour voir un aperçu.";
BlocklyGamesMsg["Movie.helpText2b"] = "Pendant que l’animation se déroule, la valeur du bloc « temps » avance de 0 à 100. Comme vous voulez que la position « y » du bras commence à 0 et aille jusqu’à 100, cela devrait être facile.";
BlocklyGamesMsg["Movie.helpText3"] = "Le bloc « temps » va de 0 à 100. Mais maintenant vous voulez que la position « y » de l'autre bras démarre à 100 et aille jusqu’à 0. Pouvez-vous trouver une formule mathématique qui inverse la direction ?";
BlocklyGamesMsg["Movie.helpText4"] = "Utilisez ce que vous avez appris au niveau précédent pour faire se croiser les jambes.";
BlocklyGamesMsg["Movie.helpText5"] = "La formule mathématique pour le bras est compliquée. Voici la réponse :";
BlocklyGamesMsg["Movie.helpText6"] = "Donner deux mains à la personne.";
BlocklyGamesMsg["Movie.helpText7"] = "Utilisez le bloc « si » pour dessiner une petite tête durant la première moitié du film. Puis dessinez une grosse tête pour la seconde moitié du film.";
BlocklyGamesMsg["Movie.helpText8"] = "Faites aller les jambes dans l’autre direction à la moitié du film.";
BlocklyGamesMsg["Movie.helpText9"] = "Dessinez un cercle qui s’agrandit derrière la personne.";
BlocklyGamesMsg["Movie.helpText10"] = "Faites une animation de ce que vous voulez. Vous avez un grand nombre de blocs à explorer. Amusez-vous !";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Utilisez le bouton « Voir la galerie » pour voir les animations faites par les autres personnes. Si vous avez créé une animation intéressante, utilisez le bouton « Publier sur la galerie » pour la publier.";
BlocklyGamesMsg["Music.playNoteTooltip"] = "Joue une note de musique de la durée et de la hauteur données.";
BlocklyGamesMsg["Music.playNote"] = "jouer une %1 note %2";
BlocklyGamesMsg["Music.restTooltip"] = "Attend la durée spécifiée.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Attend la durée d’une note entière.";
BlocklyGamesMsg["Music.rest"] = "attendre %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Bascule sur l’instrument spécifié en jouant les notes musicales qui suivent.";
BlocklyGamesMsg["Music.setInstrument"] = "règle l’instrument à : %1";
BlocklyGamesMsg["Music.startTooltip"] = "Exécute les blocs à l’intérieur quand le bouton « Lancer le programme » est cliqué.";
BlocklyGamesMsg["Music.start"] = "quand %1 est cliqué";
BlocklyGamesMsg["Music.pitchTooltip"] = "Une note (do4 vaut 7).";
BlocklyGamesMsg["Music.firstPart"] = "première partie";
BlocklyGamesMsg["Music.piano"] = "piano";
BlocklyGamesMsg["Music.trumpet"] = "trompette";
BlocklyGamesMsg["Music.banjo"] = "banjo";
BlocklyGamesMsg["Music.violin"] = "violon";
BlocklyGamesMsg["Music.guitar"] = "guitare";
BlocklyGamesMsg["Music.flute"] = "flûte";
BlocklyGamesMsg["Music.drum"] = "tambour";
BlocklyGamesMsg["Music.choir"] = "chœur";
BlocklyGamesMsg["Music.submitDisabled"] = "Lancer votre programme jusqu’à ce qu’il s’arrête. Vous pourrez alors publier votre musique dans la galerie.";
BlocklyGamesMsg["Music.galleryTooltip"] = "Ouvrir la galerie de musique.";
BlocklyGamesMsg["Music.galleryMsg"] = "Voir la galerie";
BlocklyGamesMsg["Music.submitTooltip"] = "Publier votre musique sur la galerie.";
BlocklyGamesMsg["Music.submitMsg"] = "Publier sur la galerie";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Votre solution fonctionne, mais vous pouvez faire mieux. Utilisez des fonctions pour réduire la quantité de code répétée.";
BlocklyGamesMsg["Music.helpUseInstruments"] = "La musique rendra mieux si vous utilisez un instrument différent dans chaque bloc de démarrage.";
BlocklyGamesMsg["Music.helpText1"] = "Composez les quatre premières notes de « Frère Jacques ».";
BlocklyGamesMsg["Music.helpText2a"] = "Une « fonction » vous permet de regrouper ensemble des blocs, puis de les exécuter plus d’une fois.";
BlocklyGamesMsg["Music.helpText2b"] = "Créez une fonction pour jouer les quatre premières notes de « Frère Jacques ». Lancez cette fonction deux fois. N’ajoutez pas d’autres blocs de notes.";
BlocklyGamesMsg["Music.helpText3"] = "Créez une deuxième fonction pour la partie suivante de « Frère Jacques ». La dernière note est plus longue.";
BlocklyGamesMsg["Music.helpText4"] = "Créez une troisième fonction pour la partie qui suit de « Frère Jacques ». Les quatre premières notes sont plus courtes.";
BlocklyGamesMsg["Music.helpText5"] = "Terminez l’air complet de « Frère Jacques ».";
BlocklyGamesMsg["Music.helpText6a"] = "Ce nouveau bloc vous permet de passer à un autre instrument.";
BlocklyGamesMsg["Music.helpText6b"] = "Jouer votre air sur un violon.";
BlocklyGamesMsg["Music.helpText7a"] = "Ce nouveau bloc ajoute un temps de silence.";
BlocklyGamesMsg["Music.helpText7b"] = "Créez un second bloc qui a deux blocs de silence, puis joue aussi « Frère Jacques ».";
BlocklyGamesMsg["Music.helpText8"] = "Chaque bloc de départ doit jouer « Frère Jacques » deux fois.";
BlocklyGamesMsg["Music.helpText9"] = "Créez quatre blocs de démarrage qui jouent chacun « Frère Jacques » deux fois. Ajoutez le bon nombre de blocs de silence.";
BlocklyGamesMsg["Music.helpText10"] = "Composez ce que vous voulez. Vous avez un grand nombre de nouveaux blocs à explorer. Amusez-vous !";
BlocklyGamesMsg["Music.helpText10Reddit"] = "Utilisez le bouton « Voir la galerie » pour voir ce que les autres ont composé. Si vous composez quelque chose d’intéressant, utilisez le bouton « Publier sur la galerie » pour le publier.";
BlocklyGamesMsg["Pond.scanTooltip"] = "Rechercher des ennemis. Spécifier une direction (0–360). Renvoie la distance à l’ennemi le plus proche dans cette direction. Renvoie Infini si aucun ennemi n’a été trouvé.";
BlocklyGamesMsg["Pond.cannonTooltip"] = "Tirer au canon. Spécifier une direction (0–360) et une portée (0–70).";
BlocklyGamesMsg["Pond.swimTooltip"] = "Nager. Spécifier une direction (0–360).";
BlocklyGamesMsg["Pond.stopTooltip"] = "Arrêter de nager. Le joueur ralentira pour arrêter.";
BlocklyGamesMsg["Pond.healthTooltip"] = "Renvoie la santé actuelle du joueur (0 est mort, 100 est en pleine forme).";
BlocklyGamesMsg["Pond.speedTooltip"] = "Renvoie la vitesse actuelle du joueur (0 est à l’arrêt, 100 est à pleine vitesse).";
BlocklyGamesMsg["Pond.locXTooltip"] = "Renvoie la coordonnée X du joueur (0 est le bord gauche, 100 le bord droit).";
BlocklyGamesMsg["Pond.locYTooltip"] = "Renvoie la coordonnée Y du joueur (0 est le bord du bas, 100 est le bord du haut).";
BlocklyGamesMsg["Pond.logTooltip"] = "Imprime un nombre sur la console de votre navigateur.";
BlocklyGamesMsg["Pond.docsTooltip"] = "Affiche la documentation sur la langue.";
BlocklyGamesMsg["Pond.documentation"] = "Documentation";
BlocklyGamesMsg["Pond.playerName"] = "Joueur";
BlocklyGamesMsg["Pond.targetName"] = "Cible";
BlocklyGamesMsg["Pond.pendulumName"] = "Pendule";
BlocklyGamesMsg["Pond.scaredName"] = "Effrayé";
BlocklyGamesMsg["Pond.helpUseScan"] = "Votre solution fonctionne, mais vous pouvez faire mieux. Utilisez «analyser » pour indiquer au canon à quelle distance tirer.";
BlocklyGamesMsg["Pond.helpText1"] = "Utilisez la commande « canon » pour toucher la cible. Le premier paramètre est l’angle, le second la distance. Trouvez la bonne combinaison.";
BlocklyGamesMsg["Pond.helpText2"] = "Cette cible doit être touchée plusieurs fois. Utilisez une boucle « tant que (vrai) » pour faire quelque chose indéfiniment.";
BlocklyGamesMsg["Pond.helpText3a"] = "Cet adversaire avance et recule, le rendant difficile à toucher. L’expression « analyser » retourne la distance exacte à l’opposant dans la direction spécifiée.";
BlocklyGamesMsg["Pond.helpText3b"] = "Cette portée est exactement ce dont la commande « canon » a besoin pour tirer avec précision.";
BlocklyGamesMsg["Pond.helpText4"] = "Cet adversaire est trop loin pour utiliser le canon (qui a une portée limite de 70 mètres). À la place, utilisez la commande « nager » pour commencer à nager vers l’adversaire et le percuter.";
BlocklyGamesMsg["Pond.helpText5"] = "Cet adversaire est également trop loin pour utiliser le canon. Mais vous êtes trop faible pour survivre à une collision. Nagez vers l’adversaire tant que votre position horizontale est inférieure à 50. Puis « arrêter » avant d’utiliser le canon.";
BlocklyGamesMsg["Pond.helpText6"] = "Cet adversaire s’éloignera quand il sera touché. Nagez vers lui s’il est hors de portée (70 mètres).";
BlocklyGamesMsg["Gallery"] = "Galerie";
