// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "element";
BlocklyMsg["UNNAMED_KEY"] = "adsız";
BlocklyMsg["TODAY"] = "Bugün";
BlocklyMsg["DUPLICATE_BLOCK"] = "Dublikat";
BlocklyMsg["ADD_COMMENT"] = "Şərh əlavə et";
BlocklyMsg["REMOVE_COMMENT"] = "Şərhi sil";
BlocklyMsg["DUPLICATE_COMMENT"] = "Şərhin nüsxəsini yarat";
BlocklyMsg["EXTERNAL_INPUTS"] = "Xarici girişlər";
BlocklyMsg["INLINE_INPUTS"] = "Sətiriçi girişlər";
BlocklyMsg["DELETE_BLOCK"] = "Bloku sil";
BlocklyMsg["DELETE_X_BLOCKS"] = "%1 bloku sil";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Bütün %1 blok silinsin?";
BlocklyMsg["CLEAN_UP"] = "Blokları təmizlə";
BlocklyMsg["COLLAPSE_BLOCK"] = "Bloku yığ";
BlocklyMsg["COLLAPSE_ALL"] = "Blokları yığ";
BlocklyMsg["EXPAND_BLOCK"] = "Bloku aç";
BlocklyMsg["EXPAND_ALL"] = "Blokları aç";
BlocklyMsg["DISABLE_BLOCK"] = "Bloku söndür";
BlocklyMsg["ENABLE_BLOCK"] = "Bloku aktivləşdir";
BlocklyMsg["HELP"] = "Kömək";
BlocklyMsg["UNDO"] = "Geri";
BlocklyMsg["REDO"] = "İrəli";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Qiyməti dəyiş:";
BlocklyMsg["RENAME_VARIABLE"] = "Dəyişənin adını dəyiş...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Bütün '%1' dəyişənlərinin adını buna dəyiş:";
BlocklyMsg["NEW_VARIABLE"] = "Yeni dəyişən...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Yeni sətir dəyişəni...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Yeni rəqəm dəyişəni...";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Yeni rəng dəyişəni...";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Yeni dəyişənin tipi:";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Yeni dəyişənin adı:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "'%1' adlı dəyişən artıq mövcuddur.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "'%1' adlı dəyişən artıq '%2': tipində istifadə edilir .";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "'%2' dəyişəninin %1 istifadəsini silək?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "'%1' dəyişənini silmək mümkün deyil, çünki o '%2' funksiyasının təyin hissəsidir";
BlocklyMsg["DELETE_VARIABLE"] = "'%1' adlı dəyişəni sil";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://az.wikipedia.org/wiki/Rəng";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Palitradan bir rəng seçin.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "təsadüfi rəng";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Təsadüfi bir rəng seçin.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "rənglə";
BlocklyMsg["COLOUR_RGB_RED"] = "qırmızı";
BlocklyMsg["COLOUR_RGB_GREEN"] = "yaşıl";
BlocklyMsg["COLOUR_RGB_BLUE"] = "mavi";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Qırmızı, yaşıl və mavinin göstərilən miqdarı ilə bir rəng düzəlt. Bütün qiymətlər 0 ilə 100 arasında olmalıdır.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "qarışdır";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "rəng 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "rəng 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "nisbət";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "İki rəngi verilmiş nisbətdə (0,0 - 1,0) qarışdırır.";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://az.wikipedia.org/wiki/For_loop";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "%1 dəfə təkrar et";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "icra et";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Bəzi əmrləri bir neçə dəfə yerinə yetir.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "təkrar et, hələ ki";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "təkrar et, ta ki";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Hələ ki, qiymət \"doğru\"dur, bəzi əmrləri yerinə yetir.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Hələ ki, qiymət \"yalan\"dır, bəzi əmrləri yerinə yetir.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "\"%1\" dəyişəni başlanğıc ədəddən son ədədə qədər göstərilən aralıqla qiymətlər aldıqca göstərilən blokları yerinə yetir.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "say: %1 %2 ilə başlayıb, %3 qiymətinə kimi %4 qədər dəyiş";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "hər element üçün %1 siyahıda %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Siyahıdakı hər element üçün \"%1\" dəyişənini elementə mənimsət və bundan sonra bəzi əmrləri yerinə yetir.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "dövrdən çıx";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "dövrün növbəti addımından davam et";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Cari dövrdən çıx.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Bu dövrün qalanını ötür və növbəti addımla davam et.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Xəbərdarlıq: Bu blok ancaq dövr daxilində istifadə oluna bilər.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Əgər qiymət doğrudursa, onda bəzi əmrləri yerinə yetir.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Əgər qiymət doğrudursa, onda birinci əmrlər blokunu yerinə yetir. Əks halda isə ikinci əmrlər blokunu yerinə yetir.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Əgər birinci qiymət doğrudursa, onda birinci əmrlər blokunu yerinə yetir. Əks halda əgər ikinci qiymət doğrudursa, onda ikinci əmrlər blokunu yerinə yetir.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Əgər birinci qiymət doğrudursa, onda birinci əmrlər blokunu yerinə yetir. Əks halda əgər ikinci qiymət doğrudursa, onda ikinci əmrlər blokunu yerinə yetir. Əgər qiymətlərdən heç biri doğru deyilsə, onda axırıncı əmrlər blokunu yerinə yetir.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "əgər";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "əks halda əgər";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "əks halda";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Bu \"əgər\" blokunu dəyişdirmək üçün bölümlərin yenisini əlavə et, sil və ya yerini dəyiş.";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "\"Əgər\" blokuna bir şərt əlavə et.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "\"Əgər\" blokuna qalan bütün halları əhatə edəb son bir şərt əlavə et.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://az.wikipedia.org/wiki/bərabərsizlik_(riyazi)";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Girişlər bir birinə bərabərdirsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Girişlər bərabər deyillərsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Birinci giriş ikincidən kiçikdirsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Birinci giriş ikincidən kiçik və ya bərarbərdirsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Birinci giriş ikincidən böyükdürsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Birinci giriş ikincidən böyük və ya bərarbərdirsə \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Hər iki giriş \"doğru\"-dursa \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "və";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Girişlərdən heç olmasa biri \"doğru\"-dursa \"doğru\" cavabını qaytarır.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "və ya";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "%1 deyil";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Giriş \"yalan\"-dursa \"doğru\" cavabını qaytarır. Giriş \"doğru\"-dursa \"səhf\" cavabını qaytarır.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "doğru";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "səhf";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "\"doğru\" və ya \"səhf\" cavanını qaytarır.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "boş";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Boş cavab qaytarır.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "əgər doğrudursa";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "əgər səhvdirsə";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "'Yoxla' əmrindəki şərtə nəzər yetirin. Əgər şərt \"doğru\"-dursa \"əgər doğru\", əks halda isə \"əgər yalan\" cavabını qaytarır.";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://az.wikipedia.org/wiki/Ədəd";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Ədəd.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";
BlocklyMsg["MATH_TRIG_COS"] = "cos";
BlocklyMsg["MATH_TRIG_TAN"] = "tg";
BlocklyMsg["MATH_TRIG_ASIN"] = "arcsin";
BlocklyMsg["MATH_TRIG_ACOS"] = "arccos";
BlocklyMsg["MATH_TRIG_ATAN"] = "arctan";
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://az.wikipedia.org/wiki/Hesab";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "İki ədədin cəmini qaytarır.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "İki ədədin fərqini qaytarır.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "İki ədədin hasilini verir.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "İki ədədin nisbətini qaytarır.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Birinci ədədin ikinci ədəd dərəcəsindən qüvvətini qaytarır.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://az.wikipedia.org/wiki/Kvadrat_kökləri";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "kvadrat kök";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Ədədin kvadrat kökünü qaytarır.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "modul";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Ədədin modulunu qaytarır.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Ədədin əksini qaytarır.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Ədədin natural loqarifmini tapır.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Ədədin 10-cu dərəcədən loqarifmini tapır.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "e sabitinin verilmiş ədədə qüvvətini qaytarır.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "10-un verilmiş ədədə qüvvətini qaytarır.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://az.wikipedia.org/wiki/Triqonometrik_funksiyalar";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Dərəcənin sinusunu qaytar (radianın yox).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Dərəcənin kosinusunu qaytarır (radianın yox).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Dərəcənin tangensini qaytar (radianın yox).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Ədədin arcsinusunu qaytarır.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Ədədin arccosinusunu qaytarır.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Ədədin arctanqensini qaytarır.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://az.wikipedia.org/wiki/Riyazi_sabitlər";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Ümumi sabitlərdən birini qaytarır π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), və ya ∞ (sonsuzluq).";
BlocklyMsg["MATH_IS_EVEN"] = "cütdür";
BlocklyMsg["MATH_IS_ODD"] = "təkdir";
BlocklyMsg["MATH_IS_PRIME"] = "sadədir";
BlocklyMsg["MATH_IS_WHOLE"] = "tamdır";
BlocklyMsg["MATH_IS_POSITIVE"] = "müsbətdir";
BlocklyMsg["MATH_IS_NEGATIVE"] = "mənfidir";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "bölünür";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Bir ədədin cüt, tək, sadə, tam, müsbət, mənfi olmasını və ya müəyyən bir ədədə bölünməsini yoxlayır. \"Doğru\" və ya \"yalan\" qiymətini qaytarır.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "dəyiş: %1 buna: %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "'%1' dəyişəninin üzərinə bir ədəd artır.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Ədədi aşağı və ya yuxari yuvarlaqşdır.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "yuvarlaqlaşdır";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "yuxarı yuvarlaqlaşdır";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "aşağı yuvarlaqlaşdır";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "Siyahının cəmi";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Siyahıdakı bütün ədədlərin cəmini qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "siyahının minimumu";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Siyahıdaki ən kiçik ədədi qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "siyahının maksimumu";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Siyahıdaki ən böyük elementi qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "siyahının ədədi ortası";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Siyahıdaki ədədlərin ədədi ortasını qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "siyahının medianı";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Siyahının median elementini qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "Siyahı modları( Ən çox rastlaşılan elementləri)";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Siyahıdaki ən çox rastlanan element(lər)dən ibarət siyahı qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Siyahının standart deviasiyası";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Siyahının standart deviasiyasını qaytarır.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "siyahıdan təsadüfi seçilmiş bir element";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Siyahıdan təsadüfi bir element qaytarır.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "%1 ÷ %2 bölməsinin qalığı";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "İki ədədin nisbətindən alınan qalığı qaytarır.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "%1 üçün ən aşağı %2, ən yuxarı %3 olmağı tələb et";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Bir ədədin verilmiş iki ədəd arasında olmasını tələb edir (sərhədlər də daxil olmaqla).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "%1 ilə %2 arasından təsadüfi tam ədəd";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Verilmiş iki ədəd arasından (ədədrlər də daxil olmaqla) təsadüfi bir tam ədəd qaytarır.";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "təsadüfi kəsr";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "0.0 (daxil olmaqla) və 1.0 (daxil olmamaqla) ədədlərinin arasından təsadüfi bir kəsr ədəd qaytarır.";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "(X,Y) nöqtələrinin -180 - 180 dərəcədə arktangensini hesabla.";
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Mətndəki hərf, söz və ya sətir.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "Verilmişlərlə mətn yarat";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "İxtiyari sayda elementlərinin birləşməsi ilə mətn parçası yarat.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "birləşdir";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Bu mətn blokunu yenidən konfigurasiya etmək üçün bölmələri əlavə edin, silin və ya yerlərini dəyişin.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Mətnə bir element əlavə et.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "bu mətnin sonuna: %1 bu mətni əlavə et: %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "'%1' dəyişəninin sonuna nəsə əlavə et.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "%1 - ın uzunluğu";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Verilmiş mətndəki hərflərin(sözlər arası boşluqlar sayılmaqla) sayını qaytarır.";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 boşdur";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Verilmiş mətn boşdursa, doğru qiymətini qaytarır.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Birinci mətnin ikinci mətndə ilk/son rastlaşma indeksini qaytarır. Əgər rastlaşma baş verməzsə, %1 qaytarır.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "mətndə %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "Bu mətn ilə ilk rastlaşmanı tap:";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "Bu mətn ilə son rastlaşmanı tap:";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "mətndə %1 %2";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "bu nömrəli hərfi götür";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "axırdan bu nömrəli hərfi götür";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "birinci hərfi götür";
BlocklyMsg["TEXT_CHARAT_LAST"] = "axırıncı hərfi götür";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "təsadüfi hərf götür";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Göstərilən mövqedəki hərfi qaytarır.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Mətnin təyin olunmuş hissəsini qaytarır.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "mətndə";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "Mətnin surətini bu nömrəli hərfdən";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "Mətnin surətini sondan bu nömrəli # hərfdən";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "Mətnin surətini ilk hərfdən";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "bu nömrəli hərfə qədər";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "axırdan bu nömrəli hərfə qədər";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "son hərfə qədər";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Mətndə hərflərin böyük-kiçikliyini dəyiş.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "BÖYÜK HƏRFLƏRLƏ";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "kiçik hərflərlə";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Baş Hərflərlə";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Mətnin hər iki və ya yalnız bir tərəfdən olan boşluqları pozulmuş surətini qaytarın.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "boşluqları hər iki tərəfdən pozun";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "boşluqlari yalnız sol tərəfdən pozun";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "boşluqları yalnız sağ tərəfdən pozun";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "%1 - i çap elə";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Təyin olunmuş mətn, ədəd və ya hər hansı bir başqa elementi çap elə.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "İstifadəçiyə mətn daxil etməsi üçün sorğunu/tələbi ismarıc ilə göndərin";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "İstifadəçiyə ədəd daxil etməsi üçün sorğunu/tələbi ismarıc kimi göndərin";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "İstifadəçiyə ədəd daxil etməsi üçün sorğu/tələb göndərin.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "İstifadəçiyə mətn daxil etməsi üçün sorğu/tələb göndərin.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "%2 içindən %1 sayını hesabla";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Hesablayaq, mətnin bu hissəsi başqa mətndə neçə dəfə  rast gəlinir.";
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "%3 -də %1 əvəz et %2";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Bütün uyğunluqlu bəzi mətnlərin digər bəzi mətnlərə dəyişdirilməsi.";
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "əksinə dəyiş %1";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Mətndəki simvolların ardıcıllığını əksinə dəyiş.";
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "boş siyahı düzəlt";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Heç bir verilən qeyd olunmamış, uzunluğu 0 olan bir siyahı verir";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "İstənilən ölçülü siyahı yaradın.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "bunlardan siyahı düzəlt";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "siyahı";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Bu siyahı blokunu yenidən konfigurasiya etmək üçün bölmələri əlavə edin, silin və ya yerlərini dəyişin.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Siyahıya element əlavə edin.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Təyin olunmuş elementin/qiymətin təyin olunmuş sayda təkrarlandığı siyahını yaradır.";
BlocklyMsg["LISTS_REPEAT_TITLE"] = "%1 elementinin %2 dəfə təkrarlandığı siyahı düzəlt";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "%1 siyahısının uzunluğu";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Siyahının uzunluğunu verir.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 boşdur";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Siyahı boşdursa \"doğru\" cavabını qaytarır.";
BlocklyMsg["LISTS_INLIST"] = "siyahıda";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "Element ilə ilk rastlaşma indeksini müəyyən edin";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "Element ilə son rastlaşma indeksini müəyyən edin";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Elementin siyahıda ilk/son rastlaşma indeksini qaytarır. Əgər siyahıda mətn tapılmadısa, %1 qaytarılır.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "götür";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "götür və sil";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "yığışdır";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "axırdan # nömrəli";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "birinci";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "axırıncı";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "təsadüfi";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ilk elementdir.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 son elementdir.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Siyahıdan təyin olunmuş indeksli elementi qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Siyahının ilk elementini qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Siyahının son elementini qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Siyahıdan hər hansı təsadüfi elementi qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Siyahıdan təyin olunmuş indeksli elementi silir və qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Siyahıdan ilk elementi silir və qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Siyahıdan son elementi silir və qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Siyahıdan təsadufi elementi silir və qaytarır.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Siyahıdan təyin olunmuş indeksli elementi silir.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Siyahıdan ilk elementi silir.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Siyahıdan son elementi silir.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Siyahıdan təsadüfi bir elementi silir.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "təyin et";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "daxil et";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "Kimi";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Siyahının göstərilən yerdəki elementini təyin edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Siyahıda birinci elementi təyin edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Siyahının sonuncu elementini təyin edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Siyahının təsadüfi seçilmiş bir elementini təyin edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Elementi siyahıda göstərilən yerə daxil edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Elementi siyahının əvvəlinə daxil edir.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Elementi siyahının sonuna artırır.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Elementi siyahıda təsadüfi seçilmiş bir yerə atır.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "# - dən alt-siyahını alın";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "# sonuncudan alt-siyahını alın";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "Birincidən alt-siyahını alın";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "# nömrəliyə";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "sondan # nömrəliyə";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "Sonuncuya";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Siyahının təyin olunmuş hissəsinin surətini yaradın.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "%1 %2 %3 sortlaşdır";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Siyahının nüsxəsini sortlaşdır.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "artan üzrə";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "azalan üzrə";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "say üzrə";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "əlifba üzrə";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "əlifba üzrə, registrı nəzərə almadan";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "mətndən siyahı düzəlt";
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "siyahıdan mətn düzəlt";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "ayırıcıyla";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Mətni ayırıcılara görə bölərək mətnlər siyahısı yaradır.";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Mətnlər siyahısından ayırıcılarla birgə bir mətn yaradır.";
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "əksinə dəyiş %1";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Siyahının nüsxəsini əksinə dəyiş.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Bu dəyişənin qiymətini qaytarır.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "'%1 - i təyin et' - i yarat";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "%1 - i bu qiymət ilə təyin et: %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Bu dəyişəni daxil edilmiş qiymətə bərabər edir.";
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "'%1 - i götür' - ü yarat";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "icra et:";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "hansısa əməliyyat";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "ilə:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "ilə:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Nəticəsi olmayan funksiya yaradır.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Bu funksiyanı təsvir et";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "qaytar";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Nəticəsi olan funksiya yaradır.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "operatorlara icazə";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Xəbərdarlıq: Bu funksiyanın təkrar olunmuş parametrləri var.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Yaradılmış '%1' funksiyasını çalışdır.";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Yaradılmış '%1' funksiyasını çalışdır və nəticəni istifadə et.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "girişlər";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Bu funksiyanın giriş parametrləri üçün əlavə et, sil, və ya yenilə.";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "Giriş adı:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Funksiyaya giriş parametrləri əlavə et.";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Funksiyanın təyinatını vurğula";
BlocklyMsg["PROCEDURES_CREATE_DO"] = "'%1' yarat";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Əgər bir dəyər \"doğru\"-dursa onda ikinci dəyəri qaytar.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Xəbərdarlıq: Bu blok ancaq bir funksiyanın təyinatı daxilində işlədilə bilər.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Buraya nə isə yaz...";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "TAMAM";
BlocklyMsg["DIALOG_CANCEL"] = "Ləğv et";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "icra et";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "icra et";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "icra et";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "icra et";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "əgər";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "əks halda əgər";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "əks halda";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "element";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "element";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "element";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "element";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "siyahıda";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "siyahıda";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "siyahıda";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "siyahıda";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "icra et:";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "hansısa əməliyyat";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Bu funksiyanı təsvir et";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Blockly Oyunu";
BlocklyGamesMsg["Games.puzzle"] = "Tapmaca";
BlocklyGamesMsg["Games.maze"] = "Labirint";
BlocklyGamesMsg["Games.bird"] = "Quş";
BlocklyGamesMsg["Games.turtle"] = "Tısbağa";
BlocklyGamesMsg["Games.movie"] = "Hərəkət";
BlocklyGamesMsg["Games.music"] = "Musiqi";
BlocklyGamesMsg["Games.pondTutor"] = "Tutor Gölməçəsi";
BlocklyGamesMsg["Games.pond"] = "Gölməçə";
BlocklyGamesMsg["Games.linesOfCode1"] = "Sən bu mərhələni  bir sətirlik JavaScript-də həll etdin:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Sən bu mərhələni  %1 sətirlik JavaScript-də həll etdin:";
BlocklyGamesMsg["Games.nextLevel"] = "Sən  %1 mərhələyə hazırsan?";
BlocklyGamesMsg["Games.finalLevel"] = "Sən  növbəti sınağa hazırsan?";
BlocklyGamesMsg["Games.submitTitle"] = "Başlıq:";
BlocklyGamesMsg["Games.linkTooltip"] = "Bloklara istinadı göstərmək və yaddaşa saxlamaq.";
BlocklyGamesMsg["Games.runTooltip"] = "Sənin yaratdığın proqramı icrasına başla.";
BlocklyGamesMsg["Games.runProgram"] = "Proqramı İcra Et";
BlocklyGamesMsg["Games.resetTooltip"] = "Proqramı dayandır və mərhələni sıfırla.";
BlocklyGamesMsg["Games.resetProgram"] = "Sıfırla";
BlocklyGamesMsg["Games.help"] = "Kömək";
BlocklyGamesMsg["Games.catLogic"] = "Məntiq";
BlocklyGamesMsg["Games.catLoops"] = "Dövrə";
BlocklyGamesMsg["Games.catMath"] = "Riyazi";
BlocklyGamesMsg["Games.catText"] = "Mətn";
BlocklyGamesMsg["Games.catLists"] = "Siyahılar";
BlocklyGamesMsg["Games.catColour"] = "Rəng";
BlocklyGamesMsg["Games.catVariables"] = "Dəyişənlər";
BlocklyGamesMsg["Games.catProcedures"] = "Funksiyalar";
BlocklyGamesMsg["Games.httpRequestError"] = "Sorğu ilə əlaqəli problem var.";
BlocklyGamesMsg["Games.linkAlert"] = "Şəxsi bloklarını bu linklə bölüş:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Üzr istəyirik, '%1' heç bir qeyd olunmuş proqramla uyğun gəlmir.";
BlocklyGamesMsg["Games.xmlError"] = "Yadda saxladığınız sənəd yüklənə bilmədi. Bəlkə Blockly'nin fərqli bir versiyası ilə yaradıldı?";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";  // untranslated
BlocklyGamesMsg["Games.listVariable"] = "siyahı";
BlocklyGamesMsg["Games.textVariable"] = "mətn";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";  // untranslated
BlocklyGamesMsg["Games.blocks"] = "Bloklar";
BlocklyGamesMsg["Games.congratulations"] = "Təbriklər!";
BlocklyGamesMsg["Games.helpAbort"] = "This level is extremely difficult. Would you like to skip it and go onto the next game? You can always come back later.";  // untranslated
BlocklyGamesMsg["Index.clear"] = "Bütün həllər silinsin?";
BlocklyGamesMsg["Index.subTitle"] = "Games for tomorrow's programmers.";  // untranslated
BlocklyGamesMsg["Index.moreInfo"] = "Müəllimlər üçün məlumat...";
BlocklyGamesMsg["Index.startOver"] = "Yenidən başlamaq istəyirsini?";
BlocklyGamesMsg["Index.clearData"] = "Məlumatları təmizlə";
BlocklyGamesMsg["Puzzle.animal1"] = "Ördək";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Lələklər";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Dimdik";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://en.wikipedia.org/wiki/Duck";
BlocklyGamesMsg["Puzzle.animal2"] = "Pişik";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Bığcıq";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Tük";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://en.wikipedia.org/wiki/Cat";
BlocklyGamesMsg["Puzzle.animal3"] = "Arı";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Bal";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "İynə";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://en.wikipedia.org/wiki/Bee";
BlocklyGamesMsg["Puzzle.animal4"] = "İlbiz";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Qabıq";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Sümüksü";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://en.wikipedia.org/wiki/Snail";
BlocklyGamesMsg["Puzzle.picture"] = "şəkil:";
BlocklyGamesMsg["Puzzle.legs"] = "ayaqlar:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "seç...";
BlocklyGamesMsg["Puzzle.traits"] = "xüsusiyyətlər:";
BlocklyGamesMsg["Puzzle.error0"] = "Mükəmməl!\n%1 blokun hamısı doğrudur.";
BlocklyGamesMsg["Puzzle.error1"] = "Demək olar ki! Bir blok səhvdir.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 blokun yerləşməsi  səhfdir.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Vurğulanan blok səhvdir.\nÇalışmağa davam.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Cavabları Yoxla";
BlocklyGamesMsg["Puzzle.helpText"] = "Hər bir heyvan (yaşıl blok) üçün, ona aid rəsmini seçərək, əyaqlarının sayı və fərqli xüsusiyyətlərini qed et.";
BlocklyGamesMsg["Maze.moveForward"] = "irəliyə keçid";
BlocklyGamesMsg["Maze.turnLeft"] = "sola dönün";
BlocklyGamesMsg["Maze.turnRight"] = "sağa dönün";
BlocklyGamesMsg["Maze.doCode"] = "icra et";
BlocklyGamesMsg["Maze.elseCode"] = "əks halda";
BlocklyGamesMsg["Maze.helpIfElse"] = "If-else blocks will do one thing or the other.";  // untranslated
BlocklyGamesMsg["Maze.pathAhead"] = "əgər yol qarşıdadısa";
BlocklyGamesMsg["Maze.pathLeft"] = "əgər yol soldadısa";
BlocklyGamesMsg["Maze.pathRight"] = "əgər yol sağdadısa";
BlocklyGamesMsg["Maze.repeatUntil"] = "təkrarla, ta ki";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Oyunçunu bir xana irəli aparır.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Yolçunu 90 dərəcə sola və ya sağa döndər.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Əgər göstərilən istiqamətə yol varsa, hər-hansı bir iş gör.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Əgər göstərilən istiqamətə yol varsa, birinci blokda göstərilən hərəkətləri icra et. Əks halda, ikinci blokda göstərilən hərəkətlərin icrasına başla.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Repeat the enclosed actions until finish point is reached.";  // untranslated
BlocklyGamesMsg["Maze.capacity0"] = "Sizin istifadəsiz %0 blokunuz qalmayıq.";
BlocklyGamesMsg["Maze.capacity1"] = "Sizin istifadəsiz %1 blokunuz qalıb.";
BlocklyGamesMsg["Maze.capacity2"] = "Sizin istifadəsiz %2 blokunuz qalıb.";
BlocklyGamesMsg["Maze.runTooltip"] = "Yolçu, blokların bütün göstərişlərini icra edəcək.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Yolçunu labirintin başlanğıcına qaytar.";
BlocklyGamesMsg["Maze.helpStack"] = "Stack a couple of 'move forward' blocks together to help me reach the goal.";  // untranslated
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "On this level, you need to stack together all of the blocks in the white workspace.";  // untranslated
BlocklyGamesMsg["Maze.helpRun"] = "Nə baş verəcəyini görmək üçün proqramın içrasına başla.";
BlocklyGamesMsg["Maze.helpReset"] = "Your program didn't solve the maze. Press 'Reset' and try again.";  // untranslated
BlocklyGamesMsg["Maze.helpRepeat"] = "Reach the end of this path using only two blocks. Use 'repeat' to run a block more than once.";  // untranslated
BlocklyGamesMsg["Maze.helpCapacity"] = "You have used up all the blocks for this level. To create a new block, you first need to delete an existing block.";  // untranslated
BlocklyGamesMsg["Maze.helpRepeatMany"] = "You can fit more than one block inside a 'repeat' block.";  // untranslated
BlocklyGamesMsg["Maze.helpSkins"] = "Choose your favourite player from this menu.";  // untranslated
BlocklyGamesMsg["Maze.helpIf"] = "An 'if' block will do something only if the condition is true. Try turning left if there is a path to the left.";  // untranslated
BlocklyGamesMsg["Maze.helpMenu"] = "Click on %1 in the 'if' block to change its condition.";  // untranslated
BlocklyGamesMsg["Maze.helpWallFollow"] = "Can you solve this complicated maze? Try following the left-hand wall. Advanced programmers only!";  // untranslated
BlocklyGamesMsg["Bird.noWorm"] = "does not have worm";  // untranslated
BlocklyGamesMsg["Bird.heading"] = "istiqamət";
BlocklyGamesMsg["Bird.noWormTooltip"] = "The condition when the bird has not gotten the worm.";  // untranslated
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";  // untranslated
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";  // untranslated
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Moves the turtle forward or backward by the specified amount.";  // untranslated
BlocklyGamesMsg["Turtle.moveForward"] = "move forward by";  // untranslated
BlocklyGamesMsg["Turtle.moveBackward"] = "move backward by";  // untranslated
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Turns the turtle left or right by the specified number of degrees.";  // untranslated
BlocklyGamesMsg["Turtle.turnRight"] = "turn right by";  // untranslated
BlocklyGamesMsg["Turtle.turnLeft"] = "turn left by";  // untranslated
BlocklyGamesMsg["Turtle.widthTooltip"] = "Changes the width of the pen.";  // untranslated
BlocklyGamesMsg["Turtle.setWidth"] = "set width to";  // untranslated
BlocklyGamesMsg["Turtle.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Turtle.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Turtle.penTooltip"] = "Lifts or lowers the pen, to stop or start drawing.";  // untranslated
BlocklyGamesMsg["Turtle.penUp"] = "pen up";  // untranslated
BlocklyGamesMsg["Turtle.penDown"] = "pen down";  // untranslated
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Makes the turtle (circle and arrow) visible or invisible.";  // untranslated
BlocklyGamesMsg["Turtle.hideTurtle"] = "tısbağanı gizlət";
BlocklyGamesMsg["Turtle.showTurtle"] = "tısbağanı göstər";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "Draws text in the turtle's direction at its location.";  // untranslated
BlocklyGamesMsg["Turtle.print"] = "çap";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://az.wikipedia.org/wiki/Şrift";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Sets the font used by the print block.";  // untranslated
BlocklyGamesMsg["Turtle.font"] = "şrift";
BlocklyGamesMsg["Turtle.fontSize"] = "şriftin ölçüsü";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "qalın";
BlocklyGamesMsg["Turtle.fontItalic"] = "kursiv";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "Qalereyaya bax";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.submitMsg"] = "Qalereyaya göndər";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "Create a program that draws a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "Sarı ulduz çək.";
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "başlanğıc x";
BlocklyGamesMsg["Movie.y1"] = "başlanğıc y";
BlocklyGamesMsg["Movie.x2"] = "son x";
BlocklyGamesMsg["Movie.y2"] = "son y";
BlocklyGamesMsg["Movie.radius"] = "radius";
BlocklyGamesMsg["Movie.width"] = "uzunluq";
BlocklyGamesMsg["Movie.height"] = "en";
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "dairə";
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "düzbucaqlı";
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "ciz";
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Movie.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Open the gallery of movies.";  // untranslated
BlocklyGamesMsg["Movie.galleryMsg"] = "Qalereyaya bax";
BlocklyGamesMsg["Movie.submitTooltip"] = "Submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "play %1 note %2";  // untranslated
BlocklyGamesMsg["Music.restTooltip"] = "Waits for the specified duration.";  // untranslated
BlocklyGamesMsg["Music.restWholeTooltip"] = "Waits for one whole note.";  // untranslated
BlocklyGamesMsg["Music.rest"] = "rest %1";  // untranslated
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "set instrument to %1";  // untranslated
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "when %1 clicked";  // untranslated
BlocklyGamesMsg["Music.pitchTooltip"] = "One note (C4 is 7).";  // untranslated
BlocklyGamesMsg["Music.firstPart"] = "first part";  // untranslated
BlocklyGamesMsg["Music.piano"] = "pianino";
BlocklyGamesMsg["Music.trumpet"] = "trumpet";  // untranslated
BlocklyGamesMsg["Music.banjo"] = "banjo";  // untranslated
BlocklyGamesMsg["Music.violin"] = "skripka";
BlocklyGamesMsg["Music.guitar"] = "gitara";
BlocklyGamesMsg["Music.flute"] = "fleyta";
BlocklyGamesMsg["Music.drum"] = "baraban";
BlocklyGamesMsg["Music.choir"] = "xor";
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Open the gallery of music.";  // untranslated
BlocklyGamesMsg["Music.galleryMsg"] = "Qalereyaya bax";
BlocklyGamesMsg["Music.submitTooltip"] = "Submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.submitMsg"] = "Qalereyaya göndər";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Compose the first four notes of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "Dil üzrə sənədləşməni göstərir.";
BlocklyGamesMsg["Pond.documentation"] = "Sənədləşdirmə";
BlocklyGamesMsg["Pond.playerName"] = "Oyunçu";
BlocklyGamesMsg["Pond.targetName"] = "Hədəf";
BlocklyGamesMsg["Pond.pendulumName"] = "Kəfkir";
BlocklyGamesMsg["Pond.scaredName"] = "Qorxmuş";
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Qalereya";
