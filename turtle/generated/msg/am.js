// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "item";  // untranslated
BlocklyMsg["UNNAMED_KEY"] = "ያልተሰየመ";
BlocklyMsg["TODAY"] = "ዛሬ";
BlocklyMsg["DUPLICATE_BLOCK"] = "ቅጂ";
BlocklyMsg["ADD_COMMENT"] = "ማስታወሻ ያክሉ";
BlocklyMsg["REMOVE_COMMENT"] = "ማስታወሻ ያጥፉ";
BlocklyMsg["DUPLICATE_COMMENT"] = "ማስታወሻውን ይቅዱ";
BlocklyMsg["EXTERNAL_INPUTS"] = "የውጪ ግብዓቶች";
BlocklyMsg["INLINE_INPUTS"] = "የውስጥ ግብዓቶች";
BlocklyMsg["DELETE_BLOCK"] = "ብሎኩን ይሰርዙ";
BlocklyMsg["DELETE_X_BLOCKS"] = "%1 ብሎኮች ይሰርዙ";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "%1 ያህል ብሎኮች ይሰረዙ？";
BlocklyMsg["CLEAN_UP"] = "ብሎኮቹን ይሰድሩ";
BlocklyMsg["COLLAPSE_BLOCK"] = "የብሎኩን መረጃ ያሳጥሩ";
BlocklyMsg["COLLAPSE_ALL"] = "የብሎኮቹን መረጃዎች ያሳጥሩ";
BlocklyMsg["EXPAND_BLOCK"] = "የብሎኩን መረጃ ዳግም ያስረዝሙ";
BlocklyMsg["EXPAND_ALL"] = "የብሎኮቹን መረጃዎች ዳግም ያስረዝሙ";
BlocklyMsg["DISABLE_BLOCK"] = "ብሎኩን ለጊዜው ያጥፉ";
BlocklyMsg["ENABLE_BLOCK"] = "ብሎኩን ደግመው ያስጀምሩ";
BlocklyMsg["HELP"] = "እገዛ";
BlocklyMsg["UNDO"] = "ይቀልብሱ";
BlocklyMsg["REDO"] = "ከእንደገና";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Change value:";  // untranslated
BlocklyMsg["RENAME_VARIABLE"] = "Rename variable...";  // untranslated
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Rename all '%1' variables to:";  // untranslated
BlocklyMsg["NEW_VARIABLE"] = "Create variable...";  // untranslated
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "New variable name:";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";  // untranslated
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Choose a colour from the palette.";  // untranslated
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "random colour";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Choose a colour at random.";  // untranslated
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "colour with";  // untranslated
BlocklyMsg["COLOUR_RGB_RED"] = "red";  // untranslated
BlocklyMsg["COLOUR_RGB_GREEN"] = "green";  // untranslated
BlocklyMsg["COLOUR_RGB_BLUE"] = "blue";  // untranslated
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "blend";  // untranslated
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "colour 1";  // untranslated
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "colour 2";  // untranslated
BlocklyMsg["COLOUR_BLEND_RATIO"] = "ratio";  // untranslated
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repeat %1 times";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "do";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Do some statements several times.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repeat while";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repeat until";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "break out of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continue with next iteration of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "if";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "else if";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "else";  // untranslated
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_AND"] = "and";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "or";  // untranslated
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "not %1";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "true";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "false";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "null";  // untranslated
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Returns null.";  // untranslated
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";  // untranslated
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "if true";  // untranslated
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "if false";  // untranslated
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "A number.";  // untranslated
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Return the sum of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Return the difference of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Return the product of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Return the quotient of the two numbers.";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "square root";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Return the square root of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absolute";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Return the absolute value of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Return the negation of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Return the natural logarithm of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Return the base 10 logarithm of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Return e to the power of a number.";  // untranslated
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian).";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Return the arcsine of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number.";  // untranslated
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Return the arctangent of a number.";  // untranslated
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
BlocklyMsg["MATH_IS_EVEN"] = "is even";  // untranslated
BlocklyMsg["MATH_IS_ODD"] = "is odd";  // untranslated
BlocklyMsg["MATH_IS_PRIME"] = "is prime";  // untranslated
BlocklyMsg["MATH_IS_WHOLE"] = "is whole";  // untranslated
BlocklyMsg["MATH_IS_POSITIVE"] = "is positive";  // untranslated
BlocklyMsg["MATH_IS_NEGATIVE"] = "is negative";  // untranslated
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "is divisible by";  // untranslated
BlocklyMsg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "change %1 by %2";  // untranslated
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Round a number up or down.";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "round";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "round up";  // untranslated
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "round down";  // untranslated
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "sum of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "min of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Return the smallest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "max of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Return the largest number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "average of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
BlocklyMsg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "print %1";  // untranslated
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
BlocklyMsg["LISTS_INLIST"] = "in list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "get";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "first";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "last";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "random";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "insert at";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "as";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "return";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "እሺ";
BlocklyMsg["DIALOG_CANCEL"] = "ይቅር";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "do";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "do";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "if";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "else if";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "else";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "item";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "item";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "in list";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "in list";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "to";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "do something";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "የብሎክሊ ጨዋታዎች";
BlocklyGamesMsg["Games.puzzle"] = "እንቆቅልሽ";
BlocklyGamesMsg["Games.maze"] = "መንገድ";
BlocklyGamesMsg["Games.bird"] = "ወፍ";
BlocklyGamesMsg["Games.turtle"] = "ኤሊ";
BlocklyGamesMsg["Games.movie"] = "ፊልም";
BlocklyGamesMsg["Games.music"] = "ሙዚቃ";
BlocklyGamesMsg["Games.pondTutor"] = "ኩሬ መምህር";
BlocklyGamesMsg["Games.pond"] = "ኩሬ";
BlocklyGamesMsg["Games.linesOfCode1"] = "ይህን ደረጃ በ1 የጃቫ ስክሪፕት መስመር ፈትተዋል";
BlocklyGamesMsg["Games.linesOfCode2"] = "ይህን ደረጃ በ%1 የጃቫ ስክሪፕት መስመሮች ፈትተዋል";
BlocklyGamesMsg["Games.nextLevel"] = "ለደረጃ %1 ዝግጁ ነዎት?";
BlocklyGamesMsg["Games.finalLevel"] = "ለሚቀጥለው ፈተና ዝግጁ ነዎት?";
BlocklyGamesMsg["Games.submitTitle"] = "አርዕስት";
BlocklyGamesMsg["Games.linkTooltip"] = "ብሎኮች ያስቀምጡ እና መስፈንጠሪያ ያግኙ";
BlocklyGamesMsg["Games.runTooltip"] = "የጻፉትን ፕሮግራም ያሂዱ";
BlocklyGamesMsg["Games.runProgram"] = "ፕሮግራም ያሂዱ";
BlocklyGamesMsg["Games.resetTooltip"] = "ፕሮግራሙን ያቁሙና ደረጃውን እንደገና ያስጀምሩ";
BlocklyGamesMsg["Games.resetProgram"] = "ዳግም ይጀመር";
BlocklyGamesMsg["Games.help"] = "እርዳታ";
BlocklyGamesMsg["Games.catLogic"] = "የሁኔታዊ መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catLoops"] = "የዙሮች መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catMath"] = "የሂሳብ መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catText"] = "የጽሕፈት መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catLists"] = "የዝርዝር መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catColour"] = "የቀለም መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catVariables"] = "የተላውጠ ቃላት መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.catProcedures"] = "የመላዎች መገንቢያ ብሎኮች";
BlocklyGamesMsg["Games.httpRequestError"] = "ማግኘት አልተቻለም";
BlocklyGamesMsg["Games.linkAlert"] = "ብሎኮችዎን በዚህ መስፈንጠርያ አጋሩ:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "ይቅርታ ፣ '%1' ከማንኛውም የተቀመጠ ፕሮግራም ጋር ስያሜው አይጣጣምም";
BlocklyGamesMsg["Games.xmlError"] = "የተቀመጠ ፋይልዎን መጫን አልተቻለም። ምናልባትም በልዩ የብሎኪ ስሪት ተፈጠሮ ይሆን?";
BlocklyGamesMsg["Games.submitted"] = "ለዚህ ፕሮግራም እናመሰግናለን! የሰለጠኑ ጦጣዎች ሰራተኞቻችን ከወደዱት በጥቂት ቀናት ጊዜ ውስጥ ያትሙታል";
BlocklyGamesMsg["Games.listVariable"] = "ዝርዝር";
BlocklyGamesMsg["Games.textVariable"] = "ጽሕፈት";
BlocklyGamesMsg["Games.breakLink"] = "አንድ ጊዜ ጃቫስክሪፕትን ማስተካከል ከጀመሩ ፣ ወደ ብሎኮች መመለስ አይችሉም ፡፡ ይሁን?";
BlocklyGamesMsg["Games.blocks"] = "ብሎኮች";
BlocklyGamesMsg["Games.congratulations"] = "እንኳን ደስ አለዎት!";
BlocklyGamesMsg["Games.helpAbort"] = "ይህ ደረጃ እጅግ በጣም ከባድ ነው፡፡ ዘለው ወደሚቀጥለው ጨዋታ መሄድ ይፈልጋሉ? በኋላ በማንኛውም ጊዜ ተመልሰው መምጣት ይችላሉ።";
BlocklyGamesMsg["Index.clear"] = "ሁሉንም መፍትሔዎችዎን ይሰረዙ?";
BlocklyGamesMsg["Index.subTitle"] = "ለነገዎቹ ቀማሪዎች የተቀመሙ ጨዋታዎች";
BlocklyGamesMsg["Index.moreInfo"] = "ለአስተማሪዎች መረጃ ...";
BlocklyGamesMsg["Index.startOver"] = "እንደገና መጀመር ይፈልጋሉ?";
BlocklyGamesMsg["Index.clearData"] = "መረጃ ያፅዱ";
BlocklyGamesMsg["Puzzle.animal1"] = "ዳክዬ";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "ላባዎች ያሉት";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "ማንቁርት ያለው";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://en.wikipedia.org/wiki/Duck";
BlocklyGamesMsg["Puzzle.animal2"] = "ድመት";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "ጢም ያለው";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "ፀጉር ያላት";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://en.wikipedia.org/wiki/Cat";
BlocklyGamesMsg["Puzzle.animal3"] = "ንብ";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "ማር የምትሰጥ";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "መናደፊያ ያላት";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://en.wikipedia.org/wiki/Bee";
BlocklyGamesMsg["Puzzle.animal4"] = "ቀንድ አውጣ";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "ሼል ያለው";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "የሰውነት ፈሳሽ ያለው";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://en.wikipedia.org/wiki/Snail";
BlocklyGamesMsg["Puzzle.picture"] = "ስዕል:";
BlocklyGamesMsg["Puzzle.legs"] = "እግሮች:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "ይምረጡ...";
BlocklyGamesMsg["Puzzle.traits"] = "ባህሪያት:";
BlocklyGamesMsg["Puzzle.error0"] = "ድንቅ ነው!\nሁሉም %1 ብሎኮች ትክክል ናቸው።";
BlocklyGamesMsg["Puzzle.error1"] = "ደርሰዋል! አንድ ብሎክ ብቻ የተሳሳተ ነው ፡፡";
BlocklyGamesMsg["Puzzle.error2"] = "%1 ብሎኮች ትክክል አይደሉም ፡፡";
BlocklyGamesMsg["Puzzle.tryAgain"] = "የደመቀው ብሎክ ትክክል አይደለም ፡፡\nመሞከርዎን አያቋርጡ！";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "መልሶችን ይመልከቱ";
BlocklyGamesMsg["Puzzle.helpText"] = "ለእያንዳንዱ እንስሳ (አረንጓዴ) ስዕሉን ያያይዙ ፣ የእግሮቹን ብዛት ይምረጡ እና የባህሪያቱን አይነት መርጠው በመደርደር ያብጁት";
BlocklyGamesMsg["Maze.moveForward"] = "ወደፊት ሂድ";
BlocklyGamesMsg["Maze.turnLeft"] = "ታጠፍ ወደግራ";
BlocklyGamesMsg["Maze.turnRight"] = "ታጠፍ ወደቀኝ";
BlocklyGamesMsg["Maze.doCode"] = "አድርግ";
BlocklyGamesMsg["Maze.elseCode"] = "ካልሆነ";
BlocklyGamesMsg["Maze.helpIfElse"] = "የ ከሆነ-ካልሆነ ብሎኮች ተፈታኝ ብሎኩ ከሆነ የመጀመሪያውን ካልሆነ ደግሞ ሌላውን ለሚያሰናደር ይረዳሉ";
BlocklyGamesMsg["Maze.pathAhead"] = "መንገድ ካለ ወደፊት";
BlocklyGamesMsg["Maze.pathLeft"] = "መንገድ ካለ በስተግራ";
BlocklyGamesMsg["Maze.pathRight"] = "መንገድ ካለ በስተቀኝ";
BlocklyGamesMsg["Maze.repeatUntil"] = "እስከዚህ ድረስ ደጋግም";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "ይሄ ተጫዋቹን አንድ እርምጃ ወደ ፊት ይወስደዋል";
BlocklyGamesMsg["Maze.turnTooltip"] = "ይሄ ተጫዋቹን ወደ ግራ ወይንም ወደቀኝ በ 90 ዲግሪዋች ያሳጥፈዋል";
BlocklyGamesMsg["Maze.ifTooltip"] = "በተጠቀሰው አቅጣጫ መንገድ ካለ የሆነ እርምጃ ይውሰዱ";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "በተጠቀሰው አቅጣጫ አንድ መንገድ ካለ ፣ የመጀመሪያዎቹን ብሎክ ድርጊቶች ያከናውን። ያለበለዚያ ፣ የሁለተኛውን ብሎክ ድርጊቶች ያከናውን።";
BlocklyGamesMsg["Maze.whileTooltip"] = "የመጨረሻው ነጥብ ላይ እስከሚደርስ ድረስ ድርጊቶችን ይደጋግሙ ፡፡";
BlocklyGamesMsg["Maze.capacity0"] = "የቀሩትዎት ብሎኮች %0 ናቸው፡፡";
BlocklyGamesMsg["Maze.capacity1"] = "የቀሩትዎት ብሎኮች %1 ናቸው፡፡";
BlocklyGamesMsg["Maze.capacity2"] = "የቀሩትዎት ብሎኮች %2 ናቸው፡፡";
BlocklyGamesMsg["Maze.runTooltip"] = "ይህን ቁልፍ መጫን የተፃፈውን የኮምፒተር ፕሮግራም ያሂዳል።";
BlocklyGamesMsg["Maze.resetTooltip"] = "ይህን ቁልፍ በመጫን ተጫዋቹን ወደ ጀመረበት ቦታ ይመልሱ።";
BlocklyGamesMsg["Maze.helpStack"] = "\"ወደፊት\" ብሎኮችን በአንድ ላይ በመቀጣጠል ወደ መጨረሻው ግብ አድርሰኝ";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "በዚህ ደረጃ ፣ ሁሉንም ብሎኮች በአንድ ላይ በነጭ የሥራ ቦታ ላይ ቀጣጥሎ መደርደር ያስፈልግዎታል ፡፡";
BlocklyGamesMsg["Maze.helpRun"] = "ምን እንደሚከሰት ለማየት ፕሮግራምዎን ያሂዱ።";
BlocklyGamesMsg["Maze.helpReset"] = "የገነቡት ፕሮግራም ከግብ የሚደርስ አልሆነም፡፡ ‹ዳግም አስጀምር› ን ተጭነው እንደገና ይሞክሩ፡፡";
BlocklyGamesMsg["Maze.helpRepeat"] = "ሁለት ብሎኮችን ብቻ በመጠቀም የዚህን መንገድ መጨረሻ ይድረሱ ፡፡ ከአንድ ጊዜ በላይ ብሎክን ለማሄድ 'ድገም' ን ይጠቀሙ ፡፡";
BlocklyGamesMsg["Maze.helpCapacity"] = "ለዚህ ደረጃ ሁሉንም ብሎኮች ተጠቅመዋል ፡፡ አዲስ ብሎክ ለመፍጠር በመጀመሪያ አንድ ብሎክ መሰረዝ ያስፈልግዎታል ፡፡";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "ከአንድ በላይ ብሎኮችን በ'ድገም' ብሎክ ውስት ማገጣጠም ይችላሉ ፡፡";
BlocklyGamesMsg["Maze.helpSkins"] = "ከዚህ ምናሌ ውስጥ ተወዳጅ ተጫዋችዎን ይምረጡ።";
BlocklyGamesMsg["Maze.helpIf"] = "የ'ቢሆን' ብሎክ አንድ ነገር የሚያከናው ሁኔታው እውነት ከሆነ ብቻ ነው ፡፡ ወደ ግራ የሚወስደ መንገድ ካለ ወደ ግራ ለመሄድ ይሞክሩ ፡፡";
BlocklyGamesMsg["Maze.helpMenu"] = "ሁኔታውን ለመቀየር በ 'ቢሆን' ብሎኩ ላይ %1 ን ጠቅ ያድርጉ ፡፡";
BlocklyGamesMsg["Maze.helpWallFollow"] = "ይህንን የተወሳሰበ መንገድ አልፈው ግብ ላይ መድረስ ይችላሉ? የግራ ግድግዳውን ለመከተል ይሞክሩ። የላቀ ችሎታ ላላቸው ቀማሪዎች ብቻ!";
BlocklyGamesMsg["Bird.noWorm"] = "ወፏ ትል ከሌላት";
BlocklyGamesMsg["Bird.heading"] = "አቅጣጫ";
BlocklyGamesMsg["Bird.noWormTooltip"] = "ወፏ ትል ሳታገኝ ስትቀር ያለው ሁኔታ";
BlocklyGamesMsg["Bird.headingTooltip"] = "የተሰጠው አንግል አቅጣጫ ይጠቀሙ: 0 ወደ ቀኝ ነው፣ 90 ቀጥታ ነው ወዘተ";
BlocklyGamesMsg["Bird.positionTooltip"] = "x እና y የወፏን አቀማመጥ ያመለክታሉ፡፡ X = 0 ወፏ ከግራ ጠርዝ አጠገብ ስትሆን ሲሆን በቀኝ ጠርዝ አጠገብ ስትገኝ x = 100 ነው ፡፡ Y = 0 ወፏ ከስር ስትሆን ሲሆን ፣ y = 100 ወፏ ከአናት ላይ ስትደርስ ነው ፡፡";
BlocklyGamesMsg["Bird.helpHeading"] = "ወፏ ምግቧ የሆነውን ትል ይዛ ወደ ጎጆዋ ውስጥ እንድትገባ ለማድረግ አቅጣጫ ይለውጡ ፡፡";
BlocklyGamesMsg["Bird.helpHasWorm"] = "ትል ካለዎት በአንኛው አቅጣጫ ለመሄድ ይህንን ብሎክ ይጠቀሙ ፣ ትል ከሌልዎት ደግሞ የተለየ አቅጣጫ ይጠቀሙ፡፡";
BlocklyGamesMsg["Bird.helpX"] = "'x' እርስዎ ያሉበት የአግድም አቀማመጥ ነው። 'x' ቀጥሎ ካለው ቁጥር በታች ከሆነ ፣ በአንዱ ከበለጠ ደግሞ በሌላ አቅጣጫ ለመሄድ ይህንን ብሎክ ይጠቀሙ።";
BlocklyGamesMsg["Bird.helpElse"] = "የ 'If' ብሎኩን ለመቀየር አዶውን ጠቅ ያድርጉ።";
BlocklyGamesMsg["Bird.helpElseIf"] = "ይህ ደረጃ የ'else if' እና 'else' ብሎኮችን ይፈልጋል ፡፡";
BlocklyGamesMsg["Bird.helpAnd"] = "የ 'and' ብሎክ እውነት የሚሆነው ሁለቱም ግብአቶች እውነት ከሆኑ ብቻ።";
BlocklyGamesMsg["Bird.helpMutator"] = "አንድን የ'else' ብሎክ ወደ 'if' ብሎክ ይጎትቱ።";
BlocklyGamesMsg["Turtle.moveTooltip"] = "ኤሊውን ወደ ፊት ወይም ወደ ኋላ በተጠቀሰው መጠን ያንቀሳቅሰዋል።";
BlocklyGamesMsg["Turtle.moveForward"] = "በዚህ ያህል መጠን ወደፊት ሂድ";
BlocklyGamesMsg["Turtle.moveBackward"] = "በዚህ ያህል መጠን ወደ ኋላ ሂድ";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "በተጠቀሰው ዲግሪዎች ቁጥር ኤሊውን ወደ ግራ ወይም ወደ ቀኝ ያዞረዋል።";
BlocklyGamesMsg["Turtle.turnRight"] = "በዚህ ያህል መጠን ወደ ቀኝ ሂድ";
BlocklyGamesMsg["Turtle.turnLeft"] = "በዚህ ያህል መጠን ወደ ግራ ሂድ";
BlocklyGamesMsg["Turtle.widthTooltip"] = "የብዕሩን ቀለም ይለውጣል።";
BlocklyGamesMsg["Turtle.setWidth"] = "ስፋቱን ይለውጡ ወደ";
BlocklyGamesMsg["Turtle.colourTooltip"] = "የብዕሩን ቀለም ይለውጣል።";
BlocklyGamesMsg["Turtle.setColour"] = "ቀለም ይለውጡ ወደ";
BlocklyGamesMsg["Turtle.penTooltip"] = "ስዕሉ ለመስጀመር ብዕሩን ከፍ ለማድረግ ፣ ወይም ስለው ሲጨርሱ ብዕሩን ለማስቀመጥ ይረዳል";
BlocklyGamesMsg["Turtle.penUp"] = "ብዕር ያንሱ";
BlocklyGamesMsg["Turtle.penDown"] = "ብዕር ያስቀምጡ";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "ኤሊው (ክብ እና ቀስት) እንዲታይ ወይም የማይታይ ያደርገዋል።";
BlocklyGamesMsg["Turtle.hideTurtle"] = "ኤሊውን ይደብቁ";
BlocklyGamesMsg["Turtle.showTurtle"] = "ኤሊውን ያሳዩ";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "ኤሊው ወዳለበት አቅጣጫ ጽሑፍን ይስላል፡፡";
BlocklyGamesMsg["Turtle.print"] = "ያትሙ";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "በ print ብሎክ ውስጥ ጥቅም ላይ የሚውለውን ቅርጸ-ቁምፊ ያዘጋጃል።";
BlocklyGamesMsg["Turtle.font"] = "ቅርጸ-ቁምፊ";
BlocklyGamesMsg["Turtle.fontSize"] = "የቅርጸ-ቁምፊ መጠን";
BlocklyGamesMsg["Turtle.fontNormal"] = "መደበኛ";
BlocklyGamesMsg["Turtle.fontBold"] = "ደማቅ";
BlocklyGamesMsg["Turtle.fontItalic"] = "ሰያፍ";
BlocklyGamesMsg["Turtle.submitDisabled"] = "ፕሮግራምዎ እስኪያቆም ድረስ ያሂዱ። ከዚያ ስዕልዎን ወደ ቤተ-ስዕሉ ማስገባት ይችላሉ።";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "የስዕሎችን ማእከል ይክፈቱ።";
BlocklyGamesMsg["Turtle.galleryMsg"] = "ማዕከለ-ስዕላትን ይመልከቱ";
BlocklyGamesMsg["Turtle.submitTooltip"] = "ስዕልዎን ወደ ማእከለ ስዕላት ያስገቡ።";
BlocklyGamesMsg["Turtle.submitMsg"] = "ወደ ማዕከለ ስዕላት ያስገቡ";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "ያበጁት መፍትሔ መልካም ነው፣ ነገር ግን ከዚህ የተሻለ መስራት ይችላሉ።";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "ቅርጹን በሶስት ብሎኮች ብቻ ይሳሉ ፡፡";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "ኮከቡን በአራት ብሎኮች ብቻ ይሳሉ ፡፡";
BlocklyGamesMsg["Turtle.helpText1"] = "ካሬ የሚስል ፕሮግራም ይፍጠሩ።";
BlocklyGamesMsg["Turtle.helpText2"] = "በካሬ ፋንታ ፔንታጎን ለመሳል ፕሮግራምዎን ይለውጡ።";
BlocklyGamesMsg["Turtle.helpText3a"] = "ቀለሙን ለመለወጥ የሚያስችልዎ አዲስ ብሎክ አለ";
BlocklyGamesMsg["Turtle.helpText3b"] = "ቢጫ ኮከብ ይሳሉ።";
BlocklyGamesMsg["Turtle.helpText4a"] = "በሚንቀሳቀሱበት ጊዜ ብዕርዎን ከወረቀት ላይ ለማንሳት የሚያስችል አዲስ ብሎክ አለ፤";
BlocklyGamesMsg["Turtle.helpText4b"] = "አንድ ትንሽ ቢጫ ኮከብ ይሳሉ እና ከዚያ በላይ መስመር ይሳሉ።";
BlocklyGamesMsg["Turtle.helpText5"] = "በአንድ ኮከብ ምትክ አራት ኮከቦችን በካሬ አይነት መሳል ይችላሉ?";
BlocklyGamesMsg["Turtle.helpText6"] = "ሶስት ቢጫ ኮከቦችን ይሳሉ እና አንድ ነጭ መስመር ይሳሉ።";
BlocklyGamesMsg["Turtle.helpText7"] = "ኮከቦችን ይሳሉ ከዚያም አራት ነጭ መስመሮችን ይሳሉ።";
BlocklyGamesMsg["Turtle.helpText8"] = "360 ነጫጭ መስመሮችን መሳል ሙሉ ጨረቃን ይመስላል።";
BlocklyGamesMsg["Turtle.helpText9"] = "ግማሽ ጨረቃ እንድትሆን ጥቁር ክበብ ማከል ይችላሉ?";
BlocklyGamesMsg["Turtle.helpText10"] = "ማንኛውንም የሚፈልጉትን ነገር ይሳሉ። እርስዎ ሊጠቀሙ የሚችሉባቸው በጣም ብዙ ቁጥር ያላቸው አዳዲስ ብሎኮች አሉዎት ፡፡ ይዝናኑ!";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "ሌሎች ሰዎች ምን እንደሳቡ ለመመልከት የ “ማዕከለ-ስዕላትን ይመልከቱ” የሚለውን ቁልፍ ይጠቀሙ ፡፡ አንድ አስደሳች ነገር ከሳሉ እሱን ለማተም 'ወደ ማእከለ-ስዕላት ያስገቡ' የሚለውን ቁልፍ ይጠቀሙ ፡፡";
BlocklyGamesMsg["Turtle.helpToolbox"] = "ብሎኮችን ለማየት አንድ ምድብ ይምረጡ፡፡";
BlocklyGamesMsg["Movie.x"] = "X";
BlocklyGamesMsg["Movie.y"] = "Y";
BlocklyGamesMsg["Movie.x1"] = "መነሻ X";
BlocklyGamesMsg["Movie.y1"] = "መነሻ Y";
BlocklyGamesMsg["Movie.x2"] = "መጨረሻ X";
BlocklyGamesMsg["Movie.y2"] = "መጨረሻ Y";
BlocklyGamesMsg["Movie.radius"] = "ራዲየስ";
BlocklyGamesMsg["Movie.width"] = "ስፋት";
BlocklyGamesMsg["Movie.height"] = "ቁመት";
BlocklyGamesMsg["Movie.circleTooltip"] = "በተጠቀሰው ቦታ እና ከተጠቀሰው ራዲየስ ክብ ይስላል ፡፡";
BlocklyGamesMsg["Movie.circleDraw"] = "ክብ";
BlocklyGamesMsg["Movie.rectTooltip"] = "በተጠቀሰው ቦታ ላይ እና ከተጠቀሰው ስፋት እና ቁመት አራት ማእዘን ይስላል።";
BlocklyGamesMsg["Movie.rectDraw"] = "አራት ማእዘን";
BlocklyGamesMsg["Movie.lineTooltip"] = "በተጠቀሰው ስፋት ከአንድ ነጥብ ወደ ሌላው መስመር ይሳላል።";
BlocklyGamesMsg["Movie.lineDraw"] = "መስመር";
BlocklyGamesMsg["Movie.timeTooltip"] = "በአኒሜሽኑ ውስጥ የአሁኑን ጊዜ ይመልሳል (0-100) ።";
BlocklyGamesMsg["Movie.colourTooltip"] = "የብዕሩን ቀለም ይለውጣል።";
BlocklyGamesMsg["Movie.setColour"] = "ቀለም ይለውጡ ወደ";
BlocklyGamesMsg["Movie.submitDisabled"] = "የእርስዎ ፊልም አይንቀሳቀስም። አንድ አስደሳች ነገር ለማድረግ ብሎኮችን ይጠቀሙ ፡፡ ከዚያ ፊልምዎን ወደ ቤተ-ስዕሉ ማስገባት ይችላሉ።";
BlocklyGamesMsg["Movie.galleryTooltip"] = "የፊልሞች ማዕከል ይክፈቱ።";
BlocklyGamesMsg["Movie.galleryMsg"] = "ማዕከለ-ፊልምን ይመልከቱ";
BlocklyGamesMsg["Movie.submitTooltip"] = "ፊልምዎን ወደ ማእከለ ፊልም ያስገቡ።";
BlocklyGamesMsg["Movie.submitMsg"] = "ወደ ማዕከለ ስዕላት ያስገቡ";
BlocklyGamesMsg["Movie.helpLayer"] = "የበስተጀርባውን ክብ ወደ ፕሮግራምዎ አናት ያዛውሩ ፡፡ ከዚያ ከሰውየው ጀርባ ይታያል።";
BlocklyGamesMsg["Movie.helpText1"] = "ይህንን ሰው ለመሳል ቀላል ቅርጾችን ይጠቀሙ።";
BlocklyGamesMsg["Movie.helpText2a"] = "ይህ ደረጃ ፊልም ነው ፡፡ የግለሰቡ ክንድ በማያ ገጹ ላይ እንዲንቀሳቀስ ያድርጉ። ቅድመ-እይታን ለማየት የጨዋታ ቁልፉን ይጫኑ ፡፡";
BlocklyGamesMsg["Movie.helpText2b"] = "ፊልሙ ሲጫወት ፣ የ 'time' ብሎኩ ዋጋ ከ 0 እስከ 100 ይቆጥራል። የክንዱ የ y አቀማመጥ በ 0 ጀምሮ ወደ 100 ስለሚቆትጥር ይሄ ቀለል ይላል ፡፡";
BlocklyGamesMsg["Movie.helpText3"] = "የ 'time' ብሎክ ቁጥር ከ 0 እስከ 100 ይቆጥራል። አሁን ግን የሌላኛው ክንድ የ “y” አቀማመጥ በ 100 እንዲጀምር እና ወደ 0 ይሄዳል ፡፡ አቅጣጫውን የሚያስቀይር ቀላል የሂሳብ ቀመር ማግኘት ይችላሉ?";
BlocklyGamesMsg["Movie.helpText4"] = "ቀደም ሲል የተማሩትን ተጠቅመው እግሮቹን የተጣመሩ ያድርጉ፡፡";
BlocklyGamesMsg["Movie.helpText5"] = "ለክንድ  የሚሆነው የሂሳብ ቀመር ትንሽ የተወሳሰበ ነው። መልሱ እዚህ አለ";
BlocklyGamesMsg["Movie.helpText6"] = "ለሰውየው ሁለት እጆች ይስሩለት፡፡";
BlocklyGamesMsg["Movie.helpText7"] = "ለፊልሙ የመጀመሪያ አጋማሽ ትንሽ ጭንቅላትን ለመሳል የ “if” ብሎክን ይጠቀሙ ፡፡ ከዚያ ለፊልሙ ሁለተኛ አጋማሽ አንድ ትልቅ ጭንቅላት ይሳሉ።";
BlocklyGamesMsg["Movie.helpText8"] = "በፊልሙ አጋማሽ ላይ እግሮቹ አቅጣጫ እንዲቀይሩ ያድርጉ።";
BlocklyGamesMsg["Movie.helpText9"] = "ከሰውየው በስተጀርባ የሚሰፋ ክብ ይሳሉ።";
BlocklyGamesMsg["Movie.helpText10"] = "ማንኛውንም የሚፈልጉትን ነገር ይሳሉ። እርስዎ ሊጠቀሙ የሚችሉባቸው በጣም ብዙ ቁጥር ያላቸው አዳዲስ ብሎኮች አሉዎት ፡፡ ይዝናኑ!";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "ሌሎች ሰዎች ምን እንደሳቡ ለመመልከት የ “ማዕከለ-ስዕላትን ይመልከቱ” የሚለውን ቁልፍ ይጠቀሙ ፡፡ አንድ አስደሳች ነገር ከሳሉ እሱን ለማተም 'ወደ ማእከለ-ስዕላት ያስገቡ' የሚለውን ቁልፍ ይጠቀሙ ፡፡";
BlocklyGamesMsg["Music.playNoteTooltip"] = "በመረጡት የጊዜ ቆይታ እና ውፍረት አንድ የሙዚቃ ኖታ ይጫወታል።";
BlocklyGamesMsg["Music.playNote"] = "ጨዋታ %1  ኖታ %2";
BlocklyGamesMsg["Music.restTooltip"] = "ለተጠቀሰው የጊዜ ቆይታ ይጠብቃል።";
BlocklyGamesMsg["Music.restWholeTooltip"] = "አንድ ሙሉ ኖታ ይጠብቃል።";
BlocklyGamesMsg["Music.rest"] = "ያሳርፉ %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "ተከታታይ የሙዚቃ ኖታዎችን ሲያጫውቱ ድምጹ ወደተመረጠው የሙዚቃ መሣሪያ ይቀየራል።";
BlocklyGamesMsg["Music.setInstrument"] = "የሙዚቃ መሣሪያ ይቀይሩ %1";
BlocklyGamesMsg["Music.startTooltip"] = "የ 'ፕሮግራም ያሂዱ' አዝራሩ ጠቅ ሲደረግ በውስጡ ያሉትን ብሎኮች ያሄዳሉ።";
BlocklyGamesMsg["Music.start"] = "%1 ጠቅ ሲደረግ";
BlocklyGamesMsg["Music.pitchTooltip"] = "አንድ ኖታ(C4 7 ነው)።";
BlocklyGamesMsg["Music.firstPart"] = "የመጀመሪያ ክፍል";
BlocklyGamesMsg["Music.piano"] = "ፒያኖ";
BlocklyGamesMsg["Music.trumpet"] = "ትራምፔት";
BlocklyGamesMsg["Music.banjo"] = "ባንጆ";
BlocklyGamesMsg["Music.violin"] = "ቫዮሊን";
BlocklyGamesMsg["Music.guitar"] = "ጊታር";
BlocklyGamesMsg["Music.flute"] = "ዋሽንት";
BlocklyGamesMsg["Music.drum"] = "ከበሮ";
BlocklyGamesMsg["Music.choir"] = "መዘምራን";
BlocklyGamesMsg["Music.submitDisabled"] = "ፕሮግራምዎ እስኪያቆም ድረስ ያሂዱ። ከዚያ ስዕልዎን ወደ ቤተ-ስዕሉ ማስገባት ይችላሉ።";
BlocklyGamesMsg["Music.galleryTooltip"] = "የሙዚቃ ማእከልን ይክፈቱ።";
BlocklyGamesMsg["Music.galleryMsg"] = "የሙዚቃ ማእከሉን ይመልከቱ";
BlocklyGamesMsg["Music.submitTooltip"] = "በማእከል የእርስዎን ሙዚቃ ያስገቡ";
BlocklyGamesMsg["Music.submitMsg"] = "ሙዚቃ ወደ ማእከሉ ያስገቡ";
BlocklyGamesMsg["Music.helpUseFunctions"] = "የሰሩት መፍትሔ ይሠራል ፣ ግን ከዚህም በተሻለ መስራት ይችላሉ። የተደጋገሙ ኮዶችን መጠን ለመቀነስ የመላ መገንቢያዎችን (functions) ይጠቀሙ።";
BlocklyGamesMsg["Music.helpUseInstruments"] = "በእያንዳንዱ የመነሻ ብሎክ ውስጥ የተለየ የሙዚቃ መሳሪያ የሚጠቀሙ ከሆነ ሙዚቃው በተሻለ ሁኔታ ይሰማል ፡፡";
BlocklyGamesMsg["Music.helpText1"] = "የ‹ፍሬ ዣክ›ን የመጀመሪያዎቹን አራት ኖታዎች ያቀናብሩ፡፡";
BlocklyGamesMsg["Music.helpText2a"] = "'መላ' (functions) ብሎኮችን በአንድ ላይ ለመሰብሰብ ያስችልዎታል ፣ ከዚያም ይሄን በተፈለገው ድግግሞሽ በቀላሉ ማስኬድ ይችላሉ፡፡";
BlocklyGamesMsg["Music.helpText2b"] = "የመጀመሪያዎቹን አራት የ 'ፍሬ ዣክ' ኖታዎች ለመጫወት መላ ይፍጠሩ ፡፡ ያንን የመላ መገንቢያ ሁለት ጊዜ ያሂዱት። ምንም አዳዲስ የnote ብሎኮች አይጨምሩ።";
BlocklyGamesMsg["Music.helpText3"] = "ለሚቀጥለው የ 'ፍሬ ዣክ' ሁለተኛ መላ ይፍጠሩ ፡፡ የመጨረሻው ኖታ ረዘም ይላል ፡፡";
BlocklyGamesMsg["Music.helpText4"] = "ለሚቀጥለው የ 'ፍሬ ዣክ' አንድ ሦስተኛ መላ ይፍጠሩ ፡፡ የመጀመሪያዎቹ አራት ኖታዎች አጭጫር ናቸው ፡፡";
BlocklyGamesMsg["Music.helpText5"] = "ሙሉውን የ 'ፍሬ ዣክ'  ዜማ ይሙሉ ፡፡";
BlocklyGamesMsg["Music.helpText6a"] = "ይህ አዲስ ብሎክ ወደ ሌላ መሣሪያ እንዲቀይሩ ያስችልዎታል ፡፡";
BlocklyGamesMsg["Music.helpText6b"] = "ዜማዎን በቫዮሊን ይጫወቱ።";
BlocklyGamesMsg["Music.helpText7a"] = "ይህ አዲስ ብሎክ ጸጥታን ይጨምራል።";
BlocklyGamesMsg["Music.helpText7b"] = "ሁለት የሚያዘገዩ ብሎኮች ያሉት የመጀመሪያ ብሎኮች ይፍጠሩ ፣ ከዚያ 'ፍሬ ዣክ' ይጫወት ፡፡";
BlocklyGamesMsg["Music.helpText8"] = "እያንዳንዱ ጅምር 'ፍሬ ዣክ'ን ሁለት ጊዜ መጫወት አለበት ፡፡";
BlocklyGamesMsg["Music.helpText9"] = "እያንዳንዳቸው ሁለት ጊዜ ‹ፍሬ ዣክ› የሚጫወቷቸውን አራት የመጀመሪያ ብሎኮች ይፍጠሩ ፡፡ ተገቢ የማዘግያ ብሎኮችን ያክሉ።";
BlocklyGamesMsg["Music.helpText10"] = "ማንኛውንም የሚፈልጉትን ነገር ይሳሉ። እርስዎ ሊጠቀሙ የሚችሉባቸው በጣም ብዙ ቁጥር ያላቸው አዳዲስ ብሎኮች አሉዎት ፡፡ ይዝናኑ!";
BlocklyGamesMsg["Music.helpText10Reddit"] = "ሌሎች ሰዎች ምን እንደሳቡ ለመመልከት የ “ማዕከለ-ስዕላትን ይመልከቱ” የሚለውን ቁልፍ ይጠቀሙ ፡፡ አንድ አስደሳች ነገር ከሳሉ እሱን ለማተም 'ወደ ማእከለ-ስዕላት ያስገቡ' የሚለውን ቁልፍ ይጠቀሙ ፡፡";
BlocklyGamesMsg["Pond.scanTooltip"] = "ጠላቶችን ይቃኙ፤ አቅጣጫን ይግለጹ (0-360)፣  በሰጡት አቅጣጫ በኩል በቅርበት የሚገኘውን ጠላት ርቀት ያያሉ ፡፡ ምንም ጠላት ካልተገኘ Infinity ይመልሳል።";
BlocklyGamesMsg["Pond.cannonTooltip"] = "መድፉን ይተኩሱ፡፡ አቅጣጫ (0-360) እና ርቀት(0-70) ይግለጹ።";
BlocklyGamesMsg["Pond.swimTooltip"] = "ወደ ፊት ይዋኙ፤ አቅጣጫ ይግለጹ (0-360)";
BlocklyGamesMsg["Pond.stopTooltip"] = "መዋኘት ያቁሙ ፤ ተጫዋቹ ቀስ እያለ ሄዶ ይቆማል።";
BlocklyGamesMsg["Pond.healthTooltip"] = "የተጫዋቹን ወቅታዊ ጤና ይመልሳል (0 ሞቷል ፣ 100 ጤናማ ነው)።";
BlocklyGamesMsg["Pond.speedTooltip"] = "የተጫዋቹን የአሁኑ ፍጥነት ይመልሳል (0 ቆሟል ፣ 100 ሙሉ ፍጥነት ነው)።";
BlocklyGamesMsg["Pond.locXTooltip"] = "ተጫዋቹ ያለበትን የ X ቦታ ይመልሳል (0 የግራ ጠርዝ ነው ፣ 100 የቀኝ ጠርዝ ነው)።";
BlocklyGamesMsg["Pond.locYTooltip"] = "ተጫዋቹ ያለበትን የ Y ቦታ ይመልሳል (0 የግራ ጠርዝ ነው ፣ 100 የቀኝ ጠርዝ ነው)።";
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "የቋንቋ ሰነዶችን ያሳዩ።";
BlocklyGamesMsg["Pond.documentation"] = "ሰነዶች";
BlocklyGamesMsg["Pond.playerName"] = "ተጫዋች";
BlocklyGamesMsg["Pond.targetName"] = "ዒላማ";
BlocklyGamesMsg["Pond.pendulumName"] = "ፔንዱለም";
BlocklyGamesMsg["Pond.scaredName"] = "ፈሪ";
BlocklyGamesMsg["Pond.helpUseScan"] = "የእርስዎ መፍትሔ ይሠራል ፣ ግን በተሻለ መስራት ይችላሉ። ምን ያህል ርቀት መተኮስ እንዳለበት ለመንገር 'scan' ይጠቀሙ።";
BlocklyGamesMsg["Pond.helpText1"] = "ዒላማውን ለመምታት የ ‹canon› ትዕዛዙን ይጠቀሙ ፡፡ የመጀመሪያው ግባአት አንግል ነው ፣ ሁለተኛው ርቀት ነው። ትክክለኛውን ጥምር ይፈልጉ።";
BlocklyGamesMsg["Pond.helpText2"] = "ይህ ዒላማ ብዙ ጊዜ መምታት አለበት። ያለገደብ የሆነ ነገር ለመስራት 'while (true)' ይጠቀሙ።";
BlocklyGamesMsg["Pond.helpText3a"] = "ይህ ጠላት ወደፊትና ወደኋላ ስለሚንቀሳቀስ ለመመታት ከባድ ያደርገዋል ፡፡ ‹scan› በተጠቀሰው አቅጣጫ ከጠላት ጋር ያለዎትን ትክክለኛውን ርቀት ወደ ያሳያልና ይጠቀሙበት ፡፡";
BlocklyGamesMsg["Pond.helpText3b"] = "ይህ ርቀት በትክክል ‹canon› ለመተኮስ የሚያስፈልገው ነው ፡፡";
BlocklyGamesMsg["Pond.helpText4"] = "ይህ ጠላት መድፉን ለመጠቀም በጣም ሩቅ ነው (የ 70 ሜትር ወሰን አለው) ፡፡ በምትኩ ፣ ወደ ተቃዋሚው መዋኘት ለመጀመር 'swim' ትዕዛዙን ይጠቀሙ።";
BlocklyGamesMsg["Pond.helpText5"] = "ይህ ጠላት መድፉን ለመጠቀም በጣም ሩቅ ነው ፡፡ እርስዎ ደግሞ ከግጭት ለመትረፍ በጣም ደካማ ነዎት ፡፡ አዋጭ የሚሆነው አግዳሚ ስፍራዎ ከ 50 በታች እስኪሆን ድረስ ወደ ተጋጣሚው ላይ ይዋኙና  ከዚያ 'stop'ን ተጠቅመው መድፉን ይጠቀሙ ፡፡";
BlocklyGamesMsg["Pond.helpText6"] = "ይህ ጠላት ሲመቱት ይሸሻል። ከርቀት (70 ሜትር) ውጭ ከሆነ ይዋኙ ፡፡";
BlocklyGamesMsg["Gallery"] = "ማጠራቀሚያ ማእከል";
