// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "item";
BlocklyMsg["UNNAMED_KEY"] = "sem nome";
BlocklyMsg["TODAY"] = "Hoje";
BlocklyMsg["DUPLICATE_BLOCK"] = "Duplicar";
BlocklyMsg["ADD_COMMENT"] = "Adicionar Comentário";
BlocklyMsg["REMOVE_COMMENT"] = "Remover Comentário";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicar comentário";
BlocklyMsg["EXTERNAL_INPUTS"] = "Entradas Externas";
BlocklyMsg["INLINE_INPUTS"] = "Entradas Em Linhas";
BlocklyMsg["DELETE_BLOCK"] = "Eliminar Bloco";
BlocklyMsg["DELETE_X_BLOCKS"] = "Eliminar %1 Blocos";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Eliminar todos os %1 blocos?";
BlocklyMsg["CLEAN_UP"] = "Limpar Blocos";
BlocklyMsg["COLLAPSE_BLOCK"] = "Ocultar Bloco";
BlocklyMsg["COLLAPSE_ALL"] = "Ocultar Blocos";
BlocklyMsg["EXPAND_BLOCK"] = "Expandir Bloco";
BlocklyMsg["EXPAND_ALL"] = "Expandir Blocos";
BlocklyMsg["DISABLE_BLOCK"] = "Desativar Bloco";
BlocklyMsg["ENABLE_BLOCK"] = "Ativar Bloco";
BlocklyMsg["HELP"] = "Ajuda";
BlocklyMsg["UNDO"] = "Desfazer";
BlocklyMsg["REDO"] = "Refazer";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Alterar valor:";
BlocklyMsg["RENAME_VARIABLE"] = "Renomear variável...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Renomear todas as variáveis '%1' para:";
BlocklyMsg["NEW_VARIABLE"] = "Criar variável…";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Criar variável de segmentos de texto...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Criar variável numérica...";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Criar variável colorida...";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Tipo da nova variável:";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Nome da nova variável:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Já existe uma variável com o nome de '%1'.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Já existe uma variável chamada '%1' para outra do tipo: '%2'.";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Eliminar %1 utilizações da variável '%2'?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Não se pode eliminar a variável '%1' porque faz parte da definição da função '%2'";
BlocklyMsg["DELETE_VARIABLE"] = "Eliminar a variável '%1'";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "http://pt.wikipedia.org/wiki/Cor";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Escolha uma cor da paleta de cores.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "cor aleatória";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Escolha uma cor aleatoriamente.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "pinte com";
BlocklyMsg["COLOUR_RGB_RED"] = "vermelho";
BlocklyMsg["COLOUR_RGB_GREEN"] = "verde";
BlocklyMsg["COLOUR_RGB_BLUE"] = "azul";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Cria uma cor de acordo com a quantidade especificada de vermelho, verde e azul. Todos os valores devem estar entre 0 e 100.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "misturar";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "cor 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "cor 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "proporção";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Mistura duas cores com a proporção indicada (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "http://pt.wikipedia.org/wiki/Estrutura_de_repeti%C3%A7%C3%A3o#Repeti.C3.A7.C3.A3o_com_vari.C3.A1vel_de_controle";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repetir %1 vez";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "faça";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Faça algumas instruções várias vezes.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir enquanto";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir até";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Enquanto um valor for verdadeiro, então faça algumas instruções.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Enquanto um valor for falso, então faça algumas instruções.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Faz com que a variável \"%1\" assuma os valores desde o número inicial até ao número final, contando de acordo com o intervalo especificado e executa os blocos especificados.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "contar com %1 de %2 até %3 por %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "para cada item %1 na lista %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Para cada item numa lista, define a variável \"%1\" para o item e então faz algumas instruções.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "sair do ciclo";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continuar com a próxima iteração do ciclo";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Sair do ciclo que está contido.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Ignorar o resto deste ciclo, e continuar com a próxima iteração.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Aviso: Este bloco só pode ser usado dentro de um ciclo.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Se um valor é verdadeiro, então realize alguns passos.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Se um valor é verdadeiro, então realize o primeiro bloco de instruções.  Senão, realize o segundo bloco de instruções";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Se o primeiro valor é verdadeiro, então realize o primeiro bloco de instruções.  Senão, se o segundo valor é verdadeiro, realize o segundo bloco de instruções.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Se o primeiro valor é verdadeiro, então realize o primeiro bloco de instruções.  Senão, se o segundo valor é verdadeiro, realize o segundo bloco de instruções.  Se nenhum dos blocos for verdadeiro, realize o último bloco de instruções.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "se";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "senão se";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "senão";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Acrescente, remova ou reordene secções para reconfigurar este bloco se.";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Acrescente uma condição ao bloco se.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Acrescente uma condição de excepação final para o bloco se.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "http://pt.wikipedia.org/wiki/Inequa%C3%A7%C3%A3o";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Retorna verdadeiro se ambas as entradas forem iguais entre si.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Retorna verdadeiro se ambas as entradas forem diferentes entre si.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Retorna verdadeiro se a primeira entrada for menor que a segunda entrada.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Retorna verdadeiro se a primeira entrada for menor ou igual à segunda entrada.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Retorna verdadeiro se a primeira entrada for maior que a segunda entrada.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Retorna verdadeiro se a primeira entrada for maior ou igual à segunda entrada.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Retorna verdadeiro se ambas as entradas forem verdadeiras.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "e";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Retorna verdadeiro se pelo menos uma das estradas for verdadeira.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "ou";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "não %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Retorna verdadeiro se a entrada for falsa.  Retorna falso se a entrada for verdadeira.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "verdadeiro";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "falso";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Retorna verdadeiro ou falso.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "http://en.wikipedia.org/wiki/Nullable_type";
BlocklyMsg["LOGIC_NULL"] = "nulo";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Retorna nulo.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "http://en.wikipedia.org/wiki/%3F:";
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "teste";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "se verdadeiro";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "se falso";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Avalia a condição em \"teste\". Se a condição for verdadeira retorna o valor \"se verdadeiro\", senão retorna o valor \"se falso\".";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "http://pt.wikipedia.org/wiki/N%C3%BAmero";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Um número.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";
BlocklyMsg["MATH_TRIG_COS"] = "cos";
BlocklyMsg["MATH_TRIG_TAN"] = "tan";
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "http://pt.wikipedia.org/wiki/Aritm%C3%A9tica";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Retorna a soma de dois números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Retorna a diferença de dois números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Retorna o produto de dois números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Retorna o quociente da divisão de dois números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Retorna o primeiro número elevado à potência do segundo número.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "http://pt.wikipedia.org/wiki/Raiz_quadrada";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "raíz quadrada";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Retorna a raiz quadrada de um número.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluto";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Retorna o valor absoluto de um número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Retorna o oposto de um número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Retorna o logarítmo natural de um número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Retorna o logarítmo em base 10 de um número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Retorna o número e elevado à potência de um número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Retorna 10 elevado à potência de um número.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "http://pt.wikipedia.org/wiki/Fun%C3%A7%C3%A3o_trigonom%C3%A9trica";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Retorna o seno de um grau (não radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Retorna o cosseno de um grau (não radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Retorna a tangente de um grau (não radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Retorna o arco seno de um número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Retorna o arco cosseno de um número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Retorna o arco tangente de um número.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "http://pt.wikipedia.org/wiki/Anexo:Lista_de_constantes_matem%C3%A1ticas";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Retorna uma das constantes comuns: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infinito).";
BlocklyMsg["MATH_IS_EVEN"] = "é par";
BlocklyMsg["MATH_IS_ODD"] = "é impar";
BlocklyMsg["MATH_IS_PRIME"] = "é primo";
BlocklyMsg["MATH_IS_WHOLE"] = "é inteiro";
BlocklyMsg["MATH_IS_POSITIVE"] = "é positivo";
BlocklyMsg["MATH_IS_NEGATIVE"] = "é negativo";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "é divisível por";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Verifica se um número é par, impar, primo, inteiro, positivo, negativo, ou se é divisível por outro número.  Retorna verdadeiro ou falso.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "http://pt.wikipedia.org/wiki/Adi%C3%A7%C3%A3o";
BlocklyMsg["MATH_CHANGE_TITLE"] = "alterar %1 por %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Soma um número à variável \"%1\".";
BlocklyMsg["MATH_ROUND_HELPURL"] = "http://pt.wikipedia.org/wiki/Arredondamento";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Arredonda um número para cima ou para baixo.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "arredonda";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredonda para cima";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredonda para baixo";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "soma da lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Retorna a soma de todos os números da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "menor de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Retorna o menor número da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "maior de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Retorna o maior número da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "média de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Retorna a média aritmética dos valores números da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Retorna a mediana da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "moda de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Retorna a lista de item(ns) mais comum(ns) da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "desvio padrão de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Retorna o desvio padrão dos números da lista.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "item aleatório de uma lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Retorna um elemento aleatório da lista.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "http://pt.wikipedia.org/wiki/Opera%C3%A7%C3%A3o_m%C3%B3dulo";
BlocklyMsg["MATH_MODULO_TITLE"] = "resto da divisão de %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Retorna o resto da divisão de dois números.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "restringe %1 inferior %2 superior %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Restringe um número entre os limites especificados (inclusive).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "http://pt.wikipedia.org/wiki/N%C3%BAmero_aleat%C3%B3rio";
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "inteiro aleatório entre %1 e %2";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Retorna um número inteiro entre os dois limites especificados, inclusive.";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "http://pt.wikipedia.org/wiki/N%C3%BAmero_aleat%C3%B3rio";
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fração aleatória";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Insere uma fração aleatória entre 0.0 (inclusive) e 1.0 (exclusive).";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 de X:%1 Y:%2";
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Devolver o arco tangente do ponto (X, Y) em graus entre -180 e 180.";
BlocklyMsg["TEXT_TEXT_HELPURL"] = "http://pt.wikipedia.org/wiki/Cadeia_de_caracteres";
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Uma letra, palavra ou linha de texto.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "criar texto com";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Criar um pedaço de texto juntando qualquer número de itens.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unir";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Acrescenta, remove ou reordena seções para reconfigurar este bloco de texto.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Acrescentar um item ao texto.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "para %1 acrescentar texto %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Acrescentar um pedaço de texto à variável \"%1\".";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "tamanho de %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Devolve o número de letras (incluindo espaços) do texto fornecido.";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 está vazio";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Retorna verdadeiro se o texto fornecido estiver vazio.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Retorna a posição da primeira/última ocorrência do primeiro texto no segundo texto. Retorna %1 se o texto não for encontrado.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "no texto %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "primeira ocorrência do texto";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "última ocorrência do texto";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "no texto %1 %2";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "obter letra nº";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "obter letra nº a partir do final";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "obter primeira letra";
BlocklyMsg["TEXT_CHARAT_LAST"] = "obter última letra";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "obter letra aleatória";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Retorna a letra na posição especificada.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Retorna a parte especificada do texto.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "no texto";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "obter subsequência de tamanho #";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "obter subsequência de tamanho # a partir do final";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "obter subsequência a partir da primeira letra";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "até letra nº";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "até letra nº a partir do final";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "até última letra";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Retorna uma cópia do texto em formato diferente.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "para MAIÚSCULAS";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "para minúsculas";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "para Iniciais Maiúsculas";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Retorna uma cópia do texto com os espaços removidos de uma ou ambas as extremidades.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "remover espaços de ambos os lados";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "remover espaços à esquerda de";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "remover espaços à direita";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "imprime %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Imprime o texto, número ou outro valor especificado.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "Pede um texto com a mensagem";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "pede um número com a mensagem";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Pede ao utilizador um número.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Pede ao utilizador um texto.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "contar %1 em %2";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Conte quantas vezes um certo texto aparece dentro de algum outro texto.";
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "substituir %1 por %2 em %3";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Substituir todas as ocorrências de um certo texto dentro de algum outro texto.";
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "inverter %1";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Inverte a ordem dos caracteres no texto.";
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "criar lista vazia";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Retorna uma lista, de tamanho 0, contendo nenhum registo";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Cria uma lista com qualquer número de itens.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "criar lista com";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Acrescente, remova ou reordene as seções para reconfigurar este bloco lista.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Acrescenta um item à lista.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Cria uma lista constituída por um dado valor repetido o número de vezes especificado.";
BlocklyMsg["LISTS_REPEAT_TITLE"] = "criar lista com o item %1 repetido %2 vezes";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "tamanho de %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Retorna o tamanho de uma lista.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 está vazia";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Retona verdadeiro se a lista estiver vazia.";
BlocklyMsg["LISTS_INLIST"] = "na lista";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "encontre a primeira ocorrência do item";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "encontre a última ocorrência do item";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Retorna a posição da primeira/última ocorrência do item na lista.  Retorna %1 se o item não for encontrado.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "obter";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "obter e remover";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "remover";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# a partir do final";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "primeiro";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "último";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "aleatório";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 é o primeiro item.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 é o último item.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Retorna o item na posição especificada da lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Retorna o primeiro item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Retorna o último item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Retorna um item aleatório de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Remove e retorna o item na posição especificada de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Remove e retorna o primeiro item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Remove e retorna o último item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Remove e retorna um item aleatório de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Remove o item de uma posição especifica da lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Remove o primeiro item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Remove o último item de uma lista.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Remove um item aleatório de uma lista.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "definir";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "inserir em";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "como";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Define o item na posição especificada de uma lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Define o primeiro item de uma lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Define o último item de uma lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Define um item aleatório de uma lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Insere o item numa posição especificada numa lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Insere o item no início da lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Insere o item no final da lista.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Insere o item numa posição aleatória de uma lista.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "obtem sublista de #";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "obtem sublista de # a partir do final";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "obtem sublista da primeira lista";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "até #";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "até #, a partir do final";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "para o último";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Cria uma cópia da porção especificada de uma lista.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "ordenar %1 %2 %3";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Ordenar uma cópia de uma lista.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascendente";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descendente";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numérica";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alfabética";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabética, ignorar maiúsculas/minúsculas";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "fazer lista a partir de texto";
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "fazer texto a partir da lista";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "com delimitador";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Dividir o texto numa lista de textos, separando-o em cada delimitador.";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Juntar uma lista de textos num único texto, separado por um delimitador.";
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "inverter %1";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Inverter uma cópia da lista.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Retorna o valor desta variável.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Criar \"definir %1\"";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "definir %1 para %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Define esta variável para o valor inserido.";
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Criar \"obter %1\"";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "para";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "faz algo";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "com:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "com:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Cria uma função que não tem retorno.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Descreva esta função...";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "retorna";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Cria uma função que possui um valor de retorno.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "permitir declarações";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Aviso: Esta função tem parâmetros duplicados.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://pt.wikipedia.org/wiki/Sub-rotina";
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Executa a função \"%1\".";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://pt.wikipedia.org/wiki/Sub-rotina";
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Executa a função \"%1\" e usa o seu retorno.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Adicionar, remover ou reordenar as entradas para esta função.";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "nome da entrada:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Adicionar uma entrada para a função.";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Destacar definição da função";
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Criar \"%1\"";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "se o valor é verdadeiro, então retorna um segundo valor.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Aviso: Este bloco só pode ser utilizado dentro da definição de uma função.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Diz algo...";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Espaço de trabalho de Blockly";
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Os blocos ocultados contêm avisos.";
BlocklyMsg["DIALOG_OK"] = "OK";
BlocklyMsg["DIALOG_CANCEL"] = "Cancelar";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "faça";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "faça";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "faça";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "faça";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "se";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "senão se";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "senão";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "item";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "item";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "item";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "na lista";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "na lista";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "na lista";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "na lista";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "para";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "faz algo";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Descreva esta função...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Jogos Blockly";
BlocklyGamesMsg["Games.puzzle"] = "Quebra-cabeça";
BlocklyGamesMsg["Games.maze"] = "Labirinto";
BlocklyGamesMsg["Games.bird"] = "Pássaro";
BlocklyGamesMsg["Games.turtle"] = "Tartaruga";
BlocklyGamesMsg["Games.movie"] = "Filme";
BlocklyGamesMsg["Games.music"] = "Música";
BlocklyGamesMsg["Games.pondTutor"] = "Tutor de libras";
BlocklyGamesMsg["Games.pond"] = "Lagoa";
BlocklyGamesMsg["Games.linesOfCode1"] = "Resolveste este nivel com 1 linha de JavaScript:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Resolveste este nivel com %1 linhas de JavaScript:";
BlocklyGamesMsg["Games.nextLevel"] = "Estás pronto para o nível %1?";
BlocklyGamesMsg["Games.finalLevel"] = "Estás pronto para o próximo desafio?";
BlocklyGamesMsg["Games.submitTitle"] = "Título:";
BlocklyGamesMsg["Games.linkTooltip"] = "Salva conexão com o blockly.";
BlocklyGamesMsg["Games.runTooltip"] = "Executar o programa que escreveste.";
BlocklyGamesMsg["Games.runProgram"] = "Executar o programa";
BlocklyGamesMsg["Games.resetTooltip"] = "Parar o programa e reiniciar o nível.";
BlocklyGamesMsg["Games.resetProgram"] = "Reiniciar";
BlocklyGamesMsg["Games.help"] = "Ajuda";
BlocklyGamesMsg["Games.catLogic"] = "Lógica";
BlocklyGamesMsg["Games.catLoops"] = "Ciclos";
BlocklyGamesMsg["Games.catMath"] = "Matemática";
BlocklyGamesMsg["Games.catText"] = "Texto";
BlocklyGamesMsg["Games.catLists"] = "Listas";
BlocklyGamesMsg["Games.catColour"] = "Cor";
BlocklyGamesMsg["Games.catVariables"] = "Variáveis";
BlocklyGamesMsg["Games.catProcedures"] = "Funções";
BlocklyGamesMsg["Games.httpRequestError"] = "Houve um problema com a solicitação.";
BlocklyGamesMsg["Games.linkAlert"] = "Compartilhe os seus blocos com este link:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Desculpe, '%1' não corresponde a um blockly salvo.";
BlocklyGamesMsg["Games.xmlError"] = "Não foi possível carregar o seu ficheiro gravado. Talvez ele tenha sido criado por uma versão diferente do Blockly?";
BlocklyGamesMsg["Games.submitted"] = "Agradecemos pelo programa! Se a nossa equipa gostar dele, este será publicado na galeria por nós dentro de alguns dias.";
BlocklyGamesMsg["Games.listVariable"] = "lista";
BlocklyGamesMsg["Games.textVariable"] = "texto";
BlocklyGamesMsg["Games.breakLink"] = "Assim que começar a editar JavaScript, não pode voltar a editar blocos. Clique em OK para continuar.";
BlocklyGamesMsg["Games.blocks"] = "Blocos";
BlocklyGamesMsg["Games.congratulations"] = "Parabéns!";
BlocklyGamesMsg["Games.helpAbort"] = "Este nível é extremamente difícil. Deseja ignorá-lo e ir para o próximo jogo? Sempre pode voltar mais tarde.";
BlocklyGamesMsg["Index.clear"] = "Eliminar todas as suas soluções?";
BlocklyGamesMsg["Index.subTitle"] = "Jogos para os programadores de amanhã.";
BlocklyGamesMsg["Index.moreInfo"] = "Informações para educadores...";
BlocklyGamesMsg["Index.startOver"] = "Deseja começar de novo?";
BlocklyGamesMsg["Index.clearData"] = "Apagar dados";
BlocklyGamesMsg["Puzzle.animal1"] = "Pato";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Penas";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Bico";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://pt.wikipedia.org/wiki/Pato";
BlocklyGamesMsg["Puzzle.animal2"] = "Gato";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Bigodes";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Pelo";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://pt.wikipedia.org/wiki/Gato";
BlocklyGamesMsg["Puzzle.animal3"] = "Abelha";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Mel";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Ferrão";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://pt.wikipedia.org/wiki/Anthophila";
BlocklyGamesMsg["Puzzle.animal4"] = "Caracol";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Concha";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Baba";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://pt.wikipedia.org/wiki/Caracol";
BlocklyGamesMsg["Puzzle.picture"] = "imagem:";
BlocklyGamesMsg["Puzzle.legs"] = "patas:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "escolha...";
BlocklyGamesMsg["Puzzle.traits"] = "características:";
BlocklyGamesMsg["Puzzle.error0"] = "Perfeito!\nTodos os %1 blocos estão corretos.";
BlocklyGamesMsg["Puzzle.error1"] = "Quase! Um bloco está incorreto.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 blocos estão incorretos.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "O bloco realçado não está correto.\nContinue tentando.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Verificar respostas";
BlocklyGamesMsg["Puzzle.helpText"] = "Para cada animal (verde), anexar a sua imagem, escolher o seu número de pernas, e fazer uma lista das suas características.";
BlocklyGamesMsg["Maze.moveForward"] = "Mover para a frente";
BlocklyGamesMsg["Maze.turnLeft"] = "gire para a esquerda";
BlocklyGamesMsg["Maze.turnRight"] = "gire para a direita";
BlocklyGamesMsg["Maze.doCode"] = "faça";
BlocklyGamesMsg["Maze.elseCode"] = "senão";
BlocklyGamesMsg["Maze.helpIfElse"] = "O comando 'Se-senão' faz uma coisa ou outra.";
BlocklyGamesMsg["Maze.pathAhead"] = "se existe um caminho em frente";
BlocklyGamesMsg["Maze.pathLeft"] = "se existe um caminho para a esquerda";
BlocklyGamesMsg["Maze.pathRight"] = "se existe um caminho para a direita";
BlocklyGamesMsg["Maze.repeatUntil"] = "repetir até";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Move o Pegman um quadro para frente.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Gire o Pegman 90 graus para esquerda ou para a direita.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Se existe um caminho na direção especificada, entao executa algumas ações.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Se não existe um caminho na direção especificada, então execute o primeiro bloco de ações. Senão, execute o segundo bloco de ações.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Repita as ações seguintes até que o ponto final seja alcançado.";
BlocklyGamesMsg["Maze.capacity0"] = "Você tem mais %0 blocos.";
BlocklyGamesMsg["Maze.capacity1"] = "Resta-lhe %1 bloco.";
BlocklyGamesMsg["Maze.capacity2"] = "Você tem mais %2 blocos.";
BlocklyGamesMsg["Maze.runTooltip"] = "Faça o jogador executar o que os blocos dizem.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Colocar o jogador novamente no início do labirinto.";
BlocklyGamesMsg["Maze.helpStack"] = "Empilhe alguns blocos 'Mover para a frente' para ajudar-me a chegar ao destino.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Neste nível, você precisa empilhar todos os blocos nos espaços em branco.";
BlocklyGamesMsg["Maze.helpRun"] = "Execute o seu programa para ver o que acontece.";
BlocklyGamesMsg["Maze.helpReset"] = "O programa não resolve o labirinto. Pressione 'Reiniciar' e tente novamente.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Os computadores têm uma memoria limitada. Chegue ao destino usando apenas dois blocos. Utilize o comando 'repita' para executar um bloco várias vezes.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Usou todos os blocos para este nível. Para criar um novo bloco, deve primeiro eliminar um bloco existente.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Pode pôr mais de um bloco dentro de um bloco 'repetir'.";
BlocklyGamesMsg["Maze.helpSkins"] = "Escolha o seu jogador favorito a partir deste menu.";
BlocklyGamesMsg["Maze.helpIf"] = "A condição 'se' executa algo apenas se a condição for verdadeira. Tente girar à esquerda se existe um caminho à esquerda";
BlocklyGamesMsg["Maze.helpMenu"] = "Clique em %1 no bloco 'se' para mudar a sua condição.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Você consegue resolver este quebra cabeças complexo. Tente seguir o muro do lado esquerdo. Para programadores avançados apenas!";
BlocklyGamesMsg["Bird.noWorm"] = "não tem minhoca";
BlocklyGamesMsg["Bird.heading"] = "direção";
BlocklyGamesMsg["Bird.noWormTooltip"] = "Esse bloco indica quando o pássaro não possui a minhoca.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Mover na direção do ângulo indicado: 0 é para a direita, 90 é para frente, etc.";
BlocklyGamesMsg["Bird.positionTooltip"] = "x e y marcam a posição do pássaro. Quando x = 0 o pássaro esta próximo da margem esquerda, quando x = 100 esta perto da margem direita. Quando y = 0 o pássaro esta em baixo, quando y = 100 ele está no topo.";
BlocklyGamesMsg["Bird.helpHeading"] = "Trocar o ângulo da direção para que o pássaro apanhe a minhoca e chegue ao seu ninho.";
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use este bloco para ir numa direção se tiver a minhoca, ou noutra se não tiver a minhoca.";
BlocklyGamesMsg["Bird.helpX"] = "'x' e sua posição horizontal atual. Use este bloco para ir numa direção se 'x' for menor que um numero, ou noutra se não for.";
BlocklyGamesMsg["Bird.helpElse"] = "Clique no ícone para modificar o bloco 'se'.";
BlocklyGamesMsg["Bird.helpElseIf"] = "Este nível precisa de um bloco 'senão se' e de um bloco 'senão'.";
BlocklyGamesMsg["Bird.helpAnd"] = "O bloco \"e\" somente é verdadeiro se as duas entradas forem verdadeiras.";
BlocklyGamesMsg["Bird.helpMutator"] = "Arraste um bloco \"senão\" em cima do bloco \"se\".";
BlocklyGamesMsg["Turtle.moveTooltip"] = "Move a tartaruga para frente ou para trás de acordo com a quantidade especificada.";
BlocklyGamesMsg["Turtle.moveForward"] = "Mover para a frente";
BlocklyGamesMsg["Turtle.moveBackward"] = "mover para trás";
BlocklyGamesMsg["Turtle.goto"] = "vai para";
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Faz a tartaruga se mover diretamente para a posição x e y indicadas.";
BlocklyGamesMsg["Turtle.direction"] = "aponte para direção";
BlocklyGamesMsg["Turtle.directionTooltip"] = "Faz a tartaruga apontar para a direção (ângulo) indicada.";
BlocklyGamesMsg["Turtle.turnTooltip"] = "Gira a tartaruga para esquerda ou direita de acordo com o número de graus especificado.";
BlocklyGamesMsg["Turtle.turnRight"] = "girar para a direita";
BlocklyGamesMsg["Turtle.turnLeft"] = "girar para a esquerda";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Altera a largura da caneta.";
BlocklyGamesMsg["Turtle.setWidth"] = "definir largura para";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Muda a cor da caneta.";
BlocklyGamesMsg["Turtle.setColour"] = "definir cor para";
BlocklyGamesMsg["Turtle.penTooltip"] = "Levanta ou baixa a caneta, para parar ou voltar a desenhar.";
BlocklyGamesMsg["Turtle.penUp"] = "levantar caneta";
BlocklyGamesMsg["Turtle.penDown"] = "baixar caneta";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Faz a tartaruga (círculo e a seta) visível ou invisível.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "ocultar tartaruga";
BlocklyGamesMsg["Turtle.showTurtle"] = "mostrar tartaruga";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://pt.wikipedia.org/wiki/Impress%C3%A3o";
BlocklyGamesMsg["Turtle.printTooltip"] = "Desenha texto na direção da tartaruga na sua posição atual.";
BlocklyGamesMsg["Turtle.print"] = "imprimir";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://pt.wikipedia.org/wiki/Fonte_tipogr%C3%A1fica";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Define o tipo de letra utilizado pela impressão de bloco.";
BlocklyGamesMsg["Turtle.font"] = "fonte";
BlocklyGamesMsg["Turtle.fontSize"] = "tamanho da fonte";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "negrito";
BlocklyGamesMsg["Turtle.fontItalic"] = "itálico";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Executa o programa até parar. De seguida, pode enviar o seu desenho para a galeria.";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Abra a galeria de desenhos.";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Ver a Galeria";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Envie o seu desenho para a galeria.";
BlocklyGamesMsg["Turtle.submitMsg"] = "Enviar para a Galeria";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "A sua solução funciona, mas pode fazer melhor.";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Desenhe a forma com apenas três blocos.";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Desenhe a estrela com apenas quatro blocos.";
BlocklyGamesMsg["Turtle.helpText1"] = "Crie um programa que desenha um quadrado.";
BlocklyGamesMsg["Turtle.helpText2"] = "Modifique o seu programa para que desenhe um pentágono em vez de um quadrado.";
BlocklyGamesMsg["Turtle.helpText3a"] = "Existe um bloco novo que permite alterar a cor:";
BlocklyGamesMsg["Turtle.helpText3b"] = "Desenhe uma estrela amarela.";
BlocklyGamesMsg["Turtle.helpText4a"] = "Há um bloco novo que lhe permite levantar a caneta quando você move o cursor:";
BlocklyGamesMsg["Turtle.helpText4b"] = "Desenhe uma pequena estrela amarela, depois desenhe uma linha em cima dela.";
BlocklyGamesMsg["Turtle.helpText5"] = "Em vez de uma estrela, consegue desenhar quatro estrelas dispostas em quadrado?";
BlocklyGamesMsg["Turtle.helpText6"] = "Desenhe três estrelas amarelas e uma linha em branco.";
BlocklyGamesMsg["Turtle.helpText7"] = "Desenhe as estrelas, depois desenhe quatro linhas brancas.";
BlocklyGamesMsg["Turtle.helpText8"] = "Desenhar 360 linhas brancas vai parecerer uma lua cheia.";
BlocklyGamesMsg["Turtle.helpText9"] = "Consegue adicionar um circulo preto para que a lua se torne num crescente?";
BlocklyGamesMsg["Turtle.helpText10"] = "Desenhe qualquer coisa que quiser. Você tem um grande número de blocos novos que pode explorar. Divirta-se!";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use o botão \"Ver Galeria\" para ver o que as outras pessoas desenharam. Se você desenhar algo interessante, use o botão \"Enviar para a Galeria\" para publicar.";
BlocklyGamesMsg["Turtle.helpToolbox"] = "Escolhe uma categoria para ver os blocos.";
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "inicio x";
BlocklyGamesMsg["Movie.y1"] = "inicio y";
BlocklyGamesMsg["Movie.x2"] = "fim x";
BlocklyGamesMsg["Movie.y2"] = "fim y";
BlocklyGamesMsg["Movie.radius"] = "raio";
BlocklyGamesMsg["Movie.width"] = "largura";
BlocklyGamesMsg["Movie.height"] = "altura";
BlocklyGamesMsg["Movie.circleTooltip"] = "Desenha um circulo num local especificado e com raio especificado.";
BlocklyGamesMsg["Movie.circleDraw"] = "círculo";
BlocklyGamesMsg["Movie.rectTooltip"] = "Desenha um circulo num local especificado e com raio especificado.";
BlocklyGamesMsg["Movie.rectDraw"] = "retângulo";
BlocklyGamesMsg["Movie.lineTooltip"] = "Desenha uma linha de um ponto a outro, com a largura especificada.";
BlocklyGamesMsg["Movie.lineDraw"] = "linha";
BlocklyGamesMsg["Movie.timeTooltip"] = "Retornar o tempo corrente na animação  (0-100).";
BlocklyGamesMsg["Movie.colourTooltip"] = "Muda a cor da caneta.";
BlocklyGamesMsg["Movie.setColour"] = "mudar a cor para";
BlocklyGamesMsg["Movie.submitDisabled"] = "O seu filme não se move. Use blocos para fazer alguma coisa interessante. Depois pode enviar o seu filme para a galeria.";
BlocklyGamesMsg["Movie.galleryTooltip"] = "Abra a galeria de filmes.";
BlocklyGamesMsg["Movie.galleryMsg"] = "Ver a Galeria";
BlocklyGamesMsg["Movie.submitTooltip"] = "Envie o seu filme para a galeria.";
BlocklyGamesMsg["Movie.submitMsg"] = "Enviar para a Galeria";
BlocklyGamesMsg["Movie.helpLayer"] = "Mova o círculo de fundo na parte superior do seu programa. Então aparecerá atrás da pessoa.";
BlocklyGamesMsg["Movie.helpText1"] = "Use formas simples para desenhar essa pessoa.";
BlocklyGamesMsg["Movie.helpText2a"] = "Este nível é um filme. Se deseja que o braço da pessoa se mova pelo ecrã. Prima o botão Reproduzir para ver uma antevisão.";
BlocklyGamesMsg["Movie.helpText2b"] = "Enquanto o filme passa, o valor do bloco 'time' conta de 0 a 100. Como queira a posição 'y' do braço iniciar no 0 e que vá até 100 isto deve ser fácil.";
BlocklyGamesMsg["Movie.helpText3"] = "O bloco 'time' conta de 0 a 100. Mas desta vez quer a posição 'y' do outro braço comece no 100 e vá ate 0. Consegue criar uma simples fórmula matemática para trocar a direção?";
BlocklyGamesMsg["Movie.helpText4"] = "Use o que aprendeu no nível anterior para cruzar as pernas.";
BlocklyGamesMsg["Movie.helpText5"] = "A fórmula matemática para o braço é complicada. Aqui está a resposta:";
BlocklyGamesMsg["Movie.helpText6"] = "Dê as duas mãos a pessoa.";
BlocklyGamesMsg["Movie.helpText7"] = "Use o bloco 'if' para desenhar uma pequena cabeça para a primeira metade do filme. Em seguida, desenhe uma grande cabeça para a segunda metade do filme.";
BlocklyGamesMsg["Movie.helpText8"] = "Mova as pernas na direção reversa na metade do filme.";
BlocklyGamesMsg["Movie.helpText9"] = "Desenhe um círculo crescente atrás da pessoa.";
BlocklyGamesMsg["Movie.helpText10"] = "Faça um filme à sua vontade! Tem uma quantidade enorme de blocos novos que pode explorar. Divirta-se!";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use o botão \"Ver Galeria\" para ver o que outras pessoas desenharam. Se desenhar algo interessante,use o botão \"Enviar para a Galeria\" para publicar.";
BlocklyGamesMsg["Music.playNoteTooltip"] = "Toque uma nota musical com a duração e altura específicas.";
BlocklyGamesMsg["Music.playNote"] = "tocar %1 nota %2";
BlocklyGamesMsg["Music.restTooltip"] = "Aguarde pela duração especificada.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Aguarde por uma semibreve.";
BlocklyGamesMsg["Music.rest"] = "resta %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Alterne para o instrumento específico ao tocar as notas musicais posteriores.";
BlocklyGamesMsg["Music.setInstrument"] = "ajustar o instrumento para %1";
BlocklyGamesMsg["Music.startTooltip"] = "Execute os blocos dentro quando o botão de 'Executar programa' for clicado.";
BlocklyGamesMsg["Music.start"] = "quando %1 é clicado";
BlocklyGamesMsg["Music.pitchTooltip"] = "Uma nota (C4 é 7).";
BlocklyGamesMsg["Music.firstPart"] = "primeira parte";
BlocklyGamesMsg["Music.piano"] = "piano";
BlocklyGamesMsg["Music.trumpet"] = "trompete";
BlocklyGamesMsg["Music.banjo"] = "banjo";
BlocklyGamesMsg["Music.violin"] = "violino";
BlocklyGamesMsg["Music.guitar"] = "guitarra";
BlocklyGamesMsg["Music.flute"] = "flauta";
BlocklyGamesMsg["Music.drum"] = "tambor";
BlocklyGamesMsg["Music.choir"] = "coro";
BlocklyGamesMsg["Music.submitDisabled"] = "Execute o seu programa até ele parar. Então poderá enviar a sua música para a galeria.";
BlocklyGamesMsg["Music.galleryTooltip"] = "Abra a galeria de música.";
BlocklyGamesMsg["Music.galleryMsg"] = "Ver a galeria";
BlocklyGamesMsg["Music.submitTooltip"] = "Envie a sua música para a galeria.";
BlocklyGamesMsg["Music.submitMsg"] = "Enviar para a galeria";
BlocklyGamesMsg["Music.helpUseFunctions"] = "A sua solução funcionou, mas pode fazer melhor. Utilize as funções para reduzir a quantidade de código repetido.";
BlocklyGamesMsg["Music.helpUseInstruments"] = "A música soará melhor se usar um instrumento diferente em cada bloco inicial.";
BlocklyGamesMsg["Music.helpText1"] = "Componha as primeiras quatro notas de 'Frère Jacques'.";
BlocklyGamesMsg["Music.helpText2a"] = "Uma 'função' permite agrupar os blocos, e depois executá-los mais de uma vez.";
BlocklyGamesMsg["Music.helpText2b"] = "Crie uma função para tocar as quatro primeiras notas de 'Frère Jacques'. Execute essa função duas vezes. Não acrescente novos blocos de notas.";
BlocklyGamesMsg["Music.helpText3"] = "Crie uma segunda função para a próxima parte de 'Frère Jacques'. A última nota é mais longa.";
BlocklyGamesMsg["Music.helpText4"] = "Crie uma terceira função para a próxima parte de 'Frère Jacques'. As primeiras quatro notas são mais curtas.";
BlocklyGamesMsg["Music.helpText5"] = "Complete toda a cantiga de 'Frère Jacques'.";
BlocklyGamesMsg["Music.helpText6a"] = "Este bloco novo permite que mude para outro instrumento.";
BlocklyGamesMsg["Music.helpText6b"] = "Tocar a sua ária com um violino.";
BlocklyGamesMsg["Music.helpText7a"] = "Este novo bloco acrescenta um temporizador silencioso.";
BlocklyGamesMsg["Music.helpText7b"] = "Crie um segundo bloco inicial que tenha dois blocos silenciosos, e então toque 'Frère Jacques'.";
BlocklyGamesMsg["Music.helpText8"] = "Cada bloco inicial deve tocar 'Frère Jacques' duas vezes.";
BlocklyGamesMsg["Music.helpText9"] = "Crie quatro blocos iniciais que toquem 'Frère Jacques' duas vezes. Acrescente o número correto dos blocos silenciosos.";
BlocklyGamesMsg["Music.helpText10"] = "Componha o que o que quiseres. Tens uma grande quantidade de blocos novos que podes explorar. Divirta-se!";
BlocklyGamesMsg["Music.helpText10Reddit"] = "Utilize o botão \"Ver Galeria\" para ver o que as outras pessoas compuseram. Se compuser algo interessante, use o botão \"Enviar para a Galeria\" para publicar.";
BlocklyGamesMsg["Pond.scanTooltip"] = "Buscar inimigos. Especifique uma direção(0-360). Retorna a distancia do inimigo mais próximo naquela direção. Retorna infinito se nenhum inimigo for encontrado.";
BlocklyGamesMsg["Pond.cannonTooltip"] = "Disparar o canhão. Especificar uma direção (0-360) e um intervalo (0-70).";
BlocklyGamesMsg["Pond.swimTooltip"] = "Nadar para a frente. Especificar uma direção (0-360).";
BlocklyGamesMsg["Pond.stopTooltip"] = "Parar de nadar. O jogador vai abrandar até parar.";
BlocklyGamesMsg["Pond.healthTooltip"] = "Retorna a condição atual do jogador (0 esta morto, 100 esta saudável).";
BlocklyGamesMsg["Pond.speedTooltip"] = "Retorna a velocidade atual do jogador (0 esta parado, 100 é a velocidade máxima).";
BlocklyGamesMsg["Pond.locXTooltip"] = "Retorna a coordenada X do jogador (0 é a margem esquerda, 100 é a margem direita).";
BlocklyGamesMsg["Pond.locYTooltip"] = "Retorna a  coordenada Y do jogador (0 é a margem inferior, 100 é a margem superior).";
BlocklyGamesMsg["Pond.logTooltip"] = "Imprime um número na consola do seu browser.";
BlocklyGamesMsg["Pond.docsTooltip"] = "Mostrar a documentação de idioma.";
BlocklyGamesMsg["Pond.documentation"] = "Documentação";
BlocklyGamesMsg["Pond.playerName"] = "Jogador";
BlocklyGamesMsg["Pond.targetName"] = "Alvo";
BlocklyGamesMsg["Pond.pendulumName"] = "Pêndulo";
BlocklyGamesMsg["Pond.scaredName"] = "Assustado";
BlocklyGamesMsg["Pond.helpUseScan"] = "A sua solução funciona, mas pode fazer melhor. Use 'scan' para mostrar ao canhão a que distância atirar.";
BlocklyGamesMsg["Pond.helpText1"] = "Use o comando 'cannon' para atingir o alvo. O primeiro parâmetro é o ângulo, o segundo é o alcance. Encontre a combinação certa.";
BlocklyGamesMsg["Pond.helpText2"] = "Este destino tem de ser atingido muitas vezes. Utilizar um ciclo 'while (true)' para fazer algo indefinidamente.";
BlocklyGamesMsg["Pond.helpText3a"] = "Esse oponente move-se para frente e para trás, fazendo difícil acertá-lo. A Expressão 'scan' retorna a distância até ao oponente naquela direção.";
BlocklyGamesMsg["Pond.helpText3b"] = "Este alcance é exatamente o que o comando 'cannon' precisa para atirar precisamente.";
BlocklyGamesMsg["Pond.helpText4"] = "Esse oponente está muito longe para usar o canhão (que tem um alcance de 70 metros). Em vez disso, use o comando 'swim' para começar a nadar até o oponente e abalroá-lo.";
BlocklyGamesMsg["Pond.helpText5"] = "Este oponente também esta muito longe para usar o canhão. Mas você está muito fraco para sobreviver uma colisão. Nade até o oponente enquanto a sua posição horizontal seja menor que 50. Então pare e use o canhão.";
BlocklyGamesMsg["Pond.helpText6"] = "Este oponente irá afastar-se quando atingido. Nade até ele se estiver fora do alcance (70 metros).";
BlocklyGamesMsg["Gallery"] = "Galeria";
