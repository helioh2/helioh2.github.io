// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "unsur";
BlocklyMsg["UNNAMED_KEY"] = "bêname";
BlocklyMsg["TODAY"] = "Ewro";
BlocklyMsg["DUPLICATE_BLOCK"] = "Zewnc";
BlocklyMsg["ADD_COMMENT"] = "Tefsir cı ke";
BlocklyMsg["REMOVE_COMMENT"] = "Tefsiri Wedare";
BlocklyMsg["DUPLICATE_COMMENT"] = "Mışewreyo zewnc";
BlocklyMsg["EXTERNAL_INPUTS"] = "Cıkewtışê xarıciyi";
BlocklyMsg["INLINE_INPUTS"] = "Cıkerdışê xomiyani";
BlocklyMsg["DELETE_BLOCK"] = "Bloki bestere";
BlocklyMsg["DELETE_X_BLOCKS"] = "%1 blokan bestere";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Pêro %1 bloki besteriyê?";
BlocklyMsg["CLEAN_UP"] = "Blokan pak ke";
BlocklyMsg["COLLAPSE_BLOCK"] = "Bloki teng ke";
BlocklyMsg["COLLAPSE_ALL"] = "Kılitkerdışan teng ke";
BlocklyMsg["EXPAND_BLOCK"] = "Bloki hera ke";
BlocklyMsg["EXPAND_ALL"] = "Kılitkerdışan hera ke";
BlocklyMsg["DISABLE_BLOCK"] = "Çengi devre ra vec";
BlocklyMsg["ENABLE_BLOCK"] = "Bloki feal ke";
BlocklyMsg["HELP"] = "Peşti";
BlocklyMsg["UNDO"] = "Peyser bıgê";
BlocklyMsg["REDO"] = "Newe ke";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Erci bıvurne:";
BlocklyMsg["RENAME_VARIABLE"] = "Vuriyayey fına name ke...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Pêro vırnayışê '%1' reyna name ke:";
BlocklyMsg["NEW_VARIABLE"] = "Vuriyayeyo bıvıraz...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Vurriyayoğê rêze vıraze...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Vurriyayoğê amari vıraze...";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Vurriyayoğê rengi vıraze...";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Tewrê vurriyayoğê neweyi:";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Tewrê vurriyayoğê neweyi:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Yew vırnayış be namey '%1' xora est.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Vurnaye be nameyê '%1' ra be babetê bini ra esto: '%2'";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "%1 ke vırnayışê '%2'i gırweneno, besteriyo?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Vurniyaye '%1' nêşeno besteriyo, çıke parçeyê şınasnayışiyê fonksiyonê '%2'yo";
BlocklyMsg["DELETE_VARIABLE"] = "Şıma vırnaoğê '%1'i besterê";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://diq.wikipedia.org/wiki/Reng";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Şıma palet ra yew reng weçinê.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "rengo rastameye";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Tesadufi yu ren bıweçin";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "komponentên rengan";
BlocklyMsg["COLOUR_RGB_RED"] = "sur";
BlocklyMsg["COLOUR_RGB_GREEN"] = "kesk";
BlocklyMsg["COLOUR_RGB_BLUE"] = "kewe";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Şıma renganê sûr, aşıl u kohoy ra rengê do spesifik vırazê. Gani ê pêro 0 u 100 miyan de bıbê.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "tewde";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "reng 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "reng 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "nısbet";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "%1 fıni tekrar ke";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "bıke";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Şıma tayêna reyi akerdışi kerê.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "Tekrar kerdış de";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "hend tekrar ke";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Yew erc raşto se yu beyanat bıd.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Yew erc xırabo se tay beyanati bıd";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "Pê amarêno %1 %2 ra %3 rê , herg gam de %4 vurnayışi";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "Lista %2 de her item %1 rê";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Yew lista de her item rê, varyansê '%1' itemi rê vırazê, u dıma tayê akerdışi (beyani) bıdê";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "Çerxen ra vec";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "Gama bin da çerxeni ra dewam ke";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Öujtewada çerxeni ra bıvıci";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Diqat: No bloke şeno teyna yew çerxiyayış miyan de bıgırweyo.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Eger yew vaye raşto, o taw şıma tayê akerdışi kerê.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "eke";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "eke nêyo";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "eke çıniyo";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Bloq da if'i rê yu şert dekerê de.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Debiyaye dı erci zey pêyêse ercê \"True\" dane.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Eger her dı cıkewtışi zi raştê, şıma ageyrê.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "û";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "ya zi";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "%1 niyo";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "raşt";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "ğelet";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Raşt yana çep erc dano";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "veng";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Veng çarneno ra.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "eke raşto";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "eke ğeleto";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Şerta'test'i test keno.  Eger ke şert raşta se erca 'raşt'i çarneno, çepo se erca 'çep'  çarneno.";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://diq.wikipedia.org/wiki/Numre";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Yew numre.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";
BlocklyMsg["MATH_TRIG_COS"] = "cos";
BlocklyMsg["MATH_TRIG_TAN"] = "tan";
BlocklyMsg["MATH_TRIG_ASIN"] = "arcsin";
BlocklyMsg["MATH_TRIG_ACOS"] = "arccos";
BlocklyMsg["MATH_TRIG_ATAN"] = "arctan";
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Aritmetik";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Arêdayışê dı amara tadê";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ferqê dı amara tadê";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Reyina dı amara tadê";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Letey iya dı amara tadê";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number.";  // untranslated
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "karekok";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Karerêçê yew amarer tadê";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "mutlaq";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Ercê mutlaqê yew amarer tadê";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Nêrazibiyena yew amari açarne.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Tebi algoritmaya yew amarer tadê";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Logaritmay 10i yew amari rê peyser tadê";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "E quwetê yew amar tadano.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Quweta yew amariya 10ıne tade.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://diq.wikipedia.org/wiki/Fonksiyonê_trigonometriye";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Sinusi yew derece tadê (radyan niyo)";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Derecey yew kosinusi tadê (radyan niyo)";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Tanjantê yew derecey tadê (radyan niyo)";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Arksinusê yew amari açarne.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Arkkosinusê yew amari açarne.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Arktangensê yew amari açarne.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Sabitanê wertağan ra yew açarne: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (bêpeyniye).";
BlocklyMsg["MATH_IS_EVEN"] = "zewnco";
BlocklyMsg["MATH_IS_ODD"] = "kıto";
BlocklyMsg["MATH_IS_PRIME"] = "bıngehên";
BlocklyMsg["MATH_IS_WHOLE"] = "tamo";
BlocklyMsg["MATH_IS_POSITIVE"] = "pozitifo";
BlocklyMsg["MATH_IS_NEGATIVE"] = "negatifo";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "Leteyêno";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.";  // untranslated
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "%2, keno %1 vurneno";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Add a number to variable '%1'.";  // untranslated
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";  // untranslated
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Yu amorer loğê cêri yana cori ke";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "gılor ke";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "Loğê cori ke";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "Loğê cêri ke";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "koma liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Return the sum of all the numbers in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "Tewr qıcê lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Lista de tewr qıckek amar tadê";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "Tewr gırdê lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Lista de amara tewr qıckeke tadê";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "Averacê lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "Wertey lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Lista ra amara werti tadê";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "listey modi";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Standart ferqıziya lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "Raştamaye objeya lista";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Liste ra yew elemento rastameye açarne.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "%1 ÷ %2 ra menden";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Mendeyan ra teqsimkerdışê dı amaran açarne.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Raştamaye nimande amor";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://diq.wikipedia.org/wiki/Atan2";
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2, X:%1 Y:%2";
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Yu herfa,  satır yana çekuya metini";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "ya metin vıraz";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "gıre de";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Yew işaret nuşteyi ke.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "rê %1 Metin dek %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "dergiya %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 vengo";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "metın de %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "vıraştışê nuşteyê verêni bıvêne";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "vıraştışê nuşteyê verêni bıvêne";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "metın de %1 %2";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "Herfa # bıgi";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "herfa # peyêne ra bıgê";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "Herfa sıfti bıgi";
BlocklyMsg["TEXT_CHARAT_LAST"] = "herfa peyêne bıgê";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "Raştamaye yu herf bıgi";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Şınasnaye pozisyon de yu herfer çerğ keno";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Tay letey metini çerğ keno";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "metın de";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "rêza bınêne herfa # ra bıgê";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "rêza bınêne herfa # peyêne ra bıgê";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "heta herfa #";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "heta herfa # peyêne";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "heta herfa peyêne";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "HERFANÊ GIRDANA";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "Herfanê werdiyana";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Ser herf gırd";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "%1 çap";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Seba yew numreya karber persiyê";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Seba tay metinan karberi persiyê";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "%1 miyan de %2 bımare";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "%1 heruna ra zerrey  %3 zerrey %2 ya bıvurne";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "karakteranê %1 weçarne";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "lista venge vıraze";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "Liste ya vıraz";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "liste";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Yew işaret liste ke.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "dergiya %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Derganiya yu lister dano.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 vengo";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Eger kı lista venga se raşt keno çerğ";
BlocklyMsg["LISTS_INLIST"] = "lista de";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "vıraştışê işaretê verêni bıvêne";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "vıraştışê nuşteyê verêni bıvêne";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "bıgê";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "Bıgi u wedarne";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "wedare";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# peyniye ra";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "verên";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "peyên";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "raştameye";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 objeyo sıfteyên o";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 objeyo peyên o";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Lista de obcey sıfteyıni tadano";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Lista de obcey peyêni tadano";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Lista de obcey raşt ameyayi tadano";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Lista de obcey sıfteyıni wedareno";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Lista de obcey peyêni wedareno";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Lista de obcey raşt ameyayi wedareno";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "ca ke";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "De fi";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "zey";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Lista de obcey sıfteyıni eyar keno";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Lista de obcey peyêni eyar keno";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Lista de obcey raşt ameyayi eyar keno";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "lista # ra lista bınêne bıgêrê";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "verênde lista bınêne bıgêrê";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "#'ya";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "Peyni # ra hetana";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "Hetana pey";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "%1 %2 %3 weçine";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Kopyay yew lista rêz kerê";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "zeydıyen";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "Kemeyen";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "Amoriyal";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "Alfabetik";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabetik, nezeri mekerên";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "metini ra lista bıkerê";
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "Lista ra metin bıkerê";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "Hududoxi ya";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "%1 dimlaşt kerê";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Yew kopyaya yew lista dimlaşt kerê.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Ercê nê vurnayoği tadano";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "'%1 bınuse' vıraze";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "%1 ra %2 rê eyar kerê";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "'%1 bıwane' vıraze";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "rê";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "Çıyê bık";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "ebe:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "ebe:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Yew fonksiyono çap nêdate vırazeno";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Nê fonksiyoni beyan ke...";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "peyser biya";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Yew fonksiyono çap daye vırazeno";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "ifade rê mısade bıde";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Tembe: Nê fonksiyoni de parametreyê dıleti estê.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "cıkewtışi";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "namey cıkewtışi:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Funksiyoni rê yew cıkewtış ilawe ke.";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "'%1' vıraze";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Çiyê vace...";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Caygurenayışi";
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "TEMAM";
BlocklyMsg["DIALOG_CANCEL"] = "Bıtexelne";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "bıke";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "bıke";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "bıke";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "bıke";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "eke";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "eke nêyo";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "eke çıniyo";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "unsur";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "unsur";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "unsur";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "unsur";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "lista de";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "lista de";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "lista de";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "lista de";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "rê";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "Çıyê bık";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Nê fonksiyoni beyan ke...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Kayê Blockly";
BlocklyGamesMsg["Games.puzzle"] = "Puzzle";
BlocklyGamesMsg["Games.maze"] = "Labirent";
BlocklyGamesMsg["Games.bird"] = "Mirçıke";
BlocklyGamesMsg["Games.turtle"] = "Kesa";
BlocklyGamesMsg["Games.movie"] = "Bere";
BlocklyGamesMsg["Games.music"] = "Muzik";
BlocklyGamesMsg["Games.pondTutor"] = "Doleka musayışi";
BlocklyGamesMsg["Games.pond"] = "Golık";
BlocklyGamesMsg["Games.linesOfCode1"] = "Şıma ena sewiya be JavaScript ra 1 xete hal kerde:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Şıma ena sewiya be JavaScript ra %1 xete hal kerde:";
BlocklyGamesMsg["Games.nextLevel"] = "Seba sewiya %1 rê şıma hazırê?";
BlocklyGamesMsg["Games.finalLevel"] = "Mısabeqaya bahdoyêne rê şıma hazırê?";
BlocklyGamesMsg["Games.submitTitle"] = "Sername:";
BlocklyGamesMsg["Games.linkTooltip"] = "Qeyd ke û be blokan ra gıre de.";
BlocklyGamesMsg["Games.runTooltip"] = "Proğramo ke to nusnayo bıxebetne";
BlocklyGamesMsg["Games.runProgram"] = "Programi Akar fi";
BlocklyGamesMsg["Games.resetTooltip"] = "Proğrami vındarnı u sewiyay reset ke";
BlocklyGamesMsg["Games.resetProgram"] = "Raçarne";
BlocklyGamesMsg["Games.help"] = "Peşti";
BlocklyGamesMsg["Games.catLogic"] = "Mentıq";
BlocklyGamesMsg["Games.catLoops"] = "Dingeki";
BlocklyGamesMsg["Games.catMath"] = "Matematik";
BlocklyGamesMsg["Games.catText"] = "Metın";
BlocklyGamesMsg["Games.catLists"] = "Listeyi";
BlocklyGamesMsg["Games.catColour"] = "Reng";
BlocklyGamesMsg["Games.catVariables"] = "Vırneyeni";
BlocklyGamesMsg["Games.catProcedures"] = "Fonksiyoni";
BlocklyGamesMsg["Games.httpRequestError"] = "waştışi deyne zew problem esto";
BlocklyGamesMsg["Games.linkAlert"] = "Blokan na linkera bıhesrne\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Melûlime, '%1' be qet yew programi ra yewbini nêgêno.";
BlocklyGamesMsg["Games.xmlError"] = "Dosyaya şımaya qeydbiyayiye bar nêbena. Beno ke be versiyonê Blocklyê bini ra vıraziya?";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";  // untranslated
BlocklyGamesMsg["Games.listVariable"] = "liste";
BlocklyGamesMsg["Games.textVariable"] = "nuşte";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";  // untranslated
BlocklyGamesMsg["Games.blocks"] = "Kılitkerdışi";
BlocklyGamesMsg["Games.congratulations"] = "Tebrik kem!";
BlocklyGamesMsg["Games.helpAbort"] = "This level is extremely difficult. Would you like to skip it and go onto the next game? You can always come back later.";  // untranslated
BlocklyGamesMsg["Index.clear"] = "Agozi pêro wa bıesteri yê?";
BlocklyGamesMsg["Index.subTitle"] = "Programwananê mesti rê kayi";
BlocklyGamesMsg["Index.moreInfo"] = "Mısnayoğan rê melumat...";
BlocklyGamesMsg["Index.startOver"] = "Qayılê ke fına suru bıkerê?";
BlocklyGamesMsg["Index.clearData"] = "Melumati bestere";
BlocklyGamesMsg["Puzzle.animal1"] = "Ordege";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Pûrti";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Nıkıle";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://diq.wikipedia.org/wiki/Ordege";
BlocklyGamesMsg["Puzzle.animal2"] = "Pısınge";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Zımbêli";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Çerme";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://diq.wikipedia.org/wiki/Pısınge";
BlocklyGamesMsg["Puzzle.animal3"] = "Mêsa hemgêni";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Hemgên";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Tire";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://diq.wikipedia.org/wiki/Mêsa hemgêni";
BlocklyGamesMsg["Puzzle.animal4"] = "Qarvelık";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Qafık";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Çılm";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://diq.wikipedia.org/wiki/Qarvelık";
BlocklyGamesMsg["Puzzle.picture"] = "resım:";
BlocklyGamesMsg["Puzzle.legs"] = "şeqi:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "weçine...";
BlocklyGamesMsg["Puzzle.traits"] = "xısusiyeti:";
BlocklyGamesMsg["Puzzle.error0"] = "Muhteşem!\nBloga %1 pêro raşta.";
BlocklyGamesMsg["Puzzle.error1"] = "Tay mend bı! Ju bloqe çewta";
BlocklyGamesMsg["Puzzle.error2"] = "%1 bloqi çewti";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Pronyaye bloq çewta. Cerbnayışi rê dewam kerê";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Netican kontrol ke";
BlocklyGamesMsg["Puzzle.helpText"] = "For each animal (green), attach its picture, choose its number of legs, and make a stack of its traits.";  // untranslated
BlocklyGamesMsg["Maze.moveForward"] = "raver şo";
BlocklyGamesMsg["Maze.turnLeft"] = "şo hetê çepi";
BlocklyGamesMsg["Maze.turnRight"] = "şo hetê raşti";
BlocklyGamesMsg["Maze.doCode"] = "bıke";
BlocklyGamesMsg["Maze.elseCode"] = "eke çıniyo";
BlocklyGamesMsg["Maze.helpIfElse"] = "If-else blocks will do one thing or the other.";  // untranslated
BlocklyGamesMsg["Maze.pathAhead"] = "Eger ke verdı ray esta se";
BlocklyGamesMsg["Maze.pathLeft"] = "Eger ke çepdı ray esta se";
BlocklyGamesMsg["Maze.pathRight"] = "Eger taşt dı ray esta se";
BlocklyGamesMsg["Maze.repeatUntil"] = "hend tekrar ke";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Kaykeri yu vengeg beno revey.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Kaykeri çerğê raşti yana çepi keno";
BlocklyGamesMsg["Maze.ifTooltip"] = "If there is a path in the specified direction, then do some actions.";  // untranslated
BlocklyGamesMsg["Maze.ifelseTooltip"] = "If there is a path in the specified direction, then do the first block of actions. Otherwise, do the second block of actions.";  // untranslated
BlocklyGamesMsg["Maze.whileTooltip"] = "Repeat the enclosed actions until finish point is reached.";  // untranslated
BlocklyGamesMsg["Maze.capacity0"] = "%0 bloqê şıma mendê";
BlocklyGamesMsg["Maze.capacity1"] = "%1 bloqê şıma mendê";
BlocklyGamesMsg["Maze.capacity2"] = "%2 bloqê şıma mendê";
BlocklyGamesMsg["Maze.runTooltip"] = "Makes the player do what the blocks say.";  // untranslated
BlocklyGamesMsg["Maze.resetTooltip"] = "Kaufinayoği seraniya labirenti de rone";
BlocklyGamesMsg["Maze.helpStack"] = "Stack a couple of 'move forward' blocks together to help me reach the goal.";  // untranslated
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "On this level, you need to stack together all of the blocks in the white workspace.";  // untranslated
BlocklyGamesMsg["Maze.helpRun"] = "Run your program to see what happens.";  // untranslated
BlocklyGamesMsg["Maze.helpReset"] = "Your program didn't solve the maze. Press 'Reset' and try again.";  // untranslated
BlocklyGamesMsg["Maze.helpRepeat"] = "Reach the end of this path using only two blocks. Use 'repeat' to run a block more than once.";  // untranslated
BlocklyGamesMsg["Maze.helpCapacity"] = "You have used up all the blocks for this level. To create a new block, you first need to delete an existing block.";  // untranslated
BlocklyGamesMsg["Maze.helpRepeatMany"] = "You can fit more than one block inside a 'repeat' block.";  // untranslated
BlocklyGamesMsg["Maze.helpSkins"] = "Nê menu ra kaykerê xoyê vicnayeyi weçine.";
BlocklyGamesMsg["Maze.helpIf"] = "An 'if' block will do something only if the condition is true. Try turning left if there is a path to the left.";  // untranslated
BlocklyGamesMsg["Maze.helpMenu"] = "Click on %1 in the 'if' block to change its condition.";  // untranslated
BlocklyGamesMsg["Maze.helpWallFollow"] = "Can you solve this complicated maze? Try following the left-hand wall. Advanced programmers only!";  // untranslated
BlocklyGamesMsg["Bird.noWorm"] = "Lolıki çıniyo";
BlocklyGamesMsg["Bird.heading"] = "sername";
BlocklyGamesMsg["Bird.noWormTooltip"] = "The condition when the bird has not gotten the worm.";  // untranslated
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";  // untranslated
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";  // untranslated
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Bloqê 'if' vurnayışi rê ikoni bıploğnê";
BlocklyGamesMsg["Bird.helpElseIf"] = "Na sewiya hem 'else if' hem zi bloqê 'else' lazımo";
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Bloqey 'else' kaşê bloqe 'if' kerê.";
BlocklyGamesMsg["Turtle.moveTooltip"] = "Moves the turtle forward or backward by the specified amount.";  // untranslated
BlocklyGamesMsg["Turtle.moveForward"] = "honde raver şo";
BlocklyGamesMsg["Turtle.moveBackward"] = "honde peyser şo";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Turns the turtle left or right by the specified number of degrees.";  // untranslated
BlocklyGamesMsg["Turtle.turnRight"] = "hende şo hetê raşti";
BlocklyGamesMsg["Turtle.turnLeft"] = "hende şo hetê çepi";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Herayiya qeleme vurneno.";
BlocklyGamesMsg["Turtle.setWidth"] = "herayiye eyar kerê";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Rengê qeleme vurneno.";
BlocklyGamesMsg["Turtle.setColour"] = "rengi eyar kerê";
BlocklyGamesMsg["Turtle.penTooltip"] = "Lifts or lowers the pen, to stop or start drawing.";  // untranslated
BlocklyGamesMsg["Turtle.penUp"] = "qeleme berz ke";
BlocklyGamesMsg["Turtle.penDown"] = "qeleme rone";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Makes the turtle (circle and arrow) visible or invisible.";  // untranslated
BlocklyGamesMsg["Turtle.hideTurtle"] = "kesa bınımne";
BlocklyGamesMsg["Turtle.showTurtle"] = "kesa bımocne";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "Draws text in the turtle's direction at its location.";  // untranslated
BlocklyGamesMsg["Turtle.print"] = "çap ke";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Sets the font used by the print block.";  // untranslated
BlocklyGamesMsg["Turtle.font"] = "font";
BlocklyGamesMsg["Turtle.fontSize"] = "çapa fonti";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "qalınd";
BlocklyGamesMsg["Turtle.fontItalic"] = "İtalik";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Galeriya nusan akerê";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Galeriye bıvêne";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Nusenê ho bırışê galeriy";
BlocklyGamesMsg["Turtle.submitMsg"] = "Galeriye rê bırışe";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Şekıli teyna pê hirê blokana bınusê";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Estarey teyna pê çehar blokana bınusê";
BlocklyGamesMsg["Turtle.helpText1"] = "Çerdağ nusen yew program vıraze";
BlocklyGamesMsg["Turtle.helpText2"] = "Heruna çerdağ seba phanckışt musayışi programi bıvurnê";
BlocklyGamesMsg["Turtle.helpText3a"] = "Reng vurnayışi rê mısade dayen yew bloko newe esto:";
BlocklyGamesMsg["Turtle.helpText3b"] = "Yew astareyo zerd vıraze.";
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "verêniye x";
BlocklyGamesMsg["Movie.y1"] = "verêniye y";
BlocklyGamesMsg["Movie.x2"] = "peyniye x";
BlocklyGamesMsg["Movie.y2"] = "peyniye y";
BlocklyGamesMsg["Movie.radius"] = "çapane";
BlocklyGamesMsg["Movie.width"] = "herayiye";
BlocklyGamesMsg["Movie.height"] = "berziye";
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "çembere";
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "çargoşeyo tikın";
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "xete";
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Rengê qeleme vurneno.";
BlocklyGamesMsg["Movie.setColour"] = "rengi eyar kerê";
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Galeriya filman akerê";
BlocklyGamesMsg["Movie.galleryMsg"] = "Galeriye bıvêne";
BlocklyGamesMsg["Movie.submitTooltip"] = "Filmi bırışê galeriy";
BlocklyGamesMsg["Movie.submitMsg"] = "Galeriye rê bırışe";
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Tayê destan bıdên kesi.";
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "%1 dem de %2 bılewne";
BlocklyGamesMsg["Music.restTooltip"] = "Hendê belıkerde muhleti paweno";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Hendê noti pêro paweno";
BlocklyGamesMsg["Music.rest"] = "wexto mende %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "set instrument to %1";  // untranslated
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "şıma ke nişanê %1 tıkna";
BlocklyGamesMsg["Music.pitchTooltip"] = "Yû note (C4 7 o).";
BlocklyGamesMsg["Music.firstPart"] = "pareyo verên";
BlocklyGamesMsg["Music.piano"] = "piyano";
BlocklyGamesMsg["Music.trumpet"] = "trompet";
BlocklyGamesMsg["Music.banjo"] = "banco";
BlocklyGamesMsg["Music.violin"] = "kemane";
BlocklyGamesMsg["Music.guitar"] = "gitar";
BlocklyGamesMsg["Music.flute"] = "flute";
BlocklyGamesMsg["Music.drum"] = "dawul";
BlocklyGamesMsg["Music.choir"] = "koro";
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Galeriya muzıki akerê";
BlocklyGamesMsg["Music.galleryMsg"] = "Galeriye bıvêne";
BlocklyGamesMsg["Music.submitTooltip"] = "Muzıkê ho bırışê galeri";
BlocklyGamesMsg["Music.submitMsg"] = "Galeriye rê bırışe";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Sıfteyên çehar notanê 'Frère Jacques'i bınusnê";
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Deyıra 'Frère Jacques' pêroy temam kerê";
BlocklyGamesMsg["Music.helpText6a"] = "No bloqo newe, yewna enstrumani ravêrneno";
BlocklyGamesMsg["Music.helpText6b"] = "Melodiya ho pê kemaniya  bıcınê";
BlocklyGamesMsg["Music.helpText7a"] = "No bloko newe bêveng yew peyra manayış keno cı";
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Ravêr asnaw bıkerê. Yew het nışan ke (0-360)";
BlocklyGamesMsg["Pond.stopTooltip"] = "Asnawi verad. Kayker hêdêna vındeno";
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Konsolê browserê şıma rê yew numre çap keno";
BlocklyGamesMsg["Pond.docsTooltip"] = "Dokumananê zıwani bımocne";
BlocklyGamesMsg["Pond.documentation"] = "Dokumentasyon";
BlocklyGamesMsg["Pond.playerName"] = "Kayker";
BlocklyGamesMsg["Pond.targetName"] = "Hedef";
BlocklyGamesMsg["Pond.pendulumName"] = "Pandul";
BlocklyGamesMsg["Pond.scaredName"] = "Tersayo";
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Galeriye";
