// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "Element";
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "Today";  // untranslated
BlocklyMsg["DUPLICATE_BLOCK"] = "Kopieren";
BlocklyMsg["ADD_COMMENT"] = "Kommentar hinzufüche";
BlocklyMsg["REMOVE_COMMENT"] = "Kommentar entferne";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
BlocklyMsg["EXTERNAL_INPUTS"] = "External Inputsexterne Ingänge";
BlocklyMsg["INLINE_INPUTS"] = "interne Ingänge";
BlocklyMsg["DELETE_BLOCK"] = "Block lösche";
BlocklyMsg["DELETE_X_BLOCKS"] = "Block %1 lösche";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "All %1 Bausten lösche?";
BlocklyMsg["CLEAN_UP"] = "Clean up Blocks";  // untranslated
BlocklyMsg["COLLAPSE_BLOCK"] = "Block zusammerfalte";
BlocklyMsg["COLLAPSE_ALL"] = "Blocke zusammerfalte";
BlocklyMsg["EXPAND_BLOCK"] = "Block entfalte";
BlocklyMsg["EXPAND_ALL"] = "Blocke expandiere";
BlocklyMsg["DISABLE_BLOCK"] = "Block deaktivieren";
BlocklyMsg["ENABLE_BLOCK"] = "Block aktivieren";
BlocklyMsg["HELP"] = "Hellef";
BlocklyMsg["UNDO"] = "Undo";  // untranslated
BlocklyMsg["REDO"] = "Redo";  // untranslated
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Neie Variable...";
BlocklyMsg["RENAME_VARIABLE"] = "Die neie Variable sei Noome:";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "All \"%1\" Variable umbenenne in:";
BlocklyMsg["NEW_VARIABLE"] = "Neie Variable...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Die neie Variable sei Noome:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://hrx.wikipedia.org/wiki/Farreb";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Wähl en Farreb von der Palett.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "zufälliche Farwe";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Wähl en Farreb noh dem Zufallsprinzip.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "Färreb mit";
BlocklyMsg["COLOUR_RGB_RED"] = "rot";
BlocklyMsg["COLOUR_RGB_GREEN"] = "grün";
BlocklyMsg["COLOUR_RGB_BLUE"] = "blau";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Kreiere ene Farreb mit sellrbst definierte rot, grün und blau Wearte. All Wearte müsse zwischich 0 und 100 liehe.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "misch";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "Farreb 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "mit Farreb 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "im Verhältniss";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Vermischt 2 Farwe mit konfigurierbare Farrebverhältniss (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://hrx.wikipedia.org/wiki/For-Schleif";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "wiederhol %1 mol";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "mach";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "En Oonweisung meahrfach ausführe.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "Repetier solang";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "Repetiere bis";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Füahr die Oonweisung solang aus wie die Bedingung woahr (true) ist.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Füahr die Oonweisung solang aus wie die Bedingung falsch (false) ist.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Zähl die Variable \"%1\" von enem Startweart bis zu enem Zielweart und füahrefür jede Weart en Oonweisung aus.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "Zähl %1 von %2 bis %3 mit %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "Für Weart %1 aus der List %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Füahr en Oonweisung für jede Weart in der List aus und setzt dabei die Variable \"%1\" uff den aktuelle List Weart.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "ausbreche aus der Schleif";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "mit der nächste Iteration fortfoohre aus der Schleifa";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Die umgebne Schleif beenne.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Die Oonweisung abbreche und mit der nächste Schleifiteration fortfoohre.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warnung: Die block sollt nuar in en Schleif verwennet sin.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Wenn en Bedingung woahr (true) ist, dann füahr en Oonweisung aus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Wenn en Bedingung woahr (true) ist, dann füahr die earscht Oonweisung aus.  Ansonscht füahr die zwooite Oonweisung aus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Wenn der erschte Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Wenn der erscht Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.  Falls ken der beide Bedingungen woahr (true) ist, dann füahr die dritte Oonweisung aus.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "wenn";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "orrer wenn";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "orrer";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Hinzufüche, entferne orrer sortiere von Sektione";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "En weitre Bedingung hinzufüche.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "En orrer Bedingung hinzufüche, füahrt en Oonweisung aus falls ken Bedingung zutrifft.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Vergleich_%28Zahlen%29";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Ist woahr (true) wenn beide Wearte identisch sind.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Ist woahr (true) wenn beide Wearte unnerschiedlich sind.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Ist woahr (true) wenn der earschte Weart klener als der zwooite Weart ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Ist woahr (true) wenn der earscht Weart klener als orrer gleich gross wie zwooite Weart ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Ist woahr (true) wenn der erschte Weart grösser als der zwooite Weart ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Ist woahr (true) wenn der erschte Weart grösser als orrer gleich gross wie zwooite Weart ist.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Ist woahr (true) wenn beide Wearte woahr (true) sind.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "und";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Ist woahr (true) wenn en von der beide Wearte woahr (true) ist.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "orrer";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "net %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Ist woahr (true) wenn der Ingäweweart falsch (false) ist.  Ist falsch (false) wenn der Ingäweweart woahr (true) ist.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "woahr";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "falsch";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Ist entweder woahr (true) orrer falsch (false)";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "null";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Is NULL.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "test";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "wenn woahr";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "wenn falsch";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Üwerprüft en Bedingung \"test\". Wenn die Bedingung woahr ist weerd der \"wenn woahr\" Weart zurückgeb, annerfalls der \"wenn falsch\" Weart";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://hrx.wikipedia.org/wiki/Zoohl";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "En Zoohl.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://hrx.wikipedia.org/wiki/Grundrechenoort";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Ist die Summe zwooier Wearte.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ist die Differenz zwooier Wearte.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Ist das Produkt zwooier Wearte.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Ist der Quotient zwooier Wearte.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Ist der earschte Weart potenziert mit dem zoiten Weart.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Quadratwoorzel";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "Quadratwoorzel";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Ist die Qudratwoorzel von en Weart.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "Absolutweart";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Ist der Absolutweart von en Weart.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Negiert en Weart.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Ist der natüarliche Logarithmus von en Weart.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Ist der dekoodische Logarithmus von en Weart.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Ist Weart von der Exponentialfunktion von en Weart.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Rechnet 10 hoch Ingäbweart.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://hrx.wikipedia.org/wiki/Trigonometrie";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Ist der Sinus von en Winkel.";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Ist der Cosinus von en Winkel.";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Ist der Tangens von en Winkel.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Ist der Arcussinus von en Ingäbweart.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Ist der Arcuscosinus von en Ingabweart.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Ist der Arcustangens von en Ingäbweart.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://hrx.wikipedia.org/wiki/Mathematische_Konstante";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Mathematische Konstante wie: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) oder ∞ (unendlich).";
BlocklyMsg["MATH_IS_EVEN"] = "ist grood";
BlocklyMsg["MATH_IS_ODD"] = "ist ungrood";
BlocklyMsg["MATH_IS_PRIME"] = "ist en Primenzoohl";
BlocklyMsg["MATH_IS_WHOLE"] = "ganze Zoohl";
BlocklyMsg["MATH_IS_POSITIVE"] = "ist positiv";
BlocklyMsg["MATH_IS_NEGATIVE"] = "ist negativ";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "ist telbar/kann getelt sin doorrich";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Üwerprüft ob en Zoohl grood, ungrood, en Primenzoohl, ganzzoohlich, positiv, negativ orrer doorrich en zwooite Zoohl telbar ist.  Gebt woahr (true) orrer falsch (false) zurück.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Inkrement_und_Dekrement";
BlocklyMsg["MATH_CHANGE_TITLE"] = "mach höcher / erhöhe %1 um %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Addiert en Weart zur Variable \"%1\" hinzu.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://hrx.wikipedia.org/wiki/Runden";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "En Zoohl uff orrer ab runde.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "runde";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "uff runde";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "ab runde";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "Summe von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Ist die Summ aller Wearte in en List.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "Minimalweart von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Ist der klenste Weart in en List.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "Maximalweart en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Ist der grösste Weart in en List.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "Mittelweart en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Ist der Doorrichschnittsweart von aller Wearte in en List.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "Median von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Ist der Zentralweart von aller Wearte in en List.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "Restweart von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Findt den am häifichste voarkommend Weart in en List.  Falls ken Weart öftersch voarkomme als all annre, weard die originale List zurückgeche";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Standart/Padrong Abweichung von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Ist die standartiesierte/padronisierte Standartabweichung/Padrongabweichung von aller Wearte in der List";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "Zufallsweart von en List";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Geb en Zufallsweart aus der List zurück.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://hrx.wikipedia.org/wiki/Modulo";
BlocklyMsg["MATH_MODULO_TITLE"] = "Rest von %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Der Rest noh en Division.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "begrenze %1 von %2 bis %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Begrenzt den Weartebereich mittels von / bis Wearte. (inklusiv)";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://hrx.wikipedia.org/wiki/Zufallszahlen";
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "ganzoohlicher Zufallswearte zwischich %1 bis %2";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Generier/erzeich en ganzähliche Zufallsweart zwischich zwooi Wearte (inklusiv).";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://hex.wikipedia.org/wiki/Zufallszoohle";
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Zufallszoohl (0.0 -1.0)";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Generier/erzeich en Zufallszoohl zwischich 0.0 (inklusiv) und 1.0 (exklusiv).";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)https://hrx.wikipedia.org/wiki/Zeichenkette";
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "En Buchstoob, Text orrer Satz.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "Erstell Text aus";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Erstellt en Text doorrich das verbinne von mehre Textelemente.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "verbinne";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Hinzufüche, entfernne und sortiere von Elemente.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "En Element zum Text hinzufüche.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "An %1 Text oonhänge %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Text an die Variable \"%1\" oonhänge.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "läng %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Die Oonzoohl von Zeiche in enem Text. (inkl. Leerzeiche)";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 ist leer?";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Ist woahr (true), wenn der Text leer ist.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Findt das earste / letzte Voarkommniss von en Suchbegriffes in enem Text.  Gebt die Position von dem Begriff orrer %1 zurück.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "im Text %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "Such der Begriff sein earstes Voarkommniss";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "Suche der Begriff sein letztes Vorkommniss.";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "hol Buchstoob #";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "hol Buchstoob # von End";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "hol earschte Buchstoob";
BlocklyMsg["TEXT_CHARAT_LAST"] = "hol letztes Wort";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "hol zufälliches Buchstoob";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Extrahiear en Buchstoob von en spezifizierte Position.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Schickt en bestimmstes Tel von dem Text retuar.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in Text";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "hol substring Buchstoob #te";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "hol #te Buchstoob von hinne";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "earschte Buchstoob";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "bis Buchstoob #te";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "bis #te Buchstoob von hinne";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "bis letzte Buchstoob";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Wandelt Schreibweise von Texte um, in Grossbuchstoobe, Klenbuchstoobe orrer den earste Buchstoob von jedes Wort gross und die annre klen.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "umwandle in GROSSBUCHSTOOBE";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "umwandle in klenbuchstoobe";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "umwandle in Wörter";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Entfernt Leerzeiche vom Oonfang und / orrer End von en Text.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "entfern Leerzeiche von Oonfang und End Seite";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "entferne Leerzeiche von Oonfang Seite";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "entferne Leerzeiche von End Seite von";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "Ausgäb %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Geb den Inhalt von en Variable aus.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "Frocht noh Text mit Hinweis";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "Frächt noh Zoohl mit Hinweis";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Frocht den Benutzer noh en Zoohl.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Frocht den Benutzer noh enem Text.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "Generier/erzeich en leear List";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Generier/erzeich en leear List ohne Inhalt.";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Generier/erzeich en List mit konfigurierte Elemente.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "Erzeich List mit";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "List";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Hinzufüche, entferne und sortiere von Elemente.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "En Element zur List hinzufüche.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Erzeicht en List mit en variable Oonzoohl von Elemente";
BlocklyMsg["LISTS_REPEAT_TITLE"] = "Erzich List mit Element %1 wiederhol das %2 mol";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "länge %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Die Oonzoohl von Elemente in der List.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 ist leear?";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Ist woahr (true), wenn die List leear ist.";
BlocklyMsg["LISTS_INLIST"] = "in der List";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "Such earstes Voarkommniss";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "Such letztes Voarkommniss";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Sucht die Position (index) von en Element in der List Gebt %1 zurück wenn nixs gefunn woard.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "Nehm";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "Nehm und entfern";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "Entfern";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "#te von hinne";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "earste";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "letzte";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "zufälliches";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ist das earschte Element.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 ist das letzte Element.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Extrahiert das Element zu en definierte Stell von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Extrahiert das earste Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Extrahiert das letzte Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Extrahiert en zufälliches Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Extrahiert und entfernt das Element zu en definierte Stell von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Extrahiert und entfernt das earste Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Extrahiert und entfernt das letzte Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Extrahiert und entfernt en zufälliches Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Entfernt das Element zu en definierte Stell von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Entfernt das earste Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Entfernt das letzte Element von der List.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Entfernt en zufälliches Element von der List.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "setz";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "tue ren setz an";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "uff";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Setzt das Element zu en definierte Stell in en List.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.Setzt das earschte Element an en list.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Setzt das letzte Element an en List.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Setzt en zufälliches Element an en List.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Tut das Element ren setze an en definierte Stell an en List.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Tut das Element an en Oonfang von en List ren setze.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Oonhängt das Element zu en List sei End.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Tut das Element zufällich an en List ren setze.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "hol Unnerlist von #";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "hol Unnerliste von # vom End";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "hol Unnerliste vom Earste";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "zu #";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "zu # vom End";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "zum Letzte";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Generiert en Kopie von en definierte Tel von en List.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Gebt der Variable sein Weart zurück.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Generier/erzeiche \"Schreibe %1\"";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "Schreib %1 zu %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Setzt en Variable sei Weart.";
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Generier/erzeich \"Lese %1\"";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "zu";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "Funktionsblock";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "mit:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "mit:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "En Funktionsblock ohne Rückgäbweart.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "geb zurück";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "En Funktionsblock mit Rückgäbweart.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warnung: die Funktionsblock hot doppelt Parameter.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Ruf en Funktionsblock ohne Rückgäweart uff.";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Ruf en Funktionsblock mit Rückgäbweart uff.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "Parameter";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Variable:";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "Markiear Funktionsblock";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Generier/erzeich \"Uffruf %1\"";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Markiear Funktionsblock";
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Generier/erzeich \"Uffruf %1\"";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Wenn der earste Weart woahr (true) ist, Geb den zwooite Weart zurück.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warnung: Der Block därref nuar innich en Funktionsblock genutzt sin.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "Okay";
BlocklyMsg["DIALOG_CANCEL"] = "Abbreche";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "mach";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "mach";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "mach";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "mach";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "wenn";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "orrer wenn";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "orrer";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "Element";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "Element";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "Element";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "Element";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "in der List";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "in der List";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "in der List";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "in der List";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "zu";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "Funktionsblock";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Blockly Games";  // untranslated
BlocklyGamesMsg["Games.puzzle"] = "Puzzle";
BlocklyGamesMsg["Games.maze"] = "Labyrinth";
BlocklyGamesMsg["Games.bird"] = "Bird";  // untranslated
BlocklyGamesMsg["Games.turtle"] = "Schildkrott";
BlocklyGamesMsg["Games.movie"] = "Movie";  // untranslated
BlocklyGamesMsg["Games.music"] = "Music";  // untranslated
BlocklyGamesMsg["Games.pondTutor"] = "Pond Tutor";  // untranslated
BlocklyGamesMsg["Games.pond"] = "Pond";  // untranslated
BlocklyGamesMsg["Games.linesOfCode1"] = "You solved this level with 1 line of JavaScript:";  // untranslated
BlocklyGamesMsg["Games.linesOfCode2"] = "You solved this level with %1 lines of JavaScript:";  // untranslated
BlocklyGamesMsg["Games.nextLevel"] = "Are you ready for level %1?";  // untranslated
BlocklyGamesMsg["Games.finalLevel"] = "Are you ready for the next challenge?";  // untranslated
BlocklyGamesMsg["Games.submitTitle"] = "Title:";  // untranslated
BlocklyGamesMsg["Games.linkTooltip"] = "Speichre und auf Bausten verlinke.";
BlocklyGamesMsg["Games.runTooltip"] = "Run the program you wrote.";  // untranslated
BlocklyGamesMsg["Games.runProgram"] = "Programm ausführe";
BlocklyGamesMsg["Games.resetTooltip"] = "Stop the program and reset the level.";  // untranslated
BlocklyGamesMsg["Games.resetProgram"] = "Zurücksetze";
BlocklyGamesMsg["Games.help"] = "Hellef";
BlocklyGamesMsg["Games.catLogic"] = "Logik";
BlocklyGamesMsg["Games.catLoops"] = "Schleife";
BlocklyGamesMsg["Games.catMath"] = "Mathematik";
BlocklyGamesMsg["Games.catText"] = "Text";
BlocklyGamesMsg["Games.catLists"] = "Liste";
BlocklyGamesMsg["Games.catColour"] = "Farreb";
BlocklyGamesMsg["Games.catVariables"] = "Variable";
BlocklyGamesMsg["Games.catProcedures"] = "Funktione";
BlocklyGamesMsg["Games.httpRequestError"] = "Mit der Oonfroch hots en Problem geb.";
BlocklyGamesMsg["Games.linkAlert"] = "Tel von dein Bausten mit dem Link:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "„%1“ stimmt leider mit kenem üweren gespeicherte Programm.";
BlocklyGamesMsg["Games.xmlError"] = "Dein gespeicherte Datei könnt net gelood sin. Vielleicht woard se mit ener annre Version von Blockly erstellt.";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";  // untranslated
BlocklyGamesMsg["Games.listVariable"] = "List";
BlocklyGamesMsg["Games.textVariable"] = "Text";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";  // untranslated
BlocklyGamesMsg["Games.blocks"] = "Bausten";
BlocklyGamesMsg["Games.congratulations"] = "Congratulations!";  // untranslated
BlocklyGamesMsg["Games.helpAbort"] = "This level is extremely difficult. Would you like to skip it and go onto the next game? You can always come back later.";  // untranslated
BlocklyGamesMsg["Index.clear"] = "Delete all your solutions?";  // untranslated
BlocklyGamesMsg["Index.subTitle"] = "Games for tomorrow's programmers.";  // untranslated
BlocklyGamesMsg["Index.moreInfo"] = "Info for educators...";  // untranslated
BlocklyGamesMsg["Index.startOver"] = "Want to start over?";  // untranslated
BlocklyGamesMsg["Index.clearData"] = "Clear data";  // untranslated
BlocklyGamesMsg["Puzzle.animal1"] = "Duck";  // untranslated
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Feathers";  // untranslated
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Beak";  // untranslated
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://en.wikipedia.org/wiki/Duck";  // untranslated
BlocklyGamesMsg["Puzzle.animal2"] = "Cat";  // untranslated
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Whiskers";  // untranslated
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Fur";  // untranslated
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://en.wikipedia.org/wiki/Cat";  // untranslated
BlocklyGamesMsg["Puzzle.animal3"] = "Bee";  // untranslated
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Honey";  // untranslated
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Stinger";  // untranslated
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://en.wikipedia.org/wiki/Bee";  // untranslated
BlocklyGamesMsg["Puzzle.animal4"] = "Snail";  // untranslated
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Shell";  // untranslated
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Slime";  // untranslated
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://en.wikipedia.org/wiki/Snail";  // untranslated
BlocklyGamesMsg["Puzzle.picture"] = "picture:";  // untranslated
BlocklyGamesMsg["Puzzle.legs"] = "legs:";  // untranslated
BlocklyGamesMsg["Puzzle.legsChoose"] = "wähl …";
BlocklyGamesMsg["Puzzle.traits"] = "traits:";  // untranslated
BlocklyGamesMsg["Puzzle.error0"] = "Perfekt! All %1 Bausten sind richtich.";
BlocklyGamesMsg["Puzzle.error1"] = "Nächst! En Baustein ist falsch.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 Bausten sind falsch.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Der hervoargehobne Bausten ist falsch. Versuch das noch enmol.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Antworte üwerprüfe";
BlocklyGamesMsg["Puzzle.helpText"] = "Häng für jeden Stoot (grün) sein Flagg an, wähl sein Sproch aus und mach einen Stapel mit seine Städte.";
BlocklyGamesMsg["Maze.moveForward"] = "vorwäärts loofe";
BlocklyGamesMsg["Maze.turnLeft"] = "links abbieche";
BlocklyGamesMsg["Maze.turnRight"] = "rechts abbieche";
BlocklyGamesMsg["Maze.doCode"] = "ausfüre";
BlocklyGamesMsg["Maze.elseCode"] = "sonst";
BlocklyGamesMsg["Maze.helpIfElse"] = "Wenn-Sonst-Bausten führe das ene orrer das annre aus.";
BlocklyGamesMsg["Maze.pathAhead"] = "wenn Pad davoar ist";
BlocklyGamesMsg["Maze.pathLeft"] = "wenn Pad noh links ist";
BlocklyGamesMsg["Maze.pathRight"] = "wenn Pad noh rechts ist";
BlocklyGamesMsg["Maze.repeatUntil"] = "repetiere bis";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Bewecht den Spieler en Feld vor.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Dreht den Spieler um 90 Grad noh links orrer rechts.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Falls es ene Pad in der oongeb Richtung gebt, dann eniche Aktione ausführe.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Falls es ene Pad in der oongeb Richtung gebt, dann den earschte Aktionebausten ausführe, annerefalls den zwooite.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Die beigefüchte Aktione wiederhole, bis das Ziel erreicht woard.";
BlocklyGamesMsg["Maze.capacity0"] = "Du host noch %0 Bausten.";
BlocklyGamesMsg["Maze.capacity1"] = "Du host noch %1 Bausten.";
BlocklyGamesMsg["Maze.capacity2"] = "Du host noch %2 Bausten.";
BlocklyGamesMsg["Maze.runTooltip"] = "Der Spieler macht das, was die Bausten soogn.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Setzt den Spieler zurück an den Labyrinth sein Oonfang.";
BlocklyGamesMsg["Maze.helpStack"] = "Verbinn eniche 'loofe vorwäärts' Blöcke, um mir zu helfe um das Ziel zu erreiche.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "In dem Schicht musst du die ganze Bausten in dem weisse Oorweitsbereich zusammerstaple.";
BlocklyGamesMsg["Maze.helpRun"] = "Führ dein Programm aus, um zu siehn, was passiert.";
BlocklyGamesMsg["Maze.helpReset"] = "Führ dein Programm aus, um zu siehn, was passiert.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Computador hoon begrenzte Speicher. Erreich das End von dem Pad mit nuar zwooi Bausten. Benutz \"Wiederhole\", um en Bausten meahr als emol auszuführe.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Du host für die Schicht all Bausten uffgebraucht. Um en neie Bausten zu erstelle, musst du zuearscht en vorhandne Bausten lösche.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Du kannst mehrer Blöcke innerlich ene Block 'repeat' passe.";
BlocklyGamesMsg["Maze.helpSkins"] = "Wähl dein Lieblingsspieler vom Menü aus.";
BlocklyGamesMsg["Maze.helpIf"] = "En „Wenn“-Bausten macht etwas, falls die Bedingung woahr ist. Versuch links abzubieche, falls es enen Pad noh links gebt.";
BlocklyGamesMsg["Maze.helpMenu"] = "Klick uff %1 im 'Wenn'-Bausten um die Bedingung zu ännere.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Kannst du das komplizierte Labyrinth löse? Follich der linke Wand. Nuar für fortgeschrittne Programmierer!";
BlocklyGamesMsg["Bird.noWorm"] = "does not have worm";  // untranslated
BlocklyGamesMsg["Bird.heading"] = "heading";  // untranslated
BlocklyGamesMsg["Bird.noWormTooltip"] = "The condition when the bird has not gotten the worm.";  // untranslated
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";  // untranslated
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";  // untranslated
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Bewecht die Schildkrott um den oongeb Weart voarwäarts orrer rückwäarts.";
BlocklyGamesMsg["Turtle.moveForward"] = "vorwäarts beweche um";
BlocklyGamesMsg["Turtle.moveBackward"] = "rückwäarts beweche um";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Dreht die Schildkrott noh links orrer rechts um die oongeb Gradoonzoohl.";
BlocklyGamesMsg["Turtle.turnRight"] = "noh rechts drehe um";
BlocklyGamesMsg["Turtle.turnLeft"] = "noh links drehe um";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Ännert der Stift sein Breit.";
BlocklyGamesMsg["Turtle.setWidth"] = "Breit setze uff";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Ännert der Stift sein Fareeb.";
BlocklyGamesMsg["Turtle.setColour"] = "ännert die Farreb in";
BlocklyGamesMsg["Turtle.penTooltip"] = "Hebt orrer senkt den Stift zum Stopp orrer Start von der Zeichnung.";
BlocklyGamesMsg["Turtle.penUp"] = "Stift noh uwe";
BlocklyGamesMsg["Turtle.penDown"] = "Stift noh unne";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Macht die Schildkrott (Kreis und Peil) sichtbar orrer unsichtbar.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "Schildkrott ausblenne";
BlocklyGamesMsg["Turtle.showTurtle"] = "Schildkrott oonzeiche";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://herx.wikipedia.org/wiki/Buchdruck";
BlocklyGamesMsg["Turtle.printTooltip"] = "Zeichnet Text in der Richtung von der Schildkrott bei ehrem Standplatz.";
BlocklyGamesMsg["Turtle.print"] = "Druck";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://hrx.wikipedia.org/wiki/Schriftschnitt";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Leht die Schriftoort fest, die vom Druck-Bausten verwennet weard.";
BlocklyGamesMsg["Turtle.font"] = "Schriftoort";
BlocklyGamesMsg["Turtle.fontSize"] = "Schriftgröss";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "fett";
BlocklyGamesMsg["Turtle.fontItalic"] = "kursiv";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Turtle.submitTooltip"] = "Submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "Create a program that draws a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "Draw a yellow star.";  // untranslated
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";  // untranslated
BlocklyGamesMsg["Movie.y"] = "y";  // untranslated
BlocklyGamesMsg["Movie.x1"] = "start x";  // untranslated
BlocklyGamesMsg["Movie.y1"] = "start y";  // untranslated
BlocklyGamesMsg["Movie.x2"] = "end x";  // untranslated
BlocklyGamesMsg["Movie.y2"] = "end y";  // untranslated
BlocklyGamesMsg["Movie.radius"] = "radius";  // untranslated
BlocklyGamesMsg["Movie.width"] = "width";  // untranslated
BlocklyGamesMsg["Movie.height"] = "height";  // untranslated
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "circle";  // untranslated
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "rectangle";  // untranslated
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "line";  // untranslated
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Movie.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Open the gallery of movies.";  // untranslated
BlocklyGamesMsg["Movie.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Movie.submitTooltip"] = "Submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "play %1 note %2";  // untranslated
BlocklyGamesMsg["Music.restTooltip"] = "Waits for the specified duration.";  // untranslated
BlocklyGamesMsg["Music.restWholeTooltip"] = "Waits for one whole note.";  // untranslated
BlocklyGamesMsg["Music.rest"] = "rest %1";  // untranslated
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "set instrument to %1";  // untranslated
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "when %1 clicked";  // untranslated
BlocklyGamesMsg["Music.pitchTooltip"] = "One note (C4 is 7).";  // untranslated
BlocklyGamesMsg["Music.firstPart"] = "first part";  // untranslated
BlocklyGamesMsg["Music.piano"] = "piano";  // untranslated
BlocklyGamesMsg["Music.trumpet"] = "trumpet";  // untranslated
BlocklyGamesMsg["Music.banjo"] = "banjo";  // untranslated
BlocklyGamesMsg["Music.violin"] = "violin";  // untranslated
BlocklyGamesMsg["Music.guitar"] = "guitar";  // untranslated
BlocklyGamesMsg["Music.flute"] = "flute";  // untranslated
BlocklyGamesMsg["Music.drum"] = "drum";  // untranslated
BlocklyGamesMsg["Music.choir"] = "choir";  // untranslated
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Open the gallery of music.";  // untranslated
BlocklyGamesMsg["Music.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Music.submitTooltip"] = "Submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Compose the first four notes of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "Display the language documentation.";  // untranslated
BlocklyGamesMsg["Pond.documentation"] = "Documentation";  // untranslated
BlocklyGamesMsg["Pond.playerName"] = "Player";  // untranslated
BlocklyGamesMsg["Pond.targetName"] = "Target";  // untranslated
BlocklyGamesMsg["Pond.pendulumName"] = "Pendulum";  // untranslated
BlocklyGamesMsg["Pond.scaredName"] = "Scared";  // untranslated
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Gallery";  // untranslated
