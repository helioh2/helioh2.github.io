// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "elementas";
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "Šiandien";
BlocklyMsg["DUPLICATE_BLOCK"] = "Kopijuoti";
BlocklyMsg["ADD_COMMENT"] = "Palikti komentarą";
BlocklyMsg["REMOVE_COMMENT"] = "Pašalinti komentarą";
BlocklyMsg["DUPLICATE_COMMENT"] = "Dubliuoti Komentarą";
BlocklyMsg["EXTERNAL_INPUTS"] = "Išdėstyti stulpeliu, kai daug parametrų";
BlocklyMsg["INLINE_INPUTS"] = "Išdėstyti vienoje eilutėje";
BlocklyMsg["DELETE_BLOCK"] = "Ištrinti bloką";
BlocklyMsg["DELETE_X_BLOCKS"] = "Ištrinti %1 blokus";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Ištrinti visus %1 blokus?";
BlocklyMsg["CLEAN_UP"] = "Išvalyti blokus";
BlocklyMsg["COLLAPSE_BLOCK"] = "Suskleisti bloką";
BlocklyMsg["COLLAPSE_ALL"] = "Suskleisti blokus";
BlocklyMsg["EXPAND_BLOCK"] = "Išskleisti bloką";
BlocklyMsg["EXPAND_ALL"] = "Išskleisti blokus";
BlocklyMsg["DISABLE_BLOCK"] = "Išjungti bloką";
BlocklyMsg["ENABLE_BLOCK"] = "Įjungti bloką";
BlocklyMsg["HELP"] = "Pagalba";
BlocklyMsg["UNDO"] = "Anuliuoti";
BlocklyMsg["REDO"] = "Atkurti";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Keisti reikšmę:";
BlocklyMsg["RENAME_VARIABLE"] = "Pervardyti kintamajį...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Pervadinti visus '%1' kintamuosius į:";
BlocklyMsg["NEW_VARIABLE"] = "Sukurti kintamąjį";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Sukurti skaičiaus kintamąjį...";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Sukurti spalvos kintamąjį...";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Naujas kintamojo tipas:";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Naujo kintamojo pavadinimas:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Kintamasis, pavadinimu '%1', jau egzistuoja.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Kintamasis, pavadinimu '%1', jau egzistuoja kaip kitas tipas: '%2'.";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Ištrinti %1 '%2' panaudojimus?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Negalima ištrinti kintamojo '%1', nes jis yra dalis funkcijos '%2'";
BlocklyMsg["DELETE_VARIABLE"] = "Ištrinti „%1“ kintamąjį";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://lt.wikipedia.org/wiki/Spalva";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Pasirinkti spalvą iš paletės.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "atsitiktinė spalva";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Pasirinkti spalvą atsitiktinai.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "spalva su";
BlocklyMsg["COLOUR_RGB_RED"] = "raudona";
BlocklyMsg["COLOUR_RGB_GREEN"] = "žalia";
BlocklyMsg["COLOUR_RGB_BLUE"] = "mėlyna";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Spalvą galima sudaryti iš raudonos, žalios ir mėlynos dedamųjų. Kiekvienos intensyvumas nuo 0 iki 100.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "sumaišyk";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "1 spalva";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "2 spalva";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "santykis";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Sumaišo dvi spalvas su pateiktu santykiu (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "pakartokite %1 kartus";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "daryti";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Leidžia atlikti išvardintus veiksmus kelis kartus.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "kartok kol";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "kartok, kol pasieksi";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Kartoja veiksmus, kol sąlyga tenkinama.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Kartoja veiksmus, kol bus pasiekta nurodyta sąlyga.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Imama kintamoji '%1' reikšmė nuo pradinio skaičiaus iki pabaigos skaičiaus, skaičiuojant nustatytais intervalais ir atliekant nustatytus blokus.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "kartok, kai %1 kinta nuo %2 iki %3 po %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "kartok su kiekvienu %1 iš sąrašo %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Kartok veiksmus, kol kintamasis \"%1\" paeiliui gauna kiekvieną sąrašo reikšmę.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "nutraukti kartojimą";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "šį kartą praleisti likusius veiksmus ir tęsti kartojimą";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Nutraukia (artimiausią) vykstantį kartojimą.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Praleidžia žemiau išvardintus kartojimo veiksmus (ir tęsia darbą nuo kartojimo pradinio veiksmo).";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Atsargiai: šis blokas gali būt naudojamas tik kartojimo bloko viduje.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Jeigu sąlyga tenkinama, tai atlik veiksmus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Jei sąlyga tenkinama, atlikti jai priklausančius veiksmus, o jei ne -- atlikti kitus nurodytus veiksmus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Jei pirma sąlyga tenkinama, atlikti jai priklausančius veiksmus, O jei ne, tikrinti antrą sąlygą -- ir jei ši tenkinama, atlikti jos veiksmus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Jei pirma sąlyga tenkinama, atlikti jai priklausančius veiksmus, O jei ne, tikrinti antrą sąlygą -- ir jei ši tenkinama, atlikti jos veiksmus. Kitais atvejais -- atlikti paskutinio bloko veiksmus.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "jei";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "arba jei";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "kitu atveju";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Galite pridėt/pašalinti/pertvarkyti  sąlygų \"šakas\".";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Pridėti sąlygą „jei“ blokui.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Pridėti veiksmų vykdymo variantą/\"šaką\", kai netenkinama nė viena sąlyga.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Tenkinama, jei abu reiškiniai lygūs.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Grįžti tiesa, jeigu abi įvestys ne lygios tarpusavyje.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Grįžti tiesa, jei pirma įvestis mažesnė nei antra įvestis.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Grįžti tiesa, jei pirma įvestis mažesnė arba lygi antrajai įvesčiai.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Grįžti tiesa, jei pirmoji įvestis didesnė nei antroji įvestis.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Grįžti tiesa, jei pirma įvestis didesnė arba lygi antrajai įvesčiai.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Bus teisinga, kai abi sąlygos bus tenkinamos.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "ir";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Grįžti tiesa, jei bent viena įvestis teisinga.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "arba";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "ne %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Grįžti tiesa, jei įvestis klaidinga. Grįžti klaidinga, jei įvestis teisinga.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "tiesa";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "klaidinga";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Reikšmė gali būti \"teisinga\"/\"Taip\" arba \"klaidinga\"/\"Ne\".";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "nieko";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Reikšmė nebuvo nurodyta...";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "sąlyga";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "jei taip";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "jei ne";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Jeigu sąlygą tenkinama, grąžina pirmą reikšmę, o jei ne - antrąją.";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://lt.wikipedia.org/wiki/Skaičius";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Skaičius.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Grąžina dviejų skaičių sumą.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Grąžina dviejų skaičių skirtumą.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Grąžina dviejų skaičių sandaugą.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Grąžina dviejų skaičių dalmenį.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Grąžina pirmą skaičių pakeltą laipsniu pagal antrą skaičių.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";  // untranslated
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "kvadratinė šaknis";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Grįžti kvadratinę šaknį iš skaičiaus.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "modulis";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Skaičiaus modulis - reikšmė be ženklo (panaikina minusą).";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Grąžina skaičiui priešingą skaičių.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Grąžinti skaičiaus natūrinį logaritmą.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Grįžti 10 pagrindinių logaritmų iš skaičiaus.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Grąžinti skaičių laipsniu e.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Grąžinti skaičių laipsniu 10.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://lt.wikipedia.org/wiki/Trigonometrinės_funkcijos";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Grąžinti laipsnio sinusą (ne radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Grąžinti laipsnio kosinusą (ne radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Grąžinti laipsnio tangentą (ne radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Grąžinti skaičiaus arksinusą.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Grąžinti skaičiaus arkkosinusą.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Grąžinti skaičiaus arktangentą.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";  // untranslated
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Grįžti viena iš pagrindinių konstantų: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (begalybė).";
BlocklyMsg["MATH_IS_EVEN"] = "yra lyginis";
BlocklyMsg["MATH_IS_ODD"] = "yra nelyginis";
BlocklyMsg["MATH_IS_PRIME"] = "yra pirminis";
BlocklyMsg["MATH_IS_WHOLE"] = "yra sveikasis";
BlocklyMsg["MATH_IS_POSITIVE"] = "yra teigiamas";
BlocklyMsg["MATH_IS_NEGATIVE"] = "yra neigiamas";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "yra dalus iš";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Patikrina skaičiaus savybę: (ne)lyginis/pirminis/sveikasis/teigiamas/neigiamas/dalus iš x.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "padidink %1 (emptypage) %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Prideda skaičių prie kintamojo '%1'. Kai skaičius neigiamas - gaunasi atimtis.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://lt.wikipedia.org/wiki/Apvalinimas";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Suapvalinti skaičių į žemesnę ar aukštesnę reikšmę.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "apvalink";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "apvalink aukštyn";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "apvalink žemyn";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "suma";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "didžiausia reikšmė";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "mažiausia reikšmė sąraše";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Grįžti mažiausiu skaičiumi sąraše.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "didžiausia reikšmė sąraše";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Grįžti didžiausiu skaičiumi sąraše.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "vidurkis";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Grįžti vidurkiu (aritmetinis vidurkis) iš skaitinių reikšmių sąraše.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana sąrašui";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Grąžinti sąrašo medianą.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "statistinė moda sąrašui";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Grąžinti sąrašą dažniausių elementų sąraše.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standartinis nuokrypis sąraše";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Grįžti standartine pakraipa iš sąrašo.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "atsitiktinis elementas iš sąrašo";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Grąžinti atsitiktinį elementą iš sąrašo.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "dalybos liekana %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Grįžti likučiu nuo dviejų skaičių dalybos.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "apribok %1 tarp %2 ir %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Apriboti skaičių, kad būtų tarp nustatytų ribų (imtinai).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "atsitiktinis sveikas sk. nuo %1 iki %2";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Grįžti atsitiktinį sveikąjį skaičių tarp dviejų nustatytų ribų, imtinai.";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "atsitiktinė trupmena";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Atsitiktinė trupmena nuo 0 (imtinai) iki 1 (neimtinai).";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Tekstas (arba žodis, ar raidė)";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "sukurti tekstą su";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Sukurti teksto fragmentą sujungiant bet kokį skaičių fragmentų.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "sujunk";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Pridėti, pašalinti arba paskirstyti skyrius, kad pertvarkyti šį teksto bloką.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Pridėti teksto elementą.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "prie %1 pridėk tekstą %2";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Pridėti tekstą prie kintamojo '%1'.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "teksto %1 ilgis";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Suranda teksto simbolių kiekį (įskaitant ir tarpus)";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 yra tuščias";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Grįžti tiesa, jei numatytas tekstas tuščias.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Grąžina pirmą/paskutinę pirmo teksto reikšmę antrame tekste. Grąžina %1, jei tekstas nerastas.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "tekste %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "rask,kur pirmą kartą paminėta";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "rask,kur paskutinį kartą paminėta";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "gauti raidę #";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "raidė nuo galo #";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "gauti pirmą raidę";
BlocklyMsg["TEXT_CHARAT_LAST"] = "gauti paskutinę raidę";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "gauti atsitiktinę raidę";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Grąžina raidę į tam tikrą poziciją.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Grąžina tam tikrą teksto dalį.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "tekste";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "dalis nuo raidės #";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "dalis nuo raidės #";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "dalis nuo pradžios";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "iki raidės #";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "iki raidės nuo galo #";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "iki pabaigos";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Kitu atvėju, grąžina teksto kopiją.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "DIDŽIOSIOM RAIDĖM";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "mažosiom raidėm";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Pavadinimo Raidėmis";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Grąžina teksto kopiją, pašalinus tarpus iš vieno ar abiejų kraštų.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "išvalyk tarpus šonuose";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "išvalyk tarpus pradžioje";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "išvalyk tarpus pabaigoje";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "spausdinti %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Spausdinti nurodytą tekstą, skaičių ar kitą reikšmę.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "paprašyk įvesti tekstą :";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "paprašyk įvesti skaičių :";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prašyti vartotoją įvesti skaičių.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prašyti vartotoją įvesti tekstą.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "skaičius %1 iš %2";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Suskaičiuoti, kiek kartų šis tekstas kartojasi kitame tekste.";
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "pakeisti %1 į %2 šiame %3";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Pašalinti visas teksto dalis kitame tekste.";
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "atbulai %1";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Apversti teksto simbolių tvarką.";
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "tuščias sąrašas";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Grąžina sąrašą, ilgio 0, neturintį duomenų";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Sukurti sąrašą iš bet kokio skaičiaus elementų.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "sukurti sąrašą su";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "sąrašas";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Pridėti, pašalinti arba paskirstyti skyrius, kad pertvarkyti šį teksto bloką.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Pridėti elementą į sąrašą.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "sukurk sąrašą, kuriame %1 bus %2 kartus";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "ilgis %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Grąžina sąrašo ilgį.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 yra tuščias";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Grąžina „true“, jeigu sąrašas tuščias.";
BlocklyMsg["LISTS_INLIST"] = "sąraše";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "rask pirmą reikšmę";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "rask paskutinę reikšmę";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Grąžina pirmos/paskutinės reikšmės eilės nr. sąraše. Grąžina %1, jei reikšmės neranda.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "paimk";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "paimk ir ištrink";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "pašalinti";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# nuo galo";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "pirmas";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "paskutinis";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "atsitiktinis";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 yra pirmasis objektas.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 yra paskutinis objektas.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Gražina objektą į nurodyta poziciją sąraše.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Grąžina pirmąjį sąrašo elementą.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Grąžina paskutinį elementą iš sąrašo.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Grąžina atsitiktinį elementą iš sąrašo.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Pašalina objektą iš nurodytos vietos sąraše.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Pašalina pirmą objektą sąraše.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Pašalina paskutinį objektą sąraše.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Pašalina atsitiktinį objektą sąraše.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "priskirk elementui";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "įterpk į vietą";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "kaip";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Įterpią objektą į nurodytą poziciją sąraše.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Įterpia objektą į sąrašo pradžią.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Įterpia objektą į atsitiktinę sąrašo vietą.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "sąrašo dalis nuo #";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "sąrašo dalis nuo # nuo galo";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "sąrašo dalis nuo pradžios";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "iki #";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "iki # nuo galo";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "iki galo";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Sukuria nurodytos sąrašo dalies kopiją.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "rūšiuoti %1 %2 %3";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Rūšiuoti sąrašo kopiją.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "didėjančia tvarka";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "mažėjančia tvarka";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "skaitmeninis";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "abėcėlės";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "abecėlės, ignoruoti raidžių dydį";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "su dalikliu";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Sukurk \"priskirk %1\"";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "priskirk %1 = %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Sukurti 'kintamasis %1'";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "komanda:";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "daryk kažką";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "pagal:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "su:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Sukuria procedūrą - komandą, kuri nepateikia jokio rezultato (tik atlieka veiksmus).";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Apibūdinkite šią funkciją...";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "duok";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Sukuria funkciją - komandą, kuri ne tik atlieka veiksmus bet ir pateikia (grąžina/duoda) rezultatą.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "leisti vidinius veiksmus";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Ši komanda turi du vienodus gaunamų duomenų pavadinimus.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Vykdyti sukurtą komandą \"%1\".";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Įvykdyti komandą \"%1\" ir naudoti jos suskaičiuotą (atiduotą) reikšmę.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "gaunami duomenys (parametrai)";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Tvarkyti komandos gaunamus duomenis (parametrus).";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "parametro pavadinimas:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Pridėti funkcijos parametrą (gaunamų duomenų pavadinimą).";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Sukurti \"%1\"";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Jeigu pirma reikšmė yra teisinga (sąlyga tenkinama), grąžina antrą reikšmę.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Perspėjimas: šis blokas gali būti naudojamas tik aprašant funkciją.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Kažką pasakykite...";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "Gerai";
BlocklyMsg["DIALOG_CANCEL"] = "Atšaukti";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "daryti";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "daryti";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "daryti";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "daryti";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "jei";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "arba jei";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "kitu atveju";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "elementas";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "elementas";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "elementas";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "elementas";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "sąraše";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "sąraše";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "sąraše";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "sąraše";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "komanda:";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "daryk kažką";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Apibūdinkite šią funkciją...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "„Blockly“ žaidimai";
BlocklyGamesMsg["Games.puzzle"] = "Dėlionė";
BlocklyGamesMsg["Games.maze"] = "Labirintas";
BlocklyGamesMsg["Games.bird"] = "Paukštis";
BlocklyGamesMsg["Games.turtle"] = "Vėžlys";
BlocklyGamesMsg["Games.movie"] = "Filmas";
BlocklyGamesMsg["Games.music"] = "Muzika";
BlocklyGamesMsg["Games.pondTutor"] = "Tvenkinio mokytojas";
BlocklyGamesMsg["Games.pond"] = "Tvenkinys";
BlocklyGamesMsg["Games.linesOfCode1"] = "Jūs įveikėte šį lygį su 1 JavaScript kodo eilute:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Jūs įveikėte šį lygį su %1 JavaScript kodo eilutėmis:";
BlocklyGamesMsg["Games.nextLevel"] = "Ar jūs pasiruošę lygiui %1?";
BlocklyGamesMsg["Games.finalLevel"] = "Ar esate pasirengęs kitam iššūkiui?";
BlocklyGamesMsg["Games.submitTitle"] = "Pavadinimas:";
BlocklyGamesMsg["Games.linkTooltip"] = "Išsaugoti (sugeneruoti URL nuorodą).";
BlocklyGamesMsg["Games.runTooltip"] = "Paleisti jūsų parašytą programą.";
BlocklyGamesMsg["Games.runProgram"] = "Paleisti programą";
BlocklyGamesMsg["Games.resetTooltip"] = "Paleisti programą ir atkurti lygį.";
BlocklyGamesMsg["Games.resetProgram"] = "Iš naujo";
BlocklyGamesMsg["Games.help"] = "Pagalba";
BlocklyGamesMsg["Games.catLogic"] = "Logika";
BlocklyGamesMsg["Games.catLoops"] = "Kartojimas";
BlocklyGamesMsg["Games.catMath"] = "Matematika";
BlocklyGamesMsg["Games.catText"] = "Tekstas";
BlocklyGamesMsg["Games.catLists"] = "Sąrašai";
BlocklyGamesMsg["Games.catColour"] = "Spalva";
BlocklyGamesMsg["Games.catVariables"] = "Kintamieji";
BlocklyGamesMsg["Games.catProcedures"] = "Funkcijos";
BlocklyGamesMsg["Games.httpRequestError"] = "Iškilo problema su prašymu.";
BlocklyGamesMsg["Games.linkAlert"] = "%1";
BlocklyGamesMsg["Games.hashError"] = "Deja, '%1' neatitinka jokios išsaugotos programos.";
BlocklyGamesMsg["Games.xmlError"] = "Nesuprantu pateikto failo. Gal jis buvo sukurtas su kita Blocky versija?";
BlocklyGamesMsg["Games.submitted"] = "Ačiū už programą! Jei mūsų protingų beždžionių komandai ji patiks, mes ją publikuosime savo galerijoje per artimiausias dienas.";
BlocklyGamesMsg["Games.listVariable"] = "sąrašas";
BlocklyGamesMsg["Games.textVariable"] = "tekstas";
BlocklyGamesMsg["Games.breakLink"] = "Jei pradėsite redaguoti JavaScript nebegalėsite redaguoti blokų, sutinkate?";
BlocklyGamesMsg["Games.blocks"] = "Blokai";
BlocklyGamesMsg["Games.congratulations"] = "Sveikiname!";
BlocklyGamesMsg["Games.helpAbort"] = "Šis lygis yra itin sudėtingas. Ar norėtumėte jį praleisti ir pereiti prie kito žaidimo? Visada galite sugrįžti vėliau.";
BlocklyGamesMsg["Index.clear"] = "Ištrinti visus sprendimus?";
BlocklyGamesMsg["Index.subTitle"] = "Žaidimai rytojaus programuotojams.";
BlocklyGamesMsg["Index.moreInfo"] = "Informacija švietėjams...";
BlocklyGamesMsg["Index.startOver"] = "Norite pradėti iš naujo?";
BlocklyGamesMsg["Index.clearData"] = "Išvalyti duomenis";
BlocklyGamesMsg["Puzzle.animal1"] = "Antis";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Plunksnos";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Snapas";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://lt.wikipedia.org/wiki/Antis";
BlocklyGamesMsg["Puzzle.animal2"] = "Katė";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Ūsai";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Kailis";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://lt.wikipedia.org/wiki/Katė";
BlocklyGamesMsg["Puzzle.animal3"] = "Bitė";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Medus";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Geluonis";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://lt.wikipedia.org/wiki/Bitė";
BlocklyGamesMsg["Puzzle.animal4"] = "Sraigė";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Kiautas";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Gleivės";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://lt.wikipedia.org/wiki/Sraigė";
BlocklyGamesMsg["Puzzle.picture"] = "nuotrauka:";
BlocklyGamesMsg["Puzzle.legs"] = "kojos:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "pasirinkti...";
BlocklyGamesMsg["Puzzle.traits"] = "požymiai:";
BlocklyGamesMsg["Puzzle.error0"] = "Puiku!\nVisi %1 blokai yra teisingi.";
BlocklyGamesMsg["Puzzle.error1"] = "Beveik! Vienas blokas yra neteisingas.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 blokai yra neteisingi.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Paryškintas blokas yra neteisingas.\nToliau bandykite.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Patikrinti atsakymus";
BlocklyGamesMsg["Puzzle.helpText"] = "Kiekvienam gyvūnui (žali) pridėk jo paveikslėlį, parink kojų skaičių ir padaryk jo požymių krūvelę.";
BlocklyGamesMsg["Maze.moveForward"] = "judėti į priekį";
BlocklyGamesMsg["Maze.turnLeft"] = "sukti į kairę";
BlocklyGamesMsg["Maze.turnRight"] = "sukti į dešinę";
BlocklyGamesMsg["Maze.doCode"] = "daryti";
BlocklyGamesMsg["Maze.elseCode"] = "kitas";
BlocklyGamesMsg["Maze.helpIfElse"] = "Leidžia pasirinkti vieną iš dviejų variantų";
BlocklyGamesMsg["Maze.pathAhead"] = "jei galima eiti pirmyn";
BlocklyGamesMsg["Maze.pathLeft"] = "jei yra kelias į kairę";
BlocklyGamesMsg["Maze.pathRight"] = "jei yra kelias į dešinę";
BlocklyGamesMsg["Maze.repeatUntil"] = "kartoti iki";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Veikėjas paeis į priekį per vieną langelį";
BlocklyGamesMsg["Maze.turnTooltip"] = "Veikėjas Pasisuks į kairę/dešinę 90 laipsnių";
BlocklyGamesMsg["Maze.ifTooltip"] = "Jei yra kelias nurodytoj krypty, atlikt veiksmus.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Jei nurodyta kryptimi yra kelias, atlik pirmosios šakos komandas. O jei ne - antrosios.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Kartoti išvardintus veiksmus pagal sąlygą.";
BlocklyGamesMsg["Maze.capacity0"] = "Jums liko %0 blokų.";
BlocklyGamesMsg["Maze.capacity1"] = "Jums liko %1 blokas.";
BlocklyGamesMsg["Maze.capacity2"] = "Jums liko %2 blokai.";
BlocklyGamesMsg["Maze.runTooltip"] = "Veikėjas darys tai, kas nurodyta blokuose-komandose.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Perkelti veikėją į pradinį tašką.";
BlocklyGamesMsg["Maze.helpStack"] = "Sujunkite kelis 'pirmyn' blokus kartu, kad pasiekčiau tikslą.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Šiame lygyje visi naudojami blokai turi būti sujungti.";
BlocklyGamesMsg["Maze.helpRun"] = "Paspauskite „Vykdyti”, ir pamatysite, ką suprogramavote :)";
BlocklyGamesMsg["Maze.helpReset"] = "Deja, nepavyko :( Patobulinkite programą ir bandykite iš naujo ;)";
BlocklyGamesMsg["Maze.helpRepeat"] = "Įveikite atstumą naudodami tik 2 blokus. Panaudokite 'kartok' bloką ;)";
BlocklyGamesMsg["Maze.helpCapacity"] = "Jūs išnaudojote leidžiamą blokų kiekį. Norėdami panaudoti dar vieną, turite pašalinti kažkurį esantį.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "'kartok' bloko viduje galima įdėti daugiau negu vieną bloką.";
BlocklyGamesMsg["Maze.helpSkins"] = "Pasirinkite savo mėgstamą žaidėją iš šio meniu.";
BlocklyGamesMsg["Maze.helpIf"] = "'jei' blokas bus vykdomas tik esant nurodytoms aplinkybėms. Pabandyk sukt į kairę, jei ten yra kelias..";
BlocklyGamesMsg["Maze.helpMenu"] = "Norėdami pakeisti \"jei\" bloko sąlygą, spustelėkite %1.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Ar pavyks įveiki šį sudėtingą labirintą. Pamėgink visada laikytis kairės sienos ;) Skirta pažengusiems programuotojamsǃ";
BlocklyGamesMsg["Bird.noWorm"] = "neturi kirmino";
BlocklyGamesMsg["Bird.heading"] = "antraštė";
BlocklyGamesMsg["Bird.noWormTooltip"] = "Sąlyga, kai paukštis neturi kirmino.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Judėti duotojo kampo kryptimi: 0 į dešinę, 90 tiesiai ir t.t.";
BlocklyGamesMsg["Bird.positionTooltip"] = "x ir y žymi paukščio poziciją. Kai x = 0 paukštis yra netoli kairiojo krašto, kai x = 100 jis yra netoli dešiniojo krašto. Kai y = 0 paukštis yra apačioje, kai y = 100 jis yra viršuje.";
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Paspauskite ant ikonos, kad pakeistumėte „arba“ bloką.";
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Perkelia vėžliuką pirmyn/atgal nurodytu atstumu (skaičiuojamu ekrano taškais).";
BlocklyGamesMsg["Turtle.moveForward"] = "pirmyn";
BlocklyGamesMsg["Turtle.moveBackward"] = "atgal";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Pasuka vėžliuką kairėn/dešinėn tiek, kiek nurodyta laipsnių.";
BlocklyGamesMsg["Turtle.turnRight"] = "pasisuk dešinėn";
BlocklyGamesMsg["Turtle.turnLeft"] = "kairėn";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Keičia pieštuko storį.";
BlocklyGamesMsg["Turtle.setWidth"] = "nustatyti plotį";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Keičia pieštuko spalvą";
BlocklyGamesMsg["Turtle.setColour"] = "nustatyti spalvą";
BlocklyGamesMsg["Turtle.penTooltip"] = "Įjungia/išjungia piešimą. Tarsi nuleidžia/pakelia pieštuką ant/nuo lapo.";
BlocklyGamesMsg["Turtle.penUp"] = "atitrauk pieštuką nuo lapo";
BlocklyGamesMsg["Turtle.penDown"] = "priliesk pieštuką prie lapo";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Paslėpia/parodo \"vėžliuką\"-pieštuką.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "slėpti vėžlį";
BlocklyGamesMsg["Turtle.showTurtle"] = "rodyti vėžlį";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "Vėžliukas parašo (nupiešia) tekstą savo žiūrima kryptimi.";
BlocklyGamesMsg["Turtle.print"] = "spausdinti";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Nustato spausdinimo komandai šriftą.";
BlocklyGamesMsg["Turtle.font"] = "šriftas";
BlocklyGamesMsg["Turtle.fontSize"] = "šrifto dydis";
BlocklyGamesMsg["Turtle.fontNormal"] = "normalus";
BlocklyGamesMsg["Turtle.fontBold"] = "paryškintas";
BlocklyGamesMsg["Turtle.fontItalic"] = "pasvirasis";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Vykdykite programą, kol ji sustos. Tada galite pateikti savo piešinį į galeriją.";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Atidaryti piešinių galeriją.";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Žiūrėti galeriją";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Pateikti savo piešinį į galeriją.";
BlocklyGamesMsg["Turtle.submitMsg"] = "Įkelti galerijon";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Tavo sprendinys veikia, tačiau tu gali geriau.";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Nupiešk figūrą tik iš trijų blokų.";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Nupiešk žvaigždė tik su keturiais blokais.";
BlocklyGamesMsg["Turtle.helpText1"] = "Sukurk programą, kuri piešia kvadratą.";
BlocklyGamesMsg["Turtle.helpText2"] = "Pakeisk savo programą, kad ji piešų penkiakampį vietoje kvadrato.";
BlocklyGamesMsg["Turtle.helpText3a"] = "Yra naujas blokas, kuris leidžia jums keisti spalvą:";
BlocklyGamesMsg["Turtle.helpText3b"] = "Pieškite geltoną žvaigždę.";
BlocklyGamesMsg["Turtle.helpText4a"] = "Yra naujas blokas, kuris leidžia jums pakelti rašiklį nuo popieriaus kai judate:";
BlocklyGamesMsg["Turtle.helpText4b"] = "Nupiešk mažą geltoną žvaigždę, tada nupiešk liniją virš jos.";
BlocklyGamesMsg["Turtle.helpText5"] = "Vietoje vienos žvaigždės ar gali nupiešti keturias, kurios sudarytų kvadratą?";
BlocklyGamesMsg["Turtle.helpText6"] = "Nupiešk tris geltonas žvaigždes ir vieną liniją.";
BlocklyGamesMsg["Turtle.helpText7"] = "Nupiešk žvaigždes, tada nupiešk keturias baltas linijas.";
BlocklyGamesMsg["Turtle.helpText8"] = "Nupiešiant 360 baltų linijų jos atrodys kaip pilnatis.";
BlocklyGamesMsg["Turtle.helpText9"] = "Ar galite pridėti juodą apskritimą, kad mėnulis taptu pusmėnuliu?";
BlocklyGamesMsg["Turtle.helpText10"] = "Pieškite tai, ką norite. Turite daug naujų blokų tyrinėjimui. Pasilinksminkite!";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Norėdami pamatyti, ką kiti žmonės nupiešė, naudokite mygtuką „Žiūrėti galeriją“. Jei nupiešite ką nors įdomaus, paskelbkite jį naudodami mygtuką „Pateikti į galeriją“.";
BlocklyGamesMsg["Turtle.helpToolbox"] = "Pasirinkite kategoriją norėdami pamatyti blokus.";
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "pradėti x";
BlocklyGamesMsg["Movie.y1"] = "pradėti y";
BlocklyGamesMsg["Movie.x2"] = "pabaiga x";
BlocklyGamesMsg["Movie.y2"] = "pabaiga y";
BlocklyGamesMsg["Movie.radius"] = "spindulys";
BlocklyGamesMsg["Movie.width"] = "plotis";
BlocklyGamesMsg["Movie.height"] = "aukštis";
BlocklyGamesMsg["Movie.circleTooltip"] = "Nupiešia apskritimą nurodytoje vietoje ir su nurodytu spinduliu.";
BlocklyGamesMsg["Movie.circleDraw"] = "apskritimas";
BlocklyGamesMsg["Movie.rectTooltip"] = "Nupiešia stačiakampį nurodytoje vietoje ir su nurodytu pločiu ir aukščiu.";
BlocklyGamesMsg["Movie.rectDraw"] = "stačiakampis";
BlocklyGamesMsg["Movie.lineTooltip"] = "Nupiešia liniją iš vieno taško į kitą su nurodytu pločiu.";
BlocklyGamesMsg["Movie.lineDraw"] = "linija";
BlocklyGamesMsg["Movie.timeTooltip"] = "Grąžina esamą animacijos laiką (0–100).";
BlocklyGamesMsg["Movie.colourTooltip"] = "Keičia pieštuko spalvą.";
BlocklyGamesMsg["Movie.setColour"] = "nustatyti spalvą į";
BlocklyGamesMsg["Movie.submitDisabled"] = "Jūsų filmas nejuda. Naudokite blokus, kad sukurtumėte kažką įdomaus. Tada galėsite siųsti savo filmą į galeriją.";
BlocklyGamesMsg["Movie.galleryTooltip"] = "Atidaryti filmų galeriją.";
BlocklyGamesMsg["Movie.galleryMsg"] = "Žiūrėti galeriją";
BlocklyGamesMsg["Movie.submitTooltip"] = "Pateikti savo filmą į galeriją.";
BlocklyGamesMsg["Movie.submitMsg"] = "Įkelti galerijon";
BlocklyGamesMsg["Movie.helpLayer"] = "Perkelkite fono apskritimą į programos viršų.  Tada jis atsiras už žmogaus.";
BlocklyGamesMsg["Movie.helpText1"] = "Naudokite paprastas formas žmogaus piešimui.";
BlocklyGamesMsg["Movie.helpText2a"] = "Šis lygis yra filmas. Norite, kad žmogaus ranka judėtų per ekraną. Paspauskite paleidimo mygtuką, kad pamatytumėte peržiūrą.";
BlocklyGamesMsg["Movie.helpText2b"] = "Rodant filmą, „laiko“ bloko reikšmė keičiasi nuo 0 iki 100. Kadangi norite, kad rankos „y“ padėtis prasidėtų nuo 0 ir pereitų iki 100, tai turėtų būti paprasta.";
BlocklyGamesMsg["Movie.helpText3"] = "„Laiko“ blokas keičiasi nuo 0 iki 100. Bet dabar norite, kad kitos rankos „y“ padėtis prasidėtų nuo 100 ir pereitų iki 0. Ar galite išsiaiškinti paprastą matematinę formulę, kuri pakeičia kryptį?";
BlocklyGamesMsg["Movie.helpText4"] = "Panaudokite tai ko išmokote praeitame lygyje, kad žali sukryžiuotumėte kojas.";
BlocklyGamesMsg["Movie.helpText5"] = "Matematinė rankos formulė yra sudėtinga. Štai atsakymas:";
BlocklyGamesMsg["Movie.helpText6"] = "Suteikti žmogui porą rankų.";
BlocklyGamesMsg["Movie.helpText7"] = "Naudokite bloką „jei“, kad nupieštumėte mažą galvą pirmai filmo pusei. Tada nupieškite didelę galvą antrajai filmo pusei.";
BlocklyGamesMsg["Movie.helpText8"] = "Įpusėjus filmui, pakeiskite kojų kryptį.";
BlocklyGamesMsg["Movie.helpText9"] = "Nubrėžkite besiplečiantį ratą už žmogaus.";
BlocklyGamesMsg["Movie.helpText10"] = "Sukurkite filmą apie bet ką. Turite prieigą prie didelio kiekio naujų blokų tyrinėjimui. Pasilinksminkite!";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Norėdami pamatyti kitų žmonių sukurtus filmus, naudokite mygtuką „Žiūrėti galeriją“. Jei sukursite įdomų filmą, naudokite mygtuką „Pateikti į  galeriją“, kad jį paskelbtumėte.";
BlocklyGamesMsg["Music.playNoteTooltip"] = "Sugrokite vieną nurodytos trukmės ir aukščio muzikinę natą.";
BlocklyGamesMsg["Music.playNote"] = "groti %1 natą %2";
BlocklyGamesMsg["Music.restTooltip"] = "Laukia nurodytą laiką.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Laukia vienos pilnos natos.";
BlocklyGamesMsg["Music.rest"] = "ilsėtis %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Perjungiamas į nurodytą instrumentą grojant vėlesnes muzikos natas.";
BlocklyGamesMsg["Music.setInstrument"] = "Nustatyti instrumentą į %1";
BlocklyGamesMsg["Music.startTooltip"] = "Vykdo viduje esančius blokus, kai paspaudžiamas mygtukas „Vykdyti programą“.";
BlocklyGamesMsg["Music.start"] = "kai %1 yra paspaudžiamas";
BlocklyGamesMsg["Music.pitchTooltip"] = "Viena nata (C4 yra 7).";
BlocklyGamesMsg["Music.firstPart"] = "pirmoji dalis";
BlocklyGamesMsg["Music.piano"] = "pianinas";
BlocklyGamesMsg["Music.trumpet"] = "trimitas";
BlocklyGamesMsg["Music.banjo"] = "bandža";
BlocklyGamesMsg["Music.violin"] = "smuikas";
BlocklyGamesMsg["Music.guitar"] = "gitara";
BlocklyGamesMsg["Music.flute"] = "fleita";
BlocklyGamesMsg["Music.drum"] = "bugnas";
BlocklyGamesMsg["Music.choir"] = "choras";
BlocklyGamesMsg["Music.submitDisabled"] = "Vykdykite programą, kol ji sustos. Tada galite pateikti savo muziką į galeriją.";
BlocklyGamesMsg["Music.galleryTooltip"] = "Atidaryti muzikos galeriją.";
BlocklyGamesMsg["Music.galleryMsg"] = "Žiūrėti Galeriją";
BlocklyGamesMsg["Music.submitTooltip"] = "Pateikti savo muziką į galeriją.";
BlocklyGamesMsg["Music.submitMsg"] = "Pateikti į Galeriją";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Jūsų sprendimas veikia, bet jūs galite padaryti geriau.  Naudokite funkcijas, kad sumažintumėte pasikartojančio kodo skaičių.";
BlocklyGamesMsg["Music.helpUseInstruments"] = "Muzika skambės geriau, jei kiekviename pradžios bloke naudosite skirtingą instrumentą.";
BlocklyGamesMsg["Music.helpText1"] = "Sukurkite pirmąsias keturias „Frère Jacques“ natas.";
BlocklyGamesMsg["Music.helpText2a"] = "„Funkcija“ leidžia sugrupuoti blokus kartu ir paleisti juos daugiau nei vieną kartą.";
BlocklyGamesMsg["Music.helpText2b"] = "Sukurkite funkciją, leidžiančią groti pirmąsias keturias „Frère Jacques“ natas. Paleiskite šią funkciją du kartus.  Nepridėkite jokių naujų natų blokų.";
BlocklyGamesMsg["Music.helpText3"] = "Sukurkite antrą funkciją kitai „Frère Jacques“ daliai. Paskutinė nata ilgesnė.";
BlocklyGamesMsg["Music.helpText4"] = "Sukurkite trečią funkciją kitai „Frère Jacques“ daliai. Pirmosios keturios natos yra trumpesnės.";
BlocklyGamesMsg["Music.helpText5"] = "Užbaikite visą „Frère Jacques“ melodiją.";
BlocklyGamesMsg["Music.helpText6a"] = "Šis naujas blokas leidžia pakeisti į kitą instrumentą.";
BlocklyGamesMsg["Music.helpText6b"] = "Grokite savo melodiją smuiku.";
BlocklyGamesMsg["Music.helpText7a"] = "Šis naujas blokas prideda tylų uždelsimą.";
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Kiekvienas starto blokas turi sugroti „Frère Jacques“ du kartus.";
BlocklyGamesMsg["Music.helpText9"] = "Sukurkite keturis pradžios blokus, kurių kiekvienas du kartus groja „Frère Jacques“. Pridėkite tinkamą uždelsimo blokų skaičių.";
BlocklyGamesMsg["Music.helpText10"] = "Sukurkite ką norite. Turite daugybe naujų blokų, kuriuos galite išbandyti. Sėkmės!";
BlocklyGamesMsg["Music.helpText10Reddit"] = "Norėdami pamatyti, ką kiti žmonės sukūrė, naudokite mygtuką „Žiūrėti galeriją“. Jei sukursite ką nors įdomaus, paskelbkite tai naudodami mygtuką „Pateikti į galeriją“.";
BlocklyGamesMsg["Pond.scanTooltip"] = "Ieškokite priešų. Nurodykite kryptį (0–360). Grąžina atstumą iki artimiausio priešo ta kryptimi. Grąžina Begalybę, jei priešas nerastas.";
BlocklyGamesMsg["Pond.cannonTooltip"] = "Iššaukite patranką. Nurodykite kryptį (0–360) ir diapazoną (0–70).";
BlocklyGamesMsg["Pond.swimTooltip"] = "Plaukti į priekį. Nurodykite kryptį (0-360).";
BlocklyGamesMsg["Pond.stopTooltip"] = "Sustabdyti plaukimą. Žaidėjas sulėtės ir sustos.";
BlocklyGamesMsg["Pond.healthTooltip"] = "Grąžina esamą žaidėjo sveikatos būklę (0 miręs, 100 sveikas).";
BlocklyGamesMsg["Pond.speedTooltip"] = "Grąžina esamą žaidėjo greitį (0 sustojęs, 100 juda pildu greičiu).";
BlocklyGamesMsg["Pond.locXTooltip"] = "Grąžina žaidėjo X koordinatę (0 yra kairysis kraštas, 100 yra dešinysis kraštas).";
BlocklyGamesMsg["Pond.locYTooltip"] = "Grąžina žaidėjo Y koordinatę (0 yra apatinis kraštas, 100 yra viršutinis kraštas).";
BlocklyGamesMsg["Pond.logTooltip"] = "Išspausdina numerį į naršyklės konsolę.";
BlocklyGamesMsg["Pond.docsTooltip"] = "Rodyti kalbos dokumentus.";
BlocklyGamesMsg["Pond.documentation"] = "Dokumentacija";
BlocklyGamesMsg["Pond.playerName"] = "Žaidėjas";
BlocklyGamesMsg["Pond.targetName"] = "Taikinys";
BlocklyGamesMsg["Pond.pendulumName"] = "Švytuoklė";
BlocklyGamesMsg["Pond.scaredName"] = "Bailus";
BlocklyGamesMsg["Pond.helpUseScan"] = "Jūsų sprendimas veikia, bet jūs galite geriau. Naudokite „nuskaitymą“, kad nurodytumėte patrankai kaip toli šaudyti.";
BlocklyGamesMsg["Pond.helpText1"] = "Norėdami pataikyti į taikinį, naudokite komandą „patranka“. Pirmasis parametras yra kampas, antrasis parametras yra diapazonas. Raskite tinkamą derinį.";
BlocklyGamesMsg["Pond.helpText2"] = "Į šį taikinį reikia pataikyti daug kartų. Norėdami ką nors daryti neribotą laiką, naudokite kilpą „kol (taip)“.";
BlocklyGamesMsg["Pond.helpText3a"] = "Šis priešininkas juda pirmyn ir atgal, todėl sunku pataikyti. „Nuskaityti“ išraiška grąžina priešininkui tikslų diapazoną nurodyta kryptimi.";
BlocklyGamesMsg["Pond.helpText3b"] = "Šis diapazonas yra būtent tai, ko reikia „patrankos“ komandai, kad būtų galima tiksliai iššauti.";
BlocklyGamesMsg["Pond.helpText4"] = "Šis priešininkas yra per toli, kad galėtume panaudoti patranką (kurios riba yra 70 metrų). Vietoj to naudokite komandą „plaukti“, kad pradėtumėte plaukti link priešininko ir atsitrenktumėte į jį.";
BlocklyGamesMsg["Pond.helpText5"] = "Šis priešininkas taip pat per toli, kad panaudotume patranką. Bet jūs esate per silpnas, kad išgyventumėte susidūrimą. Plaukite link priešininko, kol jūsų horizontali padėtis yra mažesnė nei 50. Tada „sustoti“ ir naudokite patranką.";
BlocklyGamesMsg["Pond.helpText6"] = "Šis priešininkas pasitrauks, kai į jį bus pataikyta. Plaukite link jo, jei jis yra už diapazono (70 metrų).";
BlocklyGamesMsg["Gallery"] = "Galerija";
