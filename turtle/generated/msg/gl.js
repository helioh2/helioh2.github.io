// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "elemento";
BlocklyMsg["UNNAMED_KEY"] = "innominada";
BlocklyMsg["TODAY"] = "Hoxe";
BlocklyMsg["DUPLICATE_BLOCK"] = "Duplicar";
BlocklyMsg["ADD_COMMENT"] = "Engadir un comentario";
BlocklyMsg["REMOVE_COMMENT"] = "Eliminar o comentario";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicar o comentario";
BlocklyMsg["EXTERNAL_INPUTS"] = "Entradas externas";
BlocklyMsg["INLINE_INPUTS"] = "Entradas en liña";
BlocklyMsg["DELETE_BLOCK"] = "Borrar o bloque";
BlocklyMsg["DELETE_X_BLOCKS"] = "Borrar %1 bloques";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Queres eliminar os %1 bloques?";
BlocklyMsg["CLEAN_UP"] = "Limpar os bloques";
BlocklyMsg["COLLAPSE_BLOCK"] = "Contraer o bloque";
BlocklyMsg["COLLAPSE_ALL"] = "Contraer os bloques";
BlocklyMsg["EXPAND_BLOCK"] = "Expandir o bloque";
BlocklyMsg["EXPAND_ALL"] = "Expandir os bloques";
BlocklyMsg["DISABLE_BLOCK"] = "Desactivar o bloque";
BlocklyMsg["ENABLE_BLOCK"] = "Activar o bloque";
BlocklyMsg["HELP"] = "Axuda";
BlocklyMsg["UNDO"] = "Desfacer";
BlocklyMsg["REDO"] = "Refacer";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Cambiar o valor:";
BlocklyMsg["RENAME_VARIABLE"] = "Renomear a variable...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Renomear todas as variables \"%1\" a:";
BlocklyMsg["NEW_VARIABLE"] = "Crear a variable...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Crar unha variábel de cadea...";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Nome da nova variable:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://gl.wikipedia.org/wiki/Cor";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Escolle unha cor da paleta.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "cor ó chou";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Escolle unha cor ao chou.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "colorar con";
BlocklyMsg["COLOUR_RGB_RED"] = "vermello";
BlocklyMsg["COLOUR_RGB_GREEN"] = "verde";
BlocklyMsg["COLOUR_RGB_BLUE"] = "azul";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.";  // untranslated
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "mesturar";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "cor 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "cor 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "proporción";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Mestura dúas cores ca proporción indicada (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "repeat %1 times";  // untranslated
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Faga algunhas instrucións varias veces.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir mentres";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir ata";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "While a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "While a value is false, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
BlocklyMsg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "for each item %1 in list %2";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "break out of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continue with next iteration of loop";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Break out of the containing loop.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warning: This block may only be used within a loop.";  // untranslated
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "If a value is true, then do some statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.";  // untranslated
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "se";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "mais se";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "senón";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Add a condition to the if block.";  // untranslated
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Add a final, catch-all condition to the if block.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Return true if both inputs equal each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Return true if both inputs are not equal to each other.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Return true if the first input is smaller than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Return true if the first input is greater than the second input.";  // untranslated
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Return true if the first input is greater than or equal to the second input.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Return true if both inputs are true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_AND"] = "e";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Return true if at least one of the inputs is true.";  // untranslated
BlocklyMsg["LOGIC_OPERATION_OR"] = "ou";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "non %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Returns true if the input is false. Returns false if the input is true.";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "verdadeiro";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "falso";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Returns either true or false.";  // untranslated
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "nulo";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Retornar nulo.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "proba";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "se verdadeiro";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "se falso";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";  // untranslated
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Un número.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://gl.wikipedia.org/wiki/Aritmética";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Retorna a suma de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Retorna a diferenza de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Retorna o produto de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Retorna o cociente da división de dous números.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Retorna o primeiro número elevado á potencia do segundo número.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://gl.wikipedia.org/wiki/Raíz_cadrada";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "raíz cadrada";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Retorna a raíz cadrada dun número.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluto";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Retorna o valor absoluto dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Retorna o oposto dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Retorna o logarítmo natural dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Retorna o logarítmo en base 10 dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Retorna o número e elevado á potencia dun número.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Retorna 10 elevado á potencia dun número.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://gl.m.wikipedia.org/wiki/Función_trigonométrica";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Retorna o seno dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Retorna o coseno dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Retorna a tanxente dun grao (non radiano).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Retorna o arco seno dum número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Retorna o arco coseno dun número.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Retorna o arco tanxente dun número.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://gl.wikipedia.org/wiki/Constante_matemática";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Retorna unha das constantes comúns: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infinito).";
BlocklyMsg["MATH_IS_EVEN"] = "é par";
BlocklyMsg["MATH_IS_ODD"] = "é impar";
BlocklyMsg["MATH_IS_PRIME"] = "é primo";
BlocklyMsg["MATH_IS_WHOLE"] = "é enteiro";
BlocklyMsg["MATH_IS_POSITIVE"] = "é positivo";
BlocklyMsg["MATH_IS_NEGATIVE"] = "é negativo";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "é divisíbel por";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Verifica se un número é par, impar, primo, enteiro, positivo, negativo, ou se é divisíbel por outro número.  Retorna verdadeiro ou falso.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
BlocklyMsg["MATH_CHANGE_TITLE"] = "mudar %1 por %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Suma un número á variábel '%1'.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://gl.wikipedia.org/wiki/Arredondamento";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Arredonda un número cara enriba ou cara abaixo.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "arredonda";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredonda cara arriba";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredonda cara abaixo";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "suma da listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Retorna a suma de tódolos números da listaxe.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "menor dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Retorna o menor número da listaxe.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "maior dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Retorna o maior número da listaxe";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media dunha listaxe";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "modes of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "standard deviation of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Return the standard deviation of the list.";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "random item of list";  // untranslated
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Return a random element from the list.";  // untranslated
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
BlocklyMsg["MATH_MODULO_TITLE"] = "remainder of %1 ÷ %2";  // untranslated
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Return the remainder from dividing the two numbers.";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "constrain %1 low %2 high %3";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "random integer from %1 to %2";  // untranslated
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Return a random integer between the two specified limits, inclusive.";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction";  // untranslated
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text.";  // untranslated
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with";  // untranslated
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unir";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text.";  // untranslated
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'.";  // untranslated
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 is empty";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "in text %1 %2 %3";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text";  // untranslated
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "get letter #";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "get letter # from end";  // untranslated
BlocklyMsg["TEXT_CHARAT_FIRST"] = "get first letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_LAST"] = "get last letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "get random letter";  // untranslated
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "no texto";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "imprime %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "create list with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "listaxe";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "length of %1";  // untranslated
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 atópase baleira";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Retona verdadeiro se a listaxe atópase baleira.";
BlocklyMsg["LISTS_INLIST"] = "na listaxe";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "get";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "get and remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "remove";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# from end";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "primeiro";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "derradeiro";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "ó chou";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 é o primeiro elemento.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 é o derradeiro elemento.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "definir";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "inserir en";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "como";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Ordear unha copia dunha listaxe.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascendente";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descendente";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numérica";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alfabética";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabética, iñorar maiúsculas/minúsculas";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "cara";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "facer algo";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "con:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "con:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "retornar";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "input name:";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Create '%1'";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "Aceptar";
BlocklyMsg["DIALOG_CANCEL"] = "Cancelar";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "facer";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "facer";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "se";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "mais se";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "senón";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "elemento";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "elemento";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "elemento";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "elemento";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "na listaxe";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "cara";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "facer algo";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Xogos do Blockly";
BlocklyGamesMsg["Games.puzzle"] = "Crebacabezas";
BlocklyGamesMsg["Games.maze"] = "Labirinto";
BlocklyGamesMsg["Games.bird"] = "Paxaro";
BlocklyGamesMsg["Games.turtle"] = "Tartaruga";
BlocklyGamesMsg["Games.movie"] = "Filme";
BlocklyGamesMsg["Games.music"] = "Música";
BlocklyGamesMsg["Games.pondTutor"] = "Titor da lagoa";
BlocklyGamesMsg["Games.pond"] = "Lagoa";
BlocklyGamesMsg["Games.linesOfCode1"] = "Resolviches este nivel con 1 liña de JavaScript:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Resolviches este nivel con %1 liñas de JavaScript:";
BlocklyGamesMsg["Games.nextLevel"] = "Estás preparado para o nivel %1?";
BlocklyGamesMsg["Games.finalLevel"] = "Estás preparado para o próximo desafío?";
BlocklyGamesMsg["Games.submitTitle"] = "Título:";
BlocklyGamesMsg["Games.linkTooltip"] = "Gardar e crear unha ligazón aos bloques.";
BlocklyGamesMsg["Games.runTooltip"] = "Executa o programa que escribiches.";
BlocklyGamesMsg["Games.runProgram"] = "Executar o programa";
BlocklyGamesMsg["Games.resetTooltip"] = "Detén o programa e reinicia o nivel.";
BlocklyGamesMsg["Games.resetProgram"] = "Reiniciar";
BlocklyGamesMsg["Games.help"] = "Axuda";
BlocklyGamesMsg["Games.catLogic"] = "Lóxica";
BlocklyGamesMsg["Games.catLoops"] = "Bucles";
BlocklyGamesMsg["Games.catMath"] = "Matemáticas";
BlocklyGamesMsg["Games.catText"] = "Texto";
BlocklyGamesMsg["Games.catLists"] = "Listas";
BlocklyGamesMsg["Games.catColour"] = "Cor";
BlocklyGamesMsg["Games.catVariables"] = "Variables";
BlocklyGamesMsg["Games.catProcedures"] = "Funcións";
BlocklyGamesMsg["Games.httpRequestError"] = "Houbo un problema coa solicitude.";
BlocklyGamesMsg["Games.linkAlert"] = "Comparte os teus bloques con esta ligazón:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Sentímolo, \"%1\" non se corresponde con ningún programa gardado.";
BlocklyGamesMsg["Games.xmlError"] = "Non se puido cargar o ficheiro gardado. Se cadra, foi creado cunha versión diferente de Blockly.";
BlocklyGamesMsg["Games.submitted"] = "Grazas por este programa! Se lle gusta ao noso persoal de monos adestrados, publicarano na galería nun par de días.";
BlocklyGamesMsg["Games.listVariable"] = "lista";
BlocklyGamesMsg["Games.textVariable"] = "texto";
BlocklyGamesMsg["Games.breakLink"] = "Unha vez que comeces a editar JavaScript, non poderás volver á edición de bloques. Queres continuar?";
BlocklyGamesMsg["Games.blocks"] = "Bloques";
BlocklyGamesMsg["Games.congratulations"] = "Parabéns!";
BlocklyGamesMsg["Games.helpAbort"] = "Este nivel é moi difícil. Gustaríache saltalo e pasar ao seguinte xogo? Sempre podes volver máis tarde.";
BlocklyGamesMsg["Index.clear"] = "Queres eliminar todas as túas solucións?";
BlocklyGamesMsg["Index.subTitle"] = "Xogos para os programadores do futuro.";
BlocklyGamesMsg["Index.moreInfo"] = "Información para educadores...";
BlocklyGamesMsg["Index.startOver"] = "Queres comezar de novo?";
BlocklyGamesMsg["Index.clearData"] = "Borrar os datos";
BlocklyGamesMsg["Puzzle.animal1"] = "Parrulo";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Plumas";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Peteiro";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://gl.wikipedia.org/wiki/Pato";
BlocklyGamesMsg["Puzzle.animal2"] = "Gato";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Bigoteira";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Pelame";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://gl.wikipedia.org/wiki/Gato";
BlocklyGamesMsg["Puzzle.animal3"] = "Abella";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Mel";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Aguillón";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://gl.wikipedia.org/wiki/Abella";
BlocklyGamesMsg["Puzzle.animal4"] = "Caracol";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Cuncha";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Baba";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://gl.wikipedia.org/wiki/Caracol";
BlocklyGamesMsg["Puzzle.picture"] = "imaxe:";
BlocklyGamesMsg["Puzzle.legs"] = "patas:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "escolle...";
BlocklyGamesMsg["Puzzle.traits"] = "trazos:";
BlocklyGamesMsg["Puzzle.error0"] = "Perfecto!\nOs %1 bloques son correctos.";
BlocklyGamesMsg["Puzzle.error1"] = "Por pouco! Un bloque é incorrecto.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 bloques son incorrectos.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "O bloque destacado non é correcto.\nSigue intentándoo.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Comprobar as respostas";
BlocklyGamesMsg["Puzzle.helpText"] = "A cada animal (en verde), faille corresponder a súa foto, sinala o seu número de patas e apiña os seus trazos.";
BlocklyGamesMsg["Maze.moveForward"] = "avanzar";
BlocklyGamesMsg["Maze.turnLeft"] = "xirar á esquerda";
BlocklyGamesMsg["Maze.turnRight"] = "xirar á dereita";
BlocklyGamesMsg["Maze.doCode"] = "executar";
BlocklyGamesMsg["Maze.elseCode"] = "se non";
BlocklyGamesMsg["Maze.helpIfElse"] = "Os bloques \"se/se non\" fan unha cousa ou a outra.";
BlocklyGamesMsg["Maze.pathAhead"] = "se hai camiño diante";
BlocklyGamesMsg["Maze.pathLeft"] = "se hai camiño á esquerda";
BlocklyGamesMsg["Maze.pathRight"] = "se hai camiño á dereita";
BlocklyGamesMsg["Maze.repeatUntil"] = "repetir ata";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Fai que a figura avance un espazo.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Fai que a figura xire á esquerda ou á dereita 90 graos.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Se hai un camiño na dirección especificada, entón fanse algunhas accións.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Se hai un camiño na dirección especificada, entón faise o primeiro bloque de accións. En caso contrario, faise o segundo bloque de accións.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Repetir as accións do bloque ata chegar á meta.";
BlocklyGamesMsg["Maze.capacity0"] = "Restan %0 bloques.";
BlocklyGamesMsg["Maze.capacity1"] = "Resta %1 bloque.";
BlocklyGamesMsg["Maze.capacity2"] = "Restan %2 bloques.";
BlocklyGamesMsg["Maze.runTooltip"] = "Fai que a figura realice o que din os bloques.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Coloca a figura ao inicio do labirinto.";
BlocklyGamesMsg["Maze.helpStack"] = "Amorea unha parella de bloques \"avanzar\" para axudarme a chegar á meta.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Neste nivel, tes que amorear xuntos tódolos bloques no espazo de traballo.";
BlocklyGamesMsg["Maze.helpRun"] = "Executa o teu programa para comprobar o que acontece.";
BlocklyGamesMsg["Maze.helpReset"] = "O teu programa non resolveu o labirinto. Preme en \"Restablecer\" e inténtao de novo.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Chega ao final deste camiño usando só dous bloques. Utiliza \"repetir\" para executar un bloque máis dunha vez.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Xa usaches todos os bloques dispoñibles para este nivel. Para crear un novo bloque, primeiro debes borrar un dos existentes.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Podes apilar máis dun bloque dentro dos bloques \"repetir\".";
BlocklyGamesMsg["Maze.helpSkins"] = "Escolle o teu xogador favorito neste menú.";
BlocklyGamesMsg["Maze.helpIf"] = "Un bloque \"se\" fará algo unicamente se a condición é certa. Intenta xirar á esquerda se hai camiño á esquerda.";
BlocklyGamesMsg["Maze.helpMenu"] = "Preme en %1 no bloque \"se\" para cambiar a súa condición.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Podes resolver este labirinto máis complicado? Intenta seguir a parede da esquerda. Só para programadores avanzados!";
BlocklyGamesMsg["Bird.noWorm"] = "non ten ningunha miñoca";
BlocklyGamesMsg["Bird.heading"] = "dirección";
BlocklyGamesMsg["Bird.noWormTooltip"] = "A condición cando o paxaro non consegue a miñoca.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Móvese na dirección do ángulo dado: 0 é cara á dereita, 90 é cara a arriba etc.";
BlocklyGamesMsg["Bird.positionTooltip"] = "x e y marcan a posición do paxaro. Cando x = 0 o paxaro está preto do bordo esquerdo, cando x = 100 o paxaro está preto do bordo dereito. Cando y = 0 o paxaro está na parte inferior, cando y = 100 o paxaro está na parte superior.";
BlocklyGamesMsg["Bird.helpHeading"] = "Cambia o ángulo da dirección para que o paxaro consiga a miñoca e aterrice no seu niño.";
BlocklyGamesMsg["Bird.helpHasWorm"] = "Usa este bloque para ir nunha dirección se tes a miñoca, ou nunha dirección diferente se non tes a miñoca.";
BlocklyGamesMsg["Bird.helpX"] = "\"x\" é a túa posición horizontal actual. Usa este bloque para ir nunha dirección se \"x\" é menor que un número, ou nunha dirección diferente en caso contrario.";
BlocklyGamesMsg["Bird.helpElse"] = "Fai clic na icona para modificar o bloque \"se\".";
BlocklyGamesMsg["Bird.helpElseIf"] = "Este nivel necesita bloques \"mais se\" e \"se non\".";
BlocklyGamesMsg["Bird.helpAnd"] = "O bloque \"e\" só é verdadeiro se ambas as súas entradas son verdadeiras.";
BlocklyGamesMsg["Bird.helpMutator"] = "Arrastra un bloque \"se non\" ao bloque \"se\".";
BlocklyGamesMsg["Turtle.moveTooltip"] = "Move a tartaruga adiante ou atrás a cantidade indicada.";
BlocklyGamesMsg["Turtle.moveForward"] = "mover adiante";
BlocklyGamesMsg["Turtle.moveBackward"] = "mover atrás";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Xira a tartaruga á esquerda ou á dereita o número especificado de graos.";
BlocklyGamesMsg["Turtle.turnRight"] = "xirar á dereita";
BlocklyGamesMsg["Turtle.turnLeft"] = "xirar á esquerda";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Cambia o grosor do bolígrafo.";
BlocklyGamesMsg["Turtle.setWidth"] = "establecer o grosor en";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Cambia a cor do bolígrafo.";
BlocklyGamesMsg["Turtle.setColour"] = "establecer a cor en";
BlocklyGamesMsg["Turtle.penTooltip"] = "Eleva ou baixa o bolígrafo, para deixar de debuxar ou empezar a debuxar.";
BlocklyGamesMsg["Turtle.penUp"] = "elevar o bolígrafo";
BlocklyGamesMsg["Turtle.penDown"] = "baixar o bolígrafo";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Fai que a tartaruga (o círculo e a frecha) sexa visible ou invisible.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "agochar a tartaruga";
BlocklyGamesMsg["Turtle.showTurtle"] = "amosar a tartaruga";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://gl.wikipedia.org/wiki/Impresi%C3%B3n";
BlocklyGamesMsg["Turtle.printTooltip"] = "Escribe un texto na dirección da tartaruga e desde a súa posición.";
BlocklyGamesMsg["Turtle.print"] = "escribir";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Define o tipo de letra empregado polo bloque de escritura.";
BlocklyGamesMsg["Turtle.font"] = "tipo de letra";
BlocklyGamesMsg["Turtle.fontSize"] = "tamaño da letra";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "negra";
BlocklyGamesMsg["Turtle.fontItalic"] = "cursiva";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Executa o teu programa ata que se deteña. Despois podes enviar o teu debuxo á galería.";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Abre a galería de debuxos.";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Enviar o teu debuxo á galería.";
BlocklyGamesMsg["Turtle.submitMsg"] = "Enviar á galería";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "A túa solución funciona, pero podes facelo mellor.";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Debuxa a forma con só tres bloques.";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Debuxa a estrela con só catro bloques.";
BlocklyGamesMsg["Turtle.helpText1"] = "Crea un programa que debuxe un cadrado.";
BlocklyGamesMsg["Turtle.helpText2"] = "Cambia o teu programa para debuxar un pentágono en lugar dun cadrado.";
BlocklyGamesMsg["Turtle.helpText3a"] = "Hai un novo bloque que che permite cambiar a cor:";
BlocklyGamesMsg["Turtle.helpText3b"] = "Debuxa unha estrela amarela.";
BlocklyGamesMsg["Turtle.helpText4a"] = "Hai un bloque novo que che permite levantar o bolígrafo do papel cando te moves:";
BlocklyGamesMsg["Turtle.helpText4b"] = "Debuxa unha pequena estrela amarela e despois debuxa unha liña enriba dela.";
BlocklyGamesMsg["Turtle.helpText5"] = "En lugar dunha estrela, podes debuxar catro estrelas dispostas nun cadrado?";
BlocklyGamesMsg["Turtle.helpText6"] = "Debuxa tres estrelas amarelas e unha liña branca.";
BlocklyGamesMsg["Turtle.helpText7"] = "Debuxa as estrelas e despois debuxa catro liñas brancas.";
BlocklyGamesMsg["Turtle.helpText8"] = "Debuxar 360 liñas brancas semellará a lúa chea.";
BlocklyGamesMsg["Turtle.helpText9"] = "Podes engadir un círculo negro para que a lúa se converta en lúa crecente?";
BlocklyGamesMsg["Turtle.helpText10"] = "Debuxa o que queiras. Tes un gran número de bloques novos cos que podes explorar. Divírtete!";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Usa o botón \"Ollar a galería\" para ver o que debuxaron outras persoas. Se debuxas algo interesante, usa o botón \"Enviar á galería\" para publicalo.";
BlocklyGamesMsg["Turtle.helpToolbox"] = "Escolle unha categoría para ver os bloques.";
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "x de inicio";
BlocklyGamesMsg["Movie.y1"] = "y de inicio";
BlocklyGamesMsg["Movie.x2"] = "x de fin";
BlocklyGamesMsg["Movie.y2"] = "y de fin";
BlocklyGamesMsg["Movie.radius"] = "raio";
BlocklyGamesMsg["Movie.width"] = "ancho";
BlocklyGamesMsg["Movie.height"] = "altura";
BlocklyGamesMsg["Movie.circleTooltip"] = "Debuxa un círculo no lugar especificado e co raio especificado.";
BlocklyGamesMsg["Movie.circleDraw"] = "círculo";
BlocklyGamesMsg["Movie.rectTooltip"] = "Debuxa un rectángulo no lugar especificado e co ancho e a altura especificados.";
BlocklyGamesMsg["Movie.rectDraw"] = "rectángulo";
BlocklyGamesMsg["Movie.lineTooltip"] = "Debuxa unha liña dun punto a outro co ancho especificado.";
BlocklyGamesMsg["Movie.lineDraw"] = "liña";
BlocklyGamesMsg["Movie.timeTooltip"] = "Devolve o tempo actual na animación (0-100).";
BlocklyGamesMsg["Movie.colourTooltip"] = "Cambia a cor do bolígrafo.";
BlocklyGamesMsg["Movie.setColour"] = "mudar a cor a";
BlocklyGamesMsg["Movie.submitDisabled"] = "O teu filme non se move. Usa os bloques para facer algo interesante. Despois podes enviar a túa película á galería.";
BlocklyGamesMsg["Movie.galleryTooltip"] = "Abre a galería de filmes.";
BlocklyGamesMsg["Movie.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Movie.submitTooltip"] = "Enviar o teu filme á galería.";
BlocklyGamesMsg["Movie.submitMsg"] = "Enviar á galería";
BlocklyGamesMsg["Movie.helpLayer"] = "Move o círculo do fondo á parte superior do programa. Entón aparecerá detrás da persoa.";
BlocklyGamesMsg["Movie.helpText1"] = "Usa formas sinxelas para debuxar esta persoa.";
BlocklyGamesMsg["Movie.helpText2a"] = "Este nivel é un filme. Queres que o brazo da persoa se mova pola pantalla. Preme no botón de reprodución para ollar unha vista previa.";
BlocklyGamesMsg["Movie.helpText2b"] = "A medida que se reproduce o filme, o valor do bloque \"tempo\" conta de 0 a 100. Como queres que a posición \"y\" do brazo comece en 0 e vaia ata 100, isto debería ser sinxelo.";
BlocklyGamesMsg["Movie.helpText3"] = "O bloque \"tempo\" conta de 0 a 100. Pero agora queres que a posición \"y\" do outro brazo comece en 100 e vaia a 0. Podes descubrir unha fórmula matemática sinxela que cambie a dirección?";
BlocklyGamesMsg["Movie.helpText4"] = "Usa o que aprendiches no nivel anterior para facer que as pernas se crucen.";
BlocklyGamesMsg["Movie.helpText5"] = "A fórmula matemática para o brazo é complicada. Aquí está a resposta:";
BlocklyGamesMsg["Movie.helpText6"] = "Dálle un par de mans á persoa.";
BlocklyGamesMsg["Movie.helpText7"] = "Usa o bloque \"se\" para debuxar unha cabeza pequena para a primeira metade do filme. Despois debuxa unha cabeza grande para a segunda metade do filme.";
BlocklyGamesMsg["Movie.helpText8"] = "Fai que as pernas invertan a dirección á metade do filme.";
BlocklyGamesMsg["Movie.helpText9"] = "Debuxa un círculo en expansión detrás da persoa.";
BlocklyGamesMsg["Movie.helpText10"] = "Fai un filme do que queiras. Tes un gran número de bloques novos cos que podes explorar. Divírtete!";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Usa o botón \"Ollar a galería\" para ver os filmes doutras persoas. Se fas un filme interesante, usa o botón \"Enviar á galería\" para publicalo.";
BlocklyGamesMsg["Music.playNoteTooltip"] = "Toca unha nota musical coa duración e o ton especificados.";
BlocklyGamesMsg["Music.playNote"] = "reproducir %1 coa nota %2";
BlocklyGamesMsg["Music.restTooltip"] = "Agarda durante o tempo especificado.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Agarda unha nota completa.";
BlocklyGamesMsg["Music.rest"] = "agardar %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Cambia ao instrumento especificado ao reproducir as notas musicais posteriores.";
BlocklyGamesMsg["Music.setInstrument"] = "establecer o instrumento a %1";
BlocklyGamesMsg["Music.startTooltip"] = "Executa os bloques interiores cando se fai clic no botón \"Executar o programa\".";
BlocklyGamesMsg["Music.start"] = "ao premer en %1";
BlocklyGamesMsg["Music.pitchTooltip"] = "Unha nota (a nota dó é o 7).";
BlocklyGamesMsg["Music.firstPart"] = "primeiro anaco";
BlocklyGamesMsg["Music.piano"] = "piano";
BlocklyGamesMsg["Music.trumpet"] = "trompeta";
BlocklyGamesMsg["Music.banjo"] = "banxo";
BlocklyGamesMsg["Music.violin"] = "violín";
BlocklyGamesMsg["Music.guitar"] = "guitarra";
BlocklyGamesMsg["Music.flute"] = "frauta";
BlocklyGamesMsg["Music.drum"] = "tambor";
BlocklyGamesMsg["Music.choir"] = "coro";
BlocklyGamesMsg["Music.submitDisabled"] = "Executa o teu programa ata que se deteña. Despois podes enviar a túa música á galería.";
BlocklyGamesMsg["Music.galleryTooltip"] = "Abre a galería de música.";
BlocklyGamesMsg["Music.galleryMsg"] = "Ollar a galería";
BlocklyGamesMsg["Music.submitTooltip"] = "Enviar a túa música á galería.";
BlocklyGamesMsg["Music.submitMsg"] = "Enviar á galería";
BlocklyGamesMsg["Music.helpUseFunctions"] = "A túa solución funciona, pero podes facelo mellor. Usa funcións para reducir a cantidade de código repetido.";
BlocklyGamesMsg["Music.helpUseInstruments"] = "A música soará mellor se usas un instrumento diferente en cada bloque de inicio.";
BlocklyGamesMsg["Music.helpText1"] = "Compón as catro primeiras notas de \"Frère Jacques\".";
BlocklyGamesMsg["Music.helpText2a"] = "Unha \"función\" permite agrupar varios bloques e executalos máis dunha vez.";
BlocklyGamesMsg["Music.helpText2b"] = "Crea unha función para tocar as catro primeiras notas de \"Frère Jacques\". Executa esa función dúas veces. Non engadas novos bloques de notas.";
BlocklyGamesMsg["Music.helpText3"] = "Crea unha segunda función para a seguinte parte de \"Frère Jacques\". A última nota é máis longa.";
BlocklyGamesMsg["Music.helpText4"] = "Crea unha terceira función para a seguinte parte de \"Frère Jacques\". As catro primeiras notas son máis curtas.";
BlocklyGamesMsg["Music.helpText5"] = "Completa a canción \"Frère Jacques\".";
BlocklyGamesMsg["Music.helpText6a"] = "Este novo bloque permíteche cambiar a outro instrumento.";
BlocklyGamesMsg["Music.helpText6b"] = "Toca a túa melodía cun violín.";
BlocklyGamesMsg["Music.helpText7a"] = "Este novo bloque engade unha pausa.";
BlocklyGamesMsg["Music.helpText7b"] = "Crea un segundo bloque de inicio que teña dous bloques de pausa e que logo reproduza tamén \"Frère Jacques\".";
BlocklyGamesMsg["Music.helpText8"] = "Cada bloque de inicio debería reproducir dúas veces \"Frère Jacques\".";
BlocklyGamesMsg["Music.helpText9"] = "Crea catro bloques de inicio que reproduzan \"Frère Jacques\" dúas veces. Engade o número correcto de bloques de pausa.";
BlocklyGamesMsg["Music.helpText10"] = "Compón o que queiras. Tes un gran número de bloques novos cos que podes explorar. Divírtete!";
BlocklyGamesMsg["Music.helpText10Reddit"] = "Usa o botón \"Ollar a galería\" para ver o que compuxeron outras persoas. Se compós algo interesante, usa o botón \"Enviar á galería\" para publicalo.";
BlocklyGamesMsg["Pond.scanTooltip"] = "Busca inimigos. Especifica unha dirección (0-360). Devolve a distancia ao inimigo máis próximo nesa dirección. Devolve infinito se non se atopa ningún inimigo.";
BlocklyGamesMsg["Pond.cannonTooltip"] = "Dispara o canón. Especifica unha dirección (0-360) e un alcance (0-70).";
BlocklyGamesMsg["Pond.swimTooltip"] = "Nadar cara a adiante. Especifica unha dirección (0-360).";
BlocklyGamesMsg["Pond.stopTooltip"] = "Deixa de nadar. O xogador freará ata deterse.";
BlocklyGamesMsg["Pond.healthTooltip"] = "Devolve a saúde actual do xogador (0 é morto, 100 é saudable).";
BlocklyGamesMsg["Pond.speedTooltip"] = "Devolve a velocidade actual do xogador (0 é parado, 100 é a velocidade máxima).";
BlocklyGamesMsg["Pond.locXTooltip"] = "Devolve a coordenada X do xogador (0 é o bordo esquerdo, 100 é o bordo dereito).";
BlocklyGamesMsg["Pond.locYTooltip"] = "Devolve a coordenada Y do xogador (0 é o bordo inferior, 100 é o bordo superior).";
BlocklyGamesMsg["Pond.logTooltip"] = "Imprime un número na consola do teu navegador.";
BlocklyGamesMsg["Pond.docsTooltip"] = "Mostra a documentación da linguaxe.";
BlocklyGamesMsg["Pond.documentation"] = "Documentación";
BlocklyGamesMsg["Pond.playerName"] = "Xogador";
BlocklyGamesMsg["Pond.targetName"] = "Obxectivo";
BlocklyGamesMsg["Pond.pendulumName"] = "Péndulo";
BlocklyGamesMsg["Pond.scaredName"] = "Agoirado";
BlocklyGamesMsg["Pond.helpUseScan"] = "A túa solución funciona, pero podes facelo mellor. Usa \"scan\" para dicirlle ao canón cara a onde disparar.";
BlocklyGamesMsg["Pond.helpText1"] = "Usa o comando \"cannon\" para darlle ao obxectivo. O primeiro parámetro é o ángulo, o segundo parámetro é o alcance. Atopa a combinación correcta.";
BlocklyGamesMsg["Pond.helpText2"] = "Cómpre alcanzar este obxectivo múltiples veces. Usa un bucle \"while (true)\" para facer algo indefinidamente.";
BlocklyGamesMsg["Pond.helpText3a"] = "Este opoñente móvese cara a atrás e cara a adiante, dificultando o golpe. A expresión \"scan\" devolve o rango exacto ata o opoñente na dirección especificada.";
BlocklyGamesMsg["Pond.helpText3b"] = "Este alcance é exactamente o que o comando \"cannon\" necesita para se disparar con precisión.";
BlocklyGamesMsg["Pond.helpText4"] = "Este oponente está demasiado lonxe para usar o canón (que ten un límite de 70 metros). En vez diso, usa o comando \"swim\" para comezar a nadar cara ao opoñente e chocar contra el.";
BlocklyGamesMsg["Pond.helpText5"] = "Este opoñente tamén está demasiado lonxe para usar o canón. Pero ti es demasiado débil para sobrevivir a unha colisión. Nada cara ao opoñente mentres a túa localización horizontal está a menos de 50. Despois, usa \"stop\" e o canón.";
BlocklyGamesMsg["Pond.helpText6"] = "Este opoñente afastarase cando sexa golpeado. Nada cara a el se está fóra do alcance (70 metros).";
BlocklyGamesMsg["Gallery"] = "Galería";
