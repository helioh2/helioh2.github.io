// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "Element";
BlocklyMsg["UNNAMED_KEY"] = "unbenannt";
BlocklyMsg["TODAY"] = "Heute";
BlocklyMsg["DUPLICATE_BLOCK"] = "Kopieren";
BlocklyMsg["ADD_COMMENT"] = "Kommentar hinzufügen";
BlocklyMsg["REMOVE_COMMENT"] = "Kommentar entfernen";
BlocklyMsg["DUPLICATE_COMMENT"] = "Kommentar duplizieren";
BlocklyMsg["EXTERNAL_INPUTS"] = "externe Eingänge";
BlocklyMsg["INLINE_INPUTS"] = "interne Eingänge";
BlocklyMsg["DELETE_BLOCK"] = "Baustein löschen";
BlocklyMsg["DELETE_X_BLOCKS"] = "%1 Bausteine löschen";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Alle %1 Bausteine löschen?";
BlocklyMsg["CLEAN_UP"] = "Bausteine aufräumen";
BlocklyMsg["COLLAPSE_BLOCK"] = "Baustein zusammenfalten";
BlocklyMsg["COLLAPSE_ALL"] = "Alle Bausteine zusammenfalten";
BlocklyMsg["EXPAND_BLOCK"] = "Baustein entfalten";
BlocklyMsg["EXPAND_ALL"] = "Alle Bausteine entfalten";
BlocklyMsg["DISABLE_BLOCK"] = "Baustein deaktivieren";
BlocklyMsg["ENABLE_BLOCK"] = "Baustein aktivieren";
BlocklyMsg["HELP"] = "Hilfe";
BlocklyMsg["UNDO"] = "Rückgängig";
BlocklyMsg["REDO"] = "Wiederholen";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Wert ändern:";
BlocklyMsg["RENAME_VARIABLE"] = "Variable umbenennen …";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Alle \"%1\"-Variablen umbenennen in:";
BlocklyMsg["NEW_VARIABLE"] = "Variable erstellen …";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Zeichenfolgenvariable erstellen …";
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Zahlenvariable erstellen …";
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Farbvariable erstellen …";
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "Neuer Variablentyp:";
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Name der neuen Variable:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "Eine Variable namens „%1“ ist bereits vorhanden.";
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Eine Variable namens „%1“ ist bereits für einen anderen Typ vorhanden: „%2“.";
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "%1 Verwendungen der Variable „%2“ löschen?";
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Die Variable „%1“ kann nicht gelöscht werden, da sie Teil der Definition der Funktion „%2“ ist.";
BlocklyMsg["DELETE_VARIABLE"] = "Die Variable „%1“ löschen";
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://de.wikipedia.org/wiki/Farbe";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Wähle eine Farbe aus der Palette.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "zufällige Farbe";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Erzeugt eine Farbe nach dem Zufallsprinzip.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "Farbe aus";
BlocklyMsg["COLOUR_RGB_RED"] = "rot";
BlocklyMsg["COLOUR_RGB_GREEN"] = "grün";
BlocklyMsg["COLOUR_RGB_BLUE"] = "blau";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Erzeugt eine Farbe mit selbst definierten Rot-, Grün- und Blauwerten. Alle Werte müssen zwischen 0 und 100 liegen.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "mische";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "Farbe 1";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "und Farbe 2";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "im Verhältnis";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Vermischt 2 Farben mit konfigurierbarem Farbverhältnis (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://de.wikipedia.org/wiki/For-Schleife";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "wiederhole %1-mal:";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "mache";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Eine Anweisung mehrfach ausführen.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://de.wikipedia.org/wiki/Schleife_%28Programmierung%29";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "wiederhole solange";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "wiederhole bis";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Führt Anweisungen aus, solange die Bedingung wahr ist.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Führt Anweisungen aus, solange die Bedingung unwahr ist.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://de.wikipedia.org/wiki/For-Schleife";
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Zählt die Variable \"%1\" von einem Startwert bis zu einem Endwert und führt für jeden Wert eine Anweisung aus.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "zähle %1 von %2 bis %3 in Schritten von %4";
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://de.wikipedia.org/wiki/For-Schleife";
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "für jeden Wert %1 aus der Liste %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Führt eine Anweisung für jeden Wert in der Liste aus und setzt dabei die Variable \"%1\" auf den aktuellen Listenwert.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://de.wikipedia.org/wiki/Kontrollstruktur";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "die Schleife abbrechen";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "sofort mit nächstem Schleifendurchlauf fortfahren";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Die umgebende Schleife beenden.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Diese Anweisung abbrechen und mit dem nächsten Schleifendurchlauf fortfahren.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warnung: Dieser Baustein kann nur in einer Schleife verwendet werden.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Führt eine Anweisung aus, falls eine Bedingung wahr ist.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Führt die erste Anweisung aus, falls eine Bedingung wahr ist. Führt ansonsten die zweite Anweisung aus.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Führt die erste Anweisung aus, falls die erste Bedingung wahr ist. Führt ansonsten die zweite Anweisung aus, falls die zweite Bedingung wahr ist.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Führe die erste Anweisung aus, falls die erste Bedingung wahr ist.  Führt ansonsten die zweite Anweisung aus, falls die zweite Bedingung wahr ist. Führt die dritte Anweisung aus, falls keine der beiden Bedingungen wahr ist.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "falls";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "sonst falls";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "sonst";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "Hinzufügen, entfernen oder sortieren von Sektionen";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Eine weitere Bedingung hinzufügen.";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Eine sonst-Bedingung hinzufügen. Führt eine Anweisung aus, falls keine Bedingung zutrifft.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://de.wikipedia.org/wiki/Vergleich_%28Zahlen%29";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Ist wahr, falls beide Werte gleich sind.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Ist wahr, falls beide Werte unterschiedlich sind.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Ist wahr, falls der erste Wert kleiner als der zweite Wert ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Ist wahr, falls der erste Wert kleiner als oder gleich groß wie der zweite Wert ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Ist wahr, falls der erste Wert größer als der zweite Wert ist.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Ist wahr, falls der erste Wert größer als oder gleich groß wie der zweite Wert ist.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Ist wahr, falls beide Werte wahr sind.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "und";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Ist wahr, falls einer der beiden Werte wahr ist.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "oder";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "nicht %1";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Ist wahr, falls der Eingabewert unwahr ist. Ist unwahr, falls der Eingabewert wahr ist.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "wahr";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "falsch";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Ist entweder wahr oder falsch.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://de.wikipedia.org/wiki/Nullwert";
BlocklyMsg["LOGIC_NULL"] = "null";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Ist \"null\".";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://de.wikipedia.org/wiki/%3F:#Auswahloperator";
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "prüfe";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "falls wahr";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "falls falsch";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Überprüft eine Bedingung \"prüfe\". Falls die Bedingung wahr ist, wird der \"falls wahr\"-Wert zurückgegeben, andernfalls der \"falls unwahr\"-Wert";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://de.wikipedia.org/wiki/Zahl";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Eine Zahl.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";
BlocklyMsg["MATH_TRIG_COS"] = "cos";
BlocklyMsg["MATH_TRIG_TAN"] = "tan";
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://de.wikipedia.org/wiki/Grundrechenart";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Ist die Summe zweier Zahlen.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ist die Differenz zweier Zahlen.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Ist das Produkt zweier Zahlen.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Ist der Quotient zweier Zahlen.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Ist die erste Zahl potenziert mit der zweiten Zahl.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://de.wikipedia.org/wiki/Quadratwurzel";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "Quadratwurzel";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Ist die Quadratwurzel einer Zahl.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "Betrag";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Ist der Betrag einer Zahl.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Negiert eine Zahl.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Ist der natürliche Logarithmus einer Zahl.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Ist der dekadische Logarithmus einer Zahl.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Ist Wert der Exponentialfunktion einer Zahl.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Rechnet 10 hoch eine Zahl.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://de.wikipedia.org/wiki/Trigonometrie";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Ist der Sinus des Winkels (nicht Radiant).";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Ist der Kosinus des Winkels.";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Ist der Tangens des Winkels (nicht Radiant).";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Ist der Arkussinus des Eingabewertes.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Ist der Arkuskosinus des Eingabewertes.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Ist der Arkustangens des Eingabewertes.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://de.wikipedia.org/wiki/Mathematische_Konstante";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Mathematische Konstanten wie: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) oder ∞ (unendlich).";
BlocklyMsg["MATH_IS_EVEN"] = "ist gerade";
BlocklyMsg["MATH_IS_ODD"] = "ist ungerade";
BlocklyMsg["MATH_IS_PRIME"] = "ist eine Primzahl";
BlocklyMsg["MATH_IS_WHOLE"] = "ist eine ganze Zahl";
BlocklyMsg["MATH_IS_POSITIVE"] = "ist positiv";
BlocklyMsg["MATH_IS_NEGATIVE"] = "ist negativ";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "ist teilbar durch";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Überprüft, ob eine Zahl gerade, ungerade, eine Primzahl, ganzzahlig, positiv, negativ oder durch eine zweite Zahl teilbar ist. Gibt wahr oder falsch zurück.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://de.wikipedia.org/wiki/Inkrement_und_Dekrement";
BlocklyMsg["MATH_CHANGE_TITLE"] = "erhöhe %1 um %2";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Addiert eine Zahl zu \"%1\".";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://de.wikipedia.org/wiki/Runden";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Eine Zahl auf- oder abrunden.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "runde";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "runde auf";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "runde ab";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "http://www.sysplus.ch/einstieg.php?links=menu&seite=4125&grad=Crash&prog=Excel";
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "Summe über die Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Ist die Summe aller Zahlen in einer Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "Minimalwert der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Ist die kleinste Zahl in einer Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "Maximalwert der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Ist die größte Zahl in einer Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "Mittelwert der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Ist der Durchschnittswert aller Zahlen in einer Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "Median der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Ist der Median aller Zahlen in einer Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "am häufigsten in der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Findet die Werte mit dem häufigsten Vorkommen in der Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Standardabweichung der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Ist die Standardabweichung aller Werte in der Liste.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "Zufallswert aus der Liste";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Gibt einen zufälligen Wert aus der Liste zurück.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://de.wikipedia.org/wiki/Modulo";
BlocklyMsg["MATH_MODULO_TITLE"] = "Rest von %1 ÷ %2";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Der Rest nach einer Division.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "begrenze %1 zwischen %2 und %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Begrenzt eine Zahl auf den Wertebereich zwischen zwei anderen Zahlen (inklusiv).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://de.wikipedia.org/wiki/Zufallszahlen";
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "ganzzahlige Zufallszahl zwischen %1 und %2";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Erzeugt eine ganzzahlige Zufallszahl zwischen zwei Zahlen (inklusiv).";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://de.wikipedia.org/wiki/Zufallszahlen";
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Zufallszahl (0.0 - 1.0)";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Erzeugt eine Zufallszahl zwischen 0.0 (inklusiv) und 1.0 (exklusiv).";
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://de.wikipedia.org/wiki/Arctan2";
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 von X:%1 Y:%2";
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Gibt den Arkustangens des Punktes (X, Y) in Grad von -180 bis 180 zurück.";
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://de.wikipedia.org/wiki/Zeichenkette";
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Ein Buchstabe, Text oder Satz.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "erstelle Text aus";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Erstellt einen Text durch das Verbinden von mehreren Textelementen.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "verbinden";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Hinzufügen, entfernen und sortieren von Elementen.";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Ein Element zum Text hinzufügen.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "zu %1 Text %2 anhängen";
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Text an die Variable \"%1\" anhängen.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "Länge von %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Die Anzahl von Zeichen in einem Text (inkl. Leerzeichen).";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 ist leer";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Ist wahr, falls der Text keine Zeichen enthält.";
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Findet das erste / letzte Auftreten eines Suchbegriffs in einem Text. Gibt die Position des Begriffs zurück oder %1 falls der Suchbegriff nicht gefunden wurde.";
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "im Text %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "suche erstes Auftreten des Begriffs";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "suche letztes Auftreten des Begriffs";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "im Text %1 %2";
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "nimm";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "nimm von hinten";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "nimm ersten";
BlocklyMsg["TEXT_CHARAT_LAST"] = "nimm letzten";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "nimm zufälligen";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "Buchstaben";
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Extrahiert einen Buchstaben von einer bestimmten Position.";
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Gibt den angegebenen Textabschnitt zurück.";
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "im Text";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "nimm Teil ab";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "nimm Teil ab von hinten";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "nimm Teil ab erster";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "bis";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "bis von hinten";
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "bis letzter";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "Buchstabe";
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Wandelt Schreibweise von Texten um, in Großbuchstaben, Kleinbuchstaben oder den ersten Buchstaben jedes Wortes groß und die anderen klein.";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "wandel um in GROSSBUCHSTABEN";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "wandel um in kleinbuchstaben";
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "wandel um in Substantive";
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Entfernt Leerzeichen vom Anfang und / oder Ende eines Textes.";
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "entferne Leerzeichen vom Anfang und vom Ende (links und rechts)";
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "entferne Leerzeichen vom Anfang (links)";
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "entferne Leerzeichen vom Ende (rechts)";
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "gib aus %1";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Gibt den Text aus.";
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "frage nach Text mit Hinweis";
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "frage nach Zahl mit Hinweis";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Fragt den Benutzer nach einer Zahl.";
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Fragt den Benutzer nach einem Text.";
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "zähle %1 in %2";
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Zähle, wie oft ein Text innerhalb eines anderen Textes vorkommt.";
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "ersetze %1 durch %2 in %3";
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Ersetze alle Vorkommen eines Textes innerhalb eines anderen Textes.";
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "kehre %1 um";
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Kehre die Reihenfolge der Zeichen im Text um.";
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "erzeuge eine leere Liste";
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Erzeugt eine leere Liste ohne Inhalt.";
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Erzeugt eine Liste aus den angegebenen Elementen.";
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "erzeuge Liste mit";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "Liste";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Hinzufügen, entfernen und sortieren von Elementen.";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Ein Element zur Liste hinzufügen.";
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Erzeugt eine Liste mit einer variablen Anzahl von Elementen.";
BlocklyMsg["LISTS_REPEAT_TITLE"] = "erzeuge Liste mit %2-mal dem Element %1​";
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "Länge von %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Die Anzahl von Elementen in der Liste.";
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 ist leer";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Ist wahr, falls die Liste leer ist.";
BlocklyMsg["LISTS_INLIST"] = "in der Liste";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "suche erstes Auftreten von";
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "suche letztes Auftreten von";
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Sucht die Position (Index) eines Elementes in der Liste. Gibt %1 zurück, falls kein Element gefunden wurde.";
BlocklyMsg["LISTS_GET_INDEX_GET"] = "nimm";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "nimm und entferne";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "entferne";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "das";
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "von hinten das";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "Erste";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "Letzte";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "Zufällig";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "Element";
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ist das erste Element.";
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 ist das letzte Element.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Extrahiert das Element an der angegebenen Position in der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Extrahiert das erste Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Extrahiert das letzte Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Extrahiert ein zufälliges Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Extrahiert und entfernt das Element an der angegebenen Position aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Extrahiert und entfernt das erste Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Extrahiert und entfernt das letzte Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Extrahiert und entfernt ein zufälliges Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Entfernt das Element an der angegebenen Position aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Entfernt das erste Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Entfernt das letzte Element aus der Liste.";
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Entfernt ein zufälliges Element aus der Liste.";
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "setze für";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "füge als";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "ein";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Setzt das Element an der angegebenen Position in der Liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Setzt das erste Element in der Liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Setzt das letzte Element in die Liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Setzt ein zufälliges Element in der Liste.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Fügt das Element an der angegebenen Position in die Liste ein.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Fügt das Element an den Anfang der Liste an.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Fügt das Element ans Ende der Liste an.";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Fügt das Element zufällig in die Liste ein.";
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "nimm Teilliste ab";
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "nimm Teilliste ab von hinten";
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "nimm Teilliste ab erstes";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "bis";
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "bis von hinten";
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "bis letztes";
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "Element";
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Erstellt eine Kopie mit dem angegebenen Abschnitt der Liste.";
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "%1 %2 %3 sortieren";
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Eine Kopie einer Liste sortieren.";
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "aufsteigend";
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "absteigend";
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numerisch";
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabetisch";
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetisch, Großschreibung ignorieren";
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "Liste aus Text erstellen";
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "Text aus Liste erstellen";
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "mit Trennzeichen";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Text in eine Liste mit Texten aufteilen, unterbrochen bei jedem Trennzeichen.";
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Liste mit Texten in einen Text vereinen, getrennt durch ein Trennzeichen.";
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "kehre %1 um";
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Kehre eine Kopie einer Liste um.";
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = ".";
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Gibt den Wert der Variable zurück.";
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Erzeuge \"Schreibe %1\"";
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "setze %1 auf %2";
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Setzt den Wert einer Variable.";
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Erzeuge \"Lies %1\"";
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "um";
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "etwas tun";
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "mit:";
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "mit:";
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Ein Funktionsblock ohne Rückgabewert.";
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Beschreibe diese Funktion …";
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://de.wikipedia.org/wiki/Prozedur_(Programmierung)";
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "gib zurück";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Ein Funktionsblock mit Rückgabewert.";
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "Anweisungen erlauben";
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warnung: Dieser Funktionsblock hat zwei gleich benannte Parameter.";
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://de.wikipedia.org/wiki/Unterprogramm";
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Rufe einen Funktionsblock ohne Rückgabewert auf.";
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://de.wikipedia.org/wiki/Unterprogramm";
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Rufe einen Funktionsblock mit Rückgabewert auf.";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "Parameter";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Die Eingaben zu dieser Funktion hinzufügen, entfernen oder neu anordnen.";
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "Variable:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Eine Eingabe zur Funktion hinzufügen.";
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Markiere Funktionsblock";
BlocklyMsg["PROCEDURES_CREATE_DO"] = "Erzeuge \"Aufruf %1\"";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "Gibt den zweiten Wert zurück und verlässt die Funktion, falls der erste Wert wahr ist.";
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warnung: Dieser Block darf nur innerhalb eines Funktionsblocks genutzt werden.";
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Teile etwas mit…";
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Arbeitsbereich";
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Eingeklappte Blöcke enthalten Warnungen.";
BlocklyMsg["DIALOG_OK"] = "OK";
BlocklyMsg["DIALOG_CANCEL"] = "Abbrechen";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "mache";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "mache";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "mache";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "mache";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "falls";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "sonst falls";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "sonst";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "Element";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "Element";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "Element";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "Element";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "in der Liste";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "in der Liste";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "in der Liste";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "in der Liste";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "um";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "etwas tun";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Beschreibe diese Funktion …";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Blockly-Spiele";
BlocklyGamesMsg["Games.puzzle"] = "Puzzle";
BlocklyGamesMsg["Games.maze"] = "Labyrinth";
BlocklyGamesMsg["Games.bird"] = "Vogel";
BlocklyGamesMsg["Games.turtle"] = "Schildkröte";
BlocklyGamesMsg["Games.movie"] = "Film";
BlocklyGamesMsg["Games.music"] = "Musik";
BlocklyGamesMsg["Games.pondTutor"] = "Teichübung";
BlocklyGamesMsg["Games.pond"] = "Teich";
BlocklyGamesMsg["Games.linesOfCode1"] = "Du hast dieses Level mit 1 Zeile JavaScript gelöst:";
BlocklyGamesMsg["Games.linesOfCode2"] = "Du hast dieses Level mit %1 Zeilen JavaScript gelöst:";
BlocklyGamesMsg["Games.nextLevel"] = "Bist du bereit für Level %1?";
BlocklyGamesMsg["Games.finalLevel"] = "Bist du bereit für die nächste Herausforderung?";
BlocklyGamesMsg["Games.submitTitle"] = "Titel:";
BlocklyGamesMsg["Games.linkTooltip"] = "Speichern und Link erstellen.";
BlocklyGamesMsg["Games.runTooltip"] = "Das geschriebene Programm ausführen.";
BlocklyGamesMsg["Games.runProgram"] = "Programm ausführen";
BlocklyGamesMsg["Games.resetTooltip"] = "Stoppt das Programm und setzt das Level zurück.";
BlocklyGamesMsg["Games.resetProgram"] = "Ausgangsposition";
BlocklyGamesMsg["Games.help"] = "Hilfe";
BlocklyGamesMsg["Games.catLogic"] = "Logik";
BlocklyGamesMsg["Games.catLoops"] = "Schleifen";
BlocklyGamesMsg["Games.catMath"] = "Mathematik";
BlocklyGamesMsg["Games.catText"] = "Text";
BlocklyGamesMsg["Games.catLists"] = "Listen";
BlocklyGamesMsg["Games.catColour"] = "Farbe";
BlocklyGamesMsg["Games.catVariables"] = "Variablen";
BlocklyGamesMsg["Games.catProcedures"] = "Funktionen";
BlocklyGamesMsg["Games.httpRequestError"] = "Es gab ein Problem mit der Anfrage.";
BlocklyGamesMsg["Games.linkAlert"] = "Teile deine Blöcke mit diesem Link:\n\n%1";
BlocklyGamesMsg["Games.hashError"] = "Leider stimmt „%1“ mit keinem gespeicherten Programm überein.";
BlocklyGamesMsg["Games.xmlError"] = "Deine gespeicherte Datei konnte nicht geladen werden. Vielleicht wurde sie mit einer anderen Blockly-Version erstellt?";
BlocklyGamesMsg["Games.submitted"] = "Vielen Dank für dieses Programm! Falls unsere Belegschaft aus trainierten Affen es mag, werden sie es innerhalb weniger Tage in der Galerie veröffentlichen.";
BlocklyGamesMsg["Games.listVariable"] = "Liste";
BlocklyGamesMsg["Games.textVariable"] = "Text";
BlocklyGamesMsg["Games.breakLink"] = "Sobald du anfängst, JavaScript zu bearbeiten, kannst du nicht zurückgehen, um Blöcke zu bearbeiten. Ist das in Ordnung?";
BlocklyGamesMsg["Games.blocks"] = "Bausteine";
BlocklyGamesMsg["Games.congratulations"] = "Glückwunsch!";
BlocklyGamesMsg["Games.helpAbort"] = "Dieses Level ist sehr schwierig. Möchtest du es überspringen und zum nächsten Spiel gehen? Du kannst später immer noch zurückkehren.";
BlocklyGamesMsg["Index.clear"] = "Alle deine Lösungen löschen?";
BlocklyGamesMsg["Index.subTitle"] = "Spiele für die Programmierer von morgen.";
BlocklyGamesMsg["Index.moreInfo"] = "Informationen für Lehrpersonen";
BlocklyGamesMsg["Index.startOver"] = "Neu anfangen?";
BlocklyGamesMsg["Index.clearData"] = "Daten löschen";
BlocklyGamesMsg["Puzzle.animal1"] = "Ente";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Federn";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Schnabel";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://de.wikipedia.org/wiki/Entenvögel";
BlocklyGamesMsg["Puzzle.animal2"] = "Katze";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Schnurrhaare";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Fell";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://de.wikipedia.org/wiki/Hauskatze";
BlocklyGamesMsg["Puzzle.animal3"] = "Biene";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Honig";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Stachel";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://de.wikipedia.org/wiki/Bienen";
BlocklyGamesMsg["Puzzle.animal4"] = "Schnecke";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Gehäuse";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Schleim";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://de.wikipedia.org/wiki/Schnecken";
BlocklyGamesMsg["Puzzle.picture"] = "Bild:";
BlocklyGamesMsg["Puzzle.legs"] = "Beine:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "auswählen …";
BlocklyGamesMsg["Puzzle.traits"] = "Eigenschaften:";
BlocklyGamesMsg["Puzzle.error0"] = "Perfekt! \nAlle %1 Bausteine sind richtig.";
BlocklyGamesMsg["Puzzle.error1"] = "Fast! Ein Baustein ist falsch.";
BlocklyGamesMsg["Puzzle.error2"] = "%1 Bausteine sind falsch.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Der hervorgehobene Baustein ist falsch. Versuche es noch einmal.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Antworten überprüfen";
BlocklyGamesMsg["Puzzle.helpText"] = "Hänge für jedes Tier (grün) sein Bild an, wähle seine Anzahl der Beine aus und mache einen Stapel mit seinen Eigenschaften.";
BlocklyGamesMsg["Maze.moveForward"] = "geradeaus bewegen";
BlocklyGamesMsg["Maze.turnLeft"] = "links drehen";
BlocklyGamesMsg["Maze.turnRight"] = "rechts drehen";
BlocklyGamesMsg["Maze.doCode"] = "ausführen";
BlocklyGamesMsg["Maze.elseCode"] = "sonst";
BlocklyGamesMsg["Maze.helpIfElse"] = "Wenn-Sonst-Bausteine führen das eine oder das andere aus.";
BlocklyGamesMsg["Maze.pathAhead"] = "wenn Pfad geradeaus ist";
BlocklyGamesMsg["Maze.pathLeft"] = "wenn Pfad nach links ist";
BlocklyGamesMsg["Maze.pathRight"] = "wenn Pfad nach rechts ist";
BlocklyGamesMsg["Maze.repeatUntil"] = "wiederholen bis";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Bewegt den Spieler ein Feld vor.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Dreht den Spieler um 90 Grad nach links oder rechts.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Falls es einen Pfad in der angegebenen Richtung gibt, dann einige Aktionen ausführen.";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Falls es einen Pfad in der angegebenen Richtung gibt, dann den ersten Abschnitt ausführen. Ansonsten den zweiten Abschnitt ausführen.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Die beigefügten Aktionen wiederholen, bis das Ziel erreicht wurde.";
BlocklyGamesMsg["Maze.capacity0"] = "Du hast keine Bausteine mehr.";
BlocklyGamesMsg["Maze.capacity1"] = "Du hast noch %1 Baustein.";
BlocklyGamesMsg["Maze.capacity2"] = "Du hast noch %2 Bausteine.";
BlocklyGamesMsg["Maze.runTooltip"] = "Der Spieler macht das, was die Bausteine sagen.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Setzt den Spieler an den Start des Labyrinths zurück.";
BlocklyGamesMsg["Maze.helpStack"] = "Verbinde einige \"geradeaus bewegen\"-Blöcke, um das Ziel zu erreichen.";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "In diesem Level musst du die ganzen Bausteine in dem weißen Arbeitsbereich zusammenstapeln.";
BlocklyGamesMsg["Maze.helpRun"] = "Führe dein Programm aus, um zu sehen, was passiert.";
BlocklyGamesMsg["Maze.helpReset"] = "Dein Programm löst das Labyrinth nicht. Drücke \"Zurücksetzen\" und versuche es erneut.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Erreiche das Ende dieses Pfads mit nur zwei Bausteinen. Benutze „Wiederholen“, um einen Baustein mehr als einmal auszuführen.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Du hast für dieses Level alle Bausteine aufgebraucht. Um einen neuen Baustein zu erstellen, musst du zuerst einen vorhandenen Baustein löschen.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "Du kannst mehr als einen Baustein in einen \"Wiederholungs\"-Baustein platzieren.";
BlocklyGamesMsg["Maze.helpSkins"] = "Wähle deinen Lieblingsspieler vom Menü aus.";
BlocklyGamesMsg["Maze.helpIf"] = "Ein „Wenn“-Baustein macht etwas, falls die Bedingung wahr ist. Versuche links abzubiegen, falls es einen Pfad nach links gibt.";
BlocklyGamesMsg["Maze.helpMenu"] = "Klicke auf %1 im 'Wenn'-Baustein, um die Bedingung zu ändern.";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Kannst du dieses komplizierte Labyrinth lösen? Folge der linken Wand. Nur für fortgeschrittene Programmierer!";
BlocklyGamesMsg["Bird.noWorm"] = "hat keinen Wurm";
BlocklyGamesMsg["Bird.heading"] = "Steuerkurs";
BlocklyGamesMsg["Bird.noWormTooltip"] = "Die Bedingung, wenn der Vogel den Wurm nicht bekommen hat.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Bewege dich in die Richtung des angegebenen Winkels: 0 ist nach rechts, 90 ist geradeaus etc.";
BlocklyGamesMsg["Bird.positionTooltip"] = "x und y markieren die Position des Vogels. Wenn x = 0, ist der Vogel in der Nähe der linken Kante, wenn x = 100, ist er in der Nähe der rechten Kante. Wenn y = 0, ist der Vogel unten, wenn y = 100, ist er oben.";
BlocklyGamesMsg["Bird.helpHeading"] = "Ändere den Winkel des Steuerkurses, damit der Vogel den Wurm bekommt und in seinem Nest landet.";
BlocklyGamesMsg["Bird.helpHasWorm"] = "Verwende diesen Block, um in einen Steuerkurs zu gehen, falls du den Wurm hast, oder in einen anderen Steuerkurs, falls du den Wurm nicht hast.";
BlocklyGamesMsg["Bird.helpX"] = "„x“ ist deine aktuelle horizontale Position. Verwende diesen Block, um in einen Steuerkurs zu gehen, falls „x“ weniger ist als eine Zahl, oder anderenfalls in einen anderen Steuerkurs.";
BlocklyGamesMsg["Bird.helpElse"] = "Klicke auf das Symbol, um den „if“-Block zu ändern.";
BlocklyGamesMsg["Bird.helpElseIf"] = "Dieses Level benötigt sowohl einen „sonst-wenn“- als auch einen „sonst“-Block.";
BlocklyGamesMsg["Bird.helpAnd"] = "Der „und“-Block ist nur wahr, wenn beide Eingaben wahr sind.";
BlocklyGamesMsg["Bird.helpMutator"] = "Zieht einen „sonst“-Block in den „wenn“-Block.";
BlocklyGamesMsg["Turtle.moveTooltip"] = "Bewegt die Schildkröte um den angegebenen Wert vorwärts oder rückwärts.";
BlocklyGamesMsg["Turtle.moveForward"] = "vorwärts bewegen um";
BlocklyGamesMsg["Turtle.moveBackward"] = "rückwärts bewegen um";
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Dreht die Schildkröte nach links oder rechts um die angegebene Gradanzahl.";
BlocklyGamesMsg["Turtle.turnRight"] = "nach rechts drehen um";
BlocklyGamesMsg["Turtle.turnLeft"] = "nach links drehen um";
BlocklyGamesMsg["Turtle.widthTooltip"] = "Ändert die Breite des Stiftes.";
BlocklyGamesMsg["Turtle.setWidth"] = "Breite festlegen auf";
BlocklyGamesMsg["Turtle.colourTooltip"] = "Ändert die Farbe des Stiftes.";
BlocklyGamesMsg["Turtle.setColour"] = "ändert die Farbe in";
BlocklyGamesMsg["Turtle.penTooltip"] = "Hebt oder senkt den Stift zum Stoppen oder Starten der Zeichnung.";
BlocklyGamesMsg["Turtle.penUp"] = "Stift nach oben";
BlocklyGamesMsg["Turtle.penDown"] = "Stift nach unten";
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Macht die Schildkröte (Kreis und Pfeil) sichtbar oder unsichtbar.";
BlocklyGamesMsg["Turtle.hideTurtle"] = "Schildkröte ausblenden";
BlocklyGamesMsg["Turtle.showTurtle"] = "Schildkröte anzeigen";
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://de.wikipedia.org/wiki/Buchdruck";
BlocklyGamesMsg["Turtle.printTooltip"] = "Zeichnet Text in der Richtung der Schildkröte bei ihrem Standort.";
BlocklyGamesMsg["Turtle.print"] = "drucken";
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://de.wikipedia.org/wiki/Schriftschnitt";
BlocklyGamesMsg["Turtle.fontTooltip"] = "Legt die Schriftart fest, die vom Druck-Baustein verwendet wird.";
BlocklyGamesMsg["Turtle.font"] = "Schriftart";
BlocklyGamesMsg["Turtle.fontSize"] = "Schriftgröße";
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";
BlocklyGamesMsg["Turtle.fontBold"] = "fett";
BlocklyGamesMsg["Turtle.fontItalic"] = "kursiv";
BlocklyGamesMsg["Turtle.submitDisabled"] = "Führt dein Programm aus, bis es stoppt. Dann kannst du deine Zeichnung zur Galerie abschicken.";
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Öffnet die Galerie der Zeichnungen.";
BlocklyGamesMsg["Turtle.galleryMsg"] = "Galerie ansehen";
BlocklyGamesMsg["Turtle.submitTooltip"] = "Deine Zeichnung in der Galerie speichern.";
BlocklyGamesMsg["Turtle.submitMsg"] = "In der Galerie speichern";
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Deine Lösung funktioniert, aber du kannst es besser.";
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Zeichne die Form mit nur drei Blöcken.";
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Zeichne den Stern mit nur vier Blöcken.";
BlocklyGamesMsg["Turtle.helpText1"] = "Erstelle ein Programm, das ein Quadrat zeichnet.";
BlocklyGamesMsg["Turtle.helpText2"] = "Ändere dein Programm, um ein Fünfeck anstatt eines Quadrats zu zeichnen.";
BlocklyGamesMsg["Turtle.helpText3a"] = "Es gibt einen neuen Block, der es dir ermöglicht, die Farbe zu ändern:";
BlocklyGamesMsg["Turtle.helpText3b"] = "Zeichne einen gelben Stern.";
BlocklyGamesMsg["Turtle.helpText4a"] = "Es gibt einen neuen Block, der es dir ermöglicht, deinen Stift von dem Papier zu heben, wenn du dich bewegst:";
BlocklyGamesMsg["Turtle.helpText4b"] = "Zeichne einen kleinen gelben Stern, dann zeichne darüber eine Linie.";
BlocklyGamesMsg["Turtle.helpText5"] = "Kannst du anstatt eines Sterns vier Sterne, angeordnet in einem Quadrat, zeichnen?";
BlocklyGamesMsg["Turtle.helpText6"] = "Zeichne drei gelbe Sterne und eine weiße Linie.";
BlocklyGamesMsg["Turtle.helpText7"] = "Zeichne die Sterne, dann zeichne vier weiße Linien.";
BlocklyGamesMsg["Turtle.helpText8"] = "Zeichne 360 weiße Linien, die wie der Vollmond aussehen.";
BlocklyGamesMsg["Turtle.helpText9"] = "Kannst du einen schwarzen Kreis hinzufügen, sodass der Mond eine Sichel bekommt?";
BlocklyGamesMsg["Turtle.helpText10"] = "Zeichne, was du willst. Du hast eine hohe Anzahl neuer Blöcke, die du entdecken kannst. Viel Spaß!";
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Verwende den Button \"Galerie ansehen\", um zu sehen, was andere Menschen gezeichnet haben. Falls du etwas Interessantes gezeichnet hast, verwende den Button \"Zur Galerie abschicken\", um sie zu veröffentlichen.";
BlocklyGamesMsg["Turtle.helpToolbox"] = "Wähle eine Kategorie aus, um die Blöcke anzusehen.";
BlocklyGamesMsg["Movie.x"] = "x";
BlocklyGamesMsg["Movie.y"] = "y";
BlocklyGamesMsg["Movie.x1"] = "Start-x";
BlocklyGamesMsg["Movie.y1"] = "Start-y";
BlocklyGamesMsg["Movie.x2"] = "End-x";
BlocklyGamesMsg["Movie.y2"] = "End-y";
BlocklyGamesMsg["Movie.radius"] = "Radius";
BlocklyGamesMsg["Movie.width"] = "Breite";
BlocklyGamesMsg["Movie.height"] = "Höhe";
BlocklyGamesMsg["Movie.circleTooltip"] = "Zeichnet einen Kreis am angegebenen Ort und mit dem angegebenen Radius.";
BlocklyGamesMsg["Movie.circleDraw"] = "Kreis";
BlocklyGamesMsg["Movie.rectTooltip"] = "Zeichnet ein Rechteck am angegebenen Ort und mit der angegebenen Breite und Höhe.";
BlocklyGamesMsg["Movie.rectDraw"] = "Rechteck";
BlocklyGamesMsg["Movie.lineTooltip"] = "Zeichnet eine Linie von einem Punkt zum anderen mit der angegebenen Breite.";
BlocklyGamesMsg["Movie.lineDraw"] = "Linie";
BlocklyGamesMsg["Movie.timeTooltip"] = "Gibt die aktuelle Zeit in der Animation zurück (0–100).";
BlocklyGamesMsg["Movie.colourTooltip"] = "Ändert die Farbe des Stiftes.";
BlocklyGamesMsg["Movie.setColour"] = "Farbe festlegen auf";
BlocklyGamesMsg["Movie.submitDisabled"] = "Dein Film bewegt sich nicht. Verwende Blöcke, um etwas interessant zu machen. Dann kannst du dein Film zur Galerie abschicken.";
BlocklyGamesMsg["Movie.galleryTooltip"] = "Öffne die Galerie der Filme.";
BlocklyGamesMsg["Movie.galleryMsg"] = "Galerie ansehen";
BlocklyGamesMsg["Movie.submitTooltip"] = "Reiche deinen Film in die Galerie ein.";
BlocklyGamesMsg["Movie.submitMsg"] = "In der Galerie speichern";
BlocklyGamesMsg["Movie.helpLayer"] = "Verschiebe den Hintergrundkreis an den Anfang deines Programms. Dann wird er hinter der Person erscheinen.";
BlocklyGamesMsg["Movie.helpText1"] = "Benutze einfache Formen, um diese Person zu zeichnen.";
BlocklyGamesMsg["Movie.helpText2a"] = "Dieses Level ist ein Film. Du möchtest den Arm der Person durch den Bildschirm verschieben. Drücke den Wiedergabe-Knopf, um eine Vorschau anzusehen.";
BlocklyGamesMsg["Movie.helpText2b"] = "Während der Film abgespielt wird, zählt der Wert des „time“-Blocks von 0 bis 100. Wenn der Arm bei der Y-Position 0 starten und bis 100 gehen soll, sollte dies einfach sein.";
BlocklyGamesMsg["Movie.helpText3"] = "Der „time“-Block zählt von 0 bis 100. Aber jetzt möchtest du, dass die Y-Position des anderen Arms bei 100 beginnen und nach 0 gehen soll. Kannst du eine einfache mathematische Formel herausfinden, die die Richtung ändert?";
BlocklyGamesMsg["Movie.helpText4"] = "Benutze, was du im vorherigen Level gelernt hast, um kreuzende Beine zu erstellen.";
BlocklyGamesMsg["Movie.helpText5"] = "Die mathematische Formel für den Arm ist kompliziert. Hier ist die Antwort:";
BlocklyGamesMsg["Movie.helpText6"] = "Gib der Person ein Paar Hände.";
BlocklyGamesMsg["Movie.helpText7"] = "Verwende den „if“-Block, um einen kleinen Kopf für die erste Hälfte des Films zu zeichnen. Zeichne dann einen großen Kopf für die zweite Hälfte des Films.";
BlocklyGamesMsg["Movie.helpText8"] = "Lege die Beine in die entgegengesetzte Richtung auf dem halben Weg durch den Film.";
BlocklyGamesMsg["Movie.helpText9"] = "Zeichne einen expandierenden Kreis hinter der Person.";
BlocklyGamesMsg["Movie.helpText10"] = "Erstelle einen Film über etwas, was du willst. Du hast eine hohe Anzahl neuer Blöcke, die du entdecken kannst. Viel Spaß!";
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Verwende den Button \"Galerie ansehen\", um Filme von anderen Menschen anzusehen. Falls du einen interessanten Film erstellt hast, verwende den Button \"Zur Galerie abschicken\", um ihn zu veröffentlichen.";
BlocklyGamesMsg["Music.playNoteTooltip"] = "Spielt eine Musiknote für die angegebene Dauer und Höhe.";
BlocklyGamesMsg["Music.playNote"] = "Note %2 %1 lang abspielen";
BlocklyGamesMsg["Music.restTooltip"] = "Wartet die angegebene Dauer ab.";
BlocklyGamesMsg["Music.restWholeTooltip"] = "Wartet auf eine ganze Note.";
BlocklyGamesMsg["Music.rest"] = "ruhen für %1";
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Wechselt auf das angegebene Instrument, wenn anschließend Musiknoten abgespielt werden.";
BlocklyGamesMsg["Music.setInstrument"] = "Instrument auf %1 festlegen";
BlocklyGamesMsg["Music.startTooltip"] = "Führt die Blöcke innerhalb aus, wenn die Schaltfläche „Programm ausführen“ angeklickt wird.";
BlocklyGamesMsg["Music.start"] = "wenn %1 angeklickt wird";
BlocklyGamesMsg["Music.pitchTooltip"] = "Eine Note (C4 ist 7).";
BlocklyGamesMsg["Music.firstPart"] = "erster Teil";
BlocklyGamesMsg["Music.piano"] = "Klavier";
BlocklyGamesMsg["Music.trumpet"] = "Trompete";
BlocklyGamesMsg["Music.banjo"] = "Banjo";
BlocklyGamesMsg["Music.violin"] = "Geige";
BlocklyGamesMsg["Music.guitar"] = "Gitarre";
BlocklyGamesMsg["Music.flute"] = "Flöte";
BlocklyGamesMsg["Music.drum"] = "Trommel";
BlocklyGamesMsg["Music.choir"] = "Chor";
BlocklyGamesMsg["Music.submitDisabled"] = "Führe dein Programm aus, bis es aufhört. Dann kannst du deine Musik in der Galerie speichern.";
BlocklyGamesMsg["Music.galleryTooltip"] = "Öffnet die Galerie der Musik.";
BlocklyGamesMsg["Music.galleryMsg"] = "Galerie ansehen";
BlocklyGamesMsg["Music.submitTooltip"] = "Speichert deine Musik in der Galerie.";
BlocklyGamesMsg["Music.submitMsg"] = "In der Galerie speichern";
BlocklyGamesMsg["Music.helpUseFunctions"] = "Deine Lösung funktioniert, aber du kannst es besser machen. Benutze Funktionen, um die Menge des wiederholten Codes zu reduzieren.";
BlocklyGamesMsg["Music.helpUseInstruments"] = "Die Musik wird besser klingen, wenn du in jedem Startblock ein anderes Instrument verwendest.";
BlocklyGamesMsg["Music.helpText1"] = "Komponiere die ersten vier Noten von „Frère Jacques“.";
BlocklyGamesMsg["Music.helpText2a"] = "Eine „Funktion“ erlaubt dir die Gruppierung von Blöcken. Führe sie dann mehr als einmal aus.";
BlocklyGamesMsg["Music.helpText2b"] = "Erstelle eine Funktion, um die ersten vier Noten von „Frère Jacques“ abzuspielen. Führe diese Funktion zweimal aus. Füge keine neuen Notenblöcke hinzu.";
BlocklyGamesMsg["Music.helpText3"] = "Erstelle eine zweite Funktion für den nächsten Teil von „Frère Jacques“. Die letzte Note ist länger.";
BlocklyGamesMsg["Music.helpText4"] = "Erstelle eine dritte Funktion für den nächsten Teil von „Frère Jacques“. Die ersten vier Noten sind kürzer.";
BlocklyGamesMsg["Music.helpText5"] = "Vervollständige die Melodie von „Frère Jacques“.";
BlocklyGamesMsg["Music.helpText6a"] = "Dieser neue Block lässt dich ein anderes Instrument auswählen.";
BlocklyGamesMsg["Music.helpText6b"] = "Spiele deine Melodie mit einer Geige.";
BlocklyGamesMsg["Music.helpText7a"] = "Dieser neue Block fügt eine stille Verzögerung hinzu.";
BlocklyGamesMsg["Music.helpText7b"] = "Erstelle einen zweiten Startblock, der zwei Verzögerungsblöcke hat, spiele dann auch „Frère Jacques“.";
BlocklyGamesMsg["Music.helpText8"] = "Jeder Startblock sollte „Frère Jacques“ zweimal abspielen.";
BlocklyGamesMsg["Music.helpText9"] = "Erstelle vier Startblöcke, die jeweils zweimal „Frère Jacques“ abspielen. Ergänze die richtige Anzahl an Verzögerungsblöcken.";
BlocklyGamesMsg["Music.helpText10"] = "Komponiere, was du willst. Du hast eine hohe Anzahl an neuen Blöcken bekommen, die du entdecken kannst. Viel Spaß!";
BlocklyGamesMsg["Music.helpText10Reddit"] = "Verwende die Schaltfläche \"Galerie ansehen\", um zu sehen, was andere Menschen komponiert haben. Falls du etwas Interessantes komponiert hast, verwende die Schaltfläche \"In Galerie speichern\", um es zu veröffentlichen.";
BlocklyGamesMsg["Pond.scanTooltip"] = "Sucht nach Feinden. Gib eine Richtung an (0–360). Gibt die Entfernung zum nächsten Feind in dieser Richtung zurück. Gibt „Unendlichkeit“ zurück, falls kein Feind gefunden wurde.";
BlocklyGamesMsg["Pond.cannonTooltip"] = "Feuert die Kanone ab. Gib eine Richtung (0–360) und einen Bereich (0–70) an.";
BlocklyGamesMsg["Pond.swimTooltip"] = "Schwimme vorwärts. Gib eine Richtung an (0–360).";
BlocklyGamesMsg["Pond.stopTooltip"] = "Hört auf zu schwimmen. Der Spieler wird sich bis zum Stopp verlangsamen.";
BlocklyGamesMsg["Pond.healthTooltip"] = "Gibt die aktuelle Gesundheit des Spielers zurück (0 ist tot, 100 ist gesund).";
BlocklyGamesMsg["Pond.speedTooltip"] = "Gibt die aktuelle Geschwindigkeit des Spielers zurück (0 ist angehalten, 100 ist volle Geschwindigkeit).";
BlocklyGamesMsg["Pond.locXTooltip"] = "Gibt die X-Koordinate des Spielers zurück (0 ist die linke, 100 die rechte Kante).";
BlocklyGamesMsg["Pond.locYTooltip"] = "Gibt die Y-Koordinate des Spielers zurück (0 ist die untere, 100 die obere Kante).";
BlocklyGamesMsg["Pond.logTooltip"] = "Gibt eine Nummer auf deiner Browser-Konsole aus.";
BlocklyGamesMsg["Pond.docsTooltip"] = "Zeigt die Sprachdokumentation an.";
BlocklyGamesMsg["Pond.documentation"] = "Dokumentation";
BlocklyGamesMsg["Pond.playerName"] = "Spieler";
BlocklyGamesMsg["Pond.targetName"] = "Ziel";
BlocklyGamesMsg["Pond.pendulumName"] = "Pendel";
BlocklyGamesMsg["Pond.scaredName"] = "Ängstlich";
BlocklyGamesMsg["Pond.helpUseScan"] = "Deine Lösung funktioniert, aber du kannst es besser. Verwende „scan“, um der Kanone zu sagen, wie weit sie schießen soll.";
BlocklyGamesMsg["Pond.helpText1"] = "Verwende den Befehl „cannon“, um das Ziel zu treffen. Der erste Parameter ist der Winkel, der zweite der Bereich. Finde die richtige Kombination heraus.";
BlocklyGamesMsg["Pond.helpText2"] = "Dieses Ziel braucht mehrere Treffer. Verwende eine „while (true)“-Schleife, um etwas zeitlich unbegrenzt zu machen.";
BlocklyGamesMsg["Pond.helpText3a"] = "Dieser Gegner bewegt sich zurück und vor, was es schwer macht, ihn zu treffen. Der Ausdruck „scan“ gibt den exakten Bereich des Gegners in der angegebenen Richtung zurück.";
BlocklyGamesMsg["Pond.helpText3b"] = "Dieser Bereich ist genau das, was der Befehl „cannon“ braucht, um exakt abzufeuern.";
BlocklyGamesMsg["Pond.helpText4"] = "Dieser Gegner ist zu weit weg, um die Kanone zu verwenden (sie hat ein Limit von 70 Metern). Verwende stattdessen den Befehl „swim“, um mit dem Hinüberschwimmen zu beginnen und mit dem Gegner zusammenzustoßen.";
BlocklyGamesMsg["Pond.helpText5"] = "Dieser Gegner ist ebenfalls zu weit weg, um die Kanone zu verwenden. Aber du bist zu schwach, um einen Zusammenstoß zu überleben. Schwimme hinüber zum Gegner, derweil ist dein horizontaler Standort weniger als 50. Dann „stop“ und verwende die Kanone.";
BlocklyGamesMsg["Pond.helpText6"] = "Dieser Gegner zieht fort, wenn er geschlagen wird. Schwimm hinüber, falls er außerhalb des Bereichs ist (70 Meter).";
BlocklyGamesMsg["Gallery"] = "Galerie";
