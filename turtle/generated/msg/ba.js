// This file was automatically generated.  Do not modify.

'use strict';
var BlocklyMsg = {};
var BlocklyGamesMsg = {};

BlocklyMsg["VARIABLES_DEFAULT_NAME"] = "элемент";
BlocklyMsg["UNNAMED_KEY"] = "unnamed";  // untranslated
BlocklyMsg["TODAY"] = "Бөгөн";
BlocklyMsg["DUPLICATE_BLOCK"] = "Күсереп алырға";
BlocklyMsg["ADD_COMMENT"] = "Фекер өҫтәргә";
BlocklyMsg["REMOVE_COMMENT"] = "Аңлатмаларҙы юйырға";
BlocklyMsg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
BlocklyMsg["EXTERNAL_INPUTS"] = "Тышҡы өҫтәлмә";
BlocklyMsg["INLINE_INPUTS"] = "Эске өҫтәлмә";
BlocklyMsg["DELETE_BLOCK"] = "Блокты юйҙырырға";
BlocklyMsg["DELETE_X_BLOCKS"] = "%1 блокты юйҙырырға";
BlocklyMsg["DELETE_ALL_BLOCKS"] = "Бөтә %1 блоктарҙы юйырғамы?";
BlocklyMsg["CLEAN_UP"] = "Блоктарҙы таҙартырға";
BlocklyMsg["COLLAPSE_BLOCK"] = "Блокты төрөргә";
BlocklyMsg["COLLAPSE_ALL"] = "Блоктарҙы төрөргә";
BlocklyMsg["EXPAND_BLOCK"] = "Блокты йәйергә";
BlocklyMsg["EXPAND_ALL"] = "Блоктарҙы йәйергә";
BlocklyMsg["DISABLE_BLOCK"] = "Блокты һүндерергә";
BlocklyMsg["ENABLE_BLOCK"] = "Блокты тоҡандырырға";
BlocklyMsg["HELP"] = "Ярҙам";
BlocklyMsg["UNDO"] = "Кире алырға";
BlocklyMsg["REDO"] = "документтарҙы үҙгәртергә";
BlocklyMsg["CHANGE_VALUE_TITLE"] = "Мәғәнәне үҙгәртегеҙ:";
BlocklyMsg["RENAME_VARIABLE"] = "Үҙгәреүсәндең исемен алмаштырырға...";
BlocklyMsg["RENAME_VARIABLE_TITLE"] = "Бөтә '%1' үҙгәреүсәндәрҙең исемен ошолай алмаштырырға:";
BlocklyMsg["NEW_VARIABLE"] = "Яңы үҙгәреүсән...";
BlocklyMsg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
BlocklyMsg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
BlocklyMsg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
BlocklyMsg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
BlocklyMsg["NEW_VARIABLE_TITLE"] = "Яңы үҙгәреүсәндең исеме:";
BlocklyMsg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists.";  // untranslated
BlocklyMsg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
BlocklyMsg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?";  // untranslated
BlocklyMsg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
BlocklyMsg["DELETE_VARIABLE"] = "Delete the '%1' variable";  // untranslated
BlocklyMsg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Төҫ";
BlocklyMsg["COLOUR_PICKER_TOOLTIP"] = "Палитранан төҫ һайлағыҙ.";
BlocklyMsg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
BlocklyMsg["COLOUR_RANDOM_TITLE"] = "осраҡлы төҫ";
BlocklyMsg["COLOUR_RANDOM_TOOLTIP"] = "Төҫтө осраҡлылыҡ буйынса һайлай.";
BlocklyMsg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
BlocklyMsg["COLOUR_RGB_TITLE"] = "ошонан төҫ";
BlocklyMsg["COLOUR_RGB_RED"] = "ҡыҙылдан";
BlocklyMsg["COLOUR_RGB_GREEN"] = "йәшелдән";
BlocklyMsg["COLOUR_RGB_BLUE"] = "зәңгәр";
BlocklyMsg["COLOUR_RGB_TOOLTIP"] = "Бирелгән нисбәттәрҙә ҡыҙылдан, йәшелдән һәм зәңгәрҙән төҫ барлыҡҡа килә. Бөтә мәғәнәләр 0 менән 100 араһында булырға тейеш.";
BlocklyMsg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
BlocklyMsg["COLOUR_BLEND_TITLE"] = "ҡатнаштырырға";
BlocklyMsg["COLOUR_BLEND_COLOUR1"] = "1-се төҫ";
BlocklyMsg["COLOUR_BLEND_COLOUR2"] = "2-се төҫ";
BlocklyMsg["COLOUR_BLEND_RATIO"] = "1-се төҫтөң өлөшө";
BlocklyMsg["COLOUR_BLEND_TOOLTIP"] = "Ике төҫтө бирелгән нисбәттә болғата (0.0 - 1.0).";
BlocklyMsg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/Цикл_(программалау)";
BlocklyMsg["CONTROLS_REPEAT_TITLE"] = "%1 тапҡыр ҡабатларға";
BlocklyMsg["CONTROLS_REPEAT_INPUT_DO"] = "үтәргә";
BlocklyMsg["CONTROLS_REPEAT_TOOLTIP"] = "Командаларҙы бер нисә тапҡыр үтәй.";
BlocklyMsg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ҡабатларға, әлегә";
BlocklyMsg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ҡабатларға, әлегә юҡ";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Мәғәнә дөрөҫ булғанда, командаларҙы ҡабатлай.";
BlocklyMsg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Мәғәнә ялған булғанда, командаларҙы ҡабатлай.";
BlocklyMsg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
BlocklyMsg["CONTROLS_FOR_TOOLTIP"] = "Үҙгәреүсәнгә башынан аҙағына тиклем тәғәйен аҙым менән %1 мәғәнәне бирә һәм күрһәтелгән командаларҙы үтәй.";
BlocklyMsg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
BlocklyMsg["CONTROLS_FOREACH_TITLE"] = "һәр элемент өсөн %1 исемлектә %2";
BlocklyMsg["CONTROLS_FOREACH_TOOLTIP"] = "Исемлектәге һәр элемент өсөн үҙгәреүсәнгә элементтың '%1' мәғәнәһен бирә һәм күрһәтелгән командаларҙы үтәй.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "циклдан сығырға";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "циклдың киләһе аҙымына күсергә";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Был циклды өҙә.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Циклдың ҡалдығын төшөрөп ҡалдыра һәм киләһе аҙымға күсә.";
BlocklyMsg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Иҫкәртеү: был блок цикл эсендә генә ҡулланыла ала.";
BlocklyMsg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
BlocklyMsg["CONTROLS_IF_TOOLTIP_1"] = "Мәғәнә дөрөҫ булғанда, командаларҙы үтәй.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_2"] = "Шарт дөрөҫ булғанда, командаларҙың беренсе блогын үтәй. Улай булмаһа, командаларҙың икенсе блогы үтәлә.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_3"] = "Беренсе шарт дөрөҫ булһа, командаларҙың беренсе блогын үтәй. Икенсе шарт дөрөҫ булһа, командаларҙың икенсе блогын үтәй.";
BlocklyMsg["CONTROLS_IF_TOOLTIP_4"] = "Беренсе шарт дөрөҫ булһа, командаларҙың беренсе блогын үтәй. Әгәр икенсе шарт дөрөҫ булһа, командаларҙың икенсе блогын үтәй. Бер шарт та дөрөҫ булмаһа, команда блоктарының һуңғыһын үтәй.";
BlocklyMsg["CONTROLS_IF_MSG_IF"] = "әгәр";
BlocklyMsg["CONTROLS_IF_MSG_ELSEIF"] = "юғиһә, әгәр";
BlocklyMsg["CONTROLS_IF_MSG_ELSE"] = "юғиһә";
BlocklyMsg["CONTROLS_IF_IF_TOOLTIP"] = "\"Әгәр\" блогын ҡабаттан төҙөү өсөн киҫәктәрҙе өҫтәгеҙ, юйҙырығыҙ, урындарын алмаштырығыҙ.";
BlocklyMsg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "\"Әгәр\" блогына шарт өҫтәй";
BlocklyMsg["CONTROLS_IF_ELSE_TOOLTIP"] = "Бер шарт та дөрөҫ булмаған осраҡҡа йомғаҡлау ярҙамсы блогын өҫтәргә.";
BlocklyMsg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(математика)";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Өҫтәмәләр тигеҙ булһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Өҫтәмәләр тигеҙ булмаһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LT"] = "Беренсе өҫтәмә икенсеһенән бәләкәйерәк булһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Беренсе өҫтәмә икенсеһенән бәләкәйерәк йә уға тиң булһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GT"] = "Беренсе өҫтәмә икенсеһенән ҙурыраҡ булһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Беренсе өҫтәмә икенсеһенән бәләкәйерәк йә уға тиң булһа, дөрөҫ мәғәнәһен кире ҡайтара.";
BlocklyMsg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_AND"] = "Әгәр ҙә ике өҫтәлмә лә тап килһә, дөрөҫ аңлатманы кире ҡайтара.";
BlocklyMsg["LOGIC_OPERATION_AND"] = "һәм";
BlocklyMsg["LOGIC_OPERATION_TOOLTIP_OR"] = "Өҫтәлмәләрҙең береһе генә дөрөҫ булһа, дөрөҫ аңлатманы ҡайтара.";
BlocklyMsg["LOGIC_OPERATION_OR"] = "йәки";
BlocklyMsg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
BlocklyMsg["LOGIC_NEGATE_TITLE"] = "%1 түгел";
BlocklyMsg["LOGIC_NEGATE_TOOLTIP"] = "Өҫтәлмә ялған булһа, дөрөҫ аңлатманы ҡайтара. Өҫтәлмә дөрөҫ булһа, ялған аңлатманы ҡайтара.";
BlocklyMsg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
BlocklyMsg["LOGIC_BOOLEAN_TRUE"] = "дөрөҫ";
BlocklyMsg["LOGIC_BOOLEAN_FALSE"] = "ялған";
BlocklyMsg["LOGIC_BOOLEAN_TOOLTIP"] = "Дөрөҫ йәки ялғанды ҡайтара.";
BlocklyMsg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
BlocklyMsg["LOGIC_NULL"] = "нуль";
BlocklyMsg["LOGIC_NULL_TOOLTIP"] = "Нулде ҡайтара.";
BlocklyMsg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
BlocklyMsg["LOGIC_TERNARY_CONDITION"] = "тест";
BlocklyMsg["LOGIC_TERNARY_IF_TRUE"] = "әгәр дөрөҫ булһа";
BlocklyMsg["LOGIC_TERNARY_IF_FALSE"] = "әгәр ялған булһа";
BlocklyMsg["LOGIC_TERNARY_TOOLTIP"] = "Һайлау шартын тикшерә. Әгәр ул дөрөҫ булһа, беренсе мәғәнәне, хата булһа, икенсе мәғәнәне ҡайтара.";
BlocklyMsg["MATH_NUMBER_HELPURL"] = "https://ba.wikipedia.org/wiki/Һан";
BlocklyMsg["MATH_NUMBER_TOOLTIP"] = "Рәт.";
BlocklyMsg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
BlocklyMsg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
BlocklyMsg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
BlocklyMsg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
BlocklyMsg["MATH_POWER_SYMBOL"] = "^";  // untranslated
BlocklyMsg["MATH_TRIG_SIN"] = "sin";  // untranslated
BlocklyMsg["MATH_TRIG_COS"] = "cos";  // untranslated
BlocklyMsg["MATH_TRIG_TAN"] = "tan";  // untranslated
BlocklyMsg["MATH_TRIG_ASIN"] = "asin";  // untranslated
BlocklyMsg["MATH_TRIG_ACOS"] = "acos";  // untranslated
BlocklyMsg["MATH_TRIG_ATAN"] = "atan";  // untranslated
BlocklyMsg["MATH_ARITHMETIC_HELPURL"] = "https://ba.wikipedia.org/wiki/Арифметика";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Ике һандың суммаһын ҡайтара.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ике һандың айырмаһын ҡайтара.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Ике һандың ҡабатландығын ҡайтара.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Ике һандың бүлендеген ҡайтара.";
BlocklyMsg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Дәрәжәгә күтәрелгән икенсе һандан тәүгеһенә ҡайтара.";
BlocklyMsg["MATH_SINGLE_HELPURL"] = "https://ba.wikipedia.org/wiki/Квадрат_тамыр";
BlocklyMsg["MATH_SINGLE_OP_ROOT"] = "квадрат тамыр";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ROOT"] = "Һандың квадрат тамырын ҡайтара.";
BlocklyMsg["MATH_SINGLE_OP_ABSOLUTE"] = "абсолют";
BlocklyMsg["MATH_SINGLE_TOOLTIP_ABS"] = "Һандың модулен ҡайтара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_NEG"] = "Кире һанды ҡайтара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LN"] = "Һандың натураль логаритмын ҡайтара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_LOG10"] = "Һандың унынсы логаритмын ҡайтара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_EXP"] = "Күрһәтелгән дәрәжәлә ҡайтара.";
BlocklyMsg["MATH_SINGLE_TOOLTIP_POW10"] = "Күрһәтелгән 10-сы дәрәжәлә ҡайтара.";
BlocklyMsg["MATH_TRIG_HELPURL"] = "https://ba..wikipedia.org/wiki/Тригонометрик_функциялар";
BlocklyMsg["MATH_TRIG_TOOLTIP_SIN"] = "Мөйөштөң синусын градустарҙа ҡайтара.";
BlocklyMsg["MATH_TRIG_TOOLTIP_COS"] = "Мөйөштөң косинусын градустарҙа ҡайтара.";
BlocklyMsg["MATH_TRIG_TOOLTIP_TAN"] = "Мөйөштөң тангенсын градустарҙа күрһәтә.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ASIN"] = "Арксинусты градустарҙа күрһәтә.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ACOS"] = "Арккосинусты градустарҙа күрһәтә.";
BlocklyMsg["MATH_TRIG_TOOLTIP_ATAN"] = "Арктангенсты градустарҙа күрһәтә.";
BlocklyMsg["MATH_CONSTANT_HELPURL"] = "https://ba.wikipedia.org/wiki/Математик_константа";
BlocklyMsg["MATH_CONSTANT_TOOLTIP"] = "Таралған константаның береһен күрһәтә: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) йәки ∞ (сикһеҙлек).";
BlocklyMsg["MATH_IS_EVEN"] = "тағы";
BlocklyMsg["MATH_IS_ODD"] = "сәйер";
BlocklyMsg["MATH_IS_PRIME"] = "ябай";
BlocklyMsg["MATH_IS_WHOLE"] = "бөтөн";
BlocklyMsg["MATH_IS_POSITIVE"] = "ыңғай";
BlocklyMsg["MATH_IS_NEGATIVE"] = "тиҫкәре";
BlocklyMsg["MATH_IS_DIVISIBLE_BY"] = "бүленә";
BlocklyMsg["MATH_IS_TOOLTIP"] = "Һандың йоп, таҡ, ябай, бөтөн, ыңғай, кире йәки билдәле һанға ҡарата ниндәй булыуын тикшерә. Дөрөҫ йә ялған мәғәнәһен күрһәтә.";
BlocklyMsg["MATH_CHANGE_HELPURL"] = "https://ba.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
BlocklyMsg["MATH_CHANGE_TITLE"] = "%1 тан %2 ҡа арттырырға";
BlocklyMsg["MATH_CHANGE_TOOLTIP"] = "Үҙгәреүсән һанға өҫтәй '%1'.";
BlocklyMsg["MATH_ROUND_HELPURL"] = "https://ba.wikipedia.org/wiki/Т=Түңәрәкләү";
BlocklyMsg["MATH_ROUND_TOOLTIP"] = "Һанды ҙурына йә бәләкәйенә тиклем түңәрәкләргә.";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUND"] = "түңәрәк";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDUP"] = "ҙурына тиклем түңәрәкләргә";
BlocklyMsg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "бәләкәйгә тиклем түңәрәкләргә";
BlocklyMsg["MATH_ONLIST_HELPURL"] = "";  // untranslated
BlocklyMsg["MATH_ONLIST_OPERATOR_SUM"] = "исемлек суммаһы";
BlocklyMsg["MATH_ONLIST_TOOLTIP_SUM"] = "Исемлектәрҙәге һандар суммаһын күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MIN"] = "Исемлектәге иң бәләкәйе";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MIN"] = "Исемлектәге иң бәләкәй һанды күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MAX"] = "исемлектәге иң ҙуры";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MAX"] = "Исемлектең иң ҙур һанын  күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_AVERAGE"] = "исемлектең уртаса арифметик дәүмәле";
BlocklyMsg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Исемлектең уртаса арифметик дәүмәле күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MEDIAN"] = "исемлек медианаһы";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Исемлек медианаһын күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_MODE"] = "исемлек модалары";
BlocklyMsg["MATH_ONLIST_TOOLTIP_MODE"] = "Исемлектең иң күп осраған элементтарын күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_STD_DEV"] = "исемлекте стандарт кире ҡағыу";
BlocklyMsg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Исемлекте стандарт кире ҡағыуҙы күрһәтә.";
BlocklyMsg["MATH_ONLIST_OPERATOR_RANDOM"] = "исемлектең осраҡлы элементы";
BlocklyMsg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Исемлектең осраҡлы элементын күрһәтә.";
BlocklyMsg["MATH_MODULO_HELPURL"] = "https://ba.wikipedia.org/wiki/Ҡалдыҡ_менән_бүлеү";
BlocklyMsg["MATH_MODULO_TITLE"] = "ҡалдыҡ %1 : %2 араһында";
BlocklyMsg["MATH_MODULO_TOOLTIP"] = "Ике һанды бүлеү ҡалдығын күрһәтә.";
BlocklyMsg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
BlocklyMsg["MATH_CONSTRAIN_TITLE"] = "сикләргә %1 аҫтан %2 өҫтән %3";
BlocklyMsg["MATH_CONSTRAIN_TOOLTIP"] = "Һанды аҫтан һәм өҫтән сикләй (сиктәгеләрен индереп).";
BlocklyMsg["MATH_RANDOM_INT_HELPURL"] = "https://ba.wikipedia.org/wiki/Ялған осраҡлы_һандар_генераторы";
BlocklyMsg["MATH_RANDOM_INT_TITLE"] = "%1-ҙән %2-гә тиклем осраҡлы бөтөн һан";
BlocklyMsg["MATH_RANDOM_INT_TOOLTIP"] = "Ике бирелгән һан араһындағы (үҙҙәрен дә индереп) осраҡлы һанды күрһәтә.";
BlocklyMsg["MATH_RANDOM_FLOAT_HELPURL"] = "https://ba.wikipedia.org/wiki/Ялған осраҡлы_һандар_генераторы";
BlocklyMsg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "0 (үҙен дә индереп) һәм 1 араһындағы осраҡлы һан";
BlocklyMsg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
BlocklyMsg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
BlocklyMsg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
BlocklyMsg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
BlocklyMsg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
BlocklyMsg["TEXT_TEXT_TOOLTIP"] = "Текстың хәрефе, һүҙе йәки юлы.";
BlocklyMsg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
BlocklyMsg["TEXT_JOIN_TITLE_CREATEWITH"] = "текст төҙөргә";
BlocklyMsg["TEXT_JOIN_TOOLTIP"] = "Элементтарҙың теләһә күпме һанын берләштереп текст фрагментын булдыра.";
BlocklyMsg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "ҡушылығыҙ";
BlocklyMsg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Текстҡа элемент өҫтәү.";
BlocklyMsg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_APPEND_TITLE"] = "to %1 append text %2";  // untranslated
BlocklyMsg["TEXT_APPEND_TOOLTIP"] = "Үҙгәреүсән «%1»-гә текст өҫтәргә.";
BlocklyMsg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
BlocklyMsg["TEXT_LENGTH_TITLE"] = "оҙонлоғо %1";
BlocklyMsg["TEXT_LENGTH_TOOLTIP"] = "Бирелгән текстағы символдар һанын (буш урындар менән бергә) кире ҡайтара.";
BlocklyMsg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
BlocklyMsg["TEXT_ISEMPTY_TITLE"] = "%1 буш";
BlocklyMsg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.";  // untranslated
BlocklyMsg["TEXT_INDEXOF_TITLE"] = "текстҡа %1 %2 %3";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_FIRST"] = "текстың тәүге инеүен табырға";
BlocklyMsg["TEXT_INDEXOF_OPERATOR_LAST"] = "Текстың һуңғы инеүен табырға";
BlocklyMsg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
BlocklyMsg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
BlocklyMsg["TEXT_CHARAT_FROM_START"] = "хат алырға #";
BlocklyMsg["TEXT_CHARAT_FROM_END"] = "№ хәрефен аҙаҡтан алырға";
BlocklyMsg["TEXT_CHARAT_FIRST"] = "тәүге хәрефте алырға";
BlocklyMsg["TEXT_CHARAT_LAST"] = "һуңғы хәрефте алырға";
BlocklyMsg["TEXT_CHARAT_RANDOM"] = "осраҡлы хәрефте алырға";
BlocklyMsg["TEXT_CHARAT_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text.";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "текста";
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_START"] = "# хатҡа";
BlocklyMsg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end";  // untranslated
BlocklyMsg["TEXT_GET_SUBSTRING_END_LAST"] = "һуңғы хәрефкә тиклем";
BlocklyMsg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case.";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case";  // untranslated
BlocklyMsg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case";  // untranslated
BlocklyMsg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
BlocklyMsg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of";  // untranslated
BlocklyMsg["TEXT_TRIM_OPERATOR_RIGHT"] = "trim spaces from right side of";  // untranslated
BlocklyMsg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
BlocklyMsg["TEXT_PRINT_TITLE"] = "%1 баҫтырырға";
BlocklyMsg["TEXT_PRINT_TOOLTIP"] = "Print the specified text, number or other value.";  // untranslated
BlocklyMsg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Prompt for user for a number.";  // untranslated
BlocklyMsg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Prompt for user for some text.";  // untranslated
BlocklyMsg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
BlocklyMsg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
BlocklyMsg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
BlocklyMsg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
BlocklyMsg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
BlocklyMsg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
BlocklyMsg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
BlocklyMsg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TITLE"] = "create empty list";  // untranslated
BlocklyMsg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Returns a list, of length 0, containing no data records";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_TOOLTIP"] = "Create a list with any number of items.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_INPUT_WITH"] = "менән исемлек төҙөргә";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "исемлек";
BlocklyMsg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Add an item to the list.";  // untranslated
BlocklyMsg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
BlocklyMsg["LISTS_REPEAT_TOOLTIP"] = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
BlocklyMsg["LISTS_REPEAT_TITLE"] = "create list with item %1 repeated %2 times";  // untranslated
BlocklyMsg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
BlocklyMsg["LISTS_LENGTH_TITLE"] = "оҙонлоғо %1";
BlocklyMsg["LISTS_LENGTH_TOOLTIP"] = "Returns the length of a list.";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
BlocklyMsg["LISTS_ISEMPTY_TITLE"] = "%1 буш";
BlocklyMsg["LISTS_ISEMPTY_TOOLTIP"] = "Returns true if the list is empty.";  // untranslated
BlocklyMsg["LISTS_INLIST"] = "исемлеккә";
BlocklyMsg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_FIRST"] = "find first occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_LAST"] = "find last occurrence of item";  // untranslated
BlocklyMsg["LISTS_INDEX_OF_TOOLTIP"] = "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_GET"] = "алырға";
BlocklyMsg["LISTS_GET_INDEX_GET_REMOVE"] = "алырға һәм юйырға";
BlocklyMsg["LISTS_GET_INDEX_REMOVE"] = "юйырға";
BlocklyMsg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_FROM_END"] = "# аҙағынан";
BlocklyMsg["LISTS_GET_INDEX_FIRST"] = "беренсе";
BlocklyMsg["LISTS_GET_INDEX_LAST"] = "аҙаҡҡы";
BlocklyMsg["LISTS_GET_INDEX_RANDOM"] = "осраҡлы";
BlocklyMsg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 is the first item.";  // untranslated
BlocklyMsg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 is the last item.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Removes and returns the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Removes and returns the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Removes and returns the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Removes and returns a random item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Removes the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Removes the first item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Removes the last item in a list.";  // untranslated
BlocklyMsg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Removes a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_SET"] = "йыйылма";
BlocklyMsg["LISTS_SET_INDEX_INSERT"] = "өҫтәп ҡуйырға";
BlocklyMsg["LISTS_SET_INDEX_INPUT_TO"] = "кеүек";
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list.";  // untranslated
BlocklyMsg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list.";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_END_LAST"] = "to last";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
BlocklyMsg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
BlocklyMsg["LISTS_SORT_TITLE"] = "sort %1 %2 %3";  // untranslated
BlocklyMsg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list.";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_ASCENDING"] = "ascending";  // untranslated
BlocklyMsg["LISTS_SORT_ORDER_DESCENDING"] = "descending";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_NUMERIC"] = "numeric";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_TEXT"] = "alphabetic";  // untranslated
BlocklyMsg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case";  // untranslated
BlocklyMsg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
BlocklyMsg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text";  // untranslated
BlocklyMsg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list";  // untranslated
BlocklyMsg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
BlocklyMsg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
BlocklyMsg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
BlocklyMsg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
BlocklyMsg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
BlocklyMsg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
BlocklyMsg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
BlocklyMsg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable.";  // untranslated
BlocklyMsg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'";  // untranslated
BlocklyMsg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
BlocklyMsg["VARIABLES_SET"] = "set %1 to %2";  // untranslated
BlocklyMsg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input.";  // untranslated
BlocklyMsg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TITLE"] = "to";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "do something";  // untranslated
BlocklyMsg["PROCEDURES_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output.";  // untranslated
BlocklyMsg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function...";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_DEFRETURN_RETURN"] = "кире ҡайтарыу";
BlocklyMsg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output.";  // untranslated
BlocklyMsg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements";  // untranslated
BlocklyMsg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters.";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'.";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
BlocklyMsg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "инеү";
BlocklyMsg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function.";  // untranslated
BlocklyMsg["PROCEDURES_MUTATORARG_TITLE"] = "инеү исеме:";
BlocklyMsg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function.";  // untranslated
BlocklyMsg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition";  // untranslated
BlocklyMsg["PROCEDURES_CREATE_DO"] = "'%1' төҙөргә";
BlocklyMsg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value.";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
BlocklyMsg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition.";  // untranslated
BlocklyMsg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
BlocklyMsg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
BlocklyMsg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
BlocklyMsg["DIALOG_OK"] = "Яҡшы";
BlocklyMsg["DIALOG_CANCEL"] = "Баш тартыу";

BlocklyMsg["CONTROLS_WHILEUNTIL_INPUT_DO"] = "үтәргә";
BlocklyMsg["CONTROLS_FOR_INPUT_DO"] = "үтәргә";
BlocklyMsg["CONTROLS_FOREACH_INPUT_DO"] = "үтәргә";
BlocklyMsg["CONTROLS_IF_MSG_THEN"] = "үтәргә";
BlocklyMsg["CONTROLS_IF_IF_TITLE_IF"] = "әгәр";
BlocklyMsg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = "юғиһә, әгәр";
BlocklyMsg["CONTROLS_IF_ELSE_TITLE_ELSE"] = "юғиһә";
BlocklyMsg["MATH_CHANGE_TITLE_ITEM"] = "элемент";
BlocklyMsg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "элемент";
BlocklyMsg["TEXT_APPEND_VARIABLE"] = "элемент";
BlocklyMsg["LISTS_CREATE_WITH_ITEM_TITLE"] = "элемент";
BlocklyMsg["LISTS_INDEX_OF_INPUT_IN_LIST"] = "исемлеккә";
BlocklyMsg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
BlocklyMsg["LISTS_GET_INDEX_INPUT_IN_LIST"] = "исемлеккә";
BlocklyMsg["LISTS_SET_INDEX_INPUT_IN_LIST"] = "исемлеккә";
BlocklyMsg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = "исемлеккә";
BlocklyMsg["PROCEDURES_DEFRETURN_TITLE"] = "to";
BlocklyMsg["PROCEDURES_DEFRETURN_PROCEDURE"] = "do something";
BlocklyMsg["PROCEDURES_DEFRETURN_DO"] = "";
BlocklyMsg["PROCEDURES_DEFRETURN_COMMENT"] = "Describe this function...";

BlocklyMsg["LOGIC_HUE"] = "210";
BlocklyMsg["LOOPS_HUE"] = "120";
BlocklyMsg["MATH_HUE"] = "230";
BlocklyMsg["TEXTS_HUE"] = "160";
BlocklyMsg["LISTS_HUE"] = "260";
BlocklyMsg["COLOUR_HUE"] = "20";
BlocklyMsg["VARIABLES_HUE"] = "330";
BlocklyMsg["VARIABLES_DYNAMIC_HUE"] = "310";
BlocklyMsg["PROCEDURES_HUE"] = "290";

BlocklyGamesMsg["Games.name"] = "Blockly уйындары";
BlocklyGamesMsg["Games.puzzle"] = "Башватҡыс";
BlocklyGamesMsg["Games.maze"] = "Лабиринт";
BlocklyGamesMsg["Games.bird"] = "Ҡош";
BlocklyGamesMsg["Games.turtle"] = "Ташбаҡа";
BlocklyGamesMsg["Games.movie"] = "Фильм";
BlocklyGamesMsg["Games.music"] = "Music";  // untranslated
BlocklyGamesMsg["Games.pondTutor"] = "Tutor быуаһы";
BlocklyGamesMsg["Games.pond"] = "Быуа";
BlocklyGamesMsg["Games.linesOfCode1"] = "Мәсьәләне был кимәлдә JavaScriptта бер юл менән систегеҙ";
BlocklyGamesMsg["Games.linesOfCode2"] = "Был кимәлде систегеҙ. JavaScriptта код юлдары һаны - %1:";
BlocklyGamesMsg["Games.nextLevel"] = "%1 кимәленә әҙерһеңме?";
BlocklyGamesMsg["Games.finalLevel"] = "Киләһе һынауҙарға әҙерһеңме?";
BlocklyGamesMsg["Games.submitTitle"] = "Title:";  // untranslated
BlocklyGamesMsg["Games.linkTooltip"] = "Блоктарға һылтанманы һаҡларға һәм күрһәтергә";
BlocklyGamesMsg["Games.runTooltip"] = "Яҙған программаңды тоҡандыр.";
BlocklyGamesMsg["Games.runProgram"] = "Программаны ебәреү";
BlocklyGamesMsg["Games.resetTooltip"] = "Программаны өҙә һәм башланғыс торошона ырғыта.";
BlocklyGamesMsg["Games.resetProgram"] = "Таҙартырға";
BlocklyGamesMsg["Games.help"] = "Ярҙам";
BlocklyGamesMsg["Games.catLogic"] = "Танылыу";
BlocklyGamesMsg["Games.catLoops"] = "Циклдар";
BlocklyGamesMsg["Games.catMath"] = "Математика";
BlocklyGamesMsg["Games.catText"] = "Текст";
BlocklyGamesMsg["Games.catLists"] = "Исемлектәр";
BlocklyGamesMsg["Games.catColour"] = "Төҫ";
BlocklyGamesMsg["Games.catVariables"] = "Үҙгәреүсән дәүмәлдәр";
BlocklyGamesMsg["Games.catProcedures"] = "Функциялар";
BlocklyGamesMsg["Games.httpRequestError"] = "Һорау ваҡытында проблема тыуҙы.";
BlocklyGamesMsg["Games.linkAlert"] = "%1 һылтанмаһы буйынса булған блоктарығыҙ менән бүлешегеҙ";
BlocklyGamesMsg["Games.hashError"] = "Ҡыҙғанысҡа ҡаршы, %1 һаҡланған программаларҙың береһенә лә тура килмәй";
BlocklyGamesMsg["Games.xmlError"] = "Һаҡланған файлығыҙҙы тейәп булманы. Ул, моғайын, Блоктың башҡа версияһында эшләнгән булғандыр.";
BlocklyGamesMsg["Games.submitted"] = "Thank you for this program!  If our staff of trained monkeys like it, they will publish it to the gallery within a couple of days.";  // untranslated
BlocklyGamesMsg["Games.listVariable"] = "Исемлек.";
BlocklyGamesMsg["Games.textVariable"] = "тест";
BlocklyGamesMsg["Games.breakLink"] = "Once you start editing JavaScript, you can't go back to editing blocks. Is this OK?";  // untranslated
BlocklyGamesMsg["Games.blocks"] = "Blocks";  // untranslated
BlocklyGamesMsg["Games.congratulations"] = "Ҡотлайбыҙ!";
BlocklyGamesMsg["Games.helpAbort"] = "Был кимәл бик ҡатмарлы. Бәлки һин уны ҡалдырып киләһе уйынға күсергә теләйһеңдер. Бында һин һуңғараҡ кире ҡайта алаһың.";
BlocklyGamesMsg["Index.clear"] = "Бөтә сиселештәрҙе лә юйырғамы?";
BlocklyGamesMsg["Index.subTitle"] = "Буласаҡ программистар өсөн уйындар.";
BlocklyGamesMsg["Index.moreInfo"] = "Ентекләберәк";
BlocklyGamesMsg["Index.startOver"] = "Яңынан башларға теләйһегеҙме?";
BlocklyGamesMsg["Index.clearData"] = "Мәғлүмәттәрҙе юйырға";
BlocklyGamesMsg["Puzzle.animal1"] = "Өйрәк";
BlocklyGamesMsg["Puzzle.animal1Trait1"] = "Ҡауырһын";
BlocklyGamesMsg["Puzzle.animal1Trait2"] = "Томшоҡ";
BlocklyGamesMsg["Puzzle.animal1HelpUrl"] = "https://en.wikipedia.org/wiki/Duck";
BlocklyGamesMsg["Puzzle.animal2"] = "Бесәй";
BlocklyGamesMsg["Puzzle.animal2Trait1"] = "Мыйыҡтар";
BlocklyGamesMsg["Puzzle.animal2Trait2"] = "Йәнлек тиреһе";
BlocklyGamesMsg["Puzzle.animal2HelpUrl"] = "https://en.wikipedia.org/wiki/Бесәй";
BlocklyGamesMsg["Puzzle.animal3"] = "Бал ҡорто";
BlocklyGamesMsg["Puzzle.animal3Trait1"] = "Бал";
BlocklyGamesMsg["Puzzle.animal3Trait2"] = "Ҡаяу";
BlocklyGamesMsg["Puzzle.animal3HelpUrl"] = "https://en.wikipedia.org/wiki/Бал ҡорто";
BlocklyGamesMsg["Puzzle.animal4"] = "Ҡусҡар";
BlocklyGamesMsg["Puzzle.animal4Trait1"] = "Ҡабырсаҡ";
BlocklyGamesMsg["Puzzle.animal4Trait2"] = "Лайла";
BlocklyGamesMsg["Puzzle.animal4HelpUrl"] = "https://en.wikipedia.org/wiki/Ҡусҡар";
BlocklyGamesMsg["Puzzle.picture"] = "Рәсем";
BlocklyGamesMsg["Puzzle.legs"] = "аяҡтар:";
BlocklyGamesMsg["Puzzle.legsChoose"] = "һайла...";
BlocklyGamesMsg["Puzzle.traits"] = "үҙенсәлектәр:";
BlocklyGamesMsg["Puzzle.error0"] = "Өлгөлө!(%1) бөтә блоктар ҙа дөрөҫ урынлашҡан.";
BlocklyGamesMsg["Puzzle.error1"] = "Булды тиерлек!\nБер блок дөрөҫ урынлаштырылмаған";
BlocklyGamesMsg["Puzzle.error2"] = "Бер нисә блок (%1) дөрөҫ урынлаштырылмаған.";
BlocklyGamesMsg["Puzzle.tryAgain"] = "Билдәләнгән блок дөрөҫ урынлаштырылмаған. Яңынан эшләп ҡара.";
BlocklyGamesMsg["Puzzle.checkAnswers"] = "Һөҙөмтәне тикшереү";
BlocklyGamesMsg["Puzzle.helpText"] = "Һәр йәнлек өсөн (йәшел блок), һүрәтен беркет, аяҡтары һанын һайла һәм уның айырмалы һыҙаттарын йыйып ал.";
BlocklyGamesMsg["Maze.moveForward"] = "алға табан баҫыу";
BlocklyGamesMsg["Maze.turnLeft"] = "һулға боролоу";
BlocklyGamesMsg["Maze.turnRight"] = "уңға боролоу";
BlocklyGamesMsg["Maze.doCode"] = "үтәргә";
BlocklyGamesMsg["Maze.elseCode"] = "башҡаса";
BlocklyGamesMsg["Maze.helpIfElse"] = "\"бәлки-башҡаса\" фарманы был йә башҡа эште башҡара.";
BlocklyGamesMsg["Maze.pathAhead"] = "әгәр юл алда булһа";
BlocklyGamesMsg["Maze.pathLeft"] = "әгәр юл һулда булһа";
BlocklyGamesMsg["Maze.pathRight"] = "әгәр юл уңда булһа";
BlocklyGamesMsg["Maze.repeatUntil"] = "булғансы ҡабатларға";
BlocklyGamesMsg["Maze.moveForwardTooltip"] = "Юлсыны бер аҙымға алға күсерә.";
BlocklyGamesMsg["Maze.turnTooltip"] = "Юлсыны һулға йәки уңға 90 градусҡа борорға.";
BlocklyGamesMsg["Maze.ifTooltip"] = "Әгәр күрһәтелгән йүнәлештә юл асыҡ булһа, ҡайһы бер эштәрҙе башҡарырға";
BlocklyGamesMsg["Maze.ifelseTooltip"] = "Әгәр күрһәтелгән йүнәлештә юл асыҡ булһа, эштәрҙең беренсе блогын башҡарырға. Ябыҡ булһа, эштәрҙең икенсе блогын башҡарырға.";
BlocklyGamesMsg["Maze.whileTooltip"] = "Блокта булған эштәрҙе һуңғы нөктәгә барып еткәнсе ҡабатларға";
BlocklyGamesMsg["Maze.capacity0"] = "Һеҙҙең %0 блогыгыҙ ҡалды.";
BlocklyGamesMsg["Maze.capacity1"] = "Һеҙҙең %1 блок ҡалды.";
BlocklyGamesMsg["Maze.capacity2"] = "Һеҙҙең %2 блок ҡалды.";
BlocklyGamesMsg["Maze.runTooltip"] = "Юлсы блоктар күрһәткәндең барыһын да эшләйәсәк.";
BlocklyGamesMsg["Maze.resetTooltip"] = "Юлсыны лабиринт башына ҡайтарырға.";
BlocklyGamesMsg["Maze.helpStack"] = "Маҡсатыма ирешеүгә ярҙам өсөн бер нисә \"алға атлау\" блогын берләштерегеҙ";
BlocklyGamesMsg["Maze.helpOneTopBlock"] = "Был баҫҡыста һеҙгә аҡ эш яланында бөтә блоктарҙы ла бергә ҡушыу мотлаҡ.";
BlocklyGamesMsg["Maze.helpRun"] = "Нимә барғанын белеү өсөн программаны асығыҙ.";
BlocklyGamesMsg["Maze.helpReset"] = "Һеҙҙең программа мәсьәләне сисмәне. \"Алып ташлау\" төймәһенә баҫығыҙ һәм яңынан эшләп ҡарағыҙ.";
BlocklyGamesMsg["Maze.helpRepeat"] = "Ике генә блокты ҡулланып был юлдың аҙағынаса үтегеҙ. Блокты бер тапҡырҙан артыҡ башҡарыу өсөн \"ҡабатларға\"  төймәһен ҡулланығыҙ.";
BlocklyGamesMsg["Maze.helpCapacity"] = "Был баҫҡыс өсөн бөтә блоктырҙы ҡулландығыҙ. Яңы блок өҫтәр өсөн, тәүҙә булғанын юйҙырырға кәрәк.";
BlocklyGamesMsg["Maze.helpRepeatMany"] = "\"Ҡабатлау\" блогы эсендә берҙән артыҡ блок урынлаштыра алаһығыҙ.";
BlocklyGamesMsg["Maze.helpSkins"] = "Был менюла үҙегеҙҙең яратҡан юлсыны һайлағыҙ.";
BlocklyGamesMsg["Maze.helpIf"] = "\"Әгәр ҙә\" блогы дөрөҫ шарттар булғанда ғына нимәлер башҡарасаҡ. Һулға юл асыҡ булһа, шул яҡҡа боролоп ҡарағыҙ.";
BlocklyGamesMsg["Maze.helpMenu"] = "\"Әгәр ҙә\" блогы шарттарын үҙгәртеү өсөн %1 баҫығыҙ";
BlocklyGamesMsg["Maze.helpWallFollow"] = "Был ҡатмарлы лабиринтты сисә алаһыңмы? Һул яҡтан барырға тырышығыҙ. Тәжрибәле программистар өсөн генә.";
BlocklyGamesMsg["Bird.noWorm"] = "ҡарышлауыҡ тотолманы";
BlocklyGamesMsg["Bird.heading"] = "йүнәлеш";
BlocklyGamesMsg["Bird.noWormTooltip"] = "Ҡоштоң ҡарышлауыҡты әле тотоп өлгөрмәгән сағы.";
BlocklyGamesMsg["Bird.headingTooltip"] = "Move in the direction of the given angle: 0 is to the right, 90 is straight up, etc.";  // untranslated
BlocklyGamesMsg["Bird.positionTooltip"] = "x and y mark the bird's position. When x = 0 the bird is near the left edge, when x = 100 it's near the right edge. When y = 0 the bird is at the bottom, when y = 100 it's at the top.";  // untranslated
BlocklyGamesMsg["Bird.helpHeading"] = "Change the heading angle to make the bird get the worm and land in her nest.";  // untranslated
BlocklyGamesMsg["Bird.helpHasWorm"] = "Use this block to go in one heading if you have the worm, or a different heading if you don't have the worm.";  // untranslated
BlocklyGamesMsg["Bird.helpX"] = "'x' is your current horizontal position. Use this block to go in one heading if 'x' is less than a number, or a different heading otherwise.";  // untranslated
BlocklyGamesMsg["Bird.helpElse"] = "Click the icon to modify the 'if' block.";  // untranslated
BlocklyGamesMsg["Bird.helpElseIf"] = "This level needs both an 'else if' and an 'else' block.";  // untranslated
BlocklyGamesMsg["Bird.helpAnd"] = "The 'and' block is true only if both its inputs are true.";  // untranslated
BlocklyGamesMsg["Bird.helpMutator"] = "Drag an 'else' block into the 'if' block.";  // untranslated
BlocklyGamesMsg["Turtle.moveTooltip"] = "Moves the turtle forward or backward by the specified amount.";  // untranslated
BlocklyGamesMsg["Turtle.moveForward"] = "move forward by";  // untranslated
BlocklyGamesMsg["Turtle.moveBackward"] = "move backward by";  // untranslated
BlocklyGamesMsg["Turtle.goto"] = "go to";  // untranslated
BlocklyGamesMsg["Turtle.gotoTooltip"] = "Moves the turtle directly to the x and y coordinates.";  // untranslated
BlocklyGamesMsg["Turtle.direction"] = "point in direction";  // untranslated
BlocklyGamesMsg["Turtle.directionTooltip"] = "Turns the turtle to the direction (angle) given.";  // untranslated
BlocklyGamesMsg["Turtle.turnTooltip"] = "Turns the turtle left or right by the specified number of degrees.";  // untranslated
BlocklyGamesMsg["Turtle.turnRight"] = "turn right by";  // untranslated
BlocklyGamesMsg["Turtle.turnLeft"] = "turn left by";  // untranslated
BlocklyGamesMsg["Turtle.widthTooltip"] = "Changes the width of the pen.";  // untranslated
BlocklyGamesMsg["Turtle.setWidth"] = "set width to";  // untranslated
BlocklyGamesMsg["Turtle.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Turtle.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Turtle.penTooltip"] = "Lifts or lowers the pen, to stop or start drawing.";  // untranslated
BlocklyGamesMsg["Turtle.penUp"] = "pen up";  // untranslated
BlocklyGamesMsg["Turtle.penDown"] = "pen down";  // untranslated
BlocklyGamesMsg["Turtle.turtleVisibilityTooltip"] = "Makes the turtle (circle and arrow) visible or invisible.";  // untranslated
BlocklyGamesMsg["Turtle.hideTurtle"] = "hide turtle";  // untranslated
BlocklyGamesMsg["Turtle.showTurtle"] = "show turtle";  // untranslated
BlocklyGamesMsg["Turtle.printHelpUrl"] = "https://en.wikipedia.org/wiki/Printing";  // untranslated
BlocklyGamesMsg["Turtle.printTooltip"] = "Draws text in the turtle's direction at its location.";  // untranslated
BlocklyGamesMsg["Turtle.print"] = "print";  // untranslated
BlocklyGamesMsg["Turtle.fontHelpUrl"] = "https://en.wikipedia.org/wiki/Font";  // untranslated
BlocklyGamesMsg["Turtle.fontTooltip"] = "Sets the font used by the print block.";  // untranslated
BlocklyGamesMsg["Turtle.font"] = "font";  // untranslated
BlocklyGamesMsg["Turtle.fontSize"] = "font size";  // untranslated
BlocklyGamesMsg["Turtle.fontNormal"] = "normal";  // untranslated
BlocklyGamesMsg["Turtle.fontBold"] = "bold";  // untranslated
BlocklyGamesMsg["Turtle.fontItalic"] = "italic";  // untranslated
BlocklyGamesMsg["Turtle.submitDisabled"] = "Run your program until it stops. Then you may submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.galleryTooltip"] = "Open the gallery of drawings.";  // untranslated
BlocklyGamesMsg["Turtle.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Turtle.submitTooltip"] = "Submit your drawing to the gallery.";  // untranslated
BlocklyGamesMsg["Turtle.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop"] = "Your solution works, but you can do better.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop3"] = "Draw the shape with just three blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpUseLoop4"] = "Draw the star with just four blocks.";  // untranslated
BlocklyGamesMsg["Turtle.helpText1"] = "Create a program that draws a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText2"] = "Change your program to draw a pentagon instead of a square.";  // untranslated
BlocklyGamesMsg["Turtle.helpText3a"] = "There's a new block that allows you to change the colour:";  // untranslated
BlocklyGamesMsg["Turtle.helpText3b"] = "Draw a yellow star.";  // untranslated
BlocklyGamesMsg["Turtle.helpText4a"] = "There's a new block that allows you to lift your pen off the paper when you move:";  // untranslated
BlocklyGamesMsg["Turtle.helpText4b"] = "Draw a small yellow star, then draw a line above it.";  // untranslated
BlocklyGamesMsg["Turtle.helpText5"] = "Instead of one star, can you draw four stars arranged in a square?";  // untranslated
BlocklyGamesMsg["Turtle.helpText6"] = "Draw three yellow stars, and one white line.";  // untranslated
BlocklyGamesMsg["Turtle.helpText7"] = "Draw the stars, then draw four white lines.";  // untranslated
BlocklyGamesMsg["Turtle.helpText8"] = "Drawing 360 white lines will look like the full moon.";  // untranslated
BlocklyGamesMsg["Turtle.helpText9"] = "Can you add a black circle so that the moon becomes a crescent?";  // untranslated
BlocklyGamesMsg["Turtle.helpText10"] = "Draw anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Turtle.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have drawn. If you draw something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Turtle.helpToolbox"] = "Choose a category to see the blocks.";  // untranslated
BlocklyGamesMsg["Movie.x"] = "x";  // untranslated
BlocklyGamesMsg["Movie.y"] = "y";  // untranslated
BlocklyGamesMsg["Movie.x1"] = "start x";  // untranslated
BlocklyGamesMsg["Movie.y1"] = "start y";  // untranslated
BlocklyGamesMsg["Movie.x2"] = "end x";  // untranslated
BlocklyGamesMsg["Movie.y2"] = "end y";  // untranslated
BlocklyGamesMsg["Movie.radius"] = "radius";  // untranslated
BlocklyGamesMsg["Movie.width"] = "width";  // untranslated
BlocklyGamesMsg["Movie.height"] = "height";  // untranslated
BlocklyGamesMsg["Movie.circleTooltip"] = "Draws a circle at the specified location and with the specified radius.";  // untranslated
BlocklyGamesMsg["Movie.circleDraw"] = "circle";  // untranslated
BlocklyGamesMsg["Movie.rectTooltip"] = "Draws a rectangle at the specified location and with the specified width and height.";  // untranslated
BlocklyGamesMsg["Movie.rectDraw"] = "rectangle";  // untranslated
BlocklyGamesMsg["Movie.lineTooltip"] = "Draws a line from one point to another with the specified width.";  // untranslated
BlocklyGamesMsg["Movie.lineDraw"] = "line";  // untranslated
BlocklyGamesMsg["Movie.timeTooltip"] = "Returns the current time in the animation (0-100).";  // untranslated
BlocklyGamesMsg["Movie.colourTooltip"] = "Changes the colour of the pen.";  // untranslated
BlocklyGamesMsg["Movie.setColour"] = "set colour to";  // untranslated
BlocklyGamesMsg["Movie.submitDisabled"] = "Your movie doesn't move. Use blocks to make something interesting. Then you may submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.galleryTooltip"] = "Open the gallery of movies.";  // untranslated
BlocklyGamesMsg["Movie.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Movie.submitTooltip"] = "Submit your movie to the gallery.";  // untranslated
BlocklyGamesMsg["Movie.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Movie.helpLayer"] = "Move the background circle to the top of your program.  Then it will appear behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText1"] = "Use simple shapes to draw this person.";  // untranslated
BlocklyGamesMsg["Movie.helpText2a"] = "This level is a movie. You want the person's arm to move across the screen. Press the play button to see a preview.";  // untranslated
BlocklyGamesMsg["Movie.helpText2b"] = "As the movie plays, the value of the 'time' block counts from 0 to 100. Since you want the 'y' position of the arm to start at 0 and go to 100 this should be easy.";  // untranslated
BlocklyGamesMsg["Movie.helpText3"] = "The 'time' block counts from 0 to 100. But now you want the 'y' position of the other arm to start at 100 and go to 0. Can you figure out a simple mathematical formula that flips the direction?";  // untranslated
BlocklyGamesMsg["Movie.helpText4"] = "Use what you learned in the previous level to make legs that cross.";  // untranslated
BlocklyGamesMsg["Movie.helpText5"] = "The mathematical formula for the arm is complicated. Here's the answer:";  // untranslated
BlocklyGamesMsg["Movie.helpText6"] = "Give the person a couple of hands.";  // untranslated
BlocklyGamesMsg["Movie.helpText7"] = "Use the 'if' block to draw a small head for the first half of the movie. Then draw a big head for the second half of the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText8"] = "Make the legs reverse direction half way through the movie.";  // untranslated
BlocklyGamesMsg["Movie.helpText9"] = "Draw an expanding circle behind the person.";  // untranslated
BlocklyGamesMsg["Movie.helpText10"] = "Make a movie of anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Movie.helpText10Reddit"] = "Use the 'See Gallery' button to see movies that other people have made. If you make an interesting movie, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Music.playNoteTooltip"] = "Plays one musical note of the specified duration and pitch.";  // untranslated
BlocklyGamesMsg["Music.playNote"] = "play %1 note %2";  // untranslated
BlocklyGamesMsg["Music.restTooltip"] = "Waits for the specified duration.";  // untranslated
BlocklyGamesMsg["Music.restWholeTooltip"] = "Waits for one whole note.";  // untranslated
BlocklyGamesMsg["Music.rest"] = "rest %1";  // untranslated
BlocklyGamesMsg["Music.setInstrumentTooltip"] = "Switches to the specified instrument when playing subsequent musical notes.";  // untranslated
BlocklyGamesMsg["Music.setInstrument"] = "set instrument to %1";  // untranslated
BlocklyGamesMsg["Music.startTooltip"] = "Executes the blocks inside when the 'Run Program' button is clicked.";  // untranslated
BlocklyGamesMsg["Music.start"] = "when %1 clicked";  // untranslated
BlocklyGamesMsg["Music.pitchTooltip"] = "One note (C4 is 7).";  // untranslated
BlocklyGamesMsg["Music.firstPart"] = "first part";  // untranslated
BlocklyGamesMsg["Music.piano"] = "piano";  // untranslated
BlocklyGamesMsg["Music.trumpet"] = "trumpet";  // untranslated
BlocklyGamesMsg["Music.banjo"] = "banjo";  // untranslated
BlocklyGamesMsg["Music.violin"] = "violin";  // untranslated
BlocklyGamesMsg["Music.guitar"] = "guitar";  // untranslated
BlocklyGamesMsg["Music.flute"] = "flute";  // untranslated
BlocklyGamesMsg["Music.drum"] = "drum";  // untranslated
BlocklyGamesMsg["Music.choir"] = "choir";  // untranslated
BlocklyGamesMsg["Music.submitDisabled"] = "Run your program until it stops. Then you may submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.galleryTooltip"] = "Open the gallery of music.";  // untranslated
BlocklyGamesMsg["Music.galleryMsg"] = "See Gallery";  // untranslated
BlocklyGamesMsg["Music.submitTooltip"] = "Submit your music to the gallery.";  // untranslated
BlocklyGamesMsg["Music.submitMsg"] = "Submit to Gallery";  // untranslated
BlocklyGamesMsg["Music.helpUseFunctions"] = "Your solution works, but you can do better.  Use functions to reduce the amount of repeated code.";  // untranslated
BlocklyGamesMsg["Music.helpUseInstruments"] = "The music will sound better if you use a different instrument in each start block.";  // untranslated
BlocklyGamesMsg["Music.helpText1"] = "Compose the first four notes of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText2a"] = "A 'function' allows you to group blocks together, then run them more than once.";  // untranslated
BlocklyGamesMsg["Music.helpText2b"] = "Create a function to play the first four notes of 'Frère Jacques'. Run that function twice.  Don't add any new note blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText3"] = "Create a second function for the next part of 'Frère Jacques'. The last note is longer.";  // untranslated
BlocklyGamesMsg["Music.helpText4"] = "Create a third function for the next part of 'Frère Jacques'. The first four notes are shorter.";  // untranslated
BlocklyGamesMsg["Music.helpText5"] = "Complete the full tune of 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText6a"] = "This new block lets you change to another instrument.";  // untranslated
BlocklyGamesMsg["Music.helpText6b"] = "Play your tune with a violin.";  // untranslated
BlocklyGamesMsg["Music.helpText7a"] = "This new block adds a silent delay.";  // untranslated
BlocklyGamesMsg["Music.helpText7b"] = "Create a second start block that has two delay blocks, then also plays 'Frère Jacques'.";  // untranslated
BlocklyGamesMsg["Music.helpText8"] = "Each start block should play 'Frère Jacques' twice.";  // untranslated
BlocklyGamesMsg["Music.helpText9"] = "Create four start blocks that each play 'Frère Jacques' twice. Add the correct number of delay blocks.";  // untranslated
BlocklyGamesMsg["Music.helpText10"] = "Compose anything you want. You've got a huge number of new blocks you can explore. Have fun!";  // untranslated
BlocklyGamesMsg["Music.helpText10Reddit"] = "Use the 'See Gallery' button to see what other people have composed. If you compose something interesting, use the 'Submit to Gallery' button to publish it.";  // untranslated
BlocklyGamesMsg["Pond.scanTooltip"] = "Scan for enemies. Specify a direction (0-360). Returns the distance to the closest enemy in that direction. Returns Infinity if no enemy found.";  // untranslated
BlocklyGamesMsg["Pond.cannonTooltip"] = "Fire the cannon. Specify a direction (0-360) and a range (0-70).";  // untranslated
BlocklyGamesMsg["Pond.swimTooltip"] = "Swim forward. Specify a direction (0-360).";  // untranslated
BlocklyGamesMsg["Pond.stopTooltip"] = "Stop swimming. Player will slow to a stop.";  // untranslated
BlocklyGamesMsg["Pond.healthTooltip"] = "Returns the player's current health (0 is dead, 100 is healthy).";  // untranslated
BlocklyGamesMsg["Pond.speedTooltip"] = "Returns the current speed of the player (0 is stopped, 100 is full speed).";  // untranslated
BlocklyGamesMsg["Pond.locXTooltip"] = "Returns the X coordinate of the player (0 is the left edge, 100 is the right edge).";  // untranslated
BlocklyGamesMsg["Pond.locYTooltip"] = "Returns the Y coordinate of the player (0 is the bottom edge, 100 is the top edge).";  // untranslated
BlocklyGamesMsg["Pond.logTooltip"] = "Prints a number to your browser's console.";  // untranslated
BlocklyGamesMsg["Pond.docsTooltip"] = "Display the language documentation.";  // untranslated
BlocklyGamesMsg["Pond.documentation"] = "Documentation";  // untranslated
BlocklyGamesMsg["Pond.playerName"] = "Player";  // untranslated
BlocklyGamesMsg["Pond.targetName"] = "Target";  // untranslated
BlocklyGamesMsg["Pond.pendulumName"] = "Pendulum";  // untranslated
BlocklyGamesMsg["Pond.scaredName"] = "Scared";  // untranslated
BlocklyGamesMsg["Pond.helpUseScan"] = "Your solution works, but you can do better. Use 'scan' to tell the cannon how far to shoot.";  // untranslated
BlocklyGamesMsg["Pond.helpText1"] = "Use the 'cannon' command to hit the target. The first parameter is the angle, the second parameter is the range. Find the right combination.";  // untranslated
BlocklyGamesMsg["Pond.helpText2"] = "This target needs to be hit many times. Use a 'while (true)' loop to do something indefinitely.";  // untranslated
BlocklyGamesMsg["Pond.helpText3a"] = "This opponent moves back and forth, making it hard to hit. The 'scan' expression returns the exact range to the opponent in the specified direction.";  // untranslated
BlocklyGamesMsg["Pond.helpText3b"] = "This range is exactly what the 'cannon' command needs to fire accurately.";  // untranslated
BlocklyGamesMsg["Pond.helpText4"] = "This opponent is too far away to use the cannon (which has a limit of 70 meters). Instead, use the 'swim' command to start swimming towards the opponent and crash into it.";  // untranslated
BlocklyGamesMsg["Pond.helpText5"] = "This opponent is also too far away to use the cannon. But you are too weak to survive a collision. Swim towards the opponent while your horizontal location is less than than 50. Then 'stop' and use the cannon.";  // untranslated
BlocklyGamesMsg["Pond.helpText6"] = "This opponent will move away when it is hit. Swim towards it if it is out of range (70 meters).";  // untranslated
BlocklyGamesMsg["Gallery"] = "Gallery";  // untranslated
